{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e88428e4-5c84-4b07-87a1-3f22b2079be6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "35987e18-9cf5-4112-9dcd-c4724d998927",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6dd82e14-f1c2-4f51-82ad-fd84d99a70e2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0fdde3b2-c723-42a6-9db0-f0b92767c690"
                }
              }
            ]
          },
          {
            "id": "09c04428-1d16-4c37-95a3-8d6a087ed7f5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46a5c4ce-e810-4280-85e9-884c3d3d884c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7050090b-4aaf-4bd1-a27c-e5b8456b673a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "919ce7d4-0b7f-4ffc-a51a-9f29c9a9de63",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "481ecd14-72cf-4dce-8d0b-56f98ea81872",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6117e91-e700-408a-afe3-8a77c270d6aa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcc1b868-f42f-4d56-8e34-7ac0f0ad006d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03bff3ef-4e97-4edf-81c5-71c52c13d6e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b895ee8a-3b8b-4eae-acbe-f4003005ef64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "776c0de1-bc62-45e3-9905-7f76536ed0fc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8877179c-ac5e-466b-8397-59a54de15213",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acaea8f4-b1cb-4488-9378-b752ed26dc73"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1387c342-e6f2-40ff-b8a8-cb3034b13857",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "105a97a7-4545-414c-ac48-41df9b0ed181"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b74e8cd-c206-43cf-bf64-3817ccaaaac6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef206bda-0449-42ea-9c10-806581212b70"
            }
          }
        ]
      },
      {
        "id": "f4f4a32f-43d4-4372-b903-6b1ab737afa1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d3a8ae70-5bf8-478f-85a9-f98070699898",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcf101cf-d424-4e3f-a911-8ff10706ac3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67b31fe7-6144-4259-8597-8e12d9680e2a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe1a167-afc4-4e9b-9fff-a98321037bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39bd6eed-4e15-4ab2-86f1-c09cf6ee6df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dfad20-418e-4626-8f3c-ceed70a794af",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49662360-c73d-493d-b35d-50f2fc3de305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dc6d498-4409-4394-92b3-8a6f5a083379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d7f9c8-b941-4164-a6f7-ed666bba37f9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eba81ed-0db3-4355-ab83-2b6b4bd3cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9352296e-4429-4c30-88bf-55b65b057bdc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "63014dae-d382-4f01-b1a5-4e966ecaa99a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5ad2b72-bf13-49da-838e-efdcba48228d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa1f849-4666-42be-b3f3-055dd7acc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1ec6a04-a0d8-4c30-967b-1564f79a73bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a10425-e9b9-45b6-ba03-aa272813544e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f3dde4-4e94-4daa-8896-5a003c7a604d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b673ed-a82a-4175-8c31-e5fe0a019cfd",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27549808-3cc0-4655-9c9f-7e8dbcbefc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c62800a0-fe22-44fc-8044-ebdd075cb2dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "210f9eb3-d6da-4f7a-b6e3-cbdf91a921bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "49b56fa1-cb11-4b02-88e4-0b8880003a19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4dc8e3d3-be49-47b8-8db5-f173f74ce61b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6a49b28-53c3-4d62-a6e4-592a9a440439",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7695e30-6126-45ed-be47-e0af9352a8d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "544cc31f-5b7a-44e0-bf9f-14ef6613b1d3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20b1fbb5-2749-440e-b304-bc4e4b29a611",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "06b46ddc-8b80-4340-ba54-cdff4ff06653"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a7f7eba-d9ef-4fa4-82a3-9c14ef682a16",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a405d24-1525-42b6-b44e-1869a245279f"
            }
          }
        ]
      },
      {
        "id": "af8815f4-5fd6-4093-ad90-a9cd74852a41",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2cc86aa8-d304-4834-ac86-284968d693c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88827487-092e-4386-91fe-5d3512bdc474",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7575404e-7cff-4cc9-b8f8-f4d8869df8af",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fbc0f8-9ec6-4ab3-a0c7-b2833edc9925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1805407-5c76-421a-b3ec-56187cb6ea16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb21c24-4a9c-4654-993e-43188473a210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40e3d794-3d3d-42ea-bead-d5c73ef2f8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8516b9cc-36cf-47f8-8151-ee41bdbd19ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e41978e-800a-42b5-abf9-960a50683cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd9f1b0-c9aa-4baf-9c4b-d80c746f3af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7ecb78-7b5d-41a7-9a6a-0c8426b41533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae26d817-308c-43b0-9698-621c452426f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a1f79a-902b-488f-bb4c-fb4cd44de4e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71bcac41-c293-4d8e-a51c-bfdb24672e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5c9584-ffaa-482d-9bfb-9ecb12993d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ede9b5-0bee-4270-8a24-8fc378ec4658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a878c260-7873-4983-a891-3c45bf909d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95dc5ac-9f72-406a-9543-04f91c8b4463",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af81337-83be-4abc-9a5d-03247d838590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d4542e-f2e1-4990-aa86-6ad9078e8828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9bf396-eb44-4c7d-a632-aa3a7c536e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fc58c37-cd4a-4637-92b4-5070c0a7b5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1bc2c7-e35d-45e8-ba85-2623d0cced30",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc224a4c-5093-48d0-9930-ae5162638072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc4fed0-7520-4915-843b-2a745bdad72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c9f7d9-c8ce-4f7c-a1d1-f7fcf61de851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "135fa03b-5299-40fd-b0a9-9e3d02f16bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7f9b61-44ae-4259-a88e-4a9e94039df8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92716346-5bef-4c9d-bc07-4dd38df5c0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57872d4-6a29-498e-9f8b-981315fbfbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25734f9e-209e-4fe8-9f3f-8c51b57b8134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ece3d132-6a64-4643-991b-c49d6a1775ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5dba1d-9300-41c1-bdfb-7b73f1693057",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1dc4d8-ba03-4c44-8075-846c8b5b5183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9794e42a-0776-4c82-93de-d997275ec57b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a34f233-ccb1-469f-851f-3414b9869804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6a93c60-c311-4b55-a63d-2b9f2af247bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db66b9d-e303-4618-ae64-8e4d2f3d25c6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479bf525-4955-41e6-96db-bd26f61d0b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72765651-0fa8-4266-ad9b-02a960efc360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e98508e-51f2-4b18-9450-1b60bb9ced8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42de2103-285e-4dd5-a552-885c3695f35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51758255-9ecf-4b84-9986-0404763ef480",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec9bd30-95b2-4264-b085-dfe2f6c9bb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8374179e-2b31-4da5-80b0-91be0950ad35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836cf076-34d4-4452-800c-6f11c122cb1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e52ea11-ceea-4a12-b0d7-80b9aac51d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66c2576-e024-4741-ae4a-78703fc458d8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e968e3-a1f8-4873-b058-1c533248d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af62965f-6782-42c6-a552-4448e6427c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcc30cf-4314-4856-a797-ccf9b8661812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f96674-1d89-47c2-9f92-95323e6a8146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c3093e-c60c-41fe-a227-f0e132d44a03",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "228212a2-a2bc-48bd-9221-d8b3a0f080bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907cbc97-ddfc-4002-89a0-4d2b5d6281cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5968643-04d9-4c59-96cf-271348193d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "472f2e20-8dc6-4f1b-bed5-45e30e4bad37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9c4065-cc8e-4fd3-853a-90f86bfd27d3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed17fc-ea09-47d6-ad34-044b1b07d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f528868f-37f7-4215-892f-3b03d5b9fbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c2cea9-8298-42b4-99a9-ea0d9f506b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d4be232-c216-4ce6-8d43-e3873a8e000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c0336-cd8f-495c-8811-6932c007fa12",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ecf0cd-b5df-4157-8ac6-19440d0be393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b934092-31eb-4ef1-ae19-20662d4d5f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015c2f4b-2693-4527-953e-8f1a6006354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa6e894-0c55-4dd8-9a9b-74e109a6c52d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d4612-3676-4f2c-be04-c0b73e7ed92d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5678973-5dbd-4f71-86d8-2b993efd9d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f314a42d-ea9f-4c19-838d-58ae1c9571a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5200b52b-6c35-4ba5-a625-17ed0dd6d6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55757a5d-c13a-45d3-8dad-4f75cf1d346b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b75602-4951-445e-890f-65489b690fc2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7610d1-e4e5-401e-912e-03b61cb1a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef15d03a-5093-4b31-8ab2-16dc10d66867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648dd17-3b53-44ec-b3b6-473dbd041fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e1e568-e7d9-4f0e-a5ac-2aa4504e827b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f09e66-7ed2-4a1c-b4af-08ea65eed862",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82fa7bfd-76c3-4b19-82f1-13924845463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488eb25f-2243-4370-8e6b-9bd72cc7459d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b54861-48a7-499e-b9e0-ebb275b865d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c6a8ac5-fa6e-4bcc-8d04-c7fb175c2a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b903a7c-4834-4cc2-8f67-1016d2d30fc2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb073087-7803-4900-977a-ffe59c99a7af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5074258c-cdf4-463f-a532-214311377e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2914f565-4816-4bed-bd6e-77bd377abbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd02c9c-11b5-4c9b-ae52-59abf49e1821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8392968-5b95-4680-b533-6ef2aeae9298",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698df122-d37c-4ef3-b220-215721e39a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3800a96a-d2f1-48f4-b780-e48f0b0549c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8bf4b7-72af-42a9-989d-f4718a7f5e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e90276b4-6365-4e8c-b861-2fcc37385b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3c7e41-8e7e-4e0c-aac8-8ea08f772831",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e592c5db-a76c-426d-9d46-89424aee94ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f894cb96-90b9-4c8c-924f-f94fb376b02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992f8880-7bb0-4b12-bd73-792158f8732c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a927baf6-8159-44d9-965f-a20d3fd4be57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d6bda-beb1-4cd0-9171-0a5e978d3b38",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f29f6d-46c6-4e23-bb5a-c8ccc764d868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6e3e90-38f7-420b-9a23-a15c70d93b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36da4cc3-28e8-4dcf-b2a6-1bc86f906119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fddb33d9-f4dd-4921-ba7f-d83dc7fa07ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82baa657-dee2-4724-b262-c42084f5afb5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d361bd7a-34a5-4345-b996-d8301d54d0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a86235-de2b-4de5-acbb-4c03699d3ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fef68f-2dd1-4bea-a9db-736f4f5d7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b896ce8-bcb9-4a7c-87e4-1d23c4209c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c914f988-c5a4-4ac8-821e-80d40c6c789d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f9b990-7f1c-4648-94f7-ecc1b405b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550aab34-014a-48f4-bed9-49d74baaee93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d6a3e5-9869-47f9-ba9d-f97ce82ddcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ebe5626-fdcd-47d6-85be-0e4685375b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b80264-5f30-4678-8aa9-4a9c3a5edf43",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113f28ac-ee45-457d-9888-88da64d7c240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a8f99d-6322-4bc0-a2d7-f7fa4c1e27d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4408aff8-9d84-4f4b-9c99-3fbc1e138289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0706af58-0ab9-4539-abdd-bf399f5f6e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ec44f7-2c11-462b-8e04-463e45ceb540",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6785e2-a304-4acf-a303-6c85586dcced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6876d836-1a9b-480c-ae24-96b92722396e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9834cad3-a203-4d99-8350-46ed9b9b3682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7668e4-f42b-4bf8-aed6-27910b2c7db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2080de73-ee02-4abb-adbd-2dda65c35a65",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab1d4a-0c82-49b9-b302-19e5e267dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de35a414-9998-4d24-a9c4-3a8b9b73ae77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ecb41a-4ccf-46d9-9750-51053774fdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5db20576-40fe-4c24-93af-46d9e5016e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046b9a7c-14b6-42af-bd5e-81a08d8d75b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ad74d8-cb90-44c0-9ea0-2bed5667f669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db02003-226c-44a1-a6ea-f3d4877025ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e87ff6-2513-4aae-b46c-ca9f7a6dd4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "add59e5e-4f25-4fb0-a59f-e071df2b2742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0c4b40-074e-48d4-94a1-425fbdba376e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eba6e9-e1b9-4bb6-b44c-f1a849cf433f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4febcf74-c9d7-43d5-b3e6-4bed41603431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb57d10-f787-406a-9dcc-2dc9b8ec2efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4162a8-1ff6-433f-8a6a-2f59ee341de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f7c263-2e7b-46f1-a6fa-babf429211af",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210e664b-b29e-46da-b072-5373f5e62a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc6d072-c6a9-45ce-96b9-49cc2437f792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46f4793-38ac-4af3-95d1-7bfb4090e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49a32da-7cbb-429a-9cf1-981d90a33fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cb156f-6113-47ed-a213-674ae81e396d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d892b4bd-5de2-469a-9d23-3f8e80fdb8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5f173b-e8c2-4e43-b76a-504e45bcab27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e19916b8-8e69-4d5d-bff4-ec8cb5284d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4041a0f3-b2d1-49cf-af5b-144a07ab5f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7146b01-387c-4bb0-b553-a04af889eb4f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68efd7b-fb91-49eb-8aed-ff5965d281e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07405c5d-d21f-41c8-9676-d32852651959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6be237-726c-4f10-aff9-d86e806bc05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "64555bf1-4c4c-4d00-a8d7-ed55308f7ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6088a390-5125-4f05-a85a-cfd1558d7905",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75843df-c80c-4a0d-8279-59405aa5c1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0383aa2f-d847-4a13-b961-f7ad5acebbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04b6cdb-112c-409a-9bf3-c76ee43841bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4dbc23-f2fa-49b2-bd7c-2856e6d52de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b366b886-bb18-4015-a3f3-d7e460733830",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f63f3e6-48d2-48ff-b2d3-2257ea9a520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef7e44e-02b5-4ea2-ac22-0e569a878c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b558cc9e-1c91-47ba-8045-61c2c37efbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "faae72c2-81ac-4a7f-962f-9a2ff33cd2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ecdf38-7766-432a-8b2d-3354eb3b7d91",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec8b3db-db9e-48ce-9bb2-6e36f0bc8f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469df0a1-5468-4d39-a5ca-f1f6238fa301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d13cc5-c5ec-4786-ba6b-5b2ca602a0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b21da742-185f-49f3-8412-94bc83cb8594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c3dbbe-b156-498b-8898-16dc6a178dc6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693840a9-0e00-4ccf-b6f4-fac799c1df16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c890a7-bd3f-4fd6-9951-81f90efcf4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ffaeb3-ff53-43dc-a8d7-279a1f13a037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfe65d0-9706-4d71-940c-4f6c1aae5b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284a9ec6-c477-4ce8-9eac-39f8096cd20c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efa3ddb-7b62-4d13-9c22-ad8c261b056a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0552f0-6e93-44b6-848b-5287bebba8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02233ca1-e3ce-4c48-8a41-1b98ace752ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "357fe697-3290-45c9-a06f-effac2824420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d19c6b-1b8d-47b3-891d-db2787d261b4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9599cfd-aa53-4a29-bdf3-bc5869394fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0581320c-5eaa-42c2-ad77-f7b2a5d93d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a545e150-e4d3-425c-afe4-5686d34b356d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "115eabc8-4e9e-4aa9-8dd4-5f29c3cf50c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25c5ff0-c49f-4255-bb29-ffac9ce44a9b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0be93c4-bcd0-4b96-bb93-cec27ab6a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e96c76c-91e1-416b-95f1-00346f7e1314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2602a9-22eb-4d8f-9f9e-ade91f466f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7639eba6-9660-4dea-bc2e-f9702f62d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccfd870-51d1-44bf-a3c7-c01dc2500444",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dbac08-23d6-4fdb-affb-f6a66e39612d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c8aa5a-23d3-4934-9c6c-b23c20213c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99a066a-54c1-4a14-95e5-d0776269f6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "29a510bd-4117-444b-97c9-f286e604f434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bb5f3f-4e9b-4179-858d-878b088f1c29",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d066bfdb-db6c-4d9d-a5fb-347c00301275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0c97e3-2f0e-4309-9fab-2997335213c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60985522-1888-4b99-ad1a-db6366384329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "759ccbd4-a1bf-43be-875a-add24f8f4903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f9c2bb-2a8c-42e1-a757-834d63f36f70",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebd0a73-664e-468d-a6d0-e50b245c8e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6761de4b-b9ee-4383-81d5-bc673ad382d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5517b58-f712-4fec-803a-3043f9c288f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9828f6a1-1667-4017-b666-3a34aa3fe17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b595319-d1f4-4177-85de-7f368ddb921d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140d829c-4ea6-4a08-b268-3a6ee5dee8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb3e72f-83a7-478c-b505-30900eb8bddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74bd84-58e5-42a7-990a-f82c45347b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8703643c-3ec6-4477-bea1-fc5e11782dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165b4262-38dd-4651-9043-da46ad203f8f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bfd2de-ec67-453b-aa8f-fc7e476c2035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4ddef1-a482-48c7-97e7-c485983b4689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f8791a-3075-4b29-9b25-446bbf6b871f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b99f39c0-c889-49d8-b30e-39da2dbf2df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6629b49-eba4-443d-96c5-b2e633af3a08",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb052ada-7931-4e13-9bb2-a740a10832e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0bc7a8-583a-4a72-bd6d-832dab9ae802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb858821-9fba-47f0-a4c6-26f0bf0fcecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcc44ab-bfa8-45ea-8d1b-833c3b2b0c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886b85be-c897-4d33-9b1b-819e141b860a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ddb57e-8287-4f2f-a98f-0f7726441dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bdf4a3-4ed2-4b7d-a41f-64385e6e43cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeafbf3-e3e0-49e0-a638-7efaba0b233d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c51fc22-3d81-4244-986f-8079fd69dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ef9ee-5f03-4597-871b-df266c1d35f8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c7aa6a-aab0-4053-9246-a9725e785ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b279cbe7-83ad-4748-899e-bc416176596f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74476579-e94d-4582-9bff-2fa161d24288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbd0219-19ee-45d6-9836-b25d77627b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce5b0e7-26dd-4739-95ab-ebf302d6145e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49933cc-74a6-4d04-81df-a4c0613c6173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f442d618-742e-44e6-abb0-c7a333a96afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1828894-d0d0-4c7b-8bbf-6990dc26d030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7f7845-72c4-4bf9-8160-5ad043c973bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2985037-091b-4d44-9794-78d495074d32",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4660f224-fbc3-4d61-b33e-df2a5d4acf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8c5251-2615-418e-8b7e-0e79dd9ec932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc77a424-d9be-436e-9cf3-cd1762f97ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "404ea96f-e2e5-487d-adf0-e9b72b776d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4286aadb-57e7-4243-9c15-9ffbb6be8c0c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b93ad5-ab8e-4789-997c-88713df28704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5f99c3-0bc9-4da5-b5eb-7a9d615cdc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2756a552-fedf-441b-b8e5-243dcfeae920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8372c971-3e95-4512-bf0f-96b04aec5be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbed2f0-4f27-494d-bbaf-0718b2c798ac",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c121cb3c-81f2-4700-a7bb-d43ad12561d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a92ff2-6166-4029-8164-3d2e435b90eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825eed0f-26e5-4f06-bb77-d9d6535e44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49daaf27-8406-45b8-8ef9-262a7c4056c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45873626-4ad2-4768-9a47-304a10d33a1a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daab6b3-405f-488c-b510-3355d164bef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c341234c-62f5-4a5c-9b42-7356d2e9f1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e64554-fd88-433c-a26e-850f2f0e39f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ddbe26-b242-4cb0-a5c9-029c6cc60a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6628dbf6-edf3-42d6-9028-1253d4f8fea9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7094c26-0e8a-41d5-8943-490647139f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae422fe7-14d9-41e8-9bd5-ed802847d8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba47f36-984d-4389-8e24-1a48d684fbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b60cb7b6-0623-42b3-8198-574ce81a4b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051097cb-92f8-4894-bb44-89bdc3a4bc0a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadf4168-03ba-4c36-a472-b05adf4bf3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3266997-9092-4baa-ae0d-485757da0b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c28ce-bdad-44e1-9376-5c6c1b6a2a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "608c8454-55a2-489b-868d-225f0170c1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff223f8-b20c-479d-9559-6c140b52e44a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ac3321-2dc8-487c-958f-0ec2eb2b98ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c08a9e5-8e7b-495e-9317-7764c5d26365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f8e0d9-1ea1-417f-b4d4-5cceefadc349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa090c60-35b1-43da-a1c3-e717d2dc007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495f9f7d-9e72-47a4-a77d-eba93525c785",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f87956-2cf0-4b6a-890c-7d8278b72812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2448228b-c573-4319-aa29-915f1038224b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a00c6-851c-4898-a148-0cbbee9804b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6b3982-ae74-4c78-bcb6-31a190e7f0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93cb1301-2257-4d3a-8e15-33297f5786b2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74752599-e07f-4668-bc33-150335a578d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4b1000-d5cf-4ee8-9e8d-a9186935aee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ec6823-f831-4a92-beda-3ddb11276946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94911e4f-28fc-4793-b13d-6cffd245189a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825a0816-6464-46cd-a65a-fbff3a856ba0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783c8e89-2bcd-4580-8be0-de26749b6821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9007a630-7043-497d-ae90-32860418d3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5698fdcf-aeff-4bd9-9254-c12c12ad530b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "19c77c6a-67af-48bd-b81a-dd42768e8913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3ae5f-7889-4c56-983b-550bb36c9cfd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1606869-8b88-41ad-aedd-2000cb46283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3963f555-9e49-4988-b596-4a64f7888a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d59c60-a91f-44c9-ac46-30b7dfb5acd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "157b5d11-e4a5-4285-83aa-daad71f956fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cce480a-120d-412e-b42c-ec14bc450e94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caeae1d-2946-49d2-8f10-80511f366bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78906ec8-8b3a-4814-9900-b9bebc3372eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3b6324-1d46-4406-b269-c77357b04d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "483972c0-3556-4567-9172-898e5a710c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ea1ae8-7406-40ae-9043-31bf90b84401",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8494de42-52df-405a-88a5-4ae58837a1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83efeb4f-0165-4a9d-b84c-44a3c3e35592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef45344e-061e-4313-af99-f6ce81aab3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "380ebac1-15a3-4c6b-9b0c-82fb3f02eebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0873ce6-7332-45ca-86db-86f719878cc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b37db7b-8a80-4c3e-a9a6-ca4c1e0cc364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49b1949-38ce-4ef8-991a-b1f5713cd927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85411a1c-3a4e-4377-a3c6-67be3299c300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29308cd5-2609-4089-8ec3-e1cf60002c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2117fbc-0d95-434a-be25-4129722d1f25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee0a17-4e93-4b97-8dff-3bd5a4680272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2df7f1-3752-463b-b952-9d294ea70e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133fa918-c9f9-4024-bd2e-9a1b3375b587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aded522-7280-43db-b97e-8bc683cac0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d695c4bb-90f4-4cdc-8c4a-f005e16c8d9a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19dd0d75-7ef4-430e-b72e-ec7b157f45b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14ccdd6-caa2-43bd-b676-7574224126c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53322163-aa71-4f27-970d-9f451fb5421b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "19a3acdc-b348-4931-9863-a763bf463c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac67cdb-ee3c-4e99-8f04-9408bfbe5d63",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf15fca-e713-4876-96e7-92df5b657c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35518572-28d5-4c1f-9c81-e4031def4dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd60d400-cb51-4c8a-8b2d-4ce693fca81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef1b11af-4a2b-4e4f-b9fa-d15ef58ee13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8142c231-6cdc-43cf-8d53-864d0ae28910",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674b7413-fce1-4a88-9c9b-25b67e4b201a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343f8128-1919-4172-a7e7-79c75ac2c93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0781327-a6eb-46cf-a27e-7f82af7d8f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9eb5656-1d29-481e-828a-7b0d0a4d74e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce47c49-8a25-4d91-a62e-a66f611b54d1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c202aefa-4bc6-450e-8bca-5504e0284183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb92310e-8023-45ab-8dee-7aae31c35cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f9ca4d-89d5-445d-a69b-17a426139008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a83bd0f-8b18-44da-afae-eebb494fe216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf117b3-d51c-4631-a016-4ec02344cf7f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df624d8-defa-4b2c-974e-49b11d7c7228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184b3c56-3c01-4d8f-90a3-f1afddf7133c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22e7f15-4ff4-46b3-881d-cda459781017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eed4d16-331c-4766-b886-d570b884b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65502b17-d087-46e7-9e33-1ecb381cb1ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389d2f6e-0bb7-4dd6-b16a-fff51ec3e774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1e2003-4608-4e1f-bd53-4b140ece56aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381849f9-c904-49d4-bcdd-71153830b8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74e0d592-f43b-4229-88cd-69cfa9b2799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14c86bd-572a-4132-84ee-df0065e98545",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2d7a7d-1343-443f-aa0d-bcb2aab6181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2596726a-af8a-4ece-8f93-f7df12118d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4220f65b-95c7-468c-b2c9-a4ea9a23d8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25f7ffc-03cc-4f18-bf86-ae9cc314ca1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6c14e-209f-40c8-b1ba-49c90a771ee9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26cf5d90-ab6b-464a-a748-b6fbd3f91907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcb52473-b6eb-4175-9ffc-502b54014613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c8e08d-09e2-4331-bb2a-fbe7f1a963ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8d7c08-bff9-4c0c-8c66-f7e01b2304df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e27426-28aa-4849-bf98-2b61490bcf85",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e2c590-95e5-41d4-bb64-03e9cfc79039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8bbd6dc-3ccd-49c0-9425-902462d4f99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41329b0c-dd29-49f3-9318-9d727f1a7530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07708db4-a35e-4583-8005-0bc61e949e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a14208e-5cdf-4599-b724-909634ca0faa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed9a166-7756-4929-9881-3cbb59f67f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63aa5d0b-2df9-4b8c-8eb8-d3f270d2023f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81204d19-1298-4ef0-bd94-4ba3ba3ab859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76093265-18e4-4f29-ac6d-cd16eb481713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c54c0f1-f493-49ca-b713-789503b61ab6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7304e22-2062-41aa-b8fe-32748bffa40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a869f17e-8024-4819-a135-e2dc8d909d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb4ac37-b7c1-4522-b955-fb9fb1a080e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4f9f77-cbea-47ee-b596-22bfdbd1df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92385b9-5a8d-480a-b8ca-5bfd2790093f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e6c80b-62f7-4283-8f09-00d127bed528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b8826a-749e-4d3d-98b3-fe69eb8036bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3515477-1686-4bc5-948c-e11cc3f17b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e999f8cd-dc3b-47b2-83c8-436468e9825f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4477fc6b-e955-4214-9969-25ceedc0ae32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfcfcfd8-e00d-441e-9d0e-2152f57dd6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacec420-3d77-4398-840d-923963a55dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02484170-1c08-4bdc-8b52-190c19f93ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f3d971-1702-432d-a232-affc4cd748f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75421434-abaf-4e67-bb45-1c4711ed0bbf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06612deb-40fc-4148-8cdb-cc66f85bea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f007ad-2e4e-4dbc-8746-92bebce6a211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103be7f3-0053-4b80-b9be-804dd6e6adda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10e5b20c-8aaa-43dc-9d55-4c2b5f4bbddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bba4d1c-7e5c-4d0a-a24b-b8b2d75eabfc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc64942-b060-4cd8-be94-34af6e27ce57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38c4d5a-7749-41d6-8dc4-6edd7a3d6e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7745512b-e17b-4dfd-a96c-c84d72026cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b374e6-87dc-4912-aa85-94132ca439e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd73d6c4-e1de-404a-9de2-7423256aa939",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15aa3f2f-17a3-4d2e-8247-cbb65a4cd68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebe050e-b7a1-47d8-a0ee-dcf317bbdc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e9115b-e71f-42a5-a9c9-5ad8c5e3b155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e61257ae-b58e-4660-843f-c265ab0c75e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4fa19d8-ace6-4762-9b98-c1d90a22390a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f999a9d1-c17b-4b78-a905-3a9bbf1cc7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f9f291-ec49-4640-817a-3756e5013d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba0659-ac54-407e-8bde-aee3d80e72ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "715fb7f9-c465-4bce-9d4f-83096fe05e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ce7c3d-3c09-4020-b9ad-727371e3214a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d274785-7e1e-4eab-a0b5-66f69da7ed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f398e5be-b518-43a4-a159-a61dba88a011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe93a9a-717f-4457-bf38-f467a2816362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7934cfb-3e59-4c9f-9372-cc98b298fb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db297714-7b72-4e00-8ce9-b65b8f276869",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97ecdb4-c291-42dd-ae1d-fc6d568c92f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779f1302-676a-4780-be00-e74139306c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a949104d-a4ba-46b7-805e-a17c11585ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbf2ba2-82f2-4568-be34-4f6605d1520c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37974b88-7830-4540-aa01-809ddfad866a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c63537d-594b-437d-bbde-2ebf15555be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c22130-5c4a-4594-be42-75547e89e62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a3d59f-faba-483f-8754-1a2c36b8bee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2f32d3-3083-4e23-90e7-8d53493e39ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c52ab7-58e0-446b-ab68-c59657bd19a1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb72b9b2-0c07-46d6-80d6-15f8340233c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3c233f-26a8-4654-a0cc-a13c3b0279bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dddf4025-e7ce-452b-a623-7bf7741b8c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59cf1d97-e2c0-44c4-82ea-de34d2d6864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66864215-4628-4b7a-a01b-f0164da6215c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8216d8df-3d20-417e-b10c-20010f04a313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef502f6d-64df-49f3-948a-6adbdaa7a030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d858456-774d-4d9c-a344-d8743e01fd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ecd219-2204-4f06-9af5-89e3b11e25bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ccf9de-4c2c-456a-88b3-64a0130cc10b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ffe0ff-7dd0-47c4-9177-0053e7e7c84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b368f4-5719-4f08-abda-eb01d5b1f15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3572a4-23aa-4bbb-80f1-c29b9d362dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e41836e-9070-4610-b139-88cfb61ed189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a937fcf-76ce-4ea3-90b7-54865e95d23d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddde7e4-2f33-4999-a4a8-147209e59ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b59254a-e106-4486-a877-beac799c7b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817a90fb-86a5-4e04-ae0c-354893de5ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "280b4080-8a79-4215-98f9-1c3693307c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772cb400-5c65-473f-b6cd-e3e392a878c7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd815a60-7eaa-4773-9581-1f242407246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fdddd8-0157-4509-a9f0-c19ea1953216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e62acce-f91c-4388-848a-65f2fd774952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "429ccd5c-86b9-4536-99af-b1e9c6bc554a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae10cb92-7f30-4a56-961b-c04d12f7f416",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4174600-3f7f-4a4d-a4b3-b4895d3c6784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829c462e-2c86-498d-b988-ad886062c9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c16fe7-b9c3-4cab-8e76-6445fa83bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f70aa7fe-3b2a-4e3d-89a8-e3e2c2294967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d05fd6f-c75f-4c55-a966-ac39714a573e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c154c130-86b7-4049-bbdf-1be94b79e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399fa1d3-80a5-46ad-8f55-972ce02f9d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d11821-c7e9-40b9-9a5e-bc6e646039c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b3c878-0ace-4234-8654-f41f5c215738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04edb74-a934-4399-a82b-09be5b9194a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0adff0e8-12b8-44e1-ba0f-ce4de7b1b8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bdffca-1843-47bc-8b0c-d289482608fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09540529-d2ab-4908-b83f-737000937770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba075c20-609e-4882-8c3b-3ac729d41df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cde7c70-fd85-4d4a-ab4d-b8f829b09546",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85da8142-890d-4414-892c-0f0e06fa565f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752df84b-73c6-4454-9cee-4b8d2f9cb94c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b22e56b-994e-4563-a687-9073b4dfa1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6755609f-45d5-4c29-a285-fa61a91ee257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed778c9-d094-4168-b1b4-b6356cbbdf41",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc8e1cb-2029-49b5-9f31-47d1d333b639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8b1c35-d62a-4aa0-be9a-084771798104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48e2bbe-e005-4c4b-8ceb-55d8a608cf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b612299-7b37-46d3-9011-66004bdbe0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d053f3c0-30dd-4fe2-9cb1-f7a27fa45702",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25518a56-4ddb-4017-b0d7-31e54727e27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d07c9cdd-490e-4a3b-9cac-7dfa6c4c6473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ac1d3e-466f-4076-bab2-5f1cbf970a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "81175dc6-f214-47d8-af97-32aff964e140"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "762bf29d-fb0c-40f5-ad3f-0f86bec3209a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aac8947c-cb4a-4c43-8b63-b5b358451d88",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b91c0f7-319e-4ab9-919c-2adc3a233ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7f8f4a4-4a35-4e2e-9d9e-52a6d9aae900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87442314-2b31-4366-ba8f-57fb25a03239",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75db8975-b107-4efb-b038-9c314cd5b2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b175ab-7d4f-4a96-a11e-6fea39a83251",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446ac85-5b9b-4587-b070-f672ba61161b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dd62f47-342c-4685-a57d-bce0eedc26d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bb5fd3-28ec-4303-ba28-6ddeb998415e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00d1341b-ac68-4770-896c-4496da6925d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5357cbfb-e3b3-4fd6-aefe-d785755caab1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6abb61ab-45d9-4f23-a004-f9750efb6c45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fca7552e-0517-4259-bf8d-22ff1aca9715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bdfd719-85f6-4175-b251-5d00270b88c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7faf27c9-2bf5-4526-b0d4-2aa59227ad18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24d9a0ab-99a6-4c02-a15d-b128ba7f83b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "707acca9-a40e-41af-b6c1-cd507a621b03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8f7a2c4-4f1c-4947-bc83-f4930ed529dd"
                }
              }
            ]
          },
          {
            "id": "94e5587b-41e2-48b7-8694-41ed8f600de1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b887ea4e-1a9c-4219-9ee3-ebd5033530ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bcb089d-c90a-407c-9a08-aa8a92eb0293",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "addfd07e-8037-4cf6-95b3-514d0a9f4cd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17a62810-ed48-4fc9-921c-91d4a0f854bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abd4b64d-d8f8-4f44-9768-181b80b053f5"
                    }
                  }
                ]
              },
              {
                "id": "b780f7b9-04ca-4c49-a31a-a3ba61872765",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ea19346-7fe4-4ef8-9302-55d849368c1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0604f920-1f43-4082-9216-30fcf5eb7ca3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e89d2dcb-d6d4-484c-a2a2-c1174e292da4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8f279b1-36eb-4055-ab3f-62984fc66022"
                    }
                  }
                ]
              },
              {
                "id": "934aecfe-cb89-4f4e-b498-9a9c6f704bdb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e996afe-5cc6-427b-9dba-32f7c21e76d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfd8ee42-4562-4487-bd1e-51563ab736b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4016add-9ff2-4aef-b906-45205d9363e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7534dc2b-175a-443f-9d75-93cc00c33557"
                    }
                  }
                ]
              },
              {
                "id": "131031ac-a9d3-4632-94f7-45743b1bcabf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d62d6c1c-5b56-4061-96eb-1b29254f3459",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "150c16c6-a932-403e-8f19-3227bbea9ea7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af7564e3-aef5-4bb2-bb82-83f1efa76cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2734e953-48a2-4f21-9688-2155cc14a2eb"
                    }
                  }
                ]
              },
              {
                "id": "a11865d3-1bbe-427c-9647-9a07f87a232e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7bc30e4-9ec8-4f03-a971-a77f2688c21f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24cfa779-346f-4bcf-bd78-7bc8328b73f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0dc77ed-b6db-4848-826d-a91b94c30b16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bbd2bc7e-913b-42dd-84e5-d23d77fb0847"
                    }
                  }
                ]
              },
              {
                "id": "87b71589-d069-4710-9335-0821de83fb7c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "36ba8f5c-352f-4045-953f-effcfc01a044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2b10660-c774-41bf-9587-1c4ab2a91efe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ca179d7-fd35-48fd-97fc-85648efae937",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3709f64c-9352-47ea-8cd5-f2da2888a5fd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b99f0bd4-9ded-4cbf-9487-0b683179927b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e9cde1cb-87ea-43f7-9da7-0e04c6e87a0a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d766622-bb91-45aa-b747-b3432da4ed2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "616a5f45-45e3-47fe-8e4b-03802b9eb1fa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0ef4986-13a8-4309-966f-902f452aa2e5",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30088ed4-37d2-47c0-aed4-169afd001576"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56c76284-3d11-4980-a9d5-7ac431bb376d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0890656-5b7f-4715-9af1-127469073223"
            }
          }
        ]
      },
      {
        "id": "2cc964b3-f501-4834-96e3-cf32b98f223d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "72538ae8-9128-4d86-87b4-02444814205a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "034dd622-2087-4181-aea4-12be255617ac",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02db0f0c-53ae-46ef-9ad4-11ae6d94e691",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96f2c25-d2f2-430a-a71f-3356cdf67a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae02a824-2997-4be3-b354-953156ee93e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75d504f-0502-4427-aa78-2253f27920ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1df13d34-152f-4083-bcdf-7d92e185046c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373c12ed-c5e8-4124-a904-ce22b55ec694",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e03c76-d4a4-4c5a-8a7a-647cd07505e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435b03ff-2a92-48fd-b0b1-84312cd3dfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311d299f-8e3a-429c-bf0a-fb2bff45a9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2a60a6-20ee-4e72-82f4-789ada65b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad010615-84cd-4d6d-b7ad-ec8636a6de3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e22d48-4dd4-4e43-92cf-b2627be6056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7ea554-480c-4ff5-a81d-0726e2cf473e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e8c399-4d85-4a57-87bd-15a08565aab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1a6335-b0a1-4628-860c-af20e4576bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b166107-e926-45ea-8197-23c3baf525cc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f0becf-c401-489f-9311-250594b523b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d8430f-4df7-473c-80be-95a5b8a973fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17abc9f7-211d-4fab-9c44-c5c2dd5e25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20c1ad86-a923-40c9-bc67-fabe3df30b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8848268-c130-4889-bd98-ca195a670bcf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0226211e-9eb8-48d1-97c3-b6ea341166b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7271d1b0-d23b-4bca-b069-c3dd7553637f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3e3033-3260-4db8-8a5c-020c29d7b611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1f7dae-8b5a-4593-8c85-96fd1b24d84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09d179d-7a8d-4f82-8989-90337d068382",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef804701-2077-4137-b340-04c674166682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10f522e-d4c3-4410-886b-8c9920d8132c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36a4dfb-6291-4172-a6d7-d4cb03806eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d259298-dc2f-4de9-a9af-9e79b678c446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f7eb12-4e7d-4a9e-994a-691a682a346e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a8046b-6326-4b0d-a321-d8e950ebf0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b93b9a0-10fa-4030-9311-d2543bd45e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65877156-f92b-410e-be4c-1b7fa933b73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fac730-178b-4b53-a5d1-49121d4d98ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e83a7b-8e52-4251-87b7-0f761bd3c0b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65858735-09b4-43a4-919c-362152feb823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e94b59f-9765-4190-bd2a-edbe5b543c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4928372-f537-423b-a23c-19087f8ab8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9bbd28-2a77-45d9-84fc-d0fe879ededa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ab6922-e616-4749-aab1-b1a3b5e11e35",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71687075-b388-48e7-9106-d7fa6ec61556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6eb9ce-dbdd-4c1f-b8ed-722b423a30a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb2583-9cf0-470c-bc66-3489ffe7813a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2cffaec-bca5-44ad-aa0c-080a5b05819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a05591-663e-454b-8b31-259d6860c744",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0a9665-d904-4a79-a2a8-ddf3f9b34002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219138af-294f-4073-ba32-8bf1e8369fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc03ca-fb61-458f-a7b2-79f89a47b7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "68b40373-bb44-4fb5-9071-5f99805a9a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06442a44-71c7-4102-8ba3-bc8e65f7e22c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1d6176-a1bf-4df3-b501-f8e7fd7c8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446d257c-d022-4638-bead-3a455c5ba6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39f1725-1d4d-4a52-9c72-0ff5021c4acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc2e680-7c9a-4665-b6a2-ad61948d8ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d549406a-1036-40ea-85bd-bcb434a0dfe9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a931360-3911-447f-8ff5-096d707bd6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bf05e7-72c5-45d8-b075-b2e224dbe013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88b025f-8474-4903-9d39-255df2be3f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "676dc70f-3cce-4dd9-9480-a78779146dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ef2b6c-a258-408d-b3b7-4365d6465400",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eae6490-c610-458d-91d0-f2e60674d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd94a82-aeff-44cc-b347-15cbdafdc365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f2aaf3-26a3-4609-a708-f1e65eac85d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28c557d-af65-4014-8d86-95fb6114c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da76481d-d356-4537-be5b-67337a984697",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050a5ebf-024f-46d8-afac-d2073b4de61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561db118-bdc6-484f-9642-9f8a2f793772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf87f6b3-cd80-4d56-81f6-98d75230977c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f4949e-b34b-47e2-b320-0aa156a4623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5184dd5d-eb7f-4bd8-a160-b7b26750ca88",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b175808-a4ae-454d-a48b-380816a3557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28906b5e-afcc-4e3d-8f42-a2ce16f70fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5405071f-f930-4dc1-932e-a98179acadfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c08a106-87c8-403d-8033-22851eefc2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d818a1-7aa3-422b-b60d-7f594e0dafa6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4aaf9d-5b88-4994-8914-ad97f0252632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3baaf1fc-cb85-4aa5-8af9-cc9a85002ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28e3f60-f2e4-4e98-aa20-c67436b02959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd69e1f2-7971-4cec-94ec-7b49819753d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0340871-bb4b-430d-933a-a95feb882223",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afe7753-4ed3-4eba-b2db-8e599203cce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081d4ea2-8f8a-4de3-81a3-17e7f5eaee56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e477593-8b46-4725-9f04-bbce33c79e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f54e0de-2e2b-4e09-b8db-5b647dd3aea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624f9d97-f3bd-4e04-925b-a9c7ebd33eb1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571ffb18-41f7-41d5-b5e2-676718ceee03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac7cca50-00da-46a5-8ad2-eef2934dfb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b8e78-9f9c-4fc3-bccf-0d0a1ae83fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3b84d3-3eb1-44d6-a356-8c8c0d89f2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afd33d0-c642-431d-9bc0-389df2c3e95b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44056b92-cae8-4d41-bdb7-cc35cbc4c497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcb4987-e225-486e-baa0-e084a80a4acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bb9ab8-2b80-43d4-bf3f-1793beb60fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "400fe706-6c7a-4d22-9aee-6a2929b4fd71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf47702-7a7c-41e4-a037-1fc90fda3bda",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50866671-1f11-49f3-8d33-7f20ef81f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0670159-8e7c-4881-90db-fd711a74f24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fb8fa0-cdc7-417a-a66f-c690feba37d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75910c7-0abe-4b11-af62-db8267c18b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc2f0be-5180-496d-a06d-8cd7111eaf74",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc5fa41-9358-42f3-abc2-8d418db92ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5392365-267d-4a46-afb8-7ed90023bbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4947b341-eb37-4b6b-b8af-0ebe564b5077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f348ae0-ea5c-47c4-9043-b719d7273aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c97b4a-7f7c-457c-a961-baa9f2975a19",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5b9a19-0b05-4b22-bc85-583cc26370b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60b0f0a-eb05-4f34-aefc-56e0f8ae7194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c623a-6e9a-4f99-ab89-a08c9bdeff2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae0d4b1-73ae-4d61-bf6d-6853b05b3c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dad899-52ba-4d2e-abab-c570579cdf90",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f390723f-63a4-4000-bf3b-cb0688986173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ab8af4-30e4-4b32-93cf-c2b0fcadd5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b676d809-9b4f-487d-a497-3cb4daee6841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d65878-3e0b-4433-b56e-4488dd3084a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4120d1-bc9f-41b9-ae63-21a45b92d45f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c762894d-a9f3-43c5-bcfc-741178c38e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0037f759-3bd5-42fa-bfd7-5d1a2b80bf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a04c950-e753-43f3-b439-2046fafc6991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb3b54d7-fc9c-4101-bcb1-a4e75bcff5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d51f07-50f0-45d1-8f03-76bd86882390",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c5eb31-4f8d-4e3a-8610-7a896422f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274499be-5115-4faf-89f4-c484ee6c3840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd23b97-3049-4432-8a14-e4eac50de019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e17d3e6-a6a9-4da5-8501-f3f4078b22b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f1abf9-7f02-49ad-b3c8-00177e86fb86",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e488255-6986-4eb4-ad3e-84b845c4a59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bf99ff8-b4ea-4b42-86ab-731aa9705957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18709bc9-a206-459e-a049-5b5147b72120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5a4a25-24aa-4ebd-8fd1-a4770d412f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd070ef-5bbb-432b-a4d7-1a769be22de3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8bcfd8-f49f-426a-8eeb-6ced1c323c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef0953b-6d86-4537-925a-b99361d2587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e45c97-0400-497e-8844-925215fd377b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "823a495e-bbbb-409b-8ed8-8e49859b07f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6d2523-9029-4c7f-9615-9447ea7705c9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21407899-ec03-45d3-a39f-a9ee2d072a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed3e8ce-88e2-4c02-b802-eb34d259f68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adaa6be3-71ca-4366-bdd4-586d6ab2e839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e27c69-eded-49b5-8a7b-c79237340f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9158617a-9c59-4c93-83e0-8dabf6963825",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8f7fde-53c6-46a7-b1d3-0fbbf449362e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ddd9859-37e5-4290-a1fd-6252ec0cdd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7598549f-1adb-4df4-8f12-98f2a21b3fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d84567c4-c25c-472c-b2ff-5cd3a09622d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7d30b9-5c81-4b4d-bb61-fd2e837e55bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9f9c83-80da-4c26-bdd4-1b40c78e7479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8e805b-a2ce-4dfb-949b-82699b5c9d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f2954f-1b9c-4dd6-95f4-28d9beeb5df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "923465d2-7032-4022-a212-ddac374b8da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2de089e-a418-4a39-84d0-5761cd6f7013",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54765120-a22c-43aa-a353-3bd7daa72336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10bb641-9841-4ea0-98f8-cdd7c385cd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b89c853-14e6-40ac-9dbf-d9aa5e8f9f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee898a4-a3c4-494c-b318-40f9e44ecda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3354fd45-821d-4b30-bb5a-ad8f233ec160",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a0f2ca-0cb7-41db-85f6-084616a79240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9d893-9abf-4941-8871-d0a78436f92c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff7de71-ac42-4a6c-b40c-7a215fc85001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f108ba7c-bac7-4b94-945c-ea0ce8a39f35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7e56f213-965f-4fad-b60c-e0c4d4bf7129",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9004821-5381-4b02-b592-de1f36cfa0d2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9606328-acdd-4c5a-9fb3-a786fc3aed65",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1c0dfd-05f5-40db-b33b-9b2e2391f5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2382450b-44a9-4bac-90d8-438f9e898282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41b30503-b146-4017-b607-aa9dc5266a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d43ce8-5c34-417d-add7-12c151526416",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610ab2e8-df4a-44fb-8947-20025f9539c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b8ea369d-1c89-4fca-bc90-4d103ca8fbbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b4b41d-898c-4ba1-929a-fdc64f288b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe76e399-d000-422b-ab36-b0eea30dc081"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec7280f9-996f-42a5-94ae-0736ce1a6d7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d09bf8d1-33d7-42e6-9f88-c135a5c7c527"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b3d3c83-db5d-4049-b782-93fd40cceefc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b981a828-cc2c-475a-9ddb-82f7a5e052d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f62f001-4c45-4d6e-a2f6-eb2454ae424e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d39b67f-e823-421b-bb55-660f7198db2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28ed991c-c779-4443-abe6-a35be3f6d205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "663d4e24-0b72-461c-ab82-e01cf60e2d4d"
            }
          }
        ]
      },
      {
        "id": "d8f4335f-9fe5-4485-84ed-04896aa5cc11",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4fc64425-c78d-48b8-93d6-af8dd18e85ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1acbfcce-a4b2-4a2a-ae64-ae2d9306ace0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84fbe395-4ff5-4dab-a8b9-1cab862f68fd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb922f3-2808-4251-8f39-04b73809fc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c6912d-2888-4fc5-869c-7551fdc9a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223614e0-f4d2-4cf1-8e7f-8a2654b4b992",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52840786-5ba4-48d5-a6de-0f3aa17950ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d0a493-dec3-4e52-bbc9-9fbb418b4fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b96550d-b3d6-4d16-bf88-0e5916631b9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2ddfc6-64fe-479b-9b15-1c3070855afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0290e4b9-7c9b-41b0-9aec-906d416bed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc01f94-49fc-4f5f-8e14-e1b2780f24f7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e92a09a-d473-483a-84e9-b2a647671561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca9b013-c025-4120-8577-f342a4ab4ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1fc38e-066c-4edb-b797-786c6d2c9f57",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b9c029-5e00-407a-a4f3-0fbff0fe61ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6687258e-f809-4a88-9e7c-f5af510924dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458481aa-d8af-4462-9778-f9e611f51221",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a695ce-8a6b-4d51-9bc6-642851ba2d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61f631e-c3ef-4cbb-8f4c-75c2fe3938b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7aa9c2-538f-4aa4-ab2c-abda1d2a7a72",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29446fc9-b06f-475d-8c68-ec0b48c81b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee76f9a3-3106-4766-b267-c7224b0a39cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7951c6e1-ed7b-4055-84e5-1979e7914f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1489ee4c-fbf9-4c4d-834b-3c4b0317b3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae17791-16da-47e1-b63d-fbbca05dab02",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678c4ff8-c678-4809-ae8c-769e68389059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f2288e-7959-4062-8533-892554f0911f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cda1b7-94a4-43c2-b496-a08e7093d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd2540d-14ff-46cd-83dd-e300e8733a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1e99cc-f2a4-48db-b429-dab758aba41c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d1adc0-f414-40bc-aba4-5e513ff1392e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36ccd6c3-3570-4eca-a34e-adc179c304c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833353a5-1871-49d5-9b67-b9626e01337f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8d9168-dd87-46d6-b1fd-51c4287e43f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32c5690-db13-4e03-8abb-48b7726eb555",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e1123-a3ad-498e-8529-fd683b94f2fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b327022-9e7d-4115-a0e6-138398f0c075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21bd81-1bad-4947-92c6-41fc2777fbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88c6938-fe5d-4eee-bfcc-8f89bfd86810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bdd7f1-adf5-4653-8839-b29f773896b0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc968fb-8932-4b25-a1e7-569741a07912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36a92245-8552-42fe-a327-f58eb35d58b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554221ac-bda5-44fa-98b0-0526ca69f848",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016c0c17-74ce-44f4-87ce-2a92c0a1a999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510958ba-282b-4e01-8710-a8bc70059aa8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72265f1e-76c3-439c-854a-bc88e9b7b00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c297cc7-c41c-41d3-825d-6d33f5413820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706ea698-1f3e-46ca-a001-55ef62db4e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c05065-ba2f-45af-99cb-86f5ea5114e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ae18b9-e9c3-4337-9460-b63ac5dcc209",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e899b6-449b-43f4-8406-ec84a4516341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbeae7f9-c73f-4ad3-8c7b-c88d8ba711e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb34605-06bc-4a9f-82dd-dabca2910d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a2a51b-734d-4a0d-a12a-99c4164649b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1530f-9771-4119-94c9-7ba5098c9f15",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f02e1e-be0d-42b1-b269-b7fbad1739a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7a47223-a418-40e0-937f-042f207a0a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03ecd26-5ff2-468c-8ee9-1740730a5e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2371fc5-29e6-4c23-8d1e-0bbf38439bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a097739-cc23-4b51-abf3-5b0dac6e037a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fd5ab4-51bf-4851-a9dc-d453b023b119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a936ec83-b56f-4c09-a0ed-a3ab896d2a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "738be658-b3ba-4796-8860-fb5bb20deb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c7c593-1c3c-44ee-9c47-225c9830e582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad80eb0-72ed-4384-abef-a1bd7b670a0a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f437045-82ea-493f-b6b3-5499c8bc1e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a76178c0-499f-4830-9585-f389c87aebe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07762e56-ca81-47fc-9c24-4a2e321a4d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937368b6-663f-4e7c-9cf9-aaf8309e45ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f331f5e-8538-49e5-9317-ca8e1088b7f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635bd27d-1d41-44f8-942a-e6d3bfe2c911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1485ef26-5594-4a0e-8552-96063bb8f4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03111372-0864-4810-82ea-fae31da8aeff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68adc63-59aa-4db2-a6ca-5505aef47192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7047442-bb82-40b7-9d94-1f37225e83c0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb0afb3-a23f-47e6-9ac3-afc678fa49f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33040906-dd1e-49bd-98cf-4c8c9f02afd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c086af4e-553f-4636-88dc-3f994805e867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e13c27-60f6-45fd-a572-d7838dc544df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa40c99-e20c-4dbe-98d1-ff318338f371",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00caead0-3ff5-40af-9510-390a240de51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63a65887-ae39-4837-aa4c-aeaeb643dc7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555fa67-1248-4887-b8df-f2c1dd34c9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "866ea044-03a0-4188-97c2-e17d8da02112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80babab2-0d6f-4b48-a04f-a11289a47227",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5061004-0b12-4bfb-9c6b-0e3d9dcb21db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81f8889-0db2-4c2c-a265-9206051be22f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f82553-9ad8-4391-901f-17ba2ede4109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d081995-55a3-424c-aa88-b43b203ae389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e186bc6-7f33-47da-a3cf-fd1599da79ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151f50ef-490b-49e2-923e-73e9e6ea52d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d394b5-e55b-4a26-be8a-8e33ddf94653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8e8ca9-0346-4009-b4df-1d3a3c4c4d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25e98a06-e933-4221-8cbb-d14186a2fa99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ef9097-f321-4e73-9d5a-f15e280ea866",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e2f6d-3417-4799-bef9-08d680e1facf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9cb8a6e-4159-4af1-8b5d-ca4d657972bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38425d84-689c-427d-b18c-c06550db7c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4ee7ce-1675-410f-a835-d5b215cb8b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2aa2dd-22dc-4035-a33d-c5ed83c5c1cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06b3eed-8c75-4928-8517-760cb455f8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74de8b73-8b2f-4203-8c2f-52d689d8e59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f379d12-fbbb-44f5-b3b0-49492816e854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47259044-4ae1-460a-8a9d-2b60539d6e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7dd88d-f556-4c22-9b31-ae4f1228123f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae13ce6d-662f-46ab-97f8-373f59fef0bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03167098-ed6f-4765-ac9d-86068378cb4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03957cd4-bf72-4ed9-8f98-0493910e3eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2cddac-5853-47ef-8c1a-9cf6d155e759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3108511e-918a-443f-b63f-6d4b2528a229",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d18ff9-0aad-45a1-9585-dd4a234c8ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b1c703-762d-4e1a-832d-b4cd200fa255"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a74d35-83c0-4271-a8bd-105760c1ebd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58f1dcb-40a0-4233-9749-cc87ce937da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4860b66-4a9a-4207-bce7-9de9df6606f4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84728d74-7334-4f57-9973-c90ad1297d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43a2223b-c88d-4cd1-9e24-ac2a6c47d035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848dc2d3-e82c-435b-b21d-64c0f3f23988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0125cc9e-abd5-4996-9b17-fa182d14a76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef288a0-9c49-4627-b127-45390ebaab0b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e291eeef-719f-4f30-a56d-2aab293159f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72fc383-9cb3-4750-b4ab-3f66b80ce8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef3fbba-7da6-4608-ba35-8779e504a934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9093cbb5-8679-452e-b153-9e550cc75d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c630be9-d144-4871-9f4e-40d3341926a2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3049489-11cf-4fef-851c-c8f51c892811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e549957-c2b9-4458-a141-d881738737fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5a4532-6862-4e94-bc19-b72691934c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c1ce82-b90f-41ea-9a22-010cfb7d4684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f5fdb5f-97af-42ad-9470-834d05126571",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b1976a-89e3-4a83-9a99-0553d6ca9cd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ebed4e-9655-4303-843c-c418298e6e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701b32cd-00c6-4ec0-b177-6026b6282eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f46c900-427f-435f-92f5-93edb0bd0066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbcd2ee-1ff3-49dc-a410-b55e6dd81d0f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5681339e-e7c3-498d-b99f-84a01c9dab90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59834023-9e0c-4306-ba45-4f0861e108b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a24d9-293a-4b0a-9460-563cb16f969c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62784ee-05c4-4e07-b163-763373b7e868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61572e7-d990-4d32-930b-287f05e1334b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7c8850-fdfc-4f2b-9aef-a2fc1a7b7d0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f8fbc7-09e3-44b9-b430-f31093e3ef35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb856a93-e15b-499d-ae8e-cd4ee210c86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d778ac-74a9-4332-ad23-d233d250379a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7faa6d-fc04-4033-a350-c9b9634022f0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4380b70c-5d49-4b34-8a4c-a575049eb889",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d9b3bfb-9582-493e-ac63-933da18e0a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca2ed3-727f-4929-9f54-0d856af0bd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e345428-4a2f-4c53-9ff5-1222ee01d3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286bf3e2-45b2-4a9d-ae8d-2a1d218a0184",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ede888b-4588-49b7-a6d0-62ea191e816c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f10ff2-d2f2-42af-b787-dfe0c06c6bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0681b75e-6bd9-4339-a37b-c070c3cea25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebef9f31-aec5-4082-a832-b75a1f9c3fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764f1507-38f1-443d-afdd-a30540894a9c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4517cc4f-d24a-4257-9905-4debcb24fb71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3031329e-6137-4102-ab3c-bd53cffed9a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8360afa9-3674-4cdd-bd6b-be9aaef97c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee19bfeb-391c-4b32-8511-ad82aef0ab33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e15d1c-df2d-4ef6-a3cc-13f52c4b2938",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb71e7d-f5a8-42b9-bae7-bb5235f01bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3a37e0-5ac0-49bd-bc5a-4f9365798274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0073b3-4a21-49fa-a0e0-2142a9db9eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324c013f-c287-44d1-9320-6e48142acfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040a5625-e0f6-4d6e-90d5-4faee6461fbc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf5dbe-1a11-43f3-b9ef-751ecc891d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da59cf59-203c-450e-907d-882fe8ee85d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179162eb-6580-427e-9f38-34b38eeeb97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167482f2-3bb8-4355-8e08-627f00d42e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b1396f-badc-4c89-88b4-5643bbefd89f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e565ef5-440b-449e-9d58-efa75f9f73fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1cb505-3ce4-45b3-a476-c05314b56262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6440a6-0faa-4b85-afaf-685b17d6e57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261ed472-2b04-4082-958f-a8cd3e98571d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee96d1b-2bcf-4f18-84c4-84671a18ef01",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a256d186-14ae-4f2f-a5f0-89a32ac28f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8b51d8-6579-4fd3-89fe-b293d45030c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbcacfb-cbbb-4bd4-b5f4-991f6f0dfa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7efc22-187c-461f-954d-9cdc79e3b308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458d8a7a-ddfd-462c-84e8-7e264f56cbfb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b9075b-2754-46be-b74f-404009e0be20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9c0c94-71c5-456b-bb49-a4e8190da4e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dbb87c-6a7f-4e69-ba68-a2f09bfb69c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a1af68-fbec-42f8-a78b-e5ad96a51fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e8e3a7-5cfc-4796-be12-f3ad3598f907",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016bc0ac-8ea7-4728-8710-fbee6ae66de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f66d28-89e0-49a4-bf60-82977e904664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ba36eb-1187-4be8-b9cc-1524c0dda7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ac091a-7447-46db-8d4d-c551890745bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c0369b-9194-43ca-bcba-98bd3919134b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72bb1ef-9f64-4cb6-b8ff-c1a4d4e52f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe42e09-f775-4b9f-887b-e799ab036e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cb60d4-7949-42b5-92d5-f8051a819304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee53795f-dc22-41d4-9bb1-7265b7d71295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1022811-4e1e-452d-981d-69a614803ebc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b570d-c521-4411-abc6-fc3674a59a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5512d7-77fd-47f7-9d73-66dd0232c3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59e12c8-4ebb-447c-9b54-8a3c0a701b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9caf1f1-87dc-457e-9ff4-c57aab9d0c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a4cdb8-e166-4011-beaf-f38464412d09",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d534bf-44a7-4cb2-a68e-0a1c5463d96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb4b700-0748-4cb7-91d1-966743b1dec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0b3aab-8940-4879-8de8-019f96d5ab24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b698bc-149b-4f48-b8df-009dbe339429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82feb7e-02ce-4ddb-9181-5136dc29f854",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9362ac-54af-456f-8168-4880854d1e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581bd01d-bc3e-4922-95a3-c054c583e562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5c3044-c475-48e4-96ca-9c5d5b045343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cffa39-5854-4ab1-8338-fe0224ade38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f8f204-bd00-48d3-a44f-f739b1a88238",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96884c23-1b80-47ed-8a8e-26106963fcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35643ad9-64b2-49bc-85c7-a59ec440de2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308fbf71-1f66-46f5-88da-d26a566be44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e2bb25-c55a-4fe4-82c4-ffcab2f77593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5619325c-c272-4a2e-88a7-864a96181dd6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351f5e98-0e3b-4db2-8653-c3c41aea729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a563967-dd7f-403e-b9db-6d4339b74836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4663868-21b4-4ef3-8a52-a1f8cd715c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd68bc8-f033-4dc7-9a1a-cae474bf7343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bf41f8-2c51-4c3c-9646-1dd5cd14a18c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a25624-931b-4e3d-92ca-c4adf51ed369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9840c0a-4f24-4b05-8360-03628551e564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b404664-d1c0-410e-bd6e-9decd4393a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4239409-7cc8-40f0-867a-7cdd0177be43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee756e9-66cd-4524-8b3c-0e7429605cb1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1f81af-3ad9-4457-a08c-881a680a1709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3d588c-04ae-4653-a50f-c84326b32ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3df0b9a-260b-49ba-8481-a316e19a7dca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a080165-4f7b-4242-927b-d953d3de6aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d8e03b-59c1-44e1-b7be-c33552b73f27",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0822899f-0280-4609-834e-e70d3dc843b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae14b8f-52b8-4fd7-8b64-612105f4e76e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c919525c-5579-4c2d-b521-18ebe58130a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a16a9f1-ac73-4a8e-800b-5c5ab3857362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcdf78d-3dea-420e-aa0b-c17afb002715",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af70ab6f-7ad9-41a6-9960-876a51f3e1c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329fdcb2-17a6-4efc-a30a-07672fbad445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cddc7e-52e9-4f48-b9ec-382cdc2d131b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9612b0-efb6-4c35-b448-241a3c2a54fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256fce56-bc95-409c-b035-e80f26285eaf",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9974cd-d319-4d2a-9102-98b85dc76160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7a5d73-6492-401e-bf63-ffe3399e8096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf9228a-4189-4229-b42a-082af22e0c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5344322-8400-4833-9767-81969e55047f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f324b0b-9a2a-45eb-ac21-4aa0f05d2725",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9765f8c8-68ba-4012-8b6a-e04ba632f356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe0b5c3-e779-4f0c-bdb9-6f929668527c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad454cb-5f59-4cec-bb60-cd32ab465a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90b7a04-4b90-4fb6-afbc-defc811f1c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff38939-98a1-450d-9057-71c1a26e3fda",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a999b1-5ac3-40ef-8a5b-d3ceeb36ec00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf09760-2a35-4435-a236-ed6326736c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4a55ef-2372-47c4-83b2-a100737564d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5df81a0-727c-4424-81d0-de64b9f22e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7696bc4-17a0-4c0f-9ffd-8ee23372cf92",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bcf1d2-ece8-4de4-8031-a91ecf0d7c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7536237f-3948-446b-a4ca-b02493ccf535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d50700-20de-4473-a1a3-9b1c0741b49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4b5f81-9b4b-4266-aa46-9fa0065938d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3d5413-2c49-428b-95ac-ef24f5cd4902",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b4ac53-1a32-40bf-bb73-6a22ee7e30c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15e9e0c-563a-46f1-b31a-0d90e4455d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855b382c-3cfb-408d-8bce-aca045f791ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939a6e61-ab9c-4dc8-bed0-d76aaffe87dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f03edc-8f39-4984-a8b5-dd46a8daaf46",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1496f4-fec6-4874-9989-b20bdd241a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac38d04-04fc-4415-8826-f0a2979b2e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf86eb5-b95c-4c43-956c-90d003a169a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05654194-d6f8-4644-acdb-44e6d47ffba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8416733c-b922-4e5b-8c6f-c9d152264472",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c49e40-80f3-4a11-89b3-910f870b02a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3042bf-5bcf-4c64-90fb-3c9603faec0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abad6c24-4d8c-4087-bc16-1a40f05f0361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e62ad12-33f8-4434-aad2-333366802b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c6275-f883-4f18-98fe-a32733bb604e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a8c1c-e11c-430a-ac3f-591e4673d2c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71924552-a0ab-41f5-8b1c-2913de9ca104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1336a68-3bb5-4d6b-b1c5-8ad5022d188b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf235c9-ed9b-475c-b36c-3d61717b977e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea4cec9-b974-49bc-8a67-a9ae5c1a7755",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d7ca20-1f22-4511-8da3-c575fdab1907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dcd9269-0fe6-4e59-a7e5-1bdb85bb0e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc65730-a1b4-4f40-8190-b5dbbb8a2d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee328917-c264-4c86-92eb-ce1913100c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6114c1-1d5e-4f0b-921a-d38482b246db",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bc96e2-a490-479e-8031-beb69b12f52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe589fb-a993-435d-91ca-89c30edf8c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b77a21c-23cb-4e99-85a1-335e9cf31c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc09cba0-ac12-4099-ae9a-a44521aef7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ceea7e-4645-4a34-909d-025488c8a025",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd12275e-8630-4230-8815-d2487653a870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f0c5b58-5e9c-4e49-bcbd-af9cb6fb0464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7d18c3-0684-4778-a617-6a819428c687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67e46e0-d4bc-40c1-9db8-1b937d045ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1e2c69-375b-43bf-94e8-1f6c019990c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507b43e1-afa7-43a7-8e9b-acb283bbbeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616362ee-167d-4ff3-8003-bdb2769f2a62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ade75fb-f272-4b85-a169-5097e6a20692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb6014b-4062-45c6-9ad0-34a38da6be9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e7a1ed-85b0-4bfb-82e4-a48dd28e44a5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc542d3-8909-47a9-acb5-f33038a8cbf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225fe7c9-7dc8-4295-8d3c-18c6f5a9187d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55926ec5-c062-4f25-a640-6b50d5c00d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcbfe66-d213-428a-b68f-9e8effa33435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e899a6ec-b1d1-4b09-bee0-0af5ad10c1c3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc6c06e-f3cc-489e-ab79-9923bf22fb97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90e894cf-ee05-458c-9e35-3da1edc68001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8f8419-028c-4375-8c75-b89c31af4be6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e07b148-a846-41f7-9dbd-9a15e2a2571f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5e83a4-f594-43c0-a2ea-ccc8fb63ec2a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6bca72-6e90-48a1-bd9b-78a8e0c6f483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7afe2ea-f4bc-4b95-8894-f653dd0243a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027f211d-9509-41d4-95e2-6f92b756479c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "184bd521-2f45-4581-9275-8618dc3d4c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dded3e44-2a55-4724-a0b6-7b7b2df8c73b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c4882e-c3fe-44a6-be03-35777ca6b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dee87e9-7873-4184-be81-92493b327c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedf936b-a884-44f4-b5c4-55f430fbd21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7104c27-6afd-45d1-b32f-d16a9c4570da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649d3047-bd2c-41dc-89f4-4da8bad9c155",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f319bee1-bb88-41de-af92-c820d53ad165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fb8edb8-b8da-4450-8f97-2012741c3dac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3193f23d-be01-4b9d-b8dd-d8b3f4f3efd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03761708-41b3-414a-9d06-80470d09d9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361ad0ad-b15c-4305-85e6-51cf9f857ec0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5552ec2-06c3-42dd-9533-ce23fb2f3119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cda8c2a-5368-412e-ba81-271af6f2b562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d3b4f0-a55e-4847-af1f-520734b0cd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc304327-b799-4a4f-aa7c-6d16d5095043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d93d82a-4ecd-46fa-aa66-492a31d57b6f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c988ef-eb68-40d8-ae7c-f04ef90c9a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3cb659b-3516-435d-a281-81f80f657dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58939eb5-7c4d-4c61-9c77-a88e6ae29f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "619b274f-8d4f-4312-90c4-ccb9e11eec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4577dc2-2ffc-46a5-bf30-310e04c96cff",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49691d0a-3d40-47af-bc2c-521af6ca6d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8be7b6f-8544-4a62-be81-5351c2e39a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8bcf10-00b5-40db-8a34-8917275c05b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc96ce1-2842-4c26-9f18-fad353925aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d23b604-e434-480d-8051-cf78142b18d5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada4bc0-5ebc-46d9-852a-2d2fe3927541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "788cdb59-ff01-44e8-8992-7861c8220488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f3d117-8e45-446c-bd0c-9a75b9268cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5276dc-f54e-415a-a564-138b67887456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c43893a-ec4e-4375-88fc-59e95ffa5169",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a05a0b-de72-4e87-bdea-5e16f6784ecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc74c477-0adb-4549-8059-9d870bd74268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50020818-afc4-4c21-8787-c89d2eaf89ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec9f18a-7250-4f7c-8132-5014f98473c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c654a19-9e43-4280-91e7-3332e1d240f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ff5853-628c-4d49-a7b9-f81b8bd7a88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "995dba72-ca1f-405d-910b-179cd6d7de37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766c9c80-eb68-4eda-b35b-dd7bd09dc375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0c9827-2c4d-4579-b002-364ba8746440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3cae74-37cc-47df-a085-61f9d69510bd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b563e-1c0c-4028-8ec1-950065d42cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b63605de-14f4-457f-8e0c-88a295d1b44b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d453cfd-ebc7-4aa3-880e-6c25c9085f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea0b2bc-a88a-4af8-8b25-1e9444febc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9466bb5f-db2f-42e4-8dbe-1c49a870eb0f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a950340e-382f-4a87-b8b7-bd8a97413c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185768a4-f7d4-47c5-9c42-b374e2214f45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80a481b-6bf9-44d3-92bf-aad71c497079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e926da8e-f80d-47e1-ab02-d06a30708cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ab3659-c41f-4161-a1c2-a1a0d5e59797",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9feea867-b626-48c1-9850-f371fb17ec76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bce2e3c8-a493-4d77-a814-7776fafda2f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a668d0a6-f10d-4273-bd47-021ba6ce971f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "093c835a-7ad0-478a-8b5c-cbe9db0affc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e3ae07-b224-4d06-acca-557758e80958",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83be8a40-4b4d-4aac-8082-e0fffff35138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda48607-b409-4779-9e40-6fcf29fe5e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77499949-9559-4f7b-8172-5ba17e8bd6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9dcc146-f93c-48cd-ba02-f981b65e5b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac016d6-ddfd-4a3d-966d-cea4fcffd2bc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622b82de-6b7f-4cbc-8704-981fc5bdefd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d54b794a-d163-4024-8a67-8a6bfa58269b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17f34ec-0758-4f93-83ee-7c4bfae7070f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d53b0d-6e96-4040-931e-403ca8d2716b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580070d2-aca0-4566-a41d-07e1291afdd7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f502b7c8-670a-434b-92b9-7e8e4d11b0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "297bc564-1dfa-43dd-b3c8-fb8296b267f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f03103-a3eb-4e42-9289-6ed2575b6b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d97486-17ba-4962-929c-f2f41922d6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d956fd3-1c4c-49d6-b41c-1aba9bcc5f35",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00e1cf2-69a5-41fa-bcf1-385cce266e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3464286-3790-4558-a762-db7b9fa72c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f6a4d3-bc26-47d8-bc84-d412eef28d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c208cef7-8b38-44ab-959a-5b5b6c91c667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e2a2d2-fd7c-4379-be84-4fe95b152a78",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc05308-f3e0-45bc-b404-505403998f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74acbd66-0c48-4e65-888b-23618c6e5017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9224210a-a3c9-41f2-86ae-1120b4ddccbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf01b2e-de61-4f4f-82d7-3d5b4247f8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5c74c5-89b5-4622-abe5-3d2a69d85c63",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70206be3-8dc9-40a1-8bd6-ec99043914b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f127fa30-d3a6-4a5e-8c9d-40af07c53215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bfdd12-8fb5-4930-b68c-f938065285ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861943d5-da10-417d-8037-51d135a53b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c038f3b8-2ecd-4a40-8369-1c9d6392003d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca254b0-6ae2-48ea-9a0f-f4716cd9efe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f59054a-c0b2-4e74-98a2-d5e3be754157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad9656b-5fdd-439e-b3ab-3b90b40a0dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b367c6d-e6da-457a-942d-7c88dbc8dd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fba74a-f043-42c5-8eef-f8f5a4cf286d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a682c94-c8bc-42f7-8f37-d01063f6e801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17228538-beab-4ce4-b30f-4f98e5dc10a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55da1669-dcd6-48d5-8f81-322f251d1268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29405075-a247-4023-b83e-68688c3e2660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbf1ead-8354-419f-b2e5-c1ddf28a6ad9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de52684-28e0-492a-8301-57e3eb63db97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91a8d573-c1df-4795-87b0-bffca1418a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2815915c-66b6-43da-9ef8-f523f1d1522d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfaeb25-879b-441c-b347-2517fb4b2fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa2d12b-6cca-47f2-88e1-6399f40f1378",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fa3637-014c-483f-81f8-d659c919baae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76649920-6a21-41bc-8bf2-0c0c5e88c24b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d1bbc6-4d48-4d29-8023-625895e99ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecca67bc-72a5-42dd-a2ff-0ae4fe817e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138526fc-312f-4db7-860d-7b5eb5120e70",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39036f7e-5033-442a-8391-46fe190cf135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0f4aca-685a-4a8d-90ae-f1617c1880a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d86a3-1b08-4b90-9336-2876a0c628cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7474b3ee-68e5-433a-b56c-9bc63c658a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e025bc3-6d13-4cfe-96b0-eba57abe58fa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2de3e6-3527-4d92-8a75-eb0ae690019a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2f58d2a-8de0-4ae2-a168-114e3d65cb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6180b59c-c6b4-47ab-99a5-9df5db9c3840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0600649-422f-4b4e-bd52-8622dd009405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c827283f-f3a2-4d8f-83cd-c0a2982894d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dddc29e-f749-476d-83dd-207ebf7ffbfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4e50b0-1a9e-4871-b27e-91048a1af6db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65e27dc-fc7d-4b9b-9acb-cee6cc3f8fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f992064-ab6c-431e-b2a3-1b051bde0042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b339c62-8e79-4fdf-9131-9f34b93964db",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eb1417-af7f-4217-a6a7-89c338333070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1440276a-cceb-4ece-bc75-fce2b671d918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40e0a8e-15be-4374-a1f9-d2a6e37c2aab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e77e1e-f2b8-4cb2-869e-fd6fc8649d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f52782-1b61-4fd8-9596-3340da40ece2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfe87ac-a68c-4feb-83f2-07fba4469764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a5a673-fb2c-46ea-8723-d71036cf8ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a853b5c2-f59b-4861-bcd9-962bf6e1a587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5db0f42-45f0-4d90-b0bc-65aeef4ebb3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f16b152-3ac5-46ad-a4b1-9d1609e9aa10",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3052dc8-2d4f-489e-8535-2e4a100de861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68746b4c-b70e-4e2c-ac19-0c9f4032c2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e0760f-b09c-46a4-8b2e-7d52416dbe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c10bac-091d-40be-a7ba-21a84a560606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d24190-8632-4a27-9a3a-3ae0be69f3ed",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdeefb79-9cf0-499b-923f-f3205eee36f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7edf3d-941c-4723-8198-ea3050b720a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd35200-8a47-4b94-b363-0fedfb327c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a69d66-aba5-4aae-b35b-b1dd54e278fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f95b94-d55b-4879-a422-22727c28e376",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f947a4-3336-44b1-afea-5bd63d8a7abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e81a80c-0b17-4673-84ea-4605b1fc7be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3385e587-e74f-440e-ad9f-e3024317e543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b22b93-a22e-4491-8804-29f323507572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd31f7be-0809-4ac9-ab43-c27adbd4db31",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb75dc-d323-4fd9-a7a0-0205a8a7b141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e116e6-06b1-45c6-9938-e578c33d2591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc260f3-9a55-474d-b64a-b788004071b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b423910c-15ca-49b7-a104-7080f192b66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f70aacc-cdd5-463c-92a1-3a22f117e86a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39908010-7e1f-4a0c-811e-7dbca4dce76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fb77df-22c1-4dd2-a571-1670380228f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4e8fd8-a9a9-4840-bfba-13fb0d93c65a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec20d81e-c6f0-4814-a326-6bd80aee3f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c885c7-3ef7-491e-be5c-ff3aeaf0e1c2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615325d7-762c-471d-abfe-5d2faf298814",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50346beb-6e9a-4dde-99fb-3b587edd1490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ef186a-f985-4b52-b635-46fdbb8cb974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b60501-c9ad-4ea2-9c15-79839b73118e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f99c7209-be12-44ae-abb2-3bff74978aa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6a1b759-8977-4e00-8d54-62aa72cb7600"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3721a81c-8088-40cc-bbce-19f22f0ab75e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1f5cf41-b289-47e1-a703-389942208c8d"
                    }
                  }
                ]
              },
              {
                "id": "eb58d142-7695-4d18-bc53-1f3b4daa2121",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c91e58f6-d498-46d7-9990-f068e4ac1ddf",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9486fb6-d0d5-4deb-b40e-d95c336fa346",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3514a297-e596-4872-b32a-81b1ef9406a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff951df-76fc-44df-b97c-6a7b023a01a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d18781f-6d3f-46c1-8192-2172dcf12963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f831ab-5cce-49e4-8289-b4bb8ccfac6d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e77868-da74-48fb-8416-9a3c4b7ce4b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "051e835e-ac6f-4883-b114-4e10bdbc45cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff388fbb-e374-467f-b62f-94b4838e563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3460e0a5-a987-4df5-ac13-5cdc10ca3161"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47061cd4-4050-443d-ad3c-7f6f5b8ddc78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09474289-1ab1-45ca-b65e-53d754468e9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d703ff07-9da0-427c-a9fb-3b5dc25abe24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "297419b2-75e9-4bf7-9494-db224d3ed243"
                    }
                  }
                ]
              },
              {
                "id": "ca131a49-bdca-4349-9b73-b311f4f6c8e1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "604ccbb7-fdb8-4084-9496-2261adafedbb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e368f7a7-4558-437f-a326-dc7478245fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3d309863-1aa2-45ad-8919-72b59cd15cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5e729e-f522-422c-851a-0d0404218813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27997ba7-e2da-4b0b-8703-91aaf6e5285e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "07fda16b-5a08-4c66-87bc-cfcb9876cd2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b4cd22ac-d385-4e17-a017-01532ddf9b1f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f59dc5a6-cb0f-4880-8428-928ff391ce3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "935f2347-85b5-4df9-9d84-0c3a3bca25e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d672988-50e5-41cd-96c2-14b00526cd2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaca7423-fc00-45c8-ad1d-905f2b8150d3"
                    }
                  }
                ]
              },
              {
                "id": "c92b7caf-ca44-4c83-a505-17d115eebd75",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7837df9-7fbf-4563-a8ad-5b4db811c641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "078bf6a6-64dd-4ae5-b8a3-2ea20f031c09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f28293e1-c9d8-47de-b675-d9426bb39e9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce67ad06-b7ea-4d60-8758-b3257c01c3eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70bdff81-1979-4e37-b5d3-0e04125e8b14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "030e74cc-e644-42df-b9b5-9d1c2179d761"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b832edf6-c450-42c2-beb6-373032494523",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04d7140d-f0de-4189-bf7e-d302afc2fe01"
            }
          }
        ]
      },
      {
        "id": "f851118e-e525-42d5-a0c6-037096d91e3e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8eed4f5b-5e78-4944-ba98-aaa8d9fa78e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "359e695b-aae1-455e-a9f7-60610060ec50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7c5c3f-fc31-4309-9c88-01d6d0b12fbd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b68ce22f-c0d8-4030-8e73-981a49ca47dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c798d51b-1e29-4af1-9e0e-6fc3e03b3072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "027dc4ce-7826-42c9-a41d-a17d8f7bfc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc633535-7fbe-4087-be0c-4f12103353a0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a9e03d-d41e-477c-8df0-4ea996324677",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5e5b8c67-8697-47de-8722-f63af2b6b98c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeac1eb7-fe0a-48de-b95c-2f8e2aabec94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b5dd0c5-bf38-4463-a840-3ca830266b4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b18384d-74c3-42b5-9728-f8df20e853a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2298870a-f436-43f0-891e-77ac5042d9de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cad187c5-2293-4210-b907-d774a8a395ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37c3589-dc74-4999-b358-f6d995221664"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1459b529-4730-4a75-80fd-1f06cdfbca2d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a5862e68-584b-407e-ba70-98148fc4f7b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d6a299a-0c84-44cf-a049-7fb96cbe0935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4bf5cf1d-aaa5-4d30-a26f-eaad1cc4703c"
            }
          }
        ]
      },
      {
        "id": "557bf4c2-4cd1-4c3e-bf65-a8fccb46dc6f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3cff1416-c7b5-476e-9935-6021f20e4428",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6ee0fd-954a-4d6f-9666-21add56bb4b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "775fe00a-1018-4f27-bb71-400f519f941d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff8d7ee-c427-4d42-9862-c2e102e37681",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60b63dac-73dc-46d6-bcf2-5d68cde65db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6642faa-41ce-4f47-bc31-019dc1981212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18861f75-48f4-4f3a-a194-b85e1a40b316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c49943c-b8ec-4ef9-aad8-d045859c712b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0858a6a8-db35-4389-8daf-9719f6227d25",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d16b70f-8790-4823-b2c3-74e77f0ccece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53afdab-f3a6-4f9c-98e0-e3595e9c3e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d9314a0-3b84-4fcf-aab9-186860705272"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "459dc957-e32d-4060-afb0-848970b1a8a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a040b1c0-49b2-46ba-b9f3-503803f89c2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a68e87-8abd-4204-ad5e-3e2a5cb143d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ba23721-e079-4375-b51e-2b80a3bb4f12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c44470fa-e60e-4675-ba0a-6cbcf170cee1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "719c433f-fd69-4a05-b178-5dd38d7e8ee6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "063f2c53-87c2-427b-874d-b24ef7806e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69fb9e7e-1fb2-4dad-ab2a-a8a9c86bdf4d"
            }
          }
        ]
      },
      {
        "id": "10261627-59e8-44aa-a96c-ce0a822692fb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2e3b7415-d940-4a00-84e5-0930adf2e7cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd650ddb-28ce-4c81-a9c3-f472870bcdd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7755d1ea-f3e3-4daa-abd1-e040d1d88082",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be593f83-201d-401b-a045-01b13c099b51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73590547-dcd9-496d-bc43-86572a4f8e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26633d75-ef65-4279-8d04-67f5c56d0be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b190376-a782-412c-9942-77efb379805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93658451-7f58-4eea-b5d1-112d624e16f9",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5fd7ad-d8ff-46dc-ad08-2b63db11cfd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee801e50-b3f8-42d8-b467-753a1d62a67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b9782f-f5e5-4010-b3a8-601697eab6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17275842-9a39-4009-a819-8396ba215cbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "044a4ddd-6774-4258-b844-fed98d6bbba1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2cbce9b-5edd-47f1-b9b8-f98822455af2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3fe9878-ed0d-4397-ab7b-4843ba1803e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7922a100-6a2d-4105-b8f9-63efc88e7697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9938bc05-aa78-4bdd-8480-f18ea8ef85d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "01143449-3498-42a2-936b-d3be2aef0c5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e047f864-4616-400a-b5ae-473c49e9f6dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5aeb7593-405f-494e-b70a-d043d50e4c04"
            }
          }
        ]
      },
      {
        "id": "d8bac3b7-dc41-4433-8193-2b558e45fca2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3943455e-7251-4a2b-b64a-aa5e59497187",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b7c7794-905c-44fc-aa4f-cc273950229d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f56bbfd5-ebba-4e0f-b79c-3c2c62f9da60",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c322680-4036-41d1-847e-83fde57c7aa1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b59b1c0-9e3a-4d66-8749-0f86cffb8d40",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 694.376923076923,
      "responseMin": 12,
      "responseMax": 10189,
      "responseSd": 1087.1220529126424,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681086980091,
      "completed": 1681087174309
    },
    "executions": [
      {
        "id": "35987e18-9cf5-4112-9dcd-c4724d998927",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e17b1c76-c25c-434f-8342-311e449dd3fb",
          "httpRequestId": "1b48cac8-1234-4071-9d04-c4844cfa4cd3"
        },
        "item": {
          "id": "35987e18-9cf5-4112-9dcd-c4724d998927",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e86271b1-d050-4392-9638-e0b614c5a7cf",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 0
        }
      },
      {
        "id": "09c04428-1d16-4c37-95a3-8d6a087ed7f5",
        "cursor": {
          "ref": "3e647ed6-6049-475f-8332-9219b931a0e0",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b5ab2f5-6ae2-46ac-a759-0413916d4db6"
        },
        "item": {
          "id": "09c04428-1d16-4c37-95a3-8d6a087ed7f5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bbd9255c-516b-4419-b210-05006f1b4787",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "c6117e91-e700-408a-afe3-8a77c270d6aa",
        "cursor": {
          "ref": "73c239ce-d6bb-41e7-8f02-01a0a1e08213",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "31c6d118-664e-492c-9359-a6b547801815"
        },
        "item": {
          "id": "c6117e91-e700-408a-afe3-8a77c270d6aa",
          "name": "did_json"
        },
        "response": {
          "id": "d8aa5828-dac7-4b9f-8910-64dd1f3d7d72",
          "status": "OK",
          "code": 200,
          "responseTime": 755,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b31fe7-6144-4259-8597-8e12d9680e2a",
        "cursor": {
          "ref": "9bef85df-ae1f-4e63-98ac-02e4770b7ba8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c44ef993-5b7c-45d2-ad9b-9771fc2d1ae0"
        },
        "item": {
          "id": "67b31fe7-6144-4259-8597-8e12d9680e2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "277d5c33-a86e-416d-9ef0-dec43f9ce7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b31fe7-6144-4259-8597-8e12d9680e2a",
        "cursor": {
          "ref": "9bef85df-ae1f-4e63-98ac-02e4770b7ba8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c44ef993-5b7c-45d2-ad9b-9771fc2d1ae0"
        },
        "item": {
          "id": "67b31fe7-6144-4259-8597-8e12d9680e2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "277d5c33-a86e-416d-9ef0-dec43f9ce7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dfad20-418e-4626-8f3c-ceed70a794af",
        "cursor": {
          "ref": "b7b0715b-41f7-49d7-abfc-9daa9253efe8",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "117a152a-8e36-4acf-8c33-f60bb16a71f4"
        },
        "item": {
          "id": "16dfad20-418e-4626-8f3c-ceed70a794af",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fbb66503-97a5-4d99-afaa-0d54bff212b4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 621,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d7f9c8-b941-4164-a6f7-ed666bba37f9",
        "cursor": {
          "ref": "c8810597-335f-46e3-91ce-01dbd62c1da6",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f474a2ac-ebbc-49ed-aec1-6ad80343ec03"
        },
        "item": {
          "id": "b3d7f9c8-b941-4164-a6f7-ed666bba37f9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c5835a50-874f-4505-a2df-ec8e841a2cd5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1470,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ad2b72-bf13-49da-838e-efdcba48228d",
        "cursor": {
          "ref": "da853dbb-f82c-402b-8c4f-50d6bdfd5860",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ba330930-cdef-402c-9275-1d65218f041b"
        },
        "item": {
          "id": "e5ad2b72-bf13-49da-838e-efdcba48228d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ea735dae-18e1-4654-8fd7-9148b2530a78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b673ed-a82a-4175-8c31-e5fe0a019cfd",
        "cursor": {
          "ref": "7267fbee-0e3e-4a46-bdfe-3497455412cd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d725605c-888e-42e0-a550-d1f9ef172426"
        },
        "item": {
          "id": "f2b673ed-a82a-4175-8c31-e5fe0a019cfd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9dfe438c-da51-41b1-a9e1-2b379f3e8ae8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b673ed-a82a-4175-8c31-e5fe0a019cfd",
        "cursor": {
          "ref": "7267fbee-0e3e-4a46-bdfe-3497455412cd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d725605c-888e-42e0-a550-d1f9ef172426"
        },
        "item": {
          "id": "f2b673ed-a82a-4175-8c31-e5fe0a019cfd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9dfe438c-da51-41b1-a9e1-2b379f3e8ae8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1610,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a49b28-53c3-4d62-a6e4-592a9a440439",
        "cursor": {
          "ref": "9e2717e8-4540-4fe5-8871-2bc10150c0ef",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bf436318-79af-4844-948d-aef6791ca796"
        },
        "item": {
          "id": "e6a49b28-53c3-4d62-a6e4-592a9a440439",
          "name": "identifiers"
        },
        "response": {
          "id": "eaa85b24-5b83-4ca0-85f9-a7550fc943ac",
          "status": "OK",
          "code": 200,
          "responseTime": 2826,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7575404e-7cff-4cc9-b8f8-f4d8869df8af",
        "cursor": {
          "ref": "8eaf6141-6077-4779-b0e1-dfd612792674",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "10150ac7-219e-48df-8417-5798930a539c"
        },
        "item": {
          "id": "7575404e-7cff-4cc9-b8f8-f4d8869df8af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "db724c9c-d525-40a7-b78f-f7ddf08addb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7575404e-7cff-4cc9-b8f8-f4d8869df8af",
        "cursor": {
          "ref": "8eaf6141-6077-4779-b0e1-dfd612792674",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "10150ac7-219e-48df-8417-5798930a539c"
        },
        "item": {
          "id": "7575404e-7cff-4cc9-b8f8-f4d8869df8af",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "db724c9c-d525-40a7-b78f-f7ddf08addb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8516b9cc-36cf-47f8-8151-ee41bdbd19ae",
        "cursor": {
          "ref": "f868ed71-f04a-495a-bf68-11c2d76e1e68",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "214348e2-5924-4be1-a1f9-b827a134b683"
        },
        "item": {
          "id": "8516b9cc-36cf-47f8-8151-ee41bdbd19ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6bef234d-cef6-4302-bb36-3debf6ac8f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a1f79a-902b-488f-bb4c-fb4cd44de4e4",
        "cursor": {
          "ref": "5c99bd69-069f-4c62-830e-805731e05d8d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a430050b-6d50-48e4-a26d-f31ccce2ba08"
        },
        "item": {
          "id": "a6a1f79a-902b-488f-bb4c-fb4cd44de4e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "55458c02-33f9-4c8e-b6d1-4aa5d50c5171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95dc5ac-9f72-406a-9543-04f91c8b4463",
        "cursor": {
          "ref": "39972f33-4a20-4bd5-8b67-2ea59bdaa1e6",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f70fce8c-4ce1-4fdd-ba56-1edbf811bc7c"
        },
        "item": {
          "id": "d95dc5ac-9f72-406a-9543-04f91c8b4463",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0d9a906a-ffbc-4910-864b-96ef28ba2973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1bc2c7-e35d-45e8-ba85-2623d0cced30",
        "cursor": {
          "ref": "e5607bbf-c3b5-4fdd-9510-b6ca376b8caa",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "21982fe6-0882-4f77-b4bf-345fec8e34ec"
        },
        "item": {
          "id": "5a1bc2c7-e35d-45e8-ba85-2623d0cced30",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9f0909b4-b707-4398-8220-a7b059ccbab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7f9b61-44ae-4259-a88e-4a9e94039df8",
        "cursor": {
          "ref": "255c3341-83b4-4f2a-83a6-862a827bf7ad",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b6a5995-fcff-43c7-a33c-2d253881ec5f"
        },
        "item": {
          "id": "eb7f9b61-44ae-4259-a88e-4a9e94039df8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7cebf28e-89d4-4fd1-b381-86dd4863775b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5dba1d-9300-41c1-bdfb-7b73f1693057",
        "cursor": {
          "ref": "c60ff632-19a3-4029-bfdf-50e3bce52332",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b0d73374-f6ca-4897-8573-150ba38ec30c"
        },
        "item": {
          "id": "0e5dba1d-9300-41c1-bdfb-7b73f1693057",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "313870e4-b086-44d4-8459-5419a11d6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db66b9d-e303-4618-ae64-8e4d2f3d25c6",
        "cursor": {
          "ref": "acc86c87-1b68-4d94-b8bd-168b78d0ac6f",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "463ad95c-b5bd-4dd7-942f-bd9990256a51"
        },
        "item": {
          "id": "7db66b9d-e303-4618-ae64-8e4d2f3d25c6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "620e1d33-2fe6-4ae3-9d6b-a6806aee40f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51758255-9ecf-4b84-9986-0404763ef480",
        "cursor": {
          "ref": "66570c1a-951c-4dd8-93ae-72399d43b73e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d9709543-70c9-4c5e-8054-e36b5d814c39"
        },
        "item": {
          "id": "51758255-9ecf-4b84-9986-0404763ef480",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6cf518ec-c320-4622-bf82-f31f04d72682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66c2576-e024-4741-ae4a-78703fc458d8",
        "cursor": {
          "ref": "202343df-9c0e-4c27-9672-4afd350fd51d",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1ef0db20-61eb-4949-b1fe-6dbd4e3731f7"
        },
        "item": {
          "id": "d66c2576-e024-4741-ae4a-78703fc458d8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "aa3b1598-3189-421b-9e6c-f29eb3a348cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c3093e-c60c-41fe-a227-f0e132d44a03",
        "cursor": {
          "ref": "fc5fdac8-e0fb-4579-8a7c-53862876d0c7",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7cf2cf23-8e92-413a-bb6a-bab8787f2bd5"
        },
        "item": {
          "id": "69c3093e-c60c-41fe-a227-f0e132d44a03",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2b58dd86-78b7-4317-9ebd-1d092f645f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9c4065-cc8e-4fd3-853a-90f86bfd27d3",
        "cursor": {
          "ref": "cbe06e60-de97-4614-ade2-f3e9566c9440",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b073ea2-3864-49d3-a74e-49ce711f8d5e"
        },
        "item": {
          "id": "6c9c4065-cc8e-4fd3-853a-90f86bfd27d3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5689b619-7a96-4480-879d-5abbee516305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c0336-cd8f-495c-8811-6932c007fa12",
        "cursor": {
          "ref": "d117969f-2de1-4dd5-880b-cd35d3ad699e",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3077d0cf-3e2e-4204-a0b4-724679e073cb"
        },
        "item": {
          "id": "240c0336-cd8f-495c-8811-6932c007fa12",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef935790-47cd-4097-b1a0-abba3443762a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d4612-3676-4f2c-be04-c0b73e7ed92d",
        "cursor": {
          "ref": "f8931399-dd9e-42f8-9e72-be68fb657ac8",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3f301c14-6bef-459c-a931-f792e6217f67"
        },
        "item": {
          "id": "3a9d4612-3676-4f2c-be04-c0b73e7ed92d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "461b1e6c-9b50-43d1-a54d-ed27cecc13fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b75602-4951-445e-890f-65489b690fc2",
        "cursor": {
          "ref": "45e36300-ad38-4bee-8a5e-eb73f117dc66",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "949a6667-9542-40a0-8db5-2162b063ff15"
        },
        "item": {
          "id": "e1b75602-4951-445e-890f-65489b690fc2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f2da2626-7920-4149-b34e-b8dbe05dd3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f09e66-7ed2-4a1c-b4af-08ea65eed862",
        "cursor": {
          "ref": "c77c48f7-387c-4206-9c3b-5b6ce9a26bed",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eda0ddc8-b042-4a89-8e12-e2ec8d024a2f"
        },
        "item": {
          "id": "97f09e66-7ed2-4a1c-b4af-08ea65eed862",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "aded0dcc-c55c-403c-855e-d5cd11438c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b903a7c-4834-4cc2-8f67-1016d2d30fc2",
        "cursor": {
          "ref": "66d62d54-91e5-4234-9638-aab93a028955",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "811c18f9-5c90-48b8-8669-175041e68472"
        },
        "item": {
          "id": "1b903a7c-4834-4cc2-8f67-1016d2d30fc2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fba67811-366b-4da0-925a-2d7036202b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8392968-5b95-4680-b533-6ef2aeae9298",
        "cursor": {
          "ref": "4d8ca23a-4723-49d3-bac9-1a9c6cef15f5",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "93bb396b-5aa7-42b7-b4c5-8eeb216b0c7c"
        },
        "item": {
          "id": "c8392968-5b95-4680-b533-6ef2aeae9298",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8f7efc2d-b756-4e89-b2b6-9d7822c609d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3c7e41-8e7e-4e0c-aac8-8ea08f772831",
        "cursor": {
          "ref": "cfcd3c74-ca15-47cf-8ced-52f7a88882b3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0b538e57-66c1-4d5b-9b23-e208c377b03b"
        },
        "item": {
          "id": "2b3c7e41-8e7e-4e0c-aac8-8ea08f772831",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3c49fa4-13bb-4d3f-a0eb-58e6d124c409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d6bda-beb1-4cd0-9171-0a5e978d3b38",
        "cursor": {
          "ref": "a0b09e43-154d-42f8-b460-77acf7f07944",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "87b48af7-fd85-459b-9f77-12215aa25afb"
        },
        "item": {
          "id": "643d6bda-beb1-4cd0-9171-0a5e978d3b38",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7975eca5-63de-48e1-9934-19cd987632e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82baa657-dee2-4724-b262-c42084f5afb5",
        "cursor": {
          "ref": "abb86e2a-013c-4583-bc6b-1b5792e9b246",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "16d4fc87-edad-47cc-b643-98ecf570f079"
        },
        "item": {
          "id": "82baa657-dee2-4724-b262-c42084f5afb5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "194b437b-14fc-42be-bcd0-9372d4bc5a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c914f988-c5a4-4ac8-821e-80d40c6c789d",
        "cursor": {
          "ref": "fb606544-fae8-4912-a2bd-9c67f7cee24f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "af1c928f-1c5a-409a-8fab-57cee70694d3"
        },
        "item": {
          "id": "c914f988-c5a4-4ac8-821e-80d40c6c789d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bec5bbad-a18c-4e71-89f5-b6a84f5cd39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b80264-5f30-4678-8aa9-4a9c3a5edf43",
        "cursor": {
          "ref": "e78266aa-417a-4f63-8598-7862b9780eb6",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e627e18-3c1f-444e-863b-fa8415ecb913"
        },
        "item": {
          "id": "92b80264-5f30-4678-8aa9-4a9c3a5edf43",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3f7317b2-d317-4edd-bd86-35e9f4508aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ec44f7-2c11-462b-8e04-463e45ceb540",
        "cursor": {
          "ref": "5426aa89-2249-4d48-b289-5fb25450f14e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42ecae98-1b09-456f-9398-fc2c10469d03"
        },
        "item": {
          "id": "21ec44f7-2c11-462b-8e04-463e45ceb540",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "af533634-0da0-4209-8a2d-604d369d12e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2080de73-ee02-4abb-adbd-2dda65c35a65",
        "cursor": {
          "ref": "636318a3-a830-42d4-a576-91248fc10a7b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "590bd529-852e-4611-8a5a-4b181cdbb431"
        },
        "item": {
          "id": "2080de73-ee02-4abb-adbd-2dda65c35a65",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6159f074-dcf7-481e-b013-c1b1ef4bba32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046b9a7c-14b6-42af-bd5e-81a08d8d75b7",
        "cursor": {
          "ref": "acfed68e-0451-416b-b07b-4d23c2dbd877",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "27661d4d-f38d-4b2e-860e-0a63b1c00db5"
        },
        "item": {
          "id": "046b9a7c-14b6-42af-bd5e-81a08d8d75b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4fbe447d-4012-47f4-9fc7-a5fd73b5e881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0c4b40-074e-48d4-94a1-425fbdba376e",
        "cursor": {
          "ref": "c772e673-b94c-4aff-a173-f32255997014",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "63ee4a33-ecdb-4055-9a20-0eefc54cc3e6"
        },
        "item": {
          "id": "9d0c4b40-074e-48d4-94a1-425fbdba376e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9585f89e-93ab-4807-9f3f-44af28deea3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f7c263-2e7b-46f1-a6fa-babf429211af",
        "cursor": {
          "ref": "eec52a19-bae4-4b9f-beb7-9f5f2b2dbabe",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2ade8526-124c-473d-b07c-82bf8f230ce9"
        },
        "item": {
          "id": "e7f7c263-2e7b-46f1-a6fa-babf429211af",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "336b2d89-24de-4819-a263-72e01c31da5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cb156f-6113-47ed-a213-674ae81e396d",
        "cursor": {
          "ref": "ba938db1-508e-438d-a8a0-9f909b672fdc",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "616bb348-3460-4615-82be-e2867bfe385b"
        },
        "item": {
          "id": "34cb156f-6113-47ed-a213-674ae81e396d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81eb94a9-4f29-4329-a0de-89cf4da1f983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7146b01-387c-4bb0-b553-a04af889eb4f",
        "cursor": {
          "ref": "7c9f3f44-d8a8-4278-85e7-700ed71aee7c",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "916cdd5c-551e-49a7-a80b-fa915f19ed3d"
        },
        "item": {
          "id": "c7146b01-387c-4bb0-b553-a04af889eb4f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6eddba09-d13c-4c8c-8e46-6323eb2a235e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6088a390-5125-4f05-a85a-cfd1558d7905",
        "cursor": {
          "ref": "e5e085d7-addb-4f5a-9d8e-3780bb857aa7",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "57370cfb-a2bc-47bc-974b-0f1f1c26703b"
        },
        "item": {
          "id": "6088a390-5125-4f05-a85a-cfd1558d7905",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "197cec8e-827e-43aa-b0a0-eef552572bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b366b886-bb18-4015-a3f3-d7e460733830",
        "cursor": {
          "ref": "88aa58a2-b57a-48aa-a003-d2244c768056",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b758baa2-2b53-4147-82e2-24014f928895"
        },
        "item": {
          "id": "b366b886-bb18-4015-a3f3-d7e460733830",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f7140fa-4d9e-435f-95e0-a7179f2fcef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ecdf38-7766-432a-8b2d-3354eb3b7d91",
        "cursor": {
          "ref": "743f1a15-e5f1-4433-831a-9f2ef743256e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1c562d21-6699-465f-9c8c-22c846782209"
        },
        "item": {
          "id": "e4ecdf38-7766-432a-8b2d-3354eb3b7d91",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1031cb9a-49d5-4311-8226-95df0f48feed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c3dbbe-b156-498b-8898-16dc6a178dc6",
        "cursor": {
          "ref": "838b162a-dce5-4b40-9a03-a375adabff7f",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b42653c4-2170-4046-af0d-5b5ef1ddbae9"
        },
        "item": {
          "id": "10c3dbbe-b156-498b-8898-16dc6a178dc6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "37e69eb6-025e-4ab7-b303-d76babcd442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284a9ec6-c477-4ce8-9eac-39f8096cd20c",
        "cursor": {
          "ref": "3ffd56b9-e3a3-427a-857f-6118ad0d50bf",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "32965004-764b-43c7-924b-33dabbe2853c"
        },
        "item": {
          "id": "284a9ec6-c477-4ce8-9eac-39f8096cd20c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5f86c559-68fd-4ca2-ae38-472fb10274d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d19c6b-1b8d-47b3-891d-db2787d261b4",
        "cursor": {
          "ref": "a34115ac-49af-4cf5-985a-955852cccd4b",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b8ddc9c5-bbce-42fe-92ca-1cbf11925abc"
        },
        "item": {
          "id": "90d19c6b-1b8d-47b3-891d-db2787d261b4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e00c0312-599c-4af2-aa3e-baf6ad705123",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1122,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25c5ff0-c49f-4255-bb29-ffac9ce44a9b",
        "cursor": {
          "ref": "f2f1169c-37d6-42fa-8bfd-34a24c077228",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a4b82ea6-eeb0-41fc-9a66-00b8bd11b7a0"
        },
        "item": {
          "id": "a25c5ff0-c49f-4255-bb29-ffac9ce44a9b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7f27b2fa-9c5c-4879-8e25-cdef1a113886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccfd870-51d1-44bf-a3c7-c01dc2500444",
        "cursor": {
          "ref": "529667aa-6944-48aa-81ec-e65030ef5384",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "430fdcca-da9e-442c-b866-a2e4c737c616"
        },
        "item": {
          "id": "1ccfd870-51d1-44bf-a3c7-c01dc2500444",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9d04949c-2994-4116-aef7-683c747aa0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 878,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bb5f3f-4e9b-4179-858d-878b088f1c29",
        "cursor": {
          "ref": "2a350d91-c7ed-480f-97db-c4f634d3b6e1",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2837e589-a006-450f-bef3-975a24c9e7fd"
        },
        "item": {
          "id": "82bb5f3f-4e9b-4179-858d-878b088f1c29",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "49a07eae-c2b6-43c5-a9d0-579d8ee5dd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f9c2bb-2a8c-42e1-a757-834d63f36f70",
        "cursor": {
          "ref": "7de85655-915b-445b-89d4-bb903654c46d",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6b8c9f25-8944-419e-a443-4401b52aaa97"
        },
        "item": {
          "id": "f0f9c2bb-2a8c-42e1-a757-834d63f36f70",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4ca93e75-c79b-4418-813d-fad6685debff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b595319-d1f4-4177-85de-7f368ddb921d",
        "cursor": {
          "ref": "63c38f2b-055b-44e3-977f-dd5a7bbe7556",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4bd1ed3c-39c9-4b44-9a79-d92f338e89f3"
        },
        "item": {
          "id": "6b595319-d1f4-4177-85de-7f368ddb921d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b2b2e90f-f07c-40a9-93bb-87793141facf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165b4262-38dd-4651-9043-da46ad203f8f",
        "cursor": {
          "ref": "4a436445-2f6f-4ecc-a0a1-2c4a785d7fd5",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1e4b6853-adf2-4bb1-900f-2d5ffa27c295"
        },
        "item": {
          "id": "165b4262-38dd-4651-9043-da46ad203f8f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1794855-e716-4b8c-9454-bb084393a8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6629b49-eba4-443d-96c5-b2e633af3a08",
        "cursor": {
          "ref": "ceeb1195-30d6-481c-b7c9-10f5c0da4d9f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5eb491b4-24be-4f5c-aba7-bff97821b7ee"
        },
        "item": {
          "id": "d6629b49-eba4-443d-96c5-b2e633af3a08",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c87d1c95-1086-4efc-ae47-882c36c5c05d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 645,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886b85be-c897-4d33-9b1b-819e141b860a",
        "cursor": {
          "ref": "1ef628df-27ff-42d2-950a-4626662a3cf5",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0d954c0b-cb6a-4927-9209-2abd2e340cc3"
        },
        "item": {
          "id": "886b85be-c897-4d33-9b1b-819e141b860a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "48234173-7bba-49e7-8521-a9e5973ad53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ef9ee-5f03-4597-871b-df266c1d35f8",
        "cursor": {
          "ref": "600679da-2269-4307-8a3c-61079e405383",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "66031ef3-1c71-4560-90f0-0eab4e6a1568"
        },
        "item": {
          "id": "e13ef9ee-5f03-4597-871b-df266c1d35f8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f2fe34b-64fc-448a-b54d-31476ab2cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce5b0e7-26dd-4739-95ab-ebf302d6145e",
        "cursor": {
          "ref": "a5c5ebf5-5eee-4ff2-b4e8-691aa4999412",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b3705b96-617b-4895-a433-b774dd2957a7"
        },
        "item": {
          "id": "0ce5b0e7-26dd-4739-95ab-ebf302d6145e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "538b1ae7-7988-41cc-9ed4-755a3ab1a882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2985037-091b-4d44-9794-78d495074d32",
        "cursor": {
          "ref": "a8e4ea20-5827-45ce-9080-053c9c5cdb2a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ce57c6ac-5126-422e-835b-a972983e91e0"
        },
        "item": {
          "id": "a2985037-091b-4d44-9794-78d495074d32",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ae1cef30-9686-4f12-8705-68f85c10153f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4286aadb-57e7-4243-9c15-9ffbb6be8c0c",
        "cursor": {
          "ref": "a918ca8c-0eb6-47c2-b891-e79e0c52f465",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e4788f76-e95c-4532-977d-aeb5e98655e3"
        },
        "item": {
          "id": "4286aadb-57e7-4243-9c15-9ffbb6be8c0c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "75b832d0-3935-40d0-b9b6-436fe2947525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbed2f0-4f27-494d-bbaf-0718b2c798ac",
        "cursor": {
          "ref": "5b217daa-b90a-4d2a-b5b7-ba4f9f08197c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8dc53892-1b50-4d06-a7f0-8489f56a7c62"
        },
        "item": {
          "id": "9fbed2f0-4f27-494d-bbaf-0718b2c798ac",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f5e93992-f58e-49a2-baca-253003bcb497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45873626-4ad2-4768-9a47-304a10d33a1a",
        "cursor": {
          "ref": "68124aa7-8f3a-4c24-901d-2dcb2bd044c1",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a75734bf-8437-42b1-8753-a621cf0b2cd3"
        },
        "item": {
          "id": "45873626-4ad2-4768-9a47-304a10d33a1a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "2a92b66b-07a6-42a8-a0bf-5677d1f1b4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6628dbf6-edf3-42d6-9028-1253d4f8fea9",
        "cursor": {
          "ref": "7805260f-b564-4edf-9990-4fca41911df3",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "377b053d-7877-44b6-b4cc-4f94ddde0df0"
        },
        "item": {
          "id": "6628dbf6-edf3-42d6-9028-1253d4f8fea9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a4dd1f10-85d9-4f39-af1b-4b6f28c88262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051097cb-92f8-4894-bb44-89bdc3a4bc0a",
        "cursor": {
          "ref": "5aab6c7e-703f-4f87-8234-714bb8abf8c4",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b525ffc1-a1b6-4ace-b504-7118c96ad27a"
        },
        "item": {
          "id": "051097cb-92f8-4894-bb44-89bdc3a4bc0a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e469822b-fd0d-4568-9df3-986acea8567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff223f8-b20c-479d-9559-6c140b52e44a",
        "cursor": {
          "ref": "c43fc9e3-b03d-4e82-98c7-acf95b8ab1fc",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7a21fb9e-7889-4d8b-a898-fb68c0e8b373"
        },
        "item": {
          "id": "3ff223f8-b20c-479d-9559-6c140b52e44a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8edb3983-6434-436f-a18e-3fee94a6c7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495f9f7d-9e72-47a4-a77d-eba93525c785",
        "cursor": {
          "ref": "eb602880-8e98-402b-bcda-a9be20f50316",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "97969544-3f52-4772-b6e6-698b639d2707"
        },
        "item": {
          "id": "495f9f7d-9e72-47a4-a77d-eba93525c785",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac8c0e58-fc61-4901-8cb9-035e9e9e3e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93cb1301-2257-4d3a-8e15-33297f5786b2",
        "cursor": {
          "ref": "a5f4e902-6006-44ae-9640-e8be95f6ee5c",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4a3f8a85-89fb-48a0-97db-b4b267ecf4f6"
        },
        "item": {
          "id": "93cb1301-2257-4d3a-8e15-33297f5786b2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2075ce71-32f1-4427-aebf-ce644a931964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825a0816-6464-46cd-a65a-fbff3a856ba0",
        "cursor": {
          "ref": "7b871762-ce22-4a68-a89a-842a3f580109",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ab420df6-19b6-46ff-a339-73cad192b89e"
        },
        "item": {
          "id": "825a0816-6464-46cd-a65a-fbff3a856ba0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "496e17c7-5096-4666-920b-caafd6e9977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3ae5f-7889-4c56-983b-550bb36c9cfd",
        "cursor": {
          "ref": "b39f1598-f619-47b8-8148-918ace28c640",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "89335003-fd49-41c6-8407-1c918c0df1a8"
        },
        "item": {
          "id": "2ff3ae5f-7889-4c56-983b-550bb36c9cfd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "148c245c-614b-4e16-bd45-317ab957c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cce480a-120d-412e-b42c-ec14bc450e94",
        "cursor": {
          "ref": "fb9b7510-2c19-4536-98eb-17bd8a2581ec",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c7ce13a-c96a-4b63-a9a4-91afbafc309a"
        },
        "item": {
          "id": "2cce480a-120d-412e-b42c-ec14bc450e94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0447de36-d1d5-42ff-8cbb-010f731b70b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ea1ae8-7406-40ae-9043-31bf90b84401",
        "cursor": {
          "ref": "5bb87ddf-7ca7-4f72-bebc-708f658c2db1",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "00b12d65-32b7-433f-af41-46b31c0df8dc"
        },
        "item": {
          "id": "67ea1ae8-7406-40ae-9043-31bf90b84401",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5b53cae4-7208-49b1-810d-2e9f0f7a026c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0873ce6-7332-45ca-86db-86f719878cc8",
        "cursor": {
          "ref": "098e1bfd-597c-4658-99a3-a4fb686bb6b5",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "839dd468-f600-4d05-8af4-6b0991506566"
        },
        "item": {
          "id": "e0873ce6-7332-45ca-86db-86f719878cc8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f59f1bd1-793b-4b81-a9d9-ff4949f51642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2117fbc-0d95-434a-be25-4129722d1f25",
        "cursor": {
          "ref": "8c9a8ccd-4fae-4770-a980-c4568fdff4c9",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4d88030b-3bff-4fd3-9ef7-30827d9f9370"
        },
        "item": {
          "id": "c2117fbc-0d95-434a-be25-4129722d1f25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6dd42831-72e1-4f6d-beb7-013fa6762562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d695c4bb-90f4-4cdc-8c4a-f005e16c8d9a",
        "cursor": {
          "ref": "079240a5-32be-4f39-a688-278a96364f1b",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f97bc793-3e56-4fb8-83a8-aaf2ecfbd01e"
        },
        "item": {
          "id": "d695c4bb-90f4-4cdc-8c4a-f005e16c8d9a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51530616-f74c-4fbc-8d12-4cedd6ee8afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 960,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac67cdb-ee3c-4e99-8f04-9408bfbe5d63",
        "cursor": {
          "ref": "93106958-3065-441b-96fc-32368c6bc050",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c2abdf87-62ff-47b7-9fd3-1d4e483b1fc8"
        },
        "item": {
          "id": "cac67cdb-ee3c-4e99-8f04-9408bfbe5d63",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cbe077b8-88e0-489d-9911-34db59cfadc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8142c231-6cdc-43cf-8d53-864d0ae28910",
        "cursor": {
          "ref": "1bdadbaa-ba36-4d5f-afb3-22fa1ff218b3",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1244f130-902d-4832-b1f7-05d8e0a5dc58"
        },
        "item": {
          "id": "8142c231-6cdc-43cf-8d53-864d0ae28910",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6f6f99db-2d17-4ae3-b918-4600fe72e392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce47c49-8a25-4d91-a62e-a66f611b54d1",
        "cursor": {
          "ref": "ac29c858-09aa-4ec9-a9c7-efd2c872cafe",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db2710f0-6dc5-4fdb-a9e1-f8510ef5f0c7"
        },
        "item": {
          "id": "6ce47c49-8a25-4d91-a62e-a66f611b54d1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "339eeb7f-7353-4ff9-89f0-896baae09772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf117b3-d51c-4631-a016-4ec02344cf7f",
        "cursor": {
          "ref": "721d2a16-7297-49d6-b3d8-19ac4cb7f531",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e1e6667e-bb12-424a-bd7c-0ebbcf368020"
        },
        "item": {
          "id": "7bf117b3-d51c-4631-a016-4ec02344cf7f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4e61c2b2-3db1-4cb4-9225-84485c1c6041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65502b17-d087-46e7-9e33-1ecb381cb1ab",
        "cursor": {
          "ref": "73a5e2ed-c910-46f3-a63f-b1bdc2aeb41b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb484dcc-2aff-4b4c-aa16-bcc2a1ded318"
        },
        "item": {
          "id": "65502b17-d087-46e7-9e33-1ecb381cb1ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c5413053-3de2-401b-ac9b-54a21a393315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14c86bd-572a-4132-84ee-df0065e98545",
        "cursor": {
          "ref": "20fb3fae-9463-4e17-be3c-1940839a48bb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1244b167-0738-4f66-b0e0-915b4367d7d6"
        },
        "item": {
          "id": "b14c86bd-572a-4132-84ee-df0065e98545",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b2090eec-a1ea-4003-8279-02a54a4ba133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6c14e-209f-40c8-b1ba-49c90a771ee9",
        "cursor": {
          "ref": "a42b3e38-ae08-49a1-b8fc-21a85cdb5413",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "aa6c23cc-f880-4cce-abe2-5de57cb0fa63"
        },
        "item": {
          "id": "29a6c14e-209f-40c8-b1ba-49c90a771ee9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a2ab6171-575f-4846-8c43-5cb2d093dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e27426-28aa-4849-bf98-2b61490bcf85",
        "cursor": {
          "ref": "ad5ff405-29bb-4854-a4fa-28c983713c31",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e2153429-efc9-4e10-9341-3c77fcc43b3b"
        },
        "item": {
          "id": "c7e27426-28aa-4849-bf98-2b61490bcf85",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7d2eb821-63c9-445e-8076-9833b9164126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a14208e-5cdf-4599-b724-909634ca0faa",
        "cursor": {
          "ref": "e53d823d-0e71-4af9-bd9b-04987e2bf27a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5044f84f-45e1-4b4a-9d1e-02f3621c2084"
        },
        "item": {
          "id": "9a14208e-5cdf-4599-b724-909634ca0faa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f94823be-3e49-4f14-8bbb-d29bf0945c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c54c0f1-f493-49ca-b713-789503b61ab6",
        "cursor": {
          "ref": "7130f109-8f09-4c0e-a60d-d5668320d1b8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "88315632-f3fb-42ac-9496-61a351889b0b"
        },
        "item": {
          "id": "9c54c0f1-f493-49ca-b713-789503b61ab6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1a0036d3-5fec-46ab-879a-f82dda3359d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92385b9-5a8d-480a-b8ca-5bfd2790093f",
        "cursor": {
          "ref": "a4cf187c-a95c-4557-965d-f3cd3be5f3cd",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aeaf54bc-ff08-46e0-9f9c-d04f902f664e"
        },
        "item": {
          "id": "b92385b9-5a8d-480a-b8ca-5bfd2790093f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7c231480-7536-477a-aac7-27969e75bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4477fc6b-e955-4214-9969-25ceedc0ae32",
        "cursor": {
          "ref": "7af534a1-12e6-48d3-b909-95a21139d344",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5280f594-5f85-417f-bbe4-cbde77ca038c"
        },
        "item": {
          "id": "4477fc6b-e955-4214-9969-25ceedc0ae32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "af1bb8c6-81e1-4925-8231-230db843e33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75421434-abaf-4e67-bb45-1c4711ed0bbf",
        "cursor": {
          "ref": "202b5676-877b-42da-ba41-29b9f7b631dc",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "af8d0558-94fc-493d-bc58-8d3e79e02c4c"
        },
        "item": {
          "id": "75421434-abaf-4e67-bb45-1c4711ed0bbf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "bd2f2c2f-c8c6-4d36-9a33-35bec7081725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bba4d1c-7e5c-4d0a-a24b-b8b2d75eabfc",
        "cursor": {
          "ref": "b4a483a6-5657-4a9d-b93a-885136efe208",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1e024f15-6910-4b3c-a861-fcd810a34d26"
        },
        "item": {
          "id": "1bba4d1c-7e5c-4d0a-a24b-b8b2d75eabfc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "049a7973-9859-4b2b-bdeb-83be5fde59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd73d6c4-e1de-404a-9de2-7423256aa939",
        "cursor": {
          "ref": "9d1f17be-b804-4e78-a4b4-b225523a4b69",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e8129055-0d46-46ad-ae27-672e9ba7b45b"
        },
        "item": {
          "id": "dd73d6c4-e1de-404a-9de2-7423256aa939",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b46d08b0-bf95-431c-9492-b0919448bff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4fa19d8-ace6-4762-9b98-c1d90a22390a",
        "cursor": {
          "ref": "796e3ac0-7ad6-48a0-9e99-6c5a51c87683",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "19fdb2dc-c9a6-45cf-afd5-44e1a18acd01"
        },
        "item": {
          "id": "e4fa19d8-ace6-4762-9b98-c1d90a22390a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "742e1712-d8e9-49ad-bc6a-81d9fabc3207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ce7c3d-3c09-4020-b9ad-727371e3214a",
        "cursor": {
          "ref": "eb516922-5d66-40b1-97c1-9a25132097d5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f84529fe-8848-4c6b-b6f0-a06c594e5cc6"
        },
        "item": {
          "id": "e4ce7c3d-3c09-4020-b9ad-727371e3214a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a143d33-24bc-474c-bcf6-7bb939899a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db297714-7b72-4e00-8ce9-b65b8f276869",
        "cursor": {
          "ref": "bcbb1a09-0832-4a85-86e8-045757f0cf2e",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "47241ce2-c21a-4f61-9f63-49968befb7c8"
        },
        "item": {
          "id": "db297714-7b72-4e00-8ce9-b65b8f276869",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2848a717-4b84-4cba-b418-84ba506cb0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37974b88-7830-4540-aa01-809ddfad866a",
        "cursor": {
          "ref": "48f7aada-e5ab-4410-864f-ac42a75b6063",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2d01ef75-04ba-448b-856c-ceefbd3ca74f"
        },
        "item": {
          "id": "37974b88-7830-4540-aa01-809ddfad866a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c8e50c7e-e602-4b80-9eaa-de426b173a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c52ab7-58e0-446b-ab68-c59657bd19a1",
        "cursor": {
          "ref": "c02d5825-54eb-47b0-971c-d2c36ac29bc1",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "681931cb-af15-489b-9c87-110be2e2369b"
        },
        "item": {
          "id": "53c52ab7-58e0-446b-ab68-c59657bd19a1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3d4323c3-1303-4abd-adb9-89737ee3cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66864215-4628-4b7a-a01b-f0164da6215c",
        "cursor": {
          "ref": "ab822b22-de5a-4312-9a07-8c61d06133bf",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e32e367c-1912-41bf-81b2-f7550808ca8c"
        },
        "item": {
          "id": "66864215-4628-4b7a-a01b-f0164da6215c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c5c4f79c-a664-4dba-921c-c7a2bd7423ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ccf9de-4c2c-456a-88b3-64a0130cc10b",
        "cursor": {
          "ref": "448a2564-c296-4db1-97b4-3dce3d571f23",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d7d22831-74e2-4e7f-a261-e06b8aaa61b5"
        },
        "item": {
          "id": "09ccf9de-4c2c-456a-88b3-64a0130cc10b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dbc014be-dfa8-48ca-9d82-a5acc2f259db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a937fcf-76ce-4ea3-90b7-54865e95d23d",
        "cursor": {
          "ref": "5f022c75-df93-4fc3-ad04-e1f25821d672",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c23a8637-24b4-45f6-8c41-5f057f6d862e"
        },
        "item": {
          "id": "5a937fcf-76ce-4ea3-90b7-54865e95d23d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c613a15c-7fb0-4aea-b8e5-79a5e678c06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772cb400-5c65-473f-b6cd-e3e392a878c7",
        "cursor": {
          "ref": "dc2c3f87-0076-4b18-b195-05a703e013a1",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e4cf88b2-a019-422a-bc55-e50857a2e24d"
        },
        "item": {
          "id": "772cb400-5c65-473f-b6cd-e3e392a878c7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b25f8fdf-ab05-4b80-b2a8-7532b59803e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae10cb92-7f30-4a56-961b-c04d12f7f416",
        "cursor": {
          "ref": "850c9fa2-4b51-4622-8638-b2a8ed2710b3",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cf33bf65-c104-4a26-872b-e7e9a071fd3c"
        },
        "item": {
          "id": "ae10cb92-7f30-4a56-961b-c04d12f7f416",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "12ff6030-a4f3-49bf-9662-3bcf9ee6d6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d05fd6f-c75f-4c55-a966-ac39714a573e",
        "cursor": {
          "ref": "ede0fcb4-7e65-4993-bf21-23b740ea9fc4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "86f2127d-27de-436b-afd7-dd53ed7fbbac"
        },
        "item": {
          "id": "3d05fd6f-c75f-4c55-a966-ac39714a573e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "77695c69-dfcc-4484-b37f-8d964f3e3b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04edb74-a934-4399-a82b-09be5b9194a5",
        "cursor": {
          "ref": "40625955-e8dc-4439-a215-805c3633d9b0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fb359b0a-1c09-4c85-baec-8df054d3c0ca"
        },
        "item": {
          "id": "d04edb74-a934-4399-a82b-09be5b9194a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0791b5aa-fd57-4f8b-acd8-349522d4a193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cde7c70-fd85-4d4a-ab4d-b8f829b09546",
        "cursor": {
          "ref": "b9d600b9-11ce-4b50-8f1a-5accdd789b6f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "64b7e15a-c76a-4953-925e-011204e0c447"
        },
        "item": {
          "id": "1cde7c70-fd85-4d4a-ab4d-b8f829b09546",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ee7e3e5b-1697-41b2-825f-0013bd369218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed778c9-d094-4168-b1b4-b6356cbbdf41",
        "cursor": {
          "ref": "dd57f9e2-2556-4b2a-8df7-e98e35965495",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aa44ca33-f5a6-40cf-87db-647f107f89b6"
        },
        "item": {
          "id": "5ed778c9-d094-4168-b1b4-b6356cbbdf41",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3ba293f7-45c7-4e18-9633-893a38981e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d053f3c0-30dd-4fe2-9cb1-f7a27fa45702",
        "cursor": {
          "ref": "b2477410-00da-4a47-a941-fcbd0a1bbf76",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6dd1bd89-f54d-46eb-acda-74fdae71b185"
        },
        "item": {
          "id": "d053f3c0-30dd-4fe2-9cb1-f7a27fa45702",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bfbab11e-3f1e-4d66-8f97-c333129bdf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac8947c-cb4a-4c43-8b63-b5b358451d88",
        "cursor": {
          "ref": "69395be5-ede6-47bd-97df-c501b48c35b1",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4ebb69ca-fda0-4a12-a6bb-3b0fd66e4ad7"
        },
        "item": {
          "id": "aac8947c-cb4a-4c43-8b63-b5b358451d88",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7b258b35-b442-4b64-906d-929c20a567b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b175ab-7d4f-4a96-a11e-6fea39a83251",
        "cursor": {
          "ref": "31ae0613-f33c-41d6-8904-82491f5af5f3",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "eb4f0ae3-c0a0-460c-8127-8fca57d68264"
        },
        "item": {
          "id": "83b175ab-7d4f-4a96-a11e-6fea39a83251",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c77a27d9-82bc-4538-a341-c873bf497cdd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b887ea4e-1a9c-4219-9ee3-ebd5033530ec",
        "cursor": {
          "ref": "45fc9c1b-1887-4206-bfa8-bc831d0457d2",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "09b3464e-3910-4404-baff-d3f55c5eac35"
        },
        "item": {
          "id": "b887ea4e-1a9c-4219-9ee3-ebd5033530ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e2843903-c642-4868-971d-33219c103b61",
          "status": "Created",
          "code": 201,
          "responseTime": 6527,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b780f7b9-04ca-4c49-a31a-a3ba61872765",
        "cursor": {
          "ref": "37277b5d-04ef-4d2c-86c3-87fac3861b85",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3f7a5bd1-9ba3-4bc7-95ba-7c03656ea9e9"
        },
        "item": {
          "id": "b780f7b9-04ca-4c49-a31a-a3ba61872765",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b249c997-e4fe-4e2a-9b75-ac218af6ddfe",
          "status": "Created",
          "code": 201,
          "responseTime": 9669,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "934aecfe-cb89-4f4e-b498-9a9c6f704bdb",
        "cursor": {
          "ref": "f0584fe6-f6bd-422f-81f4-cedfc04717cc",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6b0ac212-9767-48aa-87bf-9843ff81a2df"
        },
        "item": {
          "id": "934aecfe-cb89-4f4e-b498-9a9c6f704bdb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "11a1fbf8-1134-4bea-b36e-43b8a336b596",
          "status": "Created",
          "code": 201,
          "responseTime": 5726,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "131031ac-a9d3-4632-94f7-45743b1bcabf",
        "cursor": {
          "ref": "3f9eaf70-82af-4007-8453-1f9c0b41ec65",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "454b5dce-9ed9-4262-a6c4-8ff2a46a4c26"
        },
        "item": {
          "id": "131031ac-a9d3-4632-94f7-45743b1bcabf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "18f14bcd-3d59-491b-807a-74910af0b579",
          "status": "Created",
          "code": 201,
          "responseTime": 5490,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11865d3-1bbe-427c-9647-9a07f87a232e",
        "cursor": {
          "ref": "1f40b531-0fd1-4656-a719-17b933ed85fd",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d4fe6034-344a-4b2f-aa6b-72fa6f34451c"
        },
        "item": {
          "id": "a11865d3-1bbe-427c-9647-9a07f87a232e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "60193466-beee-4e32-9202-5f3c899791c1",
          "status": "Created",
          "code": 201,
          "responseTime": 5965,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b71589-d069-4710-9335-0821de83fb7c",
        "cursor": {
          "ref": "97d87f48-746a-4fee-aa9b-7d73c0d04241",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "99e598d5-3cb8-4e98-abc4-5d4372d04245"
        },
        "item": {
          "id": "87b71589-d069-4710-9335-0821de83fb7c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b3ef783c-42cb-454c-98d5-f55c06dde5a8",
          "status": "Created",
          "code": 201,
          "responseTime": 10189,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02db0f0c-53ae-46ef-9ad4-11ae6d94e691",
        "cursor": {
          "ref": "7f36453c-e775-4a9f-9867-ebb38739d1d0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3fa3d37-e9df-4087-be08-9c15002b6602"
        },
        "item": {
          "id": "02db0f0c-53ae-46ef-9ad4-11ae6d94e691",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9d75b0dc-92c7-402b-9ae7-ab326cd014e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02db0f0c-53ae-46ef-9ad4-11ae6d94e691",
        "cursor": {
          "ref": "7f36453c-e775-4a9f-9867-ebb38739d1d0",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a3fa3d37-e9df-4087-be08-9c15002b6602"
        },
        "item": {
          "id": "02db0f0c-53ae-46ef-9ad4-11ae6d94e691",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9d75b0dc-92c7-402b-9ae7-ab326cd014e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373c12ed-c5e8-4124-a904-ce22b55ec694",
        "cursor": {
          "ref": "7355df4b-fcfd-4562-b671-c6648d2feafb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1d965aae-9e5d-4c9e-99a9-4dad4e781281"
        },
        "item": {
          "id": "373c12ed-c5e8-4124-a904-ce22b55ec694",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72879373-0039-40b9-80e8-7df182e2478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1163,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad010615-84cd-4d6d-b7ad-ec8636a6de3e",
        "cursor": {
          "ref": "39e970aa-1ec9-49ff-bc98-162ac4c77bdc",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7f8212cb-e243-420c-8019-de6467e18fd9"
        },
        "item": {
          "id": "ad010615-84cd-4d6d-b7ad-ec8636a6de3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "25858fb9-7950-4837-8ba0-ea0f85946577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b166107-e926-45ea-8197-23c3baf525cc",
        "cursor": {
          "ref": "6910c12b-78e6-4a46-8db1-9dbcf63f808a",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5b6349b7-132c-44ee-8de2-e0f186e483bd"
        },
        "item": {
          "id": "5b166107-e926-45ea-8197-23c3baf525cc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb4c07b4-7f23-41ee-bac5-45c0ad59e43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8848268-c130-4889-bd98-ca195a670bcf",
        "cursor": {
          "ref": "e04d8cb5-8c39-4712-8281-5d987c6c2883",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "929ab07d-7c94-4189-9b1d-c4b34691b8e5"
        },
        "item": {
          "id": "e8848268-c130-4889-bd98-ca195a670bcf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d2eab134-12e9-4fbc-a89c-cd1abee5f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09d179d-7a8d-4f82-8989-90337d068382",
        "cursor": {
          "ref": "38a886b0-c52e-48c1-b3e9-7e0aba219c46",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0b059f76-6553-4a6a-9b75-492d59ad7b07"
        },
        "item": {
          "id": "a09d179d-7a8d-4f82-8989-90337d068382",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ee4b7196-d3c6-4787-b51c-f2b3996774aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f7eb12-4e7d-4a9e-994a-691a682a346e",
        "cursor": {
          "ref": "ad558d87-99e0-403e-8727-d65a59ef50f6",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "365ed18e-eecf-49d0-89aa-f81e03555fd2"
        },
        "item": {
          "id": "f4f7eb12-4e7d-4a9e-994a-691a682a346e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "570104b1-63f6-4342-b5b3-f941398a3544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e83a7b-8e52-4251-87b7-0f761bd3c0b1",
        "cursor": {
          "ref": "e5a569ba-2dfd-4643-900f-2deb7650b64c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b687601c-7d4b-44d3-8651-ccf0bc72124e"
        },
        "item": {
          "id": "d1e83a7b-8e52-4251-87b7-0f761bd3c0b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "250a309f-553b-499a-8df8-45537da794cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ab6922-e616-4749-aab1-b1a3b5e11e35",
        "cursor": {
          "ref": "1f620e41-ddb1-4dcc-8714-69fde68fecf0",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "39adc533-7e8e-4e12-b7bc-0d4493520f3d"
        },
        "item": {
          "id": "b4ab6922-e616-4749-aab1-b1a3b5e11e35",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7fe42dfd-bf87-4ce7-8325-00aaa0ecbd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a05591-663e-454b-8b31-259d6860c744",
        "cursor": {
          "ref": "7a1bc50c-1ae9-4def-9ca4-0b9f3317470c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9c3ed05-80e7-4d8f-9868-c7d8f6d3745a"
        },
        "item": {
          "id": "a5a05591-663e-454b-8b31-259d6860c744",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f0e7ee4c-adf7-433a-bc7c-1d4d57d677e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06442a44-71c7-4102-8ba3-bc8e65f7e22c",
        "cursor": {
          "ref": "2a2fb920-9575-477d-b76a-9084a8055a83",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aa05785e-8944-4027-93bb-6fc0dd49890e"
        },
        "item": {
          "id": "06442a44-71c7-4102-8ba3-bc8e65f7e22c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cf8764e8-c1c6-4543-a5eb-794f9af16268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d549406a-1036-40ea-85bd-bcb434a0dfe9",
        "cursor": {
          "ref": "7c59eb01-48be-4c4e-a574-fcef3cea8591",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9aad32fa-21ce-4c0c-8667-675be330ab39"
        },
        "item": {
          "id": "d549406a-1036-40ea-85bd-bcb434a0dfe9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db46399b-f81a-4b86-96be-4afcc89d1630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ef2b6c-a258-408d-b3b7-4365d6465400",
        "cursor": {
          "ref": "f84cee44-1136-4625-ba27-b4176dffb144",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2e22564a-fa58-4060-93ff-2b356465ca55"
        },
        "item": {
          "id": "46ef2b6c-a258-408d-b3b7-4365d6465400",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8101c72-9ed0-46cc-ba22-35458fc2a903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da76481d-d356-4537-be5b-67337a984697",
        "cursor": {
          "ref": "085c2c63-5cba-454e-a4bf-55cb27b8f4bb",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ab28a070-a3ba-4470-807b-831bcc23fba5"
        },
        "item": {
          "id": "da76481d-d356-4537-be5b-67337a984697",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c35223e5-f2c3-438d-8e8f-5c9105d142b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5184dd5d-eb7f-4bd8-a160-b7b26750ca88",
        "cursor": {
          "ref": "012fb933-275e-4b19-ab67-1c9ccd718b50",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f7883ad9-57c5-4f77-9e72-222408f72906"
        },
        "item": {
          "id": "5184dd5d-eb7f-4bd8-a160-b7b26750ca88",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b6029b4-891b-4f08-87b2-f1e9f52b69e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d818a1-7aa3-422b-b60d-7f594e0dafa6",
        "cursor": {
          "ref": "eb45a6be-397e-4442-bd00-be23edfbee71",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6a76c6dc-8dee-49b1-adf6-ed72779d3021"
        },
        "item": {
          "id": "52d818a1-7aa3-422b-b60d-7f594e0dafa6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "add7c294-4f60-4363-8c33-93007e2ac19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0340871-bb4b-430d-933a-a95feb882223",
        "cursor": {
          "ref": "ad439628-60d7-4658-b8f9-6ae36c9d1d8b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "857f93e5-df13-4c0c-bb39-4c01bd53de4d"
        },
        "item": {
          "id": "b0340871-bb4b-430d-933a-a95feb882223",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d02737fc-37c1-4238-915e-8cb120c8ab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624f9d97-f3bd-4e04-925b-a9c7ebd33eb1",
        "cursor": {
          "ref": "1900333b-ef34-4b54-ae0a-01200ea5136e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c191960b-ff21-449a-98f6-ea3dbcf2a4d7"
        },
        "item": {
          "id": "624f9d97-f3bd-4e04-925b-a9c7ebd33eb1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "380b38e4-1b6a-4e3e-b7ce-127042ac05b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afd33d0-c642-431d-9bc0-389df2c3e95b",
        "cursor": {
          "ref": "b837698f-e761-447e-ad85-5abaa84a20f9",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d892c75e-6b68-4b38-8385-48f2f7bf99c2"
        },
        "item": {
          "id": "7afd33d0-c642-431d-9bc0-389df2c3e95b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2fc5ca86-ca4b-4c89-971f-305cc960a51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf47702-7a7c-41e4-a037-1fc90fda3bda",
        "cursor": {
          "ref": "a7e280dc-9689-4a9f-8b65-618f8e8c00f0",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "89fcf653-527c-4a59-8b0e-17f8bcb52fd4"
        },
        "item": {
          "id": "8bf47702-7a7c-41e4-a037-1fc90fda3bda",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38ddaa42-6661-4afa-ba7f-e211151a0abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc2f0be-5180-496d-a06d-8cd7111eaf74",
        "cursor": {
          "ref": "cb338587-f721-4e9d-b755-91670c40683d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "62d75db7-cd39-4dd3-bf90-5c62881671bf"
        },
        "item": {
          "id": "6cc2f0be-5180-496d-a06d-8cd7111eaf74",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70addd14-2eaa-4516-bafc-747eb54448da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c97b4a-7f7c-457c-a961-baa9f2975a19",
        "cursor": {
          "ref": "a2115a6e-3c52-42f9-b062-1573511fc013",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f9305458-e379-4541-8be0-90f64f340ad7"
        },
        "item": {
          "id": "65c97b4a-7f7c-457c-a961-baa9f2975a19",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "19fd3617-efc3-4b26-b7b5-7e90df7016ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dad899-52ba-4d2e-abab-c570579cdf90",
        "cursor": {
          "ref": "f590136b-2c3b-4cff-a10b-b10857ffcae0",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "48f87a2d-f8b8-4271-a67e-a4675accd25b"
        },
        "item": {
          "id": "14dad899-52ba-4d2e-abab-c570579cdf90",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f6766628-d1ee-4f0e-bcc7-6579ee42df6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4120d1-bc9f-41b9-ae63-21a45b92d45f",
        "cursor": {
          "ref": "976ef289-7952-409b-a53a-90aa47d2f12e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0e186e07-343c-47c4-9b07-9065c4fe808a"
        },
        "item": {
          "id": "3e4120d1-bc9f-41b9-ae63-21a45b92d45f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c299cae9-9938-46ce-97c2-2c3fd8153136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d51f07-50f0-45d1-8f03-76bd86882390",
        "cursor": {
          "ref": "e50976cd-1078-4c40-9bf4-677e8754d232",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "53c25ccc-375b-4ce6-8cf1-8ea0b9d64d29"
        },
        "item": {
          "id": "b4d51f07-50f0-45d1-8f03-76bd86882390",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "039b20cc-e533-43ad-bf60-b023af718050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f1abf9-7f02-49ad-b3c8-00177e86fb86",
        "cursor": {
          "ref": "80773618-43e2-4d7e-95c0-e718db7a79d2",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9e12993a-8efd-4f9f-a217-699df0ef14ab"
        },
        "item": {
          "id": "f8f1abf9-7f02-49ad-b3c8-00177e86fb86",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e88ed000-3e62-43e5-b1fc-80c90f900e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd070ef-5bbb-432b-a4d7-1a769be22de3",
        "cursor": {
          "ref": "13d1e9ee-fbd0-417d-a4d7-1a306e4f611f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "15b05c9d-2cac-422f-a9dd-b53073a98271"
        },
        "item": {
          "id": "9cd070ef-5bbb-432b-a4d7-1a769be22de3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c84d5e3f-78cb-415f-ba6f-50c78d18525c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6d2523-9029-4c7f-9615-9447ea7705c9",
        "cursor": {
          "ref": "34ef89a2-5983-4a12-9b14-e30e5f14d0b4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3a91f61a-79d4-4e98-8281-d21bc7781a9e"
        },
        "item": {
          "id": "5f6d2523-9029-4c7f-9615-9447ea7705c9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f7ee1212-249c-40b9-95bf-45d613c2403e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9158617a-9c59-4c93-83e0-8dabf6963825",
        "cursor": {
          "ref": "c4decc59-ea0c-490b-884b-9c90c209a062",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "cf917e37-623e-4b51-97d2-70f3ba8d78c4"
        },
        "item": {
          "id": "9158617a-9c59-4c93-83e0-8dabf6963825",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8fc30e6b-c53d-4201-9b0c-13d6dd26bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7d30b9-5c81-4b4d-bb61-fd2e837e55bb",
        "cursor": {
          "ref": "2ffe0887-22fc-44a0-9650-ac1d963a20bf",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f51876ff-b227-4f32-a6bc-aabe69e55906"
        },
        "item": {
          "id": "8e7d30b9-5c81-4b4d-bb61-fd2e837e55bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ca3340cc-3427-4619-b7c0-6333b94d5d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2de089e-a418-4a39-84d0-5761cd6f7013",
        "cursor": {
          "ref": "9a369b4c-6c77-48c0-9bb4-80c738942773",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1f563c4b-6c8a-4565-8c84-81155605d965"
        },
        "item": {
          "id": "c2de089e-a418-4a39-84d0-5761cd6f7013",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d22c6c08-de64-4185-b897-6fcb5d28d951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3354fd45-821d-4b30-bb5a-ad8f233ec160",
        "cursor": {
          "ref": "a21ec6ee-ebe6-4231-8460-a2b60f3e315c",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41437f51-1693-4070-9ee7-ecdc1aec61db"
        },
        "item": {
          "id": "3354fd45-821d-4b30-bb5a-ad8f233ec160",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8c38fa46-e242-4be5-ac4f-900ec1ddc83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9004821-5381-4b02-b592-de1f36cfa0d2",
        "cursor": {
          "ref": "000f04ee-fe7a-4169-bd56-6aec0a36d48a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74cc2ef1-b7a2-4ab5-b3e0-676cbbe778de"
        },
        "item": {
          "id": "c9004821-5381-4b02-b592-de1f36cfa0d2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "01b891fe-d2a0-40a8-8ccc-29c7bc364617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d43ce8-5c34-417d-add7-12c151526416",
        "cursor": {
          "ref": "0c3ef759-4aba-425d-b80d-56bc7f2a8ea7",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a633f10f-f151-4fd5-bcbd-ea2f8d210670"
        },
        "item": {
          "id": "73d43ce8-5c34-417d-add7-12c151526416",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "da577a94-b5bc-4cf8-b0b0-cef1b66bae7b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 577,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fbe395-4ff5-4dab-a8b9-1cab862f68fd",
        "cursor": {
          "ref": "74d7c0e6-11e9-4ff4-8054-ad63c49291ca",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f39f01c7-a5ec-4c99-bb20-67d9d68f164d"
        },
        "item": {
          "id": "84fbe395-4ff5-4dab-a8b9-1cab862f68fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82318f78-af37-41b9-b62c-75b1202845c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fbe395-4ff5-4dab-a8b9-1cab862f68fd",
        "cursor": {
          "ref": "74d7c0e6-11e9-4ff4-8054-ad63c49291ca",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f39f01c7-a5ec-4c99-bb20-67d9d68f164d"
        },
        "item": {
          "id": "84fbe395-4ff5-4dab-a8b9-1cab862f68fd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "82318f78-af37-41b9-b62c-75b1202845c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223614e0-f4d2-4cf1-8e7f-8a2654b4b992",
        "cursor": {
          "ref": "8f8cf470-9ddc-4815-b147-83bbaa5ff3ad",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f62467d-bf51-4073-9470-6f905f9688d6"
        },
        "item": {
          "id": "223614e0-f4d2-4cf1-8e7f-8a2654b4b992",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d151cc8d-b236-4b83-97c6-5c02742e9d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b96550d-b3d6-4d16-bf88-0e5916631b9f",
        "cursor": {
          "ref": "505e9b24-21cf-45cd-8f71-cbbeefa0df33",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a1c61661-2b13-4101-833e-0dae7c6524aa"
        },
        "item": {
          "id": "8b96550d-b3d6-4d16-bf88-0e5916631b9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8681a966-b406-407d-847d-44ef4a8ae413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc01f94-49fc-4f5f-8e14-e1b2780f24f7",
        "cursor": {
          "ref": "bdb5791c-b319-4212-ba46-d1cd8c7818bd",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ecca0a11-0ae1-4bc5-9f9e-2461c9f29930"
        },
        "item": {
          "id": "2dc01f94-49fc-4f5f-8e14-e1b2780f24f7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c4c8dae6-6523-445b-a8bf-1d6702e949eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1fc38e-066c-4edb-b797-786c6d2c9f57",
        "cursor": {
          "ref": "209f2aa1-a359-4b1b-84b3-7a3cfca7bb26",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c019ec72-4ab7-4214-be40-43b765e0d12e"
        },
        "item": {
          "id": "be1fc38e-066c-4edb-b797-786c6d2c9f57",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a131d7ac-3bda-49e1-abcd-1309509a01a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458481aa-d8af-4462-9778-f9e611f51221",
        "cursor": {
          "ref": "4cbf5b1e-e20a-4510-86fe-399ba2e23b65",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "56010860-4d89-4672-b2d9-8b75bf5b7ccd"
        },
        "item": {
          "id": "458481aa-d8af-4462-9778-f9e611f51221",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9732ee26-af85-4b39-af3a-1e9ed7d18da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7aa9c2-538f-4aa4-ab2c-abda1d2a7a72",
        "cursor": {
          "ref": "98ff8a42-973b-4708-9490-dcd70bd7e6b4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "55a2357c-9520-4406-9a64-de560616ae89"
        },
        "item": {
          "id": "ef7aa9c2-538f-4aa4-ab2c-abda1d2a7a72",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42cf6efe-ea44-4cd4-8efd-e856aa5e9bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae17791-16da-47e1-b63d-fbbca05dab02",
        "cursor": {
          "ref": "b32e96ec-668d-4188-afbc-55fb3f37bba1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "982086d8-6117-4dd2-90b6-e720bcbe580d"
        },
        "item": {
          "id": "4ae17791-16da-47e1-b63d-fbbca05dab02",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "573957a9-0421-4247-a8e2-b17ef05e3d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1e99cc-f2a4-48db-b429-dab758aba41c",
        "cursor": {
          "ref": "d6632081-6b4f-44bb-b014-ad8b8d5ffcc7",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b9923c19-52e1-4bc8-b8d9-9040a7ad2063"
        },
        "item": {
          "id": "0f1e99cc-f2a4-48db-b429-dab758aba41c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ac0eb3ca-0cd2-4b09-af15-92837b1c9925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32c5690-db13-4e03-8abb-48b7726eb555",
        "cursor": {
          "ref": "1360f5cd-864c-452a-aa79-02ee931bccc7",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "02c91fc7-0c31-4cbe-9afb-27fa311fb5a0"
        },
        "item": {
          "id": "e32c5690-db13-4e03-8abb-48b7726eb555",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "73ed77b1-970f-4b73-bf3f-5949b4c17e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bdd7f1-adf5-4653-8839-b29f773896b0",
        "cursor": {
          "ref": "e0b12990-f0fd-4501-b244-47a36db12a2b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "361aba28-d5cd-427b-9a9b-66bbb26b5936"
        },
        "item": {
          "id": "84bdd7f1-adf5-4653-8839-b29f773896b0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b2970dd3-ebb8-4a5c-96c1-6fb76e0074ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510958ba-282b-4e01-8710-a8bc70059aa8",
        "cursor": {
          "ref": "0eabcd1f-9bd3-497f-b6eb-c526ab9179fc",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9512feb5-2c5e-4a3c-83d7-3a56b33db046"
        },
        "item": {
          "id": "510958ba-282b-4e01-8710-a8bc70059aa8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a16f7e03-325e-4aae-b86b-e818d6064b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ae18b9-e9c3-4337-9460-b63ac5dcc209",
        "cursor": {
          "ref": "2a64afd7-66a6-48ca-9dce-8f27e1d24056",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cbd26454-d370-410c-8a6f-2a22b4b00e3e"
        },
        "item": {
          "id": "13ae18b9-e9c3-4337-9460-b63ac5dcc209",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d25745f8-c119-4307-94ea-92334263449b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1530f-9771-4119-94c9-7ba5098c9f15",
        "cursor": {
          "ref": "2220d026-8642-4f34-825d-517eef8aeae7",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b90e5d52-f490-4a26-9c43-20477a0a2ba4"
        },
        "item": {
          "id": "89e1530f-9771-4119-94c9-7ba5098c9f15",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "50de09e5-74f2-4378-aae3-72b176f2f0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a097739-cc23-4b51-abf3-5b0dac6e037a",
        "cursor": {
          "ref": "e731de7f-52cf-45fd-8e68-770102dc228a",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6a7ac968-be66-4e49-b798-3f5fa4ec4a7d"
        },
        "item": {
          "id": "6a097739-cc23-4b51-abf3-5b0dac6e037a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4dd889a9-8a4e-423a-9ef8-99a72da82936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad80eb0-72ed-4384-abef-a1bd7b670a0a",
        "cursor": {
          "ref": "f503c93d-0044-49d5-b268-821b2e29251d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f1330857-4bff-4212-ab78-f0b6f3c72756"
        },
        "item": {
          "id": "cad80eb0-72ed-4384-abef-a1bd7b670a0a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "04590d81-8068-42a3-aed2-bf9b11258ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f331f5e-8538-49e5-9317-ca8e1088b7f1",
        "cursor": {
          "ref": "a364bb68-eb13-4a50-beac-226c8c83be2e",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5a09f845-480c-45b6-854d-87dc4033b46d"
        },
        "item": {
          "id": "7f331f5e-8538-49e5-9317-ca8e1088b7f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4ae652a0-1a95-41f5-b5f9-2ccd1df64b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7047442-bb82-40b7-9d94-1f37225e83c0",
        "cursor": {
          "ref": "726f4df1-3846-4e19-8268-5a8d105ffbcd",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c8ec8040-db09-41b7-af53-6837d2e4a762"
        },
        "item": {
          "id": "f7047442-bb82-40b7-9d94-1f37225e83c0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "cce6bddf-fab1-4801-b573-cced392f9849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa40c99-e20c-4dbe-98d1-ff318338f371",
        "cursor": {
          "ref": "83b1ffd2-a58b-4ef0-ab8f-0c1a24b0038b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "66fa294c-573c-4c0c-a3e1-8d5c9b77fbe7"
        },
        "item": {
          "id": "8aa40c99-e20c-4dbe-98d1-ff318338f371",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7b127f5-2661-4623-bc62-7dd956195051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80babab2-0d6f-4b48-a04f-a11289a47227",
        "cursor": {
          "ref": "3b5f75d2-ae22-40dc-bfcf-0cb26a135520",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5add0526-4f07-46bd-be23-e04ca2671262"
        },
        "item": {
          "id": "80babab2-0d6f-4b48-a04f-a11289a47227",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "81b7e950-95df-4e65-a72a-2e18372aaea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e186bc6-7f33-47da-a3cf-fd1599da79ad",
        "cursor": {
          "ref": "77a207ab-7b4c-4a68-8e30-40895bbaa790",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "75d54381-e074-4cb5-aa65-65ded19b34a0"
        },
        "item": {
          "id": "7e186bc6-7f33-47da-a3cf-fd1599da79ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cfa064c8-b892-4022-9fff-38674a28ec54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ef9097-f321-4e73-9d5a-f15e280ea866",
        "cursor": {
          "ref": "99effb32-c50a-4355-803b-571a4ba8b90f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8d57794d-ae12-47cc-a51b-689e0045eddc"
        },
        "item": {
          "id": "73ef9097-f321-4e73-9d5a-f15e280ea866",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "98b5f069-580e-4344-81d1-e9fa59793a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2aa2dd-22dc-4035-a33d-c5ed83c5c1cb",
        "cursor": {
          "ref": "d3e3cb4a-c8b3-41d1-9b98-1645825afefa",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8ac0d2db-c420-42fc-a527-1ab35492bb63"
        },
        "item": {
          "id": "3a2aa2dd-22dc-4035-a33d-c5ed83c5c1cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bee38482-73d6-4fa5-acac-13ef8540fef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7dd88d-f556-4c22-9b31-ae4f1228123f",
        "cursor": {
          "ref": "7f76e981-d4ed-4d98-b1be-db67b013e80c",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5a39617c-daf6-43fe-94df-8053a8444fb0"
        },
        "item": {
          "id": "5d7dd88d-f556-4c22-9b31-ae4f1228123f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bc00fa52-7ec1-448f-bf7e-ccb554e6b82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3108511e-918a-443f-b63f-6d4b2528a229",
        "cursor": {
          "ref": "4160d1d0-3684-4541-aec3-26fb9b416722",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1d0dbef-2b05-48d8-8385-0fea54d228ff"
        },
        "item": {
          "id": "3108511e-918a-443f-b63f-6d4b2528a229",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "28c77b59-d691-4965-84a3-9b8701080ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4860b66-4a9a-4207-bce7-9de9df6606f4",
        "cursor": {
          "ref": "ab51b1e2-6184-43b8-966e-a3c2aaab2d85",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3c87b19d-5865-4221-9502-9f71bf3fbeba"
        },
        "item": {
          "id": "d4860b66-4a9a-4207-bce7-9de9df6606f4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "88067f96-a3b1-40b2-ab54-a14523690abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef288a0-9c49-4627-b127-45390ebaab0b",
        "cursor": {
          "ref": "f08c0c83-6e14-42a6-bb53-820dd3304b77",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "80ecdd47-386a-4fa6-80df-c5997eb5aaee"
        },
        "item": {
          "id": "1ef288a0-9c49-4627-b127-45390ebaab0b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "318a0e5c-7422-4aa7-90e5-ebd814e1c522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c630be9-d144-4871-9f4e-40d3341926a2",
        "cursor": {
          "ref": "71455824-2ef1-4744-a0b4-182a5c73faf7",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1dbf62ee-0321-462a-93c9-44ddcc2e9ed4"
        },
        "item": {
          "id": "3c630be9-d144-4871-9f4e-40d3341926a2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5238e76b-8f29-4893-9a4e-354b1899a6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f5fdb5f-97af-42ad-9470-834d05126571",
        "cursor": {
          "ref": "9284588e-e3a4-4c87-8366-5db23e64cb9f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "aff4933a-8b0b-4c16-8f1a-dcdd1feb35ed"
        },
        "item": {
          "id": "5f5fdb5f-97af-42ad-9470-834d05126571",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "701bbff0-a9ae-4401-a446-70bf549057a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbcd2ee-1ff3-49dc-a410-b55e6dd81d0f",
        "cursor": {
          "ref": "012a0058-5951-4013-9541-53a4c3ed8a43",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2c3ef0cd-73b8-416b-8c87-ff27b94555d6"
        },
        "item": {
          "id": "0bbcd2ee-1ff3-49dc-a410-b55e6dd81d0f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9182edc2-7472-40b6-ae42-cbb68629ad91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1211,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61572e7-d990-4d32-930b-287f05e1334b",
        "cursor": {
          "ref": "1abce685-7f12-41ce-b957-12b788db5a1e",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6c29f239-1a3e-43e8-9adf-1bd5d23da993"
        },
        "item": {
          "id": "a61572e7-d990-4d32-930b-287f05e1334b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "10dd89ed-0066-4a3d-9091-93e703be8e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1361,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7faa6d-fc04-4033-a350-c9b9634022f0",
        "cursor": {
          "ref": "39077b0e-2ae8-4d3d-8cad-26a09241f22a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cbf28714-4add-4cb8-a7d5-afa11d0ce22d"
        },
        "item": {
          "id": "3e7faa6d-fc04-4033-a350-c9b9634022f0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ebc03b6-1887-44b3-846a-aded43bde13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1267,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286bf3e2-45b2-4a9d-ae8d-2a1d218a0184",
        "cursor": {
          "ref": "7af98467-cc73-40f2-b027-de8b970c7ebd",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0fcf5def-5e5d-43dc-95f4-51abc854d277"
        },
        "item": {
          "id": "286bf3e2-45b2-4a9d-ae8d-2a1d218a0184",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a57b4994-17a4-40b0-a2c8-e9727c0755b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1104,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764f1507-38f1-443d-afdd-a30540894a9c",
        "cursor": {
          "ref": "be36f5ef-feae-4315-bea4-eb7240befa5c",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b470c640-86dd-4d83-b31f-6f70aa686149"
        },
        "item": {
          "id": "764f1507-38f1-443d-afdd-a30540894a9c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "341d2d19-3e8e-49fc-8eb3-2c63ce707e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1149,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e15d1c-df2d-4ef6-a3cc-13f52c4b2938",
        "cursor": {
          "ref": "9017c052-adcb-4c2a-9c81-c5e43ff7d9f9",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "54e44024-9c8f-42c0-bf42-ead02c09b147"
        },
        "item": {
          "id": "d4e15d1c-df2d-4ef6-a3cc-13f52c4b2938",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bb5319ab-871b-4702-8d57-2efc4438dc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040a5625-e0f6-4d6e-90d5-4faee6461fbc",
        "cursor": {
          "ref": "b4812165-f253-4d52-8ff9-100ccfe71303",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3fb48336-c305-4ea1-8cea-330cbd92fa5c"
        },
        "item": {
          "id": "040a5625-e0f6-4d6e-90d5-4faee6461fbc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "77c031c0-8df9-47e8-857f-46fdf0db62bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b1396f-badc-4c89-88b4-5643bbefd89f",
        "cursor": {
          "ref": "92d4e882-d50a-46c0-9c9e-e7eb6b7c9701",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d2f21d59-aed2-47f6-b70c-551f82f2b005"
        },
        "item": {
          "id": "10b1396f-badc-4c89-88b4-5643bbefd89f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4783d3d1-4c6e-47b1-bcd6-13524f719ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee96d1b-2bcf-4f18-84c4-84671a18ef01",
        "cursor": {
          "ref": "ab97d1ee-5e09-4517-91c7-64469840d455",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dbd623eb-6f0b-49ad-9a17-b9540a954f14"
        },
        "item": {
          "id": "fee96d1b-2bcf-4f18-84c4-84671a18ef01",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f019e63-03a3-4ed1-8b5b-be31ce2eadee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458d8a7a-ddfd-462c-84e8-7e264f56cbfb",
        "cursor": {
          "ref": "d481350a-0db5-44ba-a4d7-c766ee717ca0",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "723b8880-69bc-48d0-aeb9-10017bc1b763"
        },
        "item": {
          "id": "458d8a7a-ddfd-462c-84e8-7e264f56cbfb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0e0d5853-8eed-4238-9361-6107b3e7c08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e8e3a7-5cfc-4796-be12-f3ad3598f907",
        "cursor": {
          "ref": "f1dd5ab1-ed34-4160-af5d-ff48a45b3ddb",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6bc1f0d1-e9ac-4677-aa45-91b23c73836a"
        },
        "item": {
          "id": "91e8e3a7-5cfc-4796-be12-f3ad3598f907",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "440c240d-3c27-49fd-9a02-18e12f14d55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c0369b-9194-43ca-bcba-98bd3919134b",
        "cursor": {
          "ref": "3572acd7-55d9-47cb-8ae2-99536d336242",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "fb0623b0-0222-4050-93d1-e12976ca125a"
        },
        "item": {
          "id": "60c0369b-9194-43ca-bcba-98bd3919134b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6bab1a9d-85ba-4007-a9ef-432f9e3683e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1022811-4e1e-452d-981d-69a614803ebc",
        "cursor": {
          "ref": "2b08356b-6286-4c5e-8a85-dae90a5036c3",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "35c61359-cdbc-4ffe-8ebd-ecbaa139b2f2"
        },
        "item": {
          "id": "c1022811-4e1e-452d-981d-69a614803ebc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "afd5110b-0cf9-4d49-b6ab-6c70ce38a0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a4cdb8-e166-4011-beaf-f38464412d09",
        "cursor": {
          "ref": "a42881af-43f0-4a5f-856c-1cd264affdc8",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bf31c0e7-f94e-4b8b-ad8c-9bab1d8cff59"
        },
        "item": {
          "id": "96a4cdb8-e166-4011-beaf-f38464412d09",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ae98ed6f-a879-4333-ac25-54306fb30c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82feb7e-02ce-4ddb-9181-5136dc29f854",
        "cursor": {
          "ref": "910431bd-4cdb-4ac4-9c42-d3161c3b926c",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c1c97d2d-c343-4417-9fd8-54a91c069fc9"
        },
        "item": {
          "id": "a82feb7e-02ce-4ddb-9181-5136dc29f854",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "851f5e51-1fc3-40c8-8baa-efc122ec8180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f8f204-bd00-48d3-a44f-f739b1a88238",
        "cursor": {
          "ref": "be91d471-2b13-4f4c-b275-e74be3f570d1",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4c42925-8e9c-4300-a450-fc2fcd34b628"
        },
        "item": {
          "id": "f7f8f204-bd00-48d3-a44f-f739b1a88238",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5a715b43-3e4f-4451-8409-dc8d80ef9608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5619325c-c272-4a2e-88a7-864a96181dd6",
        "cursor": {
          "ref": "8719ed61-70ae-4bad-bf1c-efc998e3ae53",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dfb89c54-26ad-4b41-b942-b147ddd021ca"
        },
        "item": {
          "id": "5619325c-c272-4a2e-88a7-864a96181dd6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5fad6aa8-b959-41a2-a09f-8592929a100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bf41f8-2c51-4c3c-9646-1dd5cd14a18c",
        "cursor": {
          "ref": "5ab50ddf-faf9-4807-91d4-4cbe3aad3432",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c170a8c6-e4b9-4a0b-90b7-f766630731c7"
        },
        "item": {
          "id": "72bf41f8-2c51-4c3c-9646-1dd5cd14a18c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f6bb427c-eefa-4d24-ac75-ac7a33df2f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee756e9-66cd-4524-8b3c-0e7429605cb1",
        "cursor": {
          "ref": "9cf95306-358f-44e3-bdd6-2ebccf927b25",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e94c38b4-8453-4fb5-a0b9-a742ca6250ea"
        },
        "item": {
          "id": "bee756e9-66cd-4524-8b3c-0e7429605cb1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "29bcbee1-499d-4c10-be94-1f0dae1c4824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d8e03b-59c1-44e1-b7be-c33552b73f27",
        "cursor": {
          "ref": "2df7bcb7-fdd0-4a7a-89f9-ab2810a248de",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fa594618-bf5f-4732-95c0-42de8bc370ba"
        },
        "item": {
          "id": "f8d8e03b-59c1-44e1-b7be-c33552b73f27",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "51b3e993-0a08-44d7-b3ba-32a01feb9d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcdf78d-3dea-420e-aa0b-c17afb002715",
        "cursor": {
          "ref": "d8789a0c-02db-480d-94a1-2931cd55c1da",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7c446410-1937-4c02-b261-e37c115598eb"
        },
        "item": {
          "id": "cbcdf78d-3dea-420e-aa0b-c17afb002715",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "02b226b6-ff73-447b-98b4-c5c72d6956ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256fce56-bc95-409c-b035-e80f26285eaf",
        "cursor": {
          "ref": "b1f7094a-ce32-418f-8f03-70bbb1b91d0d",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d1455f8a-bfc1-40ec-8ac1-faa957025995"
        },
        "item": {
          "id": "256fce56-bc95-409c-b035-e80f26285eaf",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5df9c79c-596a-4eab-95bc-55f40030b9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f324b0b-9a2a-45eb-ac21-4aa0f05d2725",
        "cursor": {
          "ref": "32406167-769a-4b32-b9da-df692f2b15c0",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0094e36e-4256-4ce2-b30e-f7394c137a3c"
        },
        "item": {
          "id": "4f324b0b-9a2a-45eb-ac21-4aa0f05d2725",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd63894e-b90e-49a2-8cf3-29e503e22dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff38939-98a1-450d-9057-71c1a26e3fda",
        "cursor": {
          "ref": "3416dc6b-6497-4275-b0cd-a9420ea67180",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "41bba32b-4dbc-4f05-830a-46511c982a01"
        },
        "item": {
          "id": "5ff38939-98a1-450d-9057-71c1a26e3fda",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "80c23a2f-321b-4ecc-bcbf-bbef9b0aefcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7696bc4-17a0-4c0f-9ffd-8ee23372cf92",
        "cursor": {
          "ref": "42e5820a-9e8a-4a53-8594-d4ea47cb82cd",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "95017342-2fb2-4b94-b949-9c26b296d1fa"
        },
        "item": {
          "id": "e7696bc4-17a0-4c0f-9ffd-8ee23372cf92",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "60e05a15-edd1-441a-b290-80707ed43f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3d5413-2c49-428b-95ac-ef24f5cd4902",
        "cursor": {
          "ref": "1512b18e-6fff-478d-9a45-63713914c519",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "76ddacc2-5c7d-474a-a976-1aea2e3e8b26"
        },
        "item": {
          "id": "7d3d5413-2c49-428b-95ac-ef24f5cd4902",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0140f60f-0015-45ed-84ee-be039d0613ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f03edc-8f39-4984-a8b5-dd46a8daaf46",
        "cursor": {
          "ref": "6780932e-7e15-44a7-a4ac-4daeb6f42f86",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9c2956c-9c2a-48ea-bf42-1aa92c7cce65"
        },
        "item": {
          "id": "76f03edc-8f39-4984-a8b5-dd46a8daaf46",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ef064307-bc76-4fc1-8984-73ba738e6fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8416733c-b922-4e5b-8c6f-c9d152264472",
        "cursor": {
          "ref": "afbe140a-e7a9-4a18-b6d5-b69cce621644",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "769f9ef5-380e-4ba6-bf8a-0cbc08b262bc"
        },
        "item": {
          "id": "8416733c-b922-4e5b-8c6f-c9d152264472",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "de3db14c-d929-4f06-990b-fea78c0f38ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c6275-f883-4f18-98fe-a32733bb604e",
        "cursor": {
          "ref": "7f25116f-b425-46f7-ac8d-98013a76479f",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "fcbf5da8-e062-4469-98ad-4f717defaeac"
        },
        "item": {
          "id": "c27c6275-f883-4f18-98fe-a32733bb604e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ab215791-b9d0-4c31-a214-af1e959abf4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea4cec9-b974-49bc-8a67-a9ae5c1a7755",
        "cursor": {
          "ref": "57d7c224-d9a1-4be7-ad23-0183464dfed0",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8e2f5a16-e8e5-4bbb-a577-8213395e67f7"
        },
        "item": {
          "id": "7ea4cec9-b974-49bc-8a67-a9ae5c1a7755",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bf671f99-7667-4f5a-be76-f90796c995a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6114c1-1d5e-4f0b-921a-d38482b246db",
        "cursor": {
          "ref": "42adf3cc-7220-469c-8d8c-d96fa8dfb3ba",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4ec81574-d24e-4c14-9dc1-0b26f6bfc0b6"
        },
        "item": {
          "id": "9a6114c1-1d5e-4f0b-921a-d38482b246db",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9de15411-82d1-4358-aa9b-01b6ebcef5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ceea7e-4645-4a34-909d-025488c8a025",
        "cursor": {
          "ref": "880d3b3a-1974-4620-8a9d-f044875d0146",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "058c1c24-19a7-4f78-b496-a8606de5e5c2"
        },
        "item": {
          "id": "65ceea7e-4645-4a34-909d-025488c8a025",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "04b9b087-4e44-498d-b09d-959f888f641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1e2c69-375b-43bf-94e8-1f6c019990c0",
        "cursor": {
          "ref": "d9d85107-2e14-414e-b99a-16b7bfbae31a",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "95e35577-5f31-40f5-8d24-095b39832cce"
        },
        "item": {
          "id": "0c1e2c69-375b-43bf-94e8-1f6c019990c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "760ba107-a961-458d-8cbb-e35e083cf726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e7a1ed-85b0-4bfb-82e4-a48dd28e44a5",
        "cursor": {
          "ref": "62025994-f589-4943-ac9d-203bc2c65857",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "548f6302-9935-45e6-ade8-261aa720cfbf"
        },
        "item": {
          "id": "43e7a1ed-85b0-4bfb-82e4-a48dd28e44a5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7555e9a7-dec7-43c8-9ae8-a7f6dd60405f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e899a6ec-b1d1-4b09-bee0-0af5ad10c1c3",
        "cursor": {
          "ref": "dab4c88d-510e-438e-b78f-baf4d434fc6a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "aea22af0-31b9-46ed-bdc4-f299581a84eb"
        },
        "item": {
          "id": "e899a6ec-b1d1-4b09-bee0-0af5ad10c1c3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3ce93d5d-78fb-430b-91ae-b9b2ef22db19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5e83a4-f594-43c0-a2ea-ccc8fb63ec2a",
        "cursor": {
          "ref": "403d21a9-d876-4dff-b8a6-de7f2fb6d918",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "95a8e52d-fcb0-4b14-b3c6-e6cbc6260931"
        },
        "item": {
          "id": "3b5e83a4-f594-43c0-a2ea-ccc8fb63ec2a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4d6435eb-90e8-4c84-ae94-29130689d9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dded3e44-2a55-4724-a0b6-7b7b2df8c73b",
        "cursor": {
          "ref": "846ab06c-d8a3-420d-8102-c6b6c751a96a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c366bb81-3a5d-4e28-9e0f-ee22fd675f6a"
        },
        "item": {
          "id": "dded3e44-2a55-4724-a0b6-7b7b2df8c73b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "518cf257-e2f0-4f6e-9b4b-cbcd30e89f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649d3047-bd2c-41dc-89f4-4da8bad9c155",
        "cursor": {
          "ref": "4feb0208-ce12-4dc4-b46e-ded4e4dde364",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a36e72a8-b6bc-4088-8ac9-a9e16fece9df"
        },
        "item": {
          "id": "649d3047-bd2c-41dc-89f4-4da8bad9c155",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2fd06897-4db7-436d-b2c1-aaef032b745d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361ad0ad-b15c-4305-85e6-51cf9f857ec0",
        "cursor": {
          "ref": "7c3c2820-9a31-4f7b-b07b-839faeca060f",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ad2e19d1-8f14-45ae-b0bc-6a5953a28a33"
        },
        "item": {
          "id": "361ad0ad-b15c-4305-85e6-51cf9f857ec0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "78aae04c-5ab1-4fef-9ab4-e2293f399e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d93d82a-4ecd-46fa-aa66-492a31d57b6f",
        "cursor": {
          "ref": "5b350708-2784-4262-81bb-581999d3f506",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "47b21419-8772-4c9a-b7f3-f6f1ed239894"
        },
        "item": {
          "id": "4d93d82a-4ecd-46fa-aa66-492a31d57b6f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5d6c9b74-9bca-47b5-9d70-9fdda21b8e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4577dc2-2ffc-46a5-bf30-310e04c96cff",
        "cursor": {
          "ref": "30e9d57c-9662-44ae-8aec-1ec39119d4c3",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3b619233-8ed8-4478-acc4-26930cf00906"
        },
        "item": {
          "id": "a4577dc2-2ffc-46a5-bf30-310e04c96cff",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a95bafba-8d2a-4659-a849-e74854ced9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d23b604-e434-480d-8051-cf78142b18d5",
        "cursor": {
          "ref": "c1309c79-be67-423d-897c-467b36ef7076",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "07815b73-ae13-4ea4-8787-8d774a4cf783"
        },
        "item": {
          "id": "6d23b604-e434-480d-8051-cf78142b18d5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cf03da59-66ca-451b-89c7-2d530f10e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c43893a-ec4e-4375-88fc-59e95ffa5169",
        "cursor": {
          "ref": "ac7eb5cb-b0c6-4611-84f3-72b6cfb62f5d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "35304b2a-0bac-4e2e-91f0-7d89470a990b"
        },
        "item": {
          "id": "5c43893a-ec4e-4375-88fc-59e95ffa5169",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5f6f8258-0856-4d9b-ba2d-c8937ecbe709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c654a19-9e43-4280-91e7-3332e1d240f2",
        "cursor": {
          "ref": "fb95bc9d-192d-43c7-aa5e-f82ad644021a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "aed478ad-d28c-4ea2-ab4f-9b7777d82b91"
        },
        "item": {
          "id": "5c654a19-9e43-4280-91e7-3332e1d240f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a2fd3cca-4b38-4705-8553-c67ba1f4e0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3cae74-37cc-47df-a085-61f9d69510bd",
        "cursor": {
          "ref": "46c4842f-8a29-4932-9ed4-8ea8bf0a92fc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "37b195e2-d98a-444f-b4f8-d64734f8675a"
        },
        "item": {
          "id": "5a3cae74-37cc-47df-a085-61f9d69510bd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "05cc26ff-da85-4308-af64-99921a1ec0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9466bb5f-db2f-42e4-8dbe-1c49a870eb0f",
        "cursor": {
          "ref": "f1b0fc2a-9585-4e22-90dd-8dc984a7730b",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d91e9a56-5fb9-4325-8c7a-e10ed362d5ce"
        },
        "item": {
          "id": "9466bb5f-db2f-42e4-8dbe-1c49a870eb0f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a749ef38-f545-457b-a49e-eec76fac4578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ab3659-c41f-4161-a1c2-a1a0d5e59797",
        "cursor": {
          "ref": "4c9afd6a-bc05-42b6-be6b-742d551aabd2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ad396a7f-6277-47aa-b0c2-75785caa0a2c"
        },
        "item": {
          "id": "11ab3659-c41f-4161-a1c2-a1a0d5e59797",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "babce417-4bcb-4dd2-a608-64e3b527bf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e3ae07-b224-4d06-acca-557758e80958",
        "cursor": {
          "ref": "a00e04d3-5455-4187-b004-3a32a8ff197f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9fb35c37-eef6-490f-bfe5-39df4758195d"
        },
        "item": {
          "id": "c5e3ae07-b224-4d06-acca-557758e80958",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5481b941-abb8-4c42-922c-cc15f4dc7fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac016d6-ddfd-4a3d-966d-cea4fcffd2bc",
        "cursor": {
          "ref": "7c2cc58c-c037-4b23-9c48-e2aa021456d3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "17ee86ce-3f25-46aa-9fa7-df587bef0b00"
        },
        "item": {
          "id": "6ac016d6-ddfd-4a3d-966d-cea4fcffd2bc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "10b4ba5b-2769-4ec6-8de5-1020d63af888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580070d2-aca0-4566-a41d-07e1291afdd7",
        "cursor": {
          "ref": "a8187e42-424c-4572-9ed4-e4003d0fb609",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aa8a5102-aeac-4d67-a796-98904cdbaea8"
        },
        "item": {
          "id": "580070d2-aca0-4566-a41d-07e1291afdd7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6f6552b9-c27a-471d-8803-2dc50f03210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d956fd3-1c4c-49d6-b41c-1aba9bcc5f35",
        "cursor": {
          "ref": "2a81ea9c-2fce-40c7-a4cb-c421fce4a9a8",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4a9b64c7-a20d-4351-b73b-357f7ef6f996"
        },
        "item": {
          "id": "3d956fd3-1c4c-49d6-b41c-1aba9bcc5f35",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5d0ce5e7-660a-4292-a976-12411575602d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e2a2d2-fd7c-4379-be84-4fe95b152a78",
        "cursor": {
          "ref": "bc50dad0-0b55-43b9-8b53-f55ec768a69f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "da843b23-3c75-42b9-a4eb-fde4e2a719b4"
        },
        "item": {
          "id": "12e2a2d2-fd7c-4379-be84-4fe95b152a78",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fa67a8dc-5b48-45a6-999c-d2e4f42fa752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5c74c5-89b5-4622-abe5-3d2a69d85c63",
        "cursor": {
          "ref": "14b936f6-cbf0-4fe4-9bed-742be6210ad1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "41884584-0cd9-44f8-82b0-f05869ef542d"
        },
        "item": {
          "id": "ff5c74c5-89b5-4622-abe5-3d2a69d85c63",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "96fec4b8-39fd-4df4-9c62-ba6e97755538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c038f3b8-2ecd-4a40-8369-1c9d6392003d",
        "cursor": {
          "ref": "020fb803-274d-4718-b4fc-758f392d68ba",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6371c6aa-e7a6-4863-8fc6-66fbdbec53fd"
        },
        "item": {
          "id": "c038f3b8-2ecd-4a40-8369-1c9d6392003d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2813c570-3118-46bd-ba50-d97c6346d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fba74a-f043-42c5-8eef-f8f5a4cf286d",
        "cursor": {
          "ref": "1a1a8413-0160-4a1b-8e57-8a37e84b3d63",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eb3325cc-ec67-48dd-91c1-25227aed9894"
        },
        "item": {
          "id": "77fba74a-f043-42c5-8eef-f8f5a4cf286d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5aeec8db-c7b8-46a3-8482-e59dcce36bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbf1ead-8354-419f-b2e5-c1ddf28a6ad9",
        "cursor": {
          "ref": "40f486ab-3888-4058-9640-a779c3378818",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "83953f5d-cdf6-481a-a50a-e5133257abbb"
        },
        "item": {
          "id": "1bbf1ead-8354-419f-b2e5-c1ddf28a6ad9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d17aa638-8d4e-44bb-9568-8f1fbc436279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa2d12b-6cca-47f2-88e1-6399f40f1378",
        "cursor": {
          "ref": "ea1498f7-7a05-4abc-b67c-bf84b2e56251",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "459e303e-0033-4589-a302-769c53a96b53"
        },
        "item": {
          "id": "3aa2d12b-6cca-47f2-88e1-6399f40f1378",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4f96d82e-feac-4e3a-bb40-626c52449200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138526fc-312f-4db7-860d-7b5eb5120e70",
        "cursor": {
          "ref": "94eb477f-e72c-4009-b297-d01e66aaf727",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a9cdfbf1-a464-4de9-b110-ea0573127fe2"
        },
        "item": {
          "id": "138526fc-312f-4db7-860d-7b5eb5120e70",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "403f1e77-055a-4abb-88b0-ff6091e9f335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e025bc3-6d13-4cfe-96b0-eba57abe58fa",
        "cursor": {
          "ref": "262067f6-7e1b-4bc2-b3d6-5cbfda2bd383",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b58140a0-065c-4393-8507-344caae88b44"
        },
        "item": {
          "id": "8e025bc3-6d13-4cfe-96b0-eba57abe58fa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1312dc3d-a2b8-4ff3-9c2e-54826df60999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c827283f-f3a2-4d8f-83cd-c0a2982894d7",
        "cursor": {
          "ref": "e07901b0-0dc8-4a2f-8ce3-2efe50c55e65",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0eca296d-4eb5-480a-bd04-64614f920fb0"
        },
        "item": {
          "id": "c827283f-f3a2-4d8f-83cd-c0a2982894d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f5a8e858-5960-41f0-80d0-a4534db92741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b339c62-8e79-4fdf-9131-9f34b93964db",
        "cursor": {
          "ref": "1d794448-cf99-4d9e-8904-ad5fe5fd153b",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6ff32189-b9e6-4394-8a89-0cf363fc1d52"
        },
        "item": {
          "id": "3b339c62-8e79-4fdf-9131-9f34b93964db",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4f49e0b7-2700-48dc-b391-886027442915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f52782-1b61-4fd8-9596-3340da40ece2",
        "cursor": {
          "ref": "9a08cd15-4f92-4965-a500-8d81e830f43f",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "95399996-d7cb-44af-b832-3dfb62c3766e"
        },
        "item": {
          "id": "96f52782-1b61-4fd8-9596-3340da40ece2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b6eccaaa-f5d7-4daf-8a85-eab87111a61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f16b152-3ac5-46ad-a4b1-9d1609e9aa10",
        "cursor": {
          "ref": "679817ce-98bb-4ef2-9714-0ee2bbfc2abf",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd0785d3-6ba9-433c-b33f-f2805b490651"
        },
        "item": {
          "id": "4f16b152-3ac5-46ad-a4b1-9d1609e9aa10",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba809f5f-b255-4123-81c6-0d02705a4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d24190-8632-4a27-9a3a-3ae0be69f3ed",
        "cursor": {
          "ref": "567ff050-d611-4dfe-ba2c-028d4fbbc57a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "50d6dd50-c0ce-4096-9b0d-1334a8206b0e"
        },
        "item": {
          "id": "01d24190-8632-4a27-9a3a-3ae0be69f3ed",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cef091dd-7fb5-44ee-ac54-0822fcf592f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f95b94-d55b-4879-a422-22727c28e376",
        "cursor": {
          "ref": "d94bb0aa-dd36-4f95-8145-f7fea05dfd60",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d9878af5-0820-497c-bd2b-4cd7608fe5ea"
        },
        "item": {
          "id": "46f95b94-d55b-4879-a422-22727c28e376",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4a07d23b-490f-4232-9dad-5220176141b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd31f7be-0809-4ac9-ab43-c27adbd4db31",
        "cursor": {
          "ref": "052d8288-d151-4361-bddc-7cce98075411",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "505c4292-15e7-4d9a-9cc7-2ebac4299939"
        },
        "item": {
          "id": "cd31f7be-0809-4ac9-ab43-c27adbd4db31",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0c57637a-e9da-4027-9c61-c754c508ceb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f70aacc-cdd5-463c-92a1-3a22f117e86a",
        "cursor": {
          "ref": "55ab6751-1292-4235-b695-814c3ba079a8",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "72f8ddde-3940-4718-b4c1-01be0fe80d54"
        },
        "item": {
          "id": "6f70aacc-cdd5-463c-92a1-3a22f117e86a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fe4f49e4-4030-4e70-b66d-f7157ad7802a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c885c7-3ef7-491e-be5c-ff3aeaf0e1c2",
        "cursor": {
          "ref": "4f499875-c3ce-4de5-994f-2d11a90bdf4d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2dd015c7-20dc-4cd5-b0b0-ec0d5397d806"
        },
        "item": {
          "id": "04c885c7-3ef7-491e-be5c-ff3aeaf0e1c2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6084c18a-32df-4461-b09b-b555d35af5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91e58f6-d498-46d7-9990-f068e4ac1ddf",
        "cursor": {
          "ref": "d44b215b-a787-4978-b007-078653ed99fc",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8cad9c44-3247-4ccd-b2f5-af26bf83b9fa"
        },
        "item": {
          "id": "c91e58f6-d498-46d7-9990-f068e4ac1ddf",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8b6631cd-1519-45be-b854-8647c63c1c9e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f831ab-5cce-49e4-8289-b4bb8ccfac6d",
        "cursor": {
          "ref": "c19473ce-2cec-40bf-914e-7721e92f5ac3",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b4e990ae-73b8-4bcf-ad14-b1c9118dd404"
        },
        "item": {
          "id": "00f831ab-5cce-49e4-8289-b4bb8ccfac6d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "7d1c5f11-7819-45da-affa-ed366f014768",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 384,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604ccbb7-fdb8-4084-9496-2261adafedbb",
        "cursor": {
          "ref": "6d5f528f-da25-420a-b5b7-9f905e3e3d86",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "40de8f49-e6b7-403d-afea-01c20bb309c1"
        },
        "item": {
          "id": "604ccbb7-fdb8-4084-9496-2261adafedbb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9f24cbb4-b7a9-4b5d-b23c-3c958b756233",
          "status": "OK",
          "code": 200,
          "responseTime": 505,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd22ac-d385-4e17-a017-01532ddf9b1f",
        "cursor": {
          "ref": "afc0bd04-ee38-46a4-a0fc-54ad991f325a",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "df2707d5-fb11-4d62-ae33-e526c3fc8e05"
        },
        "item": {
          "id": "b4cd22ac-d385-4e17-a017-01532ddf9b1f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "17c0a350-e9f3-48bf-8101-08595672e72c",
          "status": "OK",
          "code": 200,
          "responseTime": 2026,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92b7caf-ca44-4c83-a505-17d115eebd75",
        "cursor": {
          "ref": "479e6478-d73a-497b-813c-d0ccd93be7bb",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "82613729-4bd3-4634-90c8-02f4ae642056"
        },
        "item": {
          "id": "c92b7caf-ca44-4c83-a505-17d115eebd75",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5a093d73-a4d3-4f3f-bfbc-2d2cf58ecbad",
          "status": "OK",
          "code": 200,
          "responseTime": 1853,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
        "cursor": {
          "ref": "f61d66f1-d90e-457c-95e6-7f0abff79df7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fb99927-3779-4b39-8e38-fd77a89fa999"
        },
        "item": {
          "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bef315b-5d06-43b1-b937-f31e4246dfac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
        "cursor": {
          "ref": "f61d66f1-d90e-457c-95e6-7f0abff79df7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fb99927-3779-4b39-8e38-fd77a89fa999"
        },
        "item": {
          "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bef315b-5d06-43b1-b937-f31e4246dfac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
        "cursor": {
          "ref": "f61d66f1-d90e-457c-95e6-7f0abff79df7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7fb99927-3779-4b39-8e38-fd77a89fa999"
        },
        "item": {
          "id": "b0322695-4cdf-4416-84f2-2107d3ebd997",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4bef315b-5d06-43b1-b937-f31e4246dfac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc633535-7fbe-4087-be0c-4f12103353a0",
        "cursor": {
          "ref": "28936be1-da22-44ee-8a97-78138aab7e45",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f1513a9d-048f-4992-8feb-c97d29fa4a7c"
        },
        "item": {
          "id": "bc633535-7fbe-4087-be0c-4f12103353a0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e1528d21-ef8b-4f15-9786-2276067b5f4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 384,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fe00a-1018-4f27-bb71-400f519f941d",
        "cursor": {
          "ref": "82680a35-69e6-422f-b7ad-d8317f44a4c6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de7c4412-bcf9-4aff-9dcc-74befb15e738"
        },
        "item": {
          "id": "775fe00a-1018-4f27-bb71-400f519f941d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d492987-fc0a-401d-9c74-a526ca0e9c1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fe00a-1018-4f27-bb71-400f519f941d",
        "cursor": {
          "ref": "82680a35-69e6-422f-b7ad-d8317f44a4c6",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "de7c4412-bcf9-4aff-9dcc-74befb15e738"
        },
        "item": {
          "id": "775fe00a-1018-4f27-bb71-400f519f941d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3d492987-fc0a-401d-9c74-a526ca0e9c1d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c49943c-b8ec-4ef9-aad8-d045859c712b",
        "cursor": {
          "ref": "2ebefbe9-f42a-4c9b-848a-5732f2f58029",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8e5f5335-b6ae-4999-80cf-2ad03e60f2f9"
        },
        "item": {
          "id": "3c49943c-b8ec-4ef9-aad8-d045859c712b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "806a5ef4-cd6f-4d01-840f-af3b8f3367f9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 592,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755d1ea-f3e3-4daa-abd1-e040d1d88082",
        "cursor": {
          "ref": "af24ffd8-0797-4725-b088-e2d4bf727f9a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b07f857d-3a0b-4814-b415-29245bb6b0f9"
        },
        "item": {
          "id": "7755d1ea-f3e3-4daa-abd1-e040d1d88082",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "146bc83f-3080-4417-a51a-0e3f051e7261",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7755d1ea-f3e3-4daa-abd1-e040d1d88082",
        "cursor": {
          "ref": "af24ffd8-0797-4725-b088-e2d4bf727f9a",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b07f857d-3a0b-4814-b415-29245bb6b0f9"
        },
        "item": {
          "id": "7755d1ea-f3e3-4daa-abd1-e040d1d88082",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "146bc83f-3080-4417-a51a-0e3f051e7261",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93658451-7f58-4eea-b5d1-112d624e16f9",
        "cursor": {
          "ref": "43889ff3-82f7-48a0-a0f1-2b07aedd2b7a",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b64fc980-6d33-44d2-acfc-9631e71a89ab"
        },
        "item": {
          "id": "93658451-7f58-4eea-b5d1-112d624e16f9",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "f7540648-af1d-4d42-b019-823b340aafd7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 576,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}