{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d222431d-a48a-488e-baad-d62aa40407f3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "33073aef-7837-4afa-8853-5f9d9acfc763",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74d49807-abcd-4f36-9c7b-d4751faea911",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "91517a33-8acd-4ba0-886a-34aa3b3e5473"
                }
              }
            ]
          },
          {
            "id": "939fe898-ffd0-4f44-b46d-0bdf670af387",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09a5388e-f9e6-453f-812e-3fd669fd5714",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7da6e6c9-6eab-46be-9d76-a6773a8292ac"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "515d5258-aa50-4de4-89a4-cceaafe3ced1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "35531a7c-1a07-4dd1-bbd6-ed05adcdb947",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cca3681a-8116-41d7-b485-864efab2363b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dcba351-aaf6-4453-b387-130fb457baaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e050bf3-0d0c-4b22-bfa3-aa3491feb1e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6e2d6e6-f225-4283-86c3-4a3e689a519a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bc32cbaa-985a-407e-8cc3-c33a42c81548"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "726e3f0d-09cd-45a0-bb68-a071652d6bb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "735a1d06-11cd-4e37-9f7d-63f5a1afc4a0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4cf676b-a6c2-4fbb-9bbd-5ff8e083670d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "67e32661-5558-4d6a-85ae-ecd1da595377"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00ccac04-a20a-49c0-8229-fe3e8ee4747a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17c79705-5f15-4761-9a61-bc2986d60727"
            }
          }
        ]
      },
      {
        "id": "5584c761-0250-496e-881f-c1387f9fa097",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7ef41925-5298-411e-a8fb-e0a644b06670",
            "name": "Negative Testing",
            "item": [
              {
                "id": "071c50f6-c8c4-4ac2-870b-08db6bf37d6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9de04a2-c8d3-4c84-9b87-27bbb55a7eda",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ed411-a69c-4323-a333-ffd1e9f6b69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c9043cb-a853-43ba-b224-f1d1dd1a6b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b5a129-c890-45f4-9160-57abc1ff53de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a763bdd0-b6cc-4873-b1dc-a02d16d334d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1394550-e430-42b1-ae6e-86872e3c18ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59ad4a5-537a-4288-a30e-328ab15fc326",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa688a2-7d92-418f-855e-997f685ddeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dca041e-3c24-4b46-8e76-3f48bbfb911b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8db6cc05-ae9e-419b-a5ec-a4b9e6ab2c3a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6c852c7-c57d-412b-a10c-c60d56c301be",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1261c4c-225d-4827-9a13-865ef009ca94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dace751-577c-44e8-8664-48c106f45b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45aa98db-da1b-4eb6-a092-b665686569b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67bf54d5-0360-4d52-9a46-48e7bfcf80ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c495534e-abf1-46ed-b280-9464bffb1781",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70a61e54-1d90-44c2-af3d-e5d2d88c6980",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82d4f2c4-eead-4485-9fd9-d002fe7d81f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e5afd64c-2eca-48f6-95ba-6367fee3a018"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92fa4b38-5d6d-461b-9c6a-eb3a8f16b10b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ac3e6f00-cc93-4931-9c20-fbe23768f083"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0480a99-a914-4ce5-b77e-24d668f264e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8efd9418-865a-4353-9e37-83b7452ef65c"
            }
          }
        ]
      },
      {
        "id": "abe3af6d-a332-4e3b-a69b-0cb4495a30ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b6649952-e321-4dc0-ad10-8978f65b6854",
            "name": "Negative Testing",
            "item": [
              {
                "id": "001f7016-dc5e-4b96-804b-241d9af5ef3d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ccf9c32a-80ff-4012-a189-869ea07e6730",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f368d-5a92-4935-972f-eca1e27576a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e1a6a7-4637-4b39-a690-a9f699b87d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48b808a-7379-4707-8931-f0b2d238bd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25a5f5de-855a-4af0-8bf3-92e724eaedf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76522b5-be4e-443d-911e-a3ec5e4b123f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d50bcb-7d4d-40f5-b646-0238da363817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657da86c-3832-4edb-9545-f18b59184c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7198a589-f8ab-4118-8607-88bb4566489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6478d488-ca49-461a-b86d-2ec820cb4a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd9f949-3874-4b27-9bf0-e110b41bb2d1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ba9b1-9b3e-4ac5-a173-3c06de96f42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e26f0b1-eb06-44be-8690-6e759d83aa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf1b0ed-d7f6-40b7-b19f-11b4dec4ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d5d07e2-4df9-4429-b5fc-6cd30eb125f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2de0554-f549-4f5c-9a76-015eacb93209",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f849f759-945f-4638-b28c-ac6b3204b24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e61a2e-eb95-47a0-8d15-e21c9cebda7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77edcb6-431b-48e2-9ba8-91ebc52bcd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1316ad97-7bd9-4d5a-b4f0-da733f4cb565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac6dd64-a9a6-4806-bda7-33d8210d3684",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b168a94-5f50-4619-87bb-0167dfa658c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae830e6-25c6-4e71-87d6-364dbd25f84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13226c7c-870b-4a8d-97f1-b9c17acc5326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daede92e-1f90-4abe-a30b-1351dd326acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b5e753-81dd-40ce-9cae-69109439a9e5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b3d573-946b-4aad-86d5-5df073fd9e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2042bf-deac-4891-ac60-931b3f5b4c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91705437-3ede-435b-a3c6-db8180e273ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85d7d28d-2533-4332-ad0a-6221b78139c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20e269-69e0-40b9-a3e8-56f3e0e2f9b0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7001bb-2bbe-4b92-a53f-8c4068c6d334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a141cb-011e-4ec8-b67d-170172aee207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4aaa5d-ffc3-4a70-94c0-da8315e82f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42230483-e5ad-4ad6-baa8-5f479837f1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8aefc-103a-465e-b4df-4ec0cb667607",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c3cc6f-9844-4ce6-815f-10091c05ea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "707f4558-80a1-4b3c-a945-233a7252bdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d46beb1-5a79-474b-83fb-2787a00370d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbbfa6e8-a679-4e62-b508-ba8f605b1a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedd6b8d-63cc-41ed-a263-7ae81323f6b7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde334a7-3e15-4d91-98d1-638c696e82be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c58efe6-d3e9-4b01-a91c-01d9006d72ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addaa0c7-751e-4f74-98c2-d98626a5691e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a9739a-03f0-4590-85c4-117f08c30105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83e56a2-be3e-4762-84e8-7c5f6c70e14f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2cf7df-8399-4025-96e5-4ac57b4aa90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c46359-e23e-46c8-97c3-9ea1bc6739e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70599b97-e871-4388-b34c-a8360a35de7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b28ec084-83a9-49e1-b4df-d5eb6f8a0506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3decb2e-9c66-4c0a-9dbe-09d3678eb9b0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4a7a47-3076-4a57-88ee-1014f7d9d0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d32532-b3d8-49ba-871c-8537d15580dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b258c1-dfd9-4ce0-b797-134fb009a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6c40859-96ea-496b-aca4-29c4ad62ff32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d579d901-ae9a-4756-b775-139cc80798a9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee79741c-2517-4696-ad6c-3cd43b86a5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50521a7-2be7-4db5-b6a1-5f563995e7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d64596-d439-47a5-8af9-51a90ba1945f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b69ed659-800f-4f67-8e05-7d46eb05d497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ca4887-66d8-4009-9b10-24dfce3b2524",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4b7f78-9ab8-4cec-874d-d027a6a005cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5649055-338a-44df-8bb5-f934f8833cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00de954f-da40-4dd6-83c1-30428feee313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa2e8a5d-dead-4352-a557-65c56371c788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c963e728-206d-4ab3-981f-d3c683c1c05b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651f64df-ec72-43f0-a85a-c0baf15913ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dc2a0e-fb65-43ee-9df4-eb530229ab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e83a99c-3a46-4c90-86c4-cc4cac5d4f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb686775-edee-4379-b012-3713a04a97bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef287b14-a521-4054-ba78-90daf9dc4a36",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7e4e1e-fb2b-4eb6-a252-e76c2e43facb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e55d4b3-1a4e-491f-b449-519c0dc96c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c98821f-2546-4cb0-9282-47e32fc5a227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b6f2aa7-dd7e-46fe-9aa2-758b6bcf96b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ee1539-4816-4d9d-9fc6-352dbeec5184",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5e435f-f141-4a9e-9c98-a6c120be0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab01996d-16b2-442d-b599-f301118cb358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a7212f-4fdf-4adb-a267-1a99ee439097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9912e125-f7f0-4806-bef6-1ddb67e37780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0bc97b-cdc3-4e16-8d4b-74dfe121257e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a12e9d7-9afe-4b1f-bd91-6bd3e05d64c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7abc63-0d16-4a25-8bfc-3b5001ae92d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a29d23-cae5-4cc7-a133-15dfcd5423fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfb79273-8454-4040-a202-c3fe22376d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ce9415-019e-4eb2-a0e1-9ffebd9fd852",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935c6086-7b4a-41ca-9700-2f7e80f676b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c30fdac-525e-4f6b-ae38-847efae6546f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063003db-b45a-4f92-98ad-1f8d08324200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c7b872-6f1a-4570-9c14-841e90aa27ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fabcf40-0a59-449e-a964-d8609a5871bc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beade60a-9091-45e5-a45c-5fcf9a1a839a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4dcd75-7c84-41a6-b61b-6219788b124c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ef19a5-f661-4e38-bf2c-cf632f4c66a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e237654-8c9c-4fd8-b289-16314d46b058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcbdeea-2f3c-4efa-9a97-3843bdef12e9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e128aa0-1e2c-42f2-8e80-22d5cce2529c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4473c617-45e5-422c-a1df-7e2f3779173d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e3f820-9e7c-4822-8ba4-8734d328ce2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7cf8c6-025d-40ec-afa4-2e20c5b74e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3745f735-2744-4d2b-b563-c038320023cf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857cb4aa-3214-43ac-b1f8-2eebfce2d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1861fd-32e8-495d-b3b0-855feca9c223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e58f7e6-80a1-48cd-a009-84b5708fe92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b98d7257-1304-4cc1-8941-26b5b16d475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbcb9ae-531a-4a64-9777-f548c3b5e4a4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46ae502-c775-4fea-b727-9b0e8be419d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b99e24-ca43-4b44-a9c4-83070704f899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8876e23-b93c-42f7-bf58-53820af9a6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf5a703-0811-4d62-b91a-2959a4cc0ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3525123-5f45-4ef8-9316-5ee48fb277fb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "861def76-29c6-4b71-9420-0a937141bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f503040-e0d3-469b-bdb4-0bbf16b1c844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143552d9-b11b-4877-a577-04339b6fbe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "037ece80-7b57-4e85-90a4-8a0a025fe4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01100d5e-cab7-4c3f-83dc-a5feca1a828a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e2581a-4f10-4255-8957-557cd0a0e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6ad641-4421-4951-abb3-d5ef5c575aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a991b946-eeb6-4eaf-aadc-805a8c93c6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "df360a0a-553c-41b2-be23-07b823b8e900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9fa4c9-8e78-4c17-a2d9-689dc8b86b76",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eefe2e-b903-4dfc-a933-0345efcbbd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea577cd-3912-49db-b0fe-391131989699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58a3a31-5fb0-458e-85e7-2cf7abc859c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "728756d7-4fe3-4fae-8d09-971c6c9649f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de44beff-3e31-4dc8-855f-9bae72f00f18",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0846df60-3885-4ec5-ae06-f5c4a499a1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb5e380-640f-487a-843b-eae24859c03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa16407-231b-439a-809a-4ed5fb53e058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "714f5e5b-38da-4e50-b092-09389c8953d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeaf661-1930-430b-8e73-d93e57cd7ab9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1e1554-f807-4965-ad43-ae5474039902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf6dddf-e2de-4397-bbae-53b64fc5f166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c73cb2-0b8a-4215-80a2-373b09733a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "318308cf-8bf3-49cb-bc08-61acbabdfe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d6be5c-b8e7-4afe-8145-0b6b4f8925b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f791230c-d7e7-40dc-93b5-45ed7505f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811bcd6d-5d90-47d3-aab4-b202d4538aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef489668-1b40-4cdd-bd1b-178a2b850eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e024ff5-7af5-4adf-ac8d-97e6fe5ba4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e95ea2-a0e2-4f35-b1c0-d53db40ee4e4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f341ce-66be-4b38-89ca-697986add798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c162bc76-611f-43e1-bfed-7744851445d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4113dc8-97ae-4d3e-a554-06f178ea6761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c5aa85-2211-4293-addd-25da0f877bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18fae2f-d48d-4f17-8c84-956ce7f3cf1e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ea340f-bfe6-4421-9fd2-6f472546aff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebb6fad-8b8a-448a-aaf7-976ba94db318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951d1d90-6381-4070-805e-cf68012e57a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0cdc10-89e6-4210-b7c7-345214c86e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f0dde0-ff41-4ac9-a109-dd232d6807eb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66486109-68af-461e-8bb0-c47cccc0e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac46bd60-c9ea-45e5-8c0d-d8f7fc53f448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c06b8a-4581-43c1-a2a3-6b40c45dc1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "18ba18d1-a885-44ed-934d-733754b757d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a62ff45-0f63-4748-a4d4-76e78b4ddb6a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9703015-2417-4703-8567-e353c4171974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a33feb6-d70e-4906-a7ae-a0a792e3d191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d850359-d251-495b-8eef-4b36b935963c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "651d291a-f0b9-4045-9515-8bbe6d355dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7750d936-fc40-4098-b2f1-54ae3b6ff502",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d4c263-a926-4f47-90e8-138e9e4d4ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e00417-9ba4-4bc3-ab0c-5b761b8bb12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb030eaa-56e1-4056-8772-d276d7151da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9418c78e-ece3-48df-a496-bcf896155739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08ef745-2022-45ae-a000-719ee8e206d1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348800a8-7d5d-42f5-aeb6-eecb7f427388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6de1e7-94b7-40a4-bae7-09d4f73f560a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33bed6d-edb6-48f9-844c-c64ed1e2b43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "631c69d7-9636-4133-ad10-881d4b0d9bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f64ec6-5f35-4d22-8a03-5c5669a500ad",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dc3795-fdbb-4b6f-82b4-0282f223edaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d114428-ee28-4f61-85e8-93f373c915ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c74991-6628-4290-bfc6-cd927a03ebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "6da7f662-cd54-4697-90bf-7321460cea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9529fe9-3e97-48ed-a1f1-9c0627a55fac",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696ee5b4-1ab6-4389-8915-5771b168398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "822b75fa-f684-46b3-b347-f3c90816a718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c1ceba-46a9-4f61-8e17-04d11551c0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd52679-8d44-4278-bd97-8f720518c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb98226-e1a8-4e3e-b7d2-3bc2075fc0c1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f7e8a2-bb4d-4262-b84e-315222babbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ed1ff7-8a9c-405f-a012-c0727608846f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb96b095-06c1-4c69-b345-9b96b9ffe99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b89a8a6e-a78f-4513-8651-d5a52dd0a363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791db588-346b-4af7-a8b2-a3f37adac1d6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac72c707-0f3a-4373-801d-cda3d4cbb889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd3cae1-4e50-4638-a950-fb45dcc17fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bfc5cb-eb6c-4b94-b1be-38d8f1abee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f1deb5-d008-4a5d-af3c-48ff54936510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5fced1-b611-4e89-8d16-ed322fc2bfa0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1038ef8b-d7e8-41e8-ba0b-9f5a352dc0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906193d5-dd32-4a81-a7c4-254956bd9c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7734a81-6dcb-4b58-a1c8-ab75fa3ce1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1217a9-9e32-485e-8daa-9e81bdbbb1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38edfea5-1777-40d4-a4cf-324ef3b7bac1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bb7861-c02e-4e4f-82f8-fb3d471e37ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d37d094-5a2e-432e-a4ef-11028136eed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6212f569-fa52-4535-9f91-c8d64608a2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dee6f614-f503-4d34-bf75-44ccbb33d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962ecfe8-41ff-49dc-a38a-d66d3f53ca2f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698017f7-d6ae-4902-9c70-24fc3d80ac24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d1aeb8-05ad-4362-bdff-8f1950a18eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc3848b-2928-47f9-b4c1-77e5101731e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f993c531-9017-4e99-a202-72b5b54aeae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5d5787-8b34-4e97-b4c8-140babfd19b6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47374b63-dcab-47fc-a0b4-712330653323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fae1676-f7f0-4fdf-889f-b1721dd4e1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f17ac4f-2a3e-431a-aca5-e2fbfc2d4102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9aa026-d26f-4b99-9719-b8cd911a9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a238bd-2cc2-4a60-8d76-6abb67eb6603",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c69960-fd9b-4632-866d-21c5105b88d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9f4467-3ca1-4950-ba3a-fe35b08463fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95950494-e067-4db2-ae6f-e2735125c22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10dbe94-b1f8-456a-a3d2-2f9c78732e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d2fdf3-fb8a-4825-a9db-35e84016dfcf",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec7c9eb-af19-436b-bed6-ce3a3034ba19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3527c5-0318-4e41-be6f-e645c1d71c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178ebec-e318-417b-9548-74f565f641ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "acc35799-aa9c-479c-b150-7d4ebad2161d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1934ade-ca72-4611-8f09-c86f68584353",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485b8eab-9979-4056-93de-49c4f4ec3cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d43fb4d-e5dd-4fd3-966b-94b39fecc506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf4a89d-c432-4542-92e1-58f3f7af82ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8adac59c-6309-402a-8686-25feeb88d99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e936d23-1c08-4eae-a181-2b3467253293",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc5e400-bc98-45b1-b0ec-62b43116cb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b6c3bc-bdf9-4a16-9731-9a8b7f0fccb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afcbe41f-cc86-48ac-9764-411123c238c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc323f8-0f29-4862-9a11-7c12c4ecce59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c954190-ce72-4f72-84bf-4876175d057b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f1993a-dedb-4e53-b655-12a41711649b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df4a4f5-4d37-420e-965c-42bff144ba3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bf135f-a839-4e67-b28a-ac17eaeb069a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98399323-b736-4ba0-8144-2c9ca1bb8563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a0837a-8cb9-4d0a-8e60-7ae8b6fd6ab2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cab799-d442-47d7-9b41-d8ab47d480b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2e978c-6e48-4450-9ce0-134f2f3d7bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0a783-569e-45c9-939f-905f54ebde94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63d4b426-de2e-47ff-89f3-de5457a97624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524889dd-5652-4cf3-8a97-0d0f1bba531a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8e5f71-05e4-4d9d-a1be-4f565d6f00cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7b8c8b-5dc7-4417-8885-7acca470a7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb1dc9-d1c7-4d54-a491-0e8e4abfcb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20e90754-397e-4e46-b6b2-b51d33ff81f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55343b-1e09-4e5b-ab18-162466c73dff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a15b5d-7d1c-445b-8d63-60b3cd8b8eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d636ce6f-a17e-40ac-a14b-b4bbf0a8326a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49cffa8-23ad-4ab4-bd0b-b78e7e346075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2188dc-e2a3-4db4-a6ab-0de617bd9aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8c50e3-d7ab-4d8e-b0ee-85b50fe3b030",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28523bfb-3ace-4279-b841-d93ae938c973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf476b4-0a72-4332-9aa6-faa4f685bacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49bd864-ec60-4394-a482-9af93d28ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc7a337-86e9-4894-b464-1ce86b61a238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eabf77-3597-4b06-884d-27f068c2f17b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6dd014-14cf-4b25-ac3e-99f9ea2e92bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c045a7-4188-49d0-98ac-e29e55953fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7b755-4bb3-4b35-9d74-b624e7e62ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ba97d4-77d0-4c88-80de-d402a2fa632f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7da1a20-1c36-4dd9-a90f-c650aad65d35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b7f25b-76bf-4f00-9df5-c33cf5ae37bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86b19c1-c004-48db-b828-e280c2b87918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bb96a8-d025-4479-945d-52f863d83604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97bcc308-bb83-4316-8dd8-4da2a1e2b866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299ff13a-d9e6-4d24-bed2-4f5fb25855d6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca402a-da1e-4dec-b756-7daf48da7821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c381e1-c7cb-4421-954b-b5211c1a12f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274b8c69-cd66-406e-a752-64a7a84ebe8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c99a90-aae6-4f24-87c2-263277210371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3903f3f-a0cf-40dc-a94a-7ed935202078",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "985b8213-1d62-4043-a19b-354a4b9ed177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bcc7687-e4a3-4d87-a6d2-5dbdb9e3dc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d994bb3-f3c6-4d9c-b0f5-fbd4e8c05e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b79a843-a3de-45b5-831a-2167dbeef6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10b41fe-e612-42c7-9bff-2e82702d2cfb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7f93f7-38c7-49af-a682-aec08874fb75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cab880d7-b7c7-452c-b084-c864e448158a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e79d63-3356-417c-b642-96e584c9ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd0c553-721b-4d04-acbc-f6b4106011db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24828519-ac16-4a10-a2b4-c86c663e72a6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641ea39c-f8ac-43e5-8760-1756433346b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13d4655-83e8-4e8b-b3a8-0e75e00c19c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f8e2f6-f0a4-45ab-afdd-c24ec484936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "64040c7b-95ad-4ced-bf6b-b4471c08b2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb3f5bb-31f4-4814-8479-068554b7f7f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0881b3d-731b-411b-9300-15b236fbb113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02728d31-bd5e-4bba-973a-d9deadf978ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f625a52-4c8f-4dd7-994c-64f488d6aa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db954ac-b397-4792-abeb-93f0a3f960e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4ef4d8-5553-4a11-9fe8-d025f52aef19",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4bd383-bd5f-4962-87e1-5a2674442f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e61433-264b-4b0b-9377-1416a99b8662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c963e3-5a32-43aa-bfb7-106648e41ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14f6200f-30e0-4bea-a50d-5e212bacb688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6229b-c438-47d4-baf9-a8d0a05ea7eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3da11a8-8e45-4de8-9d01-f5b00597a6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9766dd-4041-4000-87bc-83bc49656dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d48378-afa2-4c16-bd65-3bcda4d3e2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e0e03-140a-41c5-bcfa-5fa9f01b7069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde223d4-7bb5-4a1d-9bf3-dcfa89ae61ae",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68a3c5e-d9ef-468b-a33b-8ee568122e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd3aa7f-17aa-4c21-a7fb-073c2e362cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e95085-f6d8-4e9c-83ea-34c225b2065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2ee347-271f-44b4-9b2e-a02c1c11eb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfbf41f-b0e2-4b79-8445-2e3f04955f43",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60eee5a-f48b-46c9-b27a-c196ffe8a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca13201-5ad5-4513-92d5-776e2a343f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d030258-01df-4c64-904e-25f879e1c22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0be0623-97c8-4b3e-80dd-1d52ed01847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2b4203-63c1-4703-8d09-02e1ba146503",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0bedd2-d7c9-41ec-83b2-3b461def03a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae3162f-13a9-4466-91ba-b339089221ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d9587a-c0d0-4d19-aea1-5573b051c6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8c1684-9b0a-48c5-9aed-10ed707d957e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c03f95-6346-4c9b-9bd2-3ccd6e96d934",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2236b8a4-2a29-4a8f-82eb-42790b25b942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30616dac-42a1-4fa9-a30d-224667b4ccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5843d2-f625-4bd7-b306-6cdca76ac1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e866b5a-20b9-420c-bb89-61a453eacfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518bc230-ca10-48c2-962e-b0b92d28e054",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06745a76-62ee-4cc3-b3d8-4b0edfe0e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e30ecea-56fe-4a8a-a915-ac23d5a309fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe00cdb2-f29b-4cf9-85bd-fb9f6fa31fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7efaa9-2be6-4c50-9bd9-c5f22bd47a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49696623-2b28-420e-abe5-dd9602141911",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252fa179-b3bb-4564-bf19-ffae32c4008d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf9de49-c827-47e8-89c9-89f800755b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d5ff89-f5b0-416e-ae64-25d3d3786e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6346b51b-d792-47d9-b1a3-f2311bdbef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c21693-4393-4580-9f11-d0ff14655f61",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3c7bd3-58f3-4457-b1ca-078a1dcb616a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb024f8e-5155-4e85-9fbf-48558503ace7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec78987-2fd2-4df4-bb9b-b5a44c536d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f636d3b-8436-49e6-b216-a1416056d855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30424e5b-3f21-4a2f-8b7f-2c5945ae425c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f067d8d-3065-4847-a717-ef84890fde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d98edea-3f8a-4929-afd3-296021081a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bbd986-f432-4028-b773-4b8bd142282b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abbe9cb-626d-482a-b094-b6816647f98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ccc2b3-ff76-41b5-bbdc-c64fbe7482c0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388fbfc0-dfa1-47a9-b925-6fd88fe05b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158e9eae-ef9d-45f1-a405-e4b577567aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d99cdbe-5a6a-4483-b1ec-08642f5add48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fef19cf-0bb1-4bfa-894c-5021a780bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08d0f2e-4589-4a13-85f1-457934dc5841",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351c363d-5388-432f-b2a3-fe7e7fe4d0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16be05b-a0a4-4250-8379-fd84fcdbd5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8d197-950f-445f-b5bb-ef81e0bb761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b47dd5f8-8977-4a92-a889-e1eebbaae80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1169b450-5354-4869-873c-a4bfc9f70469",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08bf280-8a1d-4f09-a036-c901ce030411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4bec29a-c4d0-4202-9c8c-c5930cfd9294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f8d635-b586-49c2-bd29-05b0c2d0946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdceaed-59c4-4e0b-abdf-7208c3421178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989758d1-9a37-47a9-9631-50cadd1af972",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b2a606-1a66-4c50-a131-e21605348782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc0004-c2e5-4657-b9ae-b6f569afc2e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50765e0-68f2-48d7-9af9-9b5420cae818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b37b1b4-8d15-4730-95d6-4682049b4dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22914c26-d496-41ff-a5de-ddc0d4707c6f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d787f00-3fd1-4fba-9026-5ec5a4f073d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2644d02-e84c-459b-b6f9-74cd32046ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fffdd80-2202-4c91-93f9-40b609494ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ba96d7-2c99-48e5-8131-13b863c1adc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf2ad17-caae-4ff6-bbbc-27569aa61e1c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f7784e-9326-453d-ba9c-2f4e96d19dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ac1da6-a9d1-4cdc-a426-bbda736d987d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09fadc1-9b6e-4ad8-8a30-96c5c7bff0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1628e700-0896-4cdb-b4a8-09226e69fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b9f6b-8e28-4bb8-9f67-5d13025a437b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99531e8-ceff-4e9c-8384-07a030472960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e1b7ef-8183-4ed5-a839-12624c8e6521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f938014d-c4ca-441f-9bcc-1aaea4a25a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6dd56a-22ba-4fb6-b4e4-3e21b64d769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c3d404-2d34-48a0-a40b-372aa84bbaf8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8478f8-4439-458d-b6ef-a7c54b04781b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cae881-2f21-4b5f-83b2-730fbfe7630a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f22c02-b9d9-4d2f-a749-604fbace3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eecd029-67fc-4153-a415-26b54327fbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06934966-e44a-4166-aa66-113581c509d7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabec458-8395-45dc-95cb-38e83683cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662d9673-17d0-45d5-b4cc-f4bddf01a05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a621b11b-78c6-48dc-8138-83f86582ce5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc35a783-b991-4d71-b7d7-5401baf4284c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21f1b9f-360c-4b52-ab60-5c807bb1c315",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1469bd-736b-4b7d-aaae-063832f55087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841676cc-7a32-4fd3-b7e4-f00eb5d408cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d5f6fe-c830-4f1c-aec7-6e7fe5ee2849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc14b9f-c24c-41c8-bae4-dcea634ee428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61160758-752b-4be0-b2a0-4ce6b9412974",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1ed9f9-c323-4dcd-8d3e-9052f49e13d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd281efb-de47-44ec-9f3a-c18b783db61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44d658f-27e6-47ad-98ff-32f181014e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3524bb42-2ea9-4329-972f-65295e91e03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb225fe-6ea9-4fca-a10c-069370201275",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a17444b-3516-4b7f-b558-b690e22a09d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5a19c2-0457-4ace-9f3e-73a86bf4cc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4acd16-08a5-4d1c-af20-47e89c99c39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f385415-e101-4211-9178-ef87584a5bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2635bc-17e0-4187-acf9-552d70b09e85",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2995a-0482-4734-a5b7-6febe5b207d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34d86c1-889d-4784-82c7-3bf93e787ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f57ab-91bf-49dc-8797-76e72646b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b045e169-1829-4063-80ac-3b1581864d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bb1fc5-0677-40ea-925e-5652f4698373",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ff7676-ad8e-4577-8e92-77946e8a634b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24636999-4560-4285-9351-b03ff3332505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41667729-4802-4e2e-b5e4-2007993f3112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b6dfdc-ddf5-437c-a5b0-41bf4042b52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c70142-8b25-447c-83a1-8a482f3531a3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5183706a-e2a6-4957-907e-b4069ff03b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f006ed91-2c9e-4996-9d45-5298de5f800a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd4ed6d-80ff-4016-9480-8cf50077933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef36b5a4-2bef-4de1-924b-33f7ef82a3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df470699-4e29-4a3c-9e9e-afc1daa1e151",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9232b1b1-e435-4155-97c9-2aaf80479d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17def866-7a37-43d6-826b-c9b459c0a8bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30a9758-bd47-4476-a202-71503b926979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff48742f-d251-49d9-bbec-fe59486c3f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1d2da0-4fa8-4c76-a353-059cb86ff209",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac5bf2b-6346-4da2-912f-68a65984269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f676b3f8-dfc2-47af-8a1a-d810df7e6044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e5c1f4-7e19-43c6-96b3-ed4bf24e401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14875033-5685-47a9-acba-3751f9338266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9481aa-70b9-4c0a-be6e-f5563658900e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d47580b-1462-4e44-a534-a60a4e338eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ad827e-0adc-4528-8c01-858f8bcf7257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc2bb86-da51-4b71-baee-70103577547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34751d58-3426-4ce1-9981-83d5628f587a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4f820d-b6ba-4ad8-9e70-6ef297526e91",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c039b3b-61ff-4b4f-b660-9d9615933bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243f44cc-29a7-4ecf-b7b7-2b3d9e88fd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae5d936-e474-4b1c-9912-d7242236e785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a911e55-c89a-4e1b-a224-219119cb179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a74bf9-17ff-46c3-8644-db319bd5adcc",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd098c6b-4782-42ea-b0f2-9f36526453a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd4b6e8-6ae5-4422-890f-a090a006ebe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0364e0-d4d3-470f-bf93-2d3ad42e84e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e441de-5417-4fce-bd59-44cd16e0efb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41960fe0-4b3a-428a-89b5-f1a8c7a0365a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7e4b13-d155-4cf7-b38b-c595d8ed8f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe629d94-1688-4c9a-b024-e27c9c4f9e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964e43ac-f0c3-4709-8965-9555141316d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "88568c8e-d526-4c03-9c96-56be72259898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2695eae4-3107-447e-9c44-4f1f57bc3c7b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bac226-caf4-433d-af13-f77e2220d6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b924d4f-f239-4468-a2e3-2a926b91188f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fdd6f6-7771-4135-b28d-3067f2cfe01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b447eb8-d861-4b69-97e9-e4a3c2c92ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81fafa0-54f4-4b70-b4d7-06152fa557aa",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ce948b-90eb-4499-9b65-4a2014c9607d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee926e96-ddba-458d-9871-87307ece3605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b93b76-e02c-4b5e-80ee-5616898dd62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "74843512-7be4-458a-9a64-c2297f6a86c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7095f3d-f7a1-4d85-929e-4c1c77d8b0b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73233b-038a-433d-becd-9202707360ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ae325aa8-4516-44af-b0cd-7b68ee607602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb3fa91-5966-4f98-a5fa-6cc520eb160f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "faaad297-3e16-410d-b68e-3e26c3756ca7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8aba23f5-9727-4101-8652-0ce6b7ff2319",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3df4645-3fb2-42b0-84b9-a2765ed40b0c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111e12c2-55bf-499e-acd4-8978f5b99b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3a82ded-ccd1-4747-9814-36b058954b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df5c907-3a8f-4292-95f3-b123c67583ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3708f176-5984-482c-a4af-ec177e940485"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f15f6f6-e029-4a8f-a6fe-a2fa9808a3b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff2f4715-29b4-4321-a0de-04188ed2f13a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b933ce9-e063-4e5a-b040-884592509303",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1dd0c9d-c11a-4508-a7fa-d412dda8afc0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5cbbfe78-5aff-4aa4-ad31-760a5c9f2689",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "762ee5f7-1edb-4ce1-b278-ff1f3c852acb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "526ef407-6884-4898-a63c-b84407effda4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "54062e61-e113-4445-b43e-f7498369043d"
                }
              }
            ]
          },
          {
            "id": "61a45a3b-01a1-4c3b-bf87-4c9f25e7701d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b3534f68-8912-4a08-ba20-eb339754b728",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1e5b1c9-eda8-4e88-91ba-aa2a2c23b0bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c70af022-281d-462c-be24-755070a5d802"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "734c6351-9a69-45bf-a151-ed1227cfc058",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9715f14e-696c-48ac-871c-fed948114af0"
                    }
                  }
                ]
              },
              {
                "id": "28711939-6383-4ef0-bd3a-1ca5870dd421",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9aba9b1-e32d-4f60-a1d3-ed848246cf48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7d902b3-1b94-45fe-96e1-5bfeec19171e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d5e9d91-3528-40ee-b8c9-480796a155df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0014c53-c594-46b6-be69-2928477d89cd"
                    }
                  }
                ]
              },
              {
                "id": "cfa6da09-e917-4949-80b7-d12c9da49628",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c4d5a2b-b45d-47cf-bcdf-97e44d4390da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25220337-47d1-45a7-a34a-3e067a681c70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4300f76f-9e71-4244-867c-01c10c904e6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0158da8a-b523-496e-849f-f64b440d84f0"
                    }
                  }
                ]
              },
              {
                "id": "bab99e47-3f73-4169-a5e4-ad33b2adbd4c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff3a3f7c-829a-41b5-8a69-a1761f304e13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7e3795b-948f-406a-b8d2-2bb4438d8fc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e55c0b8-ed7c-42ca-a3fb-2822b2dca5cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6ded0582-0c23-4519-abde-6f196ca17e03"
                    }
                  }
                ]
              },
              {
                "id": "6afcc1af-7712-4535-b332-92338cb7dac4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bdf1802-891b-458e-b20d-e5f0f6137f2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "600338f3-243b-4239-a157-6dcfbb717007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1bbc074d-e9fa-4d1b-96fb-67928a87e9cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4da8cf20-98af-475e-8e4e-85cf8e779248"
                    }
                  }
                ]
              },
              {
                "id": "eb026db9-61f3-44e8-a890-d26106563f23",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e8c8c0-47c7-4b7e-8365-e63b9d538c78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2326cee3-ccc9-4487-81b6-27b0938069ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84acfac1-f5b3-4eff-9b69-b2e23096aad7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e4dc15e-5b23-45a6-b973-4501fbe8cd5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b42b7ff3-9d61-4784-9ee8-0721257698dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb055377-f196-47d0-bff8-5d23118b1d3e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3c96d6f-37e6-4544-b922-347307a8583e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce1273c0-6800-47d7-a34b-f06850bc2958"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b1d8ae8-e0ce-47b3-a513-e93eb63f51e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "59a5908f-8d3d-4ba0-a87a-5e28ba4257c0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "932b6bbc-ee83-4595-9b90-ab87d0f3a587",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a99ac9d2-7a52-4557-8a9d-99e6cd67ecf5"
            }
          }
        ]
      },
      {
        "id": "bd9f3129-d8c8-463a-a816-7853b1b308f8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bbd34150-0504-4a48-b6df-b900526d5f1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5621ed8c-83df-48ea-9389-94961dd0519a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e1f3745a-5f73-4248-ba62-972b5ca03cd7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa82e00-5d5b-4291-a38b-1c6b5213140c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe07f70-dd31-4219-bed7-cf85cb5cb984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039c7ea1-8791-4dd6-9068-c44767eab5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "885eeda7-6c17-4c23-ab54-67a86f9f642f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7228ac40-987b-4526-806f-bf57cff33e4e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f153f00-67ad-41ee-a53d-f6c2ab35fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "945460ec-58ad-41d7-a704-61432da37bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6e3f51-459c-451f-b87e-b1fdd8207be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fef70cc-ccdb-46c0-8067-8a3121f6c9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038dd136-b724-48ce-88ff-f7251091a16a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cba470-3153-442c-9bf9-cde0cbbdcb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7425a204-6a15-4ea3-a678-6d96946cd170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e134516d-59b9-4a1f-8323-f224d5f7f891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83ee6516-777f-4d6d-ba92-f4d199443253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362876e1-9b6c-4c68-ab8c-0923a9cbdb54",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4f7361-2322-4c2f-af27-b07f8a920300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86796d34-69de-47ec-8bdb-2496a89b6a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77a7e3e-aec6-4372-a875-8feabcc2c084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d36069-83aa-4a4e-b3bd-f647705df19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7326c05-d59a-4045-a50c-b8027356c6d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342d8149-32a4-44ff-a174-c194ea921db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c1e011-f95d-4e7c-aa6f-6510e0ec9e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42323422-4a99-4453-9add-451342adda8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535c8cc0-bb9c-4bb9-b641-c9be84fa6971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454a09c8-9170-43d4-9277-91081bdc7f9a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fe2db5-7291-42f5-8fe4-b3104776e15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd3d3b32-d1f4-4818-9aa6-1749346ac237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c749c30-fd79-4a84-b7bb-c6acc63a5ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac00a9a-b7c5-4334-8250-97fbc3de4f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a05ce6-e6a0-40fe-a535-74a718bc67f0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153fd342-5364-4abc-b6d7-fd743ed5bd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be6befc-241c-4234-bf88-2ee52ff4a6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f8983-5773-48ec-b2a6-6b81e45967f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e510a0de-d657-4a07-ade3-52d912dde394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb31f47f-abce-460b-8917-cc42d0214b39",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b653844d-c1ef-44fa-8cde-786e83bcf678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f578b62-0468-4bed-8f29-e4410fcb424f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37500d00-d511-4eb0-afe0-4402532f0585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "411d27c2-9b10-4c9c-a8d3-7106393c9fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99513589-47f6-4453-a30a-40073fbde118",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99cf337a-70f2-4f31-835a-a25a1b42f776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73682326-c26d-4f1d-ae28-a093867b7a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82653c96-2f30-4161-a94d-086cfbf16050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "234c6842-9e80-4815-addf-378ee0f5fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "436a3842-0f08-4c43-890a-1d20a43e92c8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914e868f-e9a7-459b-8123-7aef24f11a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297909b8-bca9-4096-a176-38a99020ce44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0df8bc5-3309-425e-8e19-f2d7964cc958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "961a5a5b-a1be-484e-ba44-959aa5438514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da448f2f-0db6-4abc-8bd5-6a7d0fd4b009",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12774ec8-66a9-4b9e-83e8-fec87c2a523e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162cb8e0-8d7f-4f4b-960d-323ec1ce2be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c1ed66-e362-4817-ab6b-cc1b6a0becb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dc809ba0-f16a-42ea-8c4c-0ecba5cb5110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59e03bd-7a11-4c7e-8986-c1eb73eed298",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d549f3-7c61-4978-8088-16cbd40a93eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933c00e8-28b7-4479-a302-4a1f59f62639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2773525-ad5f-483f-825f-952a139c0818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b884e72b-5a10-4515-b100-b70c981e983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3cb0e5-76f7-4a44-8743-53d0f0e5e352",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b237233e-0245-4fcd-a9c4-389a023d1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f71845-7848-4f0e-92e9-793306c3cd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736ca89a-fef3-4571-b38e-f68b25192754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b7b1d3-07e9-477d-8310-653972d0a07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e0c079-c8de-4cb6-9a5e-187b426d5e14",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281a539b-2bd9-43f3-9417-fe1051f22303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f713ae8-a176-4212-aab0-fc04c856fa2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93663a22-0211-464d-9524-dc68fc345516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e818b2b3-4d62-4b7f-a59c-c3c5e586da21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c88eb53-01f6-493b-9ad5-da7058d68fa5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a377ef3f-06b8-40ff-beef-e70774a17bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05eb3c7f-3bd9-4b9d-ad97-880a9a15924a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa146fc-ff2f-4ea0-b3cd-619030f0d988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15830a49-cf9e-4185-abd1-38807034f1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5158bec-3cd8-4f61-831f-11463d33bcb0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b83673-43a4-40e9-9776-61cd88f787c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca289d-b652-4cbf-b10f-d1f5a39cf72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c323063-c0f6-4db0-8375-6102246c3cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b153d49-5ed3-4750-bb3f-fedbd95d7d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481783cb-c22f-4082-8408-965347fa54df",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116bad55-a6d0-4798-b86a-f74ee6a4f3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0948af0-b5d9-42ca-aeaf-2b8e39b09108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632a574-c941-4e90-bd57-342b05c9018e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "54b86f7a-9e6a-49f7-ad60-a3523788ba5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145cab7d-31a8-486c-a22f-23167077d9da",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13e1ede-f6a1-4bcf-81ad-6f291ca62504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6130a6-3d1f-4366-b26e-09ac0fc9822c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55067a7b-c0ce-4363-994f-82af5495c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b39fb10-f9d0-43c0-b0bd-67ef243a6a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf51a1c3-6a1e-4c98-8afa-ef5576d4c499",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216776c9-e2df-4c98-abee-b9dfcb81d6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b37d554-efb1-4425-a4ff-ff707d8892d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f0f4be-ecd1-4f43-9ad4-3516345c3673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "deecc63e-5c77-4da9-8963-b762eb7e7ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e283978-3044-418f-ac61-e22074311c83",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8084f63a-56b2-481d-9d81-d757f22f7f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3650c1be-b5e5-4628-9541-dd217a809b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6080e7-865d-4656-9d30-f6d812a45220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8afe019-70da-4298-8a76-3a2f809a8b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd81fc8-ae1a-4dc6-93bb-96074a27fe8b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40b7221-0fca-4cc3-a97c-4f2ed31d0015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3faf0218-b185-4985-98ac-27480c04a094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92c8cbc-db9c-4258-a32c-adbd0cb3a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12538aa5-8ee1-469a-ae0f-db7c6cdb5bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1060d79b-dc63-489a-8fe3-f572b3082fea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67e7a1b-b5e8-495a-8f70-91d200649cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd6249d-4f68-43dc-bb5b-fc29250d6b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62009d49-9aaa-49bf-84bb-be41ca4470bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f348f2f7-00ad-462c-95a0-4a809d031329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622eaa37-08e1-4138-8a3a-2acfe54a4586",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5da6f82-1c6f-44ba-a0f2-e3e128fdaf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f1605b-397a-4545-9f0f-64d193320b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4478eb2-a921-4b77-9854-f0997a113f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77ca9294-dcf2-48ac-b65b-236dfa64f348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de088f87-4100-4df6-9446-e8cb40f73ffa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d89cf52-c9d5-4c19-8cba-181b43387d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12b526f-3b9c-418f-a3af-6a28baa81755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e058f8d-fd55-46b0-b2b9-8e5951d6e03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2649538-34c4-451f-a37e-b21af7c54ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a242fce-61bc-4935-8673-e1e224ce40ec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faafedf-7be1-4eb2-9c7c-3a453ef887c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72b51a3-ad63-451a-b87d-19a68c29dee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b3f972-0377-4d45-8810-da924517032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c66816-19d3-40ba-942d-6872e95777e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d9c3c7-daaa-4948-a3de-fd037120e8f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2e9364-a60f-4b0f-a5bb-2323d42c6bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb95b69-e966-429c-9622-104be3d1a6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af44c0-d180-44e1-b6bd-138fa61e8369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25a95583-cf5f-408d-8b62-4df63bc9c7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a52b6e3-2cae-46b5-a5da-e3df945b549f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a85354-3a02-4497-8aeb-3b6419cba8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e3d27a-fc24-4dcc-b2d2-6f8b4ffc696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b47a10-3d1c-456c-b13f-b2437ebfa302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9b13a4-31d9-418c-940c-e0e2c0ee8011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e62bc97-f0f5-4410-b068-747e4f3a76be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9032fe84-d3cb-42a5-b792-d8a968fe7337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16d841e7-f1e0-46b1-a13a-971e99de046b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34289f90-7d4d-4e23-82ad-93ee52294267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf6c12d-6dcd-47f1-8f4c-0963ff90a696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53abe777-8e82-4751-94b0-d629fc6f56bf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b1d29-ae45-4ff6-a552-d9532132d3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fca9744-9a5a-4039-8ea1-e2de4f8fcd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e08c480-241d-4faf-977a-3ea795346b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c44be958-0870-4e9d-b096-a6d97e87daba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6253864-8368-4bca-ad79-ea10d80361ad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c2319-d65e-4c4e-ad10-758d32530459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905731a9-5f60-4f89-bbe6-252d8eb5c8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563630d7-3b3e-4f6b-a172-595e50124ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e5b74cf-f946-4b34-b3e7-182acb5164c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57c8ad-7c92-47e0-afa1-ee0fd645059d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da700a59-b1cc-462e-af67-803f80d94caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431789dd-db8e-41e3-b306-3be1c9ea73e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d74dd2-955c-4209-9f0a-1d23a36a053b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae8bf30-bc47-41f4-b984-367ea0c8606f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe2598a-4da6-43d7-b131-4b9936a04672",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c5aaf5-2f22-4383-b3f1-82e1b7f49f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082bf71f-2f5e-4d18-b9de-e70c71c61522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06188d4b-226f-4a21-a2b9-b43483a4a8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d122bf2-59c4-4e11-b686-86aba2167e40"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adf59c3d-66c6-4611-b550-4136209618f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ad404fb-d1d1-4566-8148-8d5e39c0b1d7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe2d7f3-146a-4f71-b364-b536157ec24a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a23e9276-8617-4acd-a38b-7d4384751d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8d8500-9123-44c6-a7f5-07d6288d23b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1cfd089-091d-42fa-8695-783fba3321cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad86bf88-753e-4b6c-8369-4d0028da57c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58c6de6f-1a45-4247-94a4-1ecaa7c56a0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "968cdef6-90a7-4e76-bf60-ae5f5e4e50f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b6afac2-543d-4ec0-982b-c0ce17f1e8e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97ced749-ae21-44d8-94b3-55ff5ae58471",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0faa93b5-7dbb-495f-809b-ea86f3e71be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9d0575d-30f5-4076-8df0-fe54b5efe1e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a714cb3-1e8d-4393-a7e0-de2e2dff3b4d"
            }
          }
        ]
      },
      {
        "id": "3041f404-cbcf-4b10-9ec5-0e795b35128f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "700b7961-cdc3-486a-a4c6-c02b5e550d9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "495e9c5b-960c-4e0d-b117-86eb5f7d6a23",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47f01666-6652-4a53-ad7b-2f1de7bfe149",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d900ce-edf2-40b1-9466-0ecb06a6d35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95464ea-a442-489a-90a1-01512452a2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c753982-264b-4aa3-b459-5f60ae3088e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb968534-eb6a-4cfe-843e-5606907462c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99aaee0f-2b33-4416-b3ab-26053918e3b4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c42ed17-592c-426d-b122-59696f6cba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d4b55b-fe31-4416-b12f-0a51eae40f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237e9f35-90cd-4f49-bd0f-dd152481aff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e09491-361f-41ff-a77d-90d30fea9738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a573003-3f31-4afc-853f-2ac814d8a8d2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cda882c-2d92-4d18-8758-4805e4041118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8eb5e3-1c46-474b-a92b-bb6ca2591742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2376d380-7818-469a-b302-242732ac1760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08e6f91c-ce54-4565-b9fe-4bd3b904f980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b95adfa-45d9-4c6b-9d40-d50bb6861118",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445f01d2-5ac9-4168-bd47-eda8f08cb5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ec9222-2be5-40d1-98cd-93a2fce5c7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991008d8-973d-4b02-9b1e-250708c9d46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dde31a-fd4e-43a4-aa48-03fbbc410f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5de3e1f-b845-4601-b010-84230e7cf7a6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76535662-442e-4f8c-98a1-a373127f5b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de5e85b-577b-4dbc-b9b2-f784a0ea1c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f3c2e1-5642-4942-b960-d2fa933e90c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f11a6d3-98b6-41b1-8435-0543ceb8f73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181940db-029a-44e3-a05d-3592ef0fc2f8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21297adf-2c3f-4842-838b-eee0d088d1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaae07a-b094-4760-baf3-44bbe72c6b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d37894e-872e-47a5-bc9b-bd4a6cf5f21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "858739d8-7f99-436e-b343-11c3604c4c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19525450-8593-4e0f-a5b6-c1f08e2dba03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50070b05-9650-4751-b767-0482f41e9b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770abf35-8dd9-499d-bf66-88912982d04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b27977-018e-40fe-a8fe-72a6a970d99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f054b68-d6fd-414e-a686-c643919d0fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbd57c3-66b8-41d8-9f38-da4510b33050",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8ace48-9c18-47b1-bafa-5623d7c2fd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1899ef31-0032-44a4-9cf3-c06dc029ae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1852b2-b672-4c52-b380-683a377fe8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb4d1852-5c2f-487d-bcaa-d1e7262c228c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0e13a0-02e8-44c5-8adf-a7475e762eb6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c85de6-15dc-46bf-b7fb-3157688458b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22972487-c467-42c2-bb47-84c3fdf52e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e2701f-1190-4bf1-a219-7223e4da61e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe13b8a6-f688-4ff8-9218-8c16ab6f9df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e810e8e-c369-4302-a961-d77c50651c45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7680203a-0193-44a9-af55-d90bb8b0cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30116daa-8718-4582-b7d5-048a6075ca0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add80a02-df05-452b-9136-c9359163c07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31f00140-3a3f-4614-be03-29cf10340f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eb1040-a5bc-448d-8bc0-080073a29822",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b662c226-47d3-45ce-a910-c69bc40714cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcd082f-d3a2-49b4-8b11-862902046965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d64d63-1b26-4a0f-9e27-885810fdbac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "46112590-c357-4da4-ba1a-c88b54d71460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661dbd55-ecd7-4100-9bc5-e821297b9b4d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d203b25d-958b-424b-a9b3-aeca7f14c994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08f691b-5c68-4bcf-8c2c-42c583dcc7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a09daad-e588-428e-b935-52115e0249bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "757abe3a-c68e-4425-b92a-007835cc71a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa91d5a5-c024-4f3c-a7ea-ef8f3288e032",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c698f1-75da-417f-90ca-35c0393a790a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23b93ac-0c37-4443-a1f3-44228c93cbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489a8122-d916-4506-884e-19a2af343009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ea257ef-9214-4220-a0c4-8a0b370890b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d9ec7-49f7-46f5-9ce2-ab74e183bd84",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3832c36-273c-4d20-9946-8e864d86390e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f68fd69-26fe-43ad-a025-4327400b5b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3296a9f-e838-4fc1-9254-6662051f2e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e7edc7-9dc1-4352-ba1e-65e2b029cc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca861fc-a288-45a8-af38-0517c8146a79",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb3ef90-45ac-4b0a-9d5c-ec41f2e2bac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365f4eec-267c-4c26-b428-2e51fa609609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81984d34-5e0e-4a3a-b7a6-aae9a9c98bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc055626-301f-42ef-a4dd-d957c6497560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558b8274-d348-4360-bad6-56a904a51e62",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd55e420-8f67-4dea-a612-942b5f7f3312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83b5468-833e-48d7-9271-8227b8822953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a1345a-ddd7-4e69-b6bf-4f55fd66cba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de89fc3a-e421-4b79-b2e5-d1ebec4411da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08671bc-4ab3-40ce-a448-d2613926ad0c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411fb75e-31f1-4c93-9cda-7234fc3459d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1b9f4f-547c-4370-9ca2-d6541ac8a44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617878b3-cd42-4a28-b41c-6a8481bf994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a209c79e-4991-4003-98e3-7bc93163e45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008d3c88-073a-4d9b-8863-5a0cab718b3e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63b25a0-56a7-481b-ba2d-44c1affbf78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d586e8-b7ca-48b7-ac8d-6e3589b3fdb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39a81e3-ccc6-452c-8a4b-a4af24612457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c23c6ad1-f88b-4bf3-9eee-be43f85724ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ef7e8b-83fe-4853-bbfd-9f3a3af3463f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bedbe65-b312-4584-805d-9ac615c5f307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b77f48c-da6d-48be-be0e-46daa8cdf2e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcfe06a-d627-4382-9173-29b23a1de332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2c975f-8b0e-46ca-8ea6-d9092364bb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3ad346-04f7-43cd-8580-78c477db333c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3193253-fada-475b-ac2a-92fb7883138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95db1cf3-4cda-429b-b078-fc1c8a775936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6704081-3f15-4e82-8faa-5c7374ce333e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c29d7200-eb6c-4ed7-84d1-074b7b4977aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740a05b7-9326-4f67-89b9-571dfb281d88",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d672b8-9b07-423f-9100-c25578e0db65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2e7f0a-89bd-4e68-9b4f-80e659a617a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b348264-b02d-4cc7-a823-d0055be801ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af0e131-2af9-43b1-aa27-c1ffa3c7a5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c36236-bc18-4f6a-ac8d-fa0bf9df0444",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1311f5fd-fa8f-46dd-bdc3-4eb080f33c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56df9a7d-65c2-4ea1-a40d-5683fa2e19c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a70c610-f9f7-40eb-b05f-e137b9c19f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5354fd29-eaa7-4bd7-95e9-c2c46c11996e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3114d0-a2ad-4dd9-8f17-e0123e29604e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bf62d0-120e-47a3-b1d3-25589e45c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1764d6-e72d-4ddf-bd13-e7a220323436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c78118-e598-4729-a602-869988244249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd0abbf-4c2f-4599-8c81-a2cc019d2a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb55ae1a-badd-4f4e-b0dc-af71f3aff35c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a383f39-c09c-4310-b3a5-051868c9c1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b147b-c888-453b-9953-fd5dce44e6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9658218b-0681-4abd-9601-765a8efe7411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e51036ba-bd5a-4917-a691-8cbec9f9dce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442c3523-1a6c-4458-857b-6b12e2a973cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb55fb12-1f54-41ef-8577-f35ed5b1708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df9ca0e-106b-45a3-bbe8-94c011f6ba5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c195be29-7e67-4479-9a64-ab46ea7bf9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "941f65b6-0aee-4445-9dd5-3e1f2f26bf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e9394d-008f-41f8-bb1b-3b1d3cebda2a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff5da43-33e4-4e6f-8866-11218849e036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0301778-9fd9-4292-86f9-299cd61ed08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8ee776-1b50-4604-9ac1-5ed305f8abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ce4ee8-67b6-45b1-b140-973205013d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e647e301-7af6-4add-b57d-02004d8b6b4d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ace636f-71f4-47b4-80d8-03b9b9fa0da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8f9275-a249-4eb5-8347-5a590574c9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fa6b89-06fe-401a-a037-e9ca5e9a5f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c39ed2a-b338-4e9f-84b6-4190080aacba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249f6cd-5a6d-4299-965c-7987fc4559b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e7bd4-b99a-41d8-ba86-45a5f5906c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9d12f8-02a5-43c5-a791-b2248609a3a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc59f10-05c2-4fc4-95f6-ef37bc4f79d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a140896d-4520-4367-b929-94da2bf9d682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5ebc06-cbff-408c-9fb0-302065c086df",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28915e67-0755-4dc1-bcb0-f4d649e4c4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2915b8-70b5-40a7-b52c-62a3bc97078a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b219bdd8-bb79-4b75-8535-8c6dc2e0c434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5861b9-c4df-421b-8a51-ef867229b51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94ec183-7904-478a-a6af-15489cf9b572",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8419f2-e695-45bd-b9c4-e9db223a3b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf40fb1-4ab4-48a1-a46f-b9630115dce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35f7f8-7bfb-4101-9b52-168c3d99a934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fdf555-4157-4470-b2c8-c5bdbaa178d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d51130-8fb9-4c23-8f31-7f6b9c6eeb6c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d232cc-4e96-4162-92dc-0c99ead305f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1191649-bbf9-4a6e-a4cc-82cb8ac25d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0e155f-e5bb-4cfc-b1c9-6f077aed43a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe5eb93-b4a3-4d25-8cfa-d696f2e3eb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1411bf-2134-451c-85c7-ad767b5ead10",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7443744-8cb3-4511-afe4-12478ac62c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37021cdf-af98-4388-a79a-22cdeb0dd71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7b26e1-cf36-4de2-8d6a-0053c97d237b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4f204b-6615-49dc-8fb5-5e84905d8397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23e3ff9-0842-4ec0-9ecb-d844eec44c8a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05141a5c-fde0-46af-8a13-b924425ec732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152ad10d-093a-4a41-aa28-775cae6dd212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc9a274-d078-4084-aaa7-d6f9d4450c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cb2389-eca1-4bbb-a2e3-888502376e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c84e667-de17-4fa2-a345-ed257797ef3b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d73ced-3605-40c9-ac40-40f39172b3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d5acd7d-77d1-4399-8481-f16887965b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577027ca-4efe-473a-947f-4d70d513b2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efc7bcda-0a2e-46ec-8135-d423a72f692a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6276255e-0cf9-4a17-99fc-562fa6046e77",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71223522-c2c6-4d42-b27b-016e71efd078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f6016e-1f6b-470b-b021-0a4a1fa67356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d92d2ba-841c-4c68-8f18-642599b2cd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89687795-0cde-4eb9-84c2-7caff6a53731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3720af-5237-4a2a-8186-a3b070ffa3d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e1555c-917b-4c77-a2ab-a5863aa3e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea18349-0b40-414b-b961-15ba256f3c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74789855-3682-4587-9f74-9aad9596b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4883da7c-83c8-4b51-a49f-2412f633b5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02f37fe-20b9-4574-8369-ff59495986f2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3483b43-9c63-4182-a49c-eddc864187c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c87e96d-1724-49a6-b7c9-b42d63e9870e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb7afa8-f363-47e8-bb69-2a2ec1b2e6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2388c355-b811-4516-a264-e748882d20dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5069914-28f6-4072-8c01-932c8c60a913",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a2f4e60-a64a-4247-a9dd-20d16f8518dd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142208a9-f1ac-4dc5-a5c1-03ff70814aee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cced6a52-2821-4f2b-8c05-53f9121526e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cb08c8-084a-41ff-a839-040dcd0bd949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c633e2c5-ff85-4717-90ed-4e84558cbeb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d310456b-02cf-40dc-ab99-a9cf6869ebcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ee1b9d9-752e-4a1d-b7f2-543c099ab9b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01c48bba-dcde-4a23-b377-e57a5f752b7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ec2f27f-3d15-4b2f-9c4a-38acd5b8988f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "562b5370-2dad-4fe5-8baa-ca610697f05a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "725ec22f-ba46-4ab4-a2f0-cced511fb0a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42169391-f07b-424f-9906-f3d5e2e76d9b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e7ae134-ef3b-42ca-a70b-c4baed1044b8"
            }
          }
        ]
      },
      {
        "id": "9bd34edc-3719-485d-9c1f-bf07f348e1f7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf0beab8-0f13-4c8b-8f8a-f2e440673f62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2edecf73-06d5-4799-8612-6bbfaf639994",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a701811-87d4-4038-a59f-dabfff797968",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8134ff20-c1b8-4cb8-9433-a878e90de9da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "110b3e9f-3af7-4973-9103-d1bcd031ea75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3cc9d0-cb05-40e0-ad7a-a2dee534ab42",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28834be4-a8d6-4ec5-aa60-20dff2f62f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c5d462-9e4a-4590-9f52-cdc4ec25692a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0774bd97-5a93-41ec-8b5b-c478d9d8009b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b230a2e-333d-478e-8722-0ad6539c1fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd76ae0-c141-4e18-ac80-39aa241c88fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750e3897-ab13-4727-bae0-7b3e8c26296e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4337ca3d-5c66-4e56-92a6-69b559bc2cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8d5d2d-ffff-4624-ba93-80c5ae7899de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3c9149-b146-4cc0-83d6-e629c9d9143b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cec9efa-6cfc-429d-b5cf-6df2f8eef54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce5e4be-2a46-4aeb-89d3-e73eed1f217b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46ad08c-2a2b-430b-bb98-fa0b650e4ffa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39550a5f-a3e9-47c7-9178-3cbe1715d9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac69e2b-7d03-4229-82ed-b99669a42a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da004581-eb9f-4252-b2ff-9ee91bbc26a1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41843d40-b8c0-4984-a99f-5869a4200ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de1b2fc-58f4-4564-94bd-39822cdb3d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b1a316-9ed6-4305-b571-da173d7a5187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ce761b-4bd5-48b7-b39e-efb174b0007b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68594c6-51e1-4382-8dd6-6fffaf402a5e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc039f87-9653-4d57-adac-94284dc1315c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954f62b1-8810-4782-af38-b808b89cf43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc7677a-cced-40d3-881d-ac148257ba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd208c9-9674-42b6-9a81-00d28f55db68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08501923-9b27-4cd7-a3f8-897fcfe1c1d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c54028-1883-49db-926d-29a4e1b23f6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b28578-4f47-4635-b849-a4dbbb7eabff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0559dde-fb65-4564-8e63-d575d57b6f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d89a11af-f4da-4df9-8108-f1fe3e9cb1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c396d173-8f60-4061-9982-e13d7b42b2dd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925d4cf2-4add-4c57-98cb-faa5eb1ea48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7152aa27-7624-46f6-840d-960298c40a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441aee8a-2b33-465b-911c-390981d72888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3a8ea8-d4ff-446f-99bd-e52d36baca7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66cc63c-9073-4157-aad6-8fd7f14d4dba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09b4e9-54b7-4b07-ac13-e3ea7432e65b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d8d3b5-ac34-4757-b6e8-af9d5c24f878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ca31c4-e633-42ab-b6ab-2ae343d8dce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1986ebed-e6a3-4902-a516-b7372d7e64ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b536132-3fe6-44a4-953f-24d861ec095d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f38d6b-98e9-455c-9d3f-541b183db97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473c596d-9c55-4be7-af39-30f33c55e380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df97b08d-ac01-465c-9925-ae4da1ee9275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b61e418a-e74f-47e2-8aad-0e7aebfbe9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8170c53f-d259-4b5a-8370-d118038b1f4b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d011b6e-bc0d-49ce-b362-ada6844a156c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f9d72cd-0243-4e80-8cc4-5b6dfa6a8a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8930ea1-0450-4b7c-aba9-335f27bbf586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dcc1cd-985e-4eae-aa79-ad1b9c02ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5a0cdb-1b0e-4a90-88db-eec4eaf80d57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45a6df-7f60-4f87-a675-3c97d2c4d201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9202d949-e3d9-4b54-beff-62d930c05454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f7737f-fb6a-4785-a6b4-3cfc9e1597a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b32b1e-d03d-43a6-9167-40bd2ffbb876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119f2066-dd26-430c-89a5-e56955b6930c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6b08fa-263e-46f8-9cb8-d9b01b6b24fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eae11d38-9e7c-44fd-9e5b-4af7d05ba28f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9289d0-a424-467c-addc-0a880ba94bb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d8a419-3ca7-4c3b-acc8-3a3b7d03bde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba7f0af-e4bd-4de5-b432-b494d2f8cbaa",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8584aaf-7842-450f-8556-ac43da7778f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed7ce8c-a78b-460f-a37e-ffb69dec7b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf1af27-af4d-403c-8112-8c60a81d3e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ec30e33-94da-41af-bb92-b5c302354083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025863d-39b3-4876-83f1-37357ccb32e3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d4f84e-7154-4c76-8df3-921de3ca5d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5244d3d-36c7-4825-bb0b-48058c88fe29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf351a8-9b77-4f97-b68d-abaa2cca2109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accf8a45-f063-4d36-bd19-08a454a14588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd1b759-a70f-4034-8b92-1b6602009412",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de43f357-115f-423c-80e0-3e67ff286433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc0cd77-bb2b-43d8-88d4-6312da7e7b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4724eb7-6273-431d-b1ce-f274cbfa8c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7873e536-51ab-4ffa-8d9e-c53329518669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d05dab-b9ae-47f5-89d9-9cbc8e4d1f4a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639f4269-903e-41b8-bcf9-3fe61520bbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e8e27e-8095-4350-a193-d53b3dda23fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21a7856-7428-4007-b141-515c3d1aa0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0ac2cc-e198-4082-9f2f-19f578e2451b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba32d1a-b31a-4429-a32e-79a91f98508c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879743e4-0d38-47f6-97df-4d710800bf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8533f8-c8ba-4945-804e-2acd878dd078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed95ff72-d044-4db8-ad79-053280bfd049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c08447d-fb27-4794-af16-c8e7b955af5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "812185f2-d2c8-4c95-a6b5-aef5b5e21790",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02903d2-2bf8-4e15-b026-73e7fe9778e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcecb60-877c-43c6-8176-153c796922eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be04d1-5697-47f8-a225-84411a46cb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b67165f0-6462-4239-b4f1-c7f9b322b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697beb6f-fc05-4282-a6c0-4a912ee6c833",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b946b5bc-6c37-42d8-bfc7-b77e8e49ac33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950f9f55-432b-4377-89d8-089700f19e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a775d-de95-4375-9cca-88caf1224a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9d3763-1a34-4635-89ca-1ef7f53e723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b7f63b-e8c6-466e-a464-dff609f27ff6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d82064-93d6-4d41-bfef-36d37ffa5487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d41d1a-8628-43d7-92e7-49e43f7d05a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae4ee6e-c6b3-4fae-88ac-d7d96b0bca8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3082ff-2291-43fb-95d9-256986673202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d479e-d89d-477c-9b38-3eedc5cbbf41",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a524968-14a1-478c-ac44-e002683a089b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf8cde7-3a67-4b54-a7e4-a155c57ad0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a7809f-130a-40d2-9989-28ff6c91ec5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa470678-427d-4674-ab34-b50d81d94e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b1dbd6-9fc7-4a0e-9fa8-cf59c46d4cb6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d8cd15-1e1a-4764-b7b9-9582d361f96b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99700349-0b1c-4d08-9208-1bc03770ef26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a3f83f-127a-4703-b9e4-7f45b7fd720a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c924a1f-634f-4bf3-9b95-8d910e4e98bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b202af3-0720-47fc-ab1f-a8c4a4267c4d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0525f135-8fdb-476d-88e4-cee48a7254c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c943182-f4fc-4010-9dfc-395983517a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e174d0-dbbf-444d-a6b4-775ab4d85282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f112d7-e9bc-49cb-8a16-f02eab83b606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b830727-4b32-4be0-acef-c35bac349781",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daee864e-e72b-4ed2-a3d6-3963e359a1bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da598856-ea0a-4bf6-9a65-903cd39ab9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f2d6fc7-f341-4839-b390-1d34750f48ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc86f0c-991b-469b-9c31-edf6eaa8fce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab0c251-0c59-4495-b858-6be04919a39d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befb3139-6e4d-41f5-9d12-71cc61fc2d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52809c86-0090-4cf8-81f2-6c8d091e6e08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9badcf8-2c58-4df9-a22d-e2511a667197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdb3201-ca38-45bf-a43f-4c43b57c5f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c0b3a1-48e5-4c20-afa0-f850acd008b0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d93e7d1-3972-4978-adf0-cdb94061646f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbf4729e-bea9-4f1e-aaa5-4b4cdb561226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8504d7d2-027d-4b0a-b6ba-1da76a3e1134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55711708-fa4c-47b8-b1b3-3b94c0eb8e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74899126-189f-4fad-b3fc-fc3c6d186043",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09a6cab-a1d1-49e0-9d5b-b7c804776c90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad18a1b-3b7c-4c76-acda-f55696a66f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f497fb67-d21a-4c43-b2e3-40d991971ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce882024-0599-48df-821f-9d0f9c9c5d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b795fb-c79b-4199-aa22-0b66993e2877",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdb3a14-4278-48e8-962d-c4b31bebbcd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56900fa-fdd0-43fa-aa12-4a1639e97137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32f7135-c600-4a2c-85d9-c691ff01286b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be06706c-ade3-47e6-a10e-937cbb4025f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309639c-4dbb-4831-b464-5840abceee2b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f413ed-27c8-41d9-81b9-fcd6e2e0f9b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198e498e-e4de-4ef5-8fa6-3b7092854793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb2619b-33ff-4ccf-8a94-2a2d38df851a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0823547-ce00-463f-9336-b654502b6919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed404a0a-1ccd-466a-a179-a1ffdcece1c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f493cc-57ea-457b-9bb4-87244e2aad78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3658959d-3cb4-4754-b4e2-53faa04fb03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2332c2e-368e-48af-a0c1-912eee175062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93cfa821-3042-4124-8852-9c755365eac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d44971-cbac-4825-b4c6-2675a42b3c9a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb420b24-683b-440b-ac86-79a0b79f3f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5871eb91-3b90-48c8-bd28-e8cdf2d5b1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87668a00-f130-4930-8d8a-c9eb034d0520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bf51d9-c19f-4877-aa2d-60496adc8b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5107886-8564-4f2f-be0d-6bb6b5400cc3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c33aed-10fb-48f6-a4c1-20a3821f0580",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8131643e-5f84-4872-a465-dd73df073c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2912b9-ef4f-4ce6-8196-01cc6fde8a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ac1e9e-1355-4f89-8ff1-77da60410094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddb23d5-69ac-4f21-ae76-b3b24e5e4bec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52fc630-90bb-46e0-9944-cdfdf69be084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cd5576-508e-4db1-b67f-ad31f71ea98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8eeb181-8128-4a23-920c-aaef281a78de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9c1fae-e1ae-48da-af19-4c74bb7c1613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605e3741-6e36-455f-858d-ed3498c2a508",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8351fa2-8327-4541-9912-3bfb3cb268be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518df7e5-d64a-4f1a-a3fa-d3dd129c2c5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7531f80e-686b-49d9-b9e6-eacba67a1228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2cf51ce-b010-4c25-9bd0-954fb35f8658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338cab45-08d7-468a-8aa1-fbd250bcaa93",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8b839a-9205-4903-b345-fda43df96b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c68e941-5601-4fe4-98cd-c7f27be8c878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd65e1ed-9d9a-4603-80c8-44aa7cccef48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6351a3-3135-4ad8-baec-ac2e491850fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09f69f2-6045-4dc8-8e8d-cf98f8b1c82d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a87ab3-2d9e-4129-88e1-2f48c81ea58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5a9a88-c639-49a1-93bd-60f120288a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7486ab9-8f10-4b79-9d9d-c22659dac867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf78b056-05b5-4f58-a72b-68d18541b2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689222ed-f09b-4776-b015-6a95c22a3de1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa3a10b9-e914-4e31-8012-a75fd1f668ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16511e5e-46bb-421a-ba66-1d5f4f8a77ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e95ff5-4643-45d8-ab6d-55196d508afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f44cf923-384a-4b66-bdcd-3751ed0f69a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f529cbe-f114-40ba-b532-74d8cdf9ddbb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b1a3c5-79f6-4287-b87b-c0f7436ccdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f776266e-3ed5-4e99-9251-6e0d0c9ae4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f39764-86ba-486e-9fe3-90d98e706331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6669db06-ce37-48a9-ae7e-25430e124778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c2cc2b-2dcb-498d-8bfa-ec285a7ad11b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8523463e-a885-449e-9700-50804e5ced04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb99799-2320-4aa9-961f-c3430cfd6d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7272d15f-a367-45df-9ab3-d5327ee15887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5322c2-f78a-42d4-a87d-5d0ece5e3531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d2c147-d69b-4a26-8a61-475cee382602",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324b28c4-8184-42b7-8fac-23194b68a41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d91fc26-6cc7-4b52-9161-b72afb3e35ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aea5158-e9b5-478f-96c6-9dc243b3846e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66caaf95-8fe6-4f0e-b1f8-c46cb95ed5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027cc1b3-0ab0-405e-8c01-44102a66ac41",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf6463a-5d28-40af-a3db-f7b91139da9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a75972-6593-40a7-b087-4876a5f7d1ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62370ec-5029-41b7-a715-4e5095f537de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc19d93-76d0-40c2-89fb-84c7f0558ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727acdee-2a31-4405-89d7-fadf22e1e924",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ffd57d-7330-4e59-a61b-d9073a8d67cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c5de47-2989-4dc6-84e1-f7dd0d2fe38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ed6f6f-5c55-47e8-bcc4-8a2fac772cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd983a8-9297-4daa-850e-6e5b19be5cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed11219-0b90-4b2d-ab42-342b48cce3d5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305b2ae1-7f29-45a7-8caf-22dfcb5f2c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b916f4a-7c9b-463c-b126-5ad01186b3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e29fec-524c-4fd4-be7b-b7c1a4f9eed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "488d25b4-517e-46ad-8e24-41aadce85155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02651e2a-d97d-4b7f-9917-cb3968e227f5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a488ba47-9206-47bd-bc66-c384e973e4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d660c5-dcbe-4223-ba49-f320948accac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e40ea50-4f59-49b8-944d-710cbf0bd867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3cf4ff-f4a2-471f-aea0-dbcc1bd8127e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0568ff95-5ea3-4844-bc2a-65d471f24b01",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3604aeb5-752b-442d-9980-c2ea2ac61bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8399d30f-1503-4243-bea8-df63d03f7aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e887e0cd-6b88-43e1-939b-ccdde79b18eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f06d8e0-29eb-42d8-8b45-3f07aa71f797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb13ff9b-3d7c-4e16-80ee-f65ff230d586",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5537ebfd-452a-4ea3-a39e-0d9b5fb62aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cce93c-ec48-4389-8acc-872dfd066b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c219021-ff0f-4bd1-9b4b-77e8a0619226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3629369-f229-4973-a8fa-614e9a17e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715cf693-f8b9-4a60-be77-365dd819853d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a58e33-660d-40ac-aaf2-6b995be923f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8752c003-1076-4729-8d51-6999df4dc70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1865ece-f27b-4ee4-a3f6-ade3a8cb453b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d16f3c-e098-49c2-836f-6b6cf547c405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a98ce6c-59fa-4e53-a385-ee05c03d59b6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e80e44-cabb-4ae8-8acd-4605f7583709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54387496-507b-4e17-bb57-45266f78ba7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23a2b74-e5e8-49ba-941b-9896f0cd7d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3282c70a-1c17-4b96-b2f4-067def3063ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d27622-d944-407b-a366-67f7a49b8438",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cd0b73-2301-4d9a-be95-0d5836f1dfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c50e1af-07d1-4ad5-b9ed-8fd95f1e107b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59a685c-a686-4ab0-acd2-37d03b9b7923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10cda00-5499-4069-ae84-7ef9df784e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a11561-a70a-4262-a206-df2e0e8d528a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c84237-0ce3-4d7b-b7e2-24373a418521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdf100c0-2c50-4af4-b207-400ed017dd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61429957-2283-4736-b651-d5fe9a68f6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bc4e30-07d4-4e43-a417-30c0ca4be813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c90a47-4fd5-4a2c-acea-609d67763ba7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76098d1-bdb3-484f-a191-80923a23fc87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c26695f-550c-4f37-aa05-94b78611a16b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ad5952-9a0c-40b7-982b-0000538499a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7118005c-2c84-4aeb-a93a-b537f5832290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3e497c-2ec1-4cee-bbea-734c77c81f4a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336b9c64-fbb2-4f44-bea1-a7160796af56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a05dac4-8321-4def-b984-3b54ccd98e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28ec8a4-9e7a-4502-8687-40871236e57a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "552339da-5858-42c2-9718-1a67d2116b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651cf144-eb6d-46ee-aafa-e8eb8028be96",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366547cc-2106-4f76-9bb3-9ea9194b8eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02276ea8-b0a2-4d17-95de-f79f01622627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c66f8cd-d17d-4ec4-b41d-49f6ac54c02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c14edf-13a1-45eb-818d-3ff6c7003921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c773c86b-367f-4864-8c64-34efba698f05",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2f418-5901-4b9b-89f5-82bdde55de24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe49da4c-ccf3-4842-b5be-bb6e6755042c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa66093-76d9-4fa7-9dda-3999c218b6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b775ef-bd67-4285-a8a3-c783600da69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f7e090-f1f7-466e-82ae-b782fe4c9bc0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b81e2d-37fe-43fe-bc81-83402c7e7279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2fbc47-b260-4842-baff-b799afe566d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5246e99-096d-4405-bf1b-1f48f1c74f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9891bd1-fc9b-477a-8b5d-db26eb20ae13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee89c20-2cb8-49c8-aabf-4607fc1ec21c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b87c5e7-d031-4d1e-ad70-bc21b5b0c1d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc2cc5e-7357-4aa4-9679-e4778cb5bcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada18d00-bf51-49d4-83c0-2f9b0438b4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9779d65e-8968-41bc-a669-d06036e575c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a3104a-c51c-4de5-b257-906ab9bdb79f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3550ac97-f04b-4ed9-89d6-6cee3ff51b84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad985e1-8b73-4971-87ec-b1638112db2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e72572-d367-4091-96b3-6e2c8ae75beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e877529c-5340-4970-9e82-5b0c56435ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247e8237-40a3-49bf-ad13-6dadb4174552",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bc2b7f-a8ef-4822-b7fa-709328640dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423501ec-6262-4fe0-a140-31edff29c136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d64476-578b-46ef-a9b6-b1a71c72296b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5003a9-ccc8-4052-9e81-f4096fabf089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e19dc6-df21-48c9-b6e2-8b01a1ae14bd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e329af6c-a56e-4e26-b53a-db61d1347b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53b86a8-aa3d-4ae7-8ef4-373025577e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3956e3ee-fcbf-438a-94d6-e63f910757aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7d1d56a-a468-4481-a670-f1af783a7be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b20f9-4654-4f2c-bbdc-0b6d6dfefe09",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0277ff6e-4b0f-49c4-9506-660a660c5fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69231fd5-1466-4bf8-8e0b-8edfa6efebbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2daec475-3d84-4ace-9f39-cf33a6c131bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0702b5d1-621d-4acf-8818-60eaabf33e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a60a5d3-6872-4877-866e-85f8f59875f7",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc16a20-0c92-4616-b831-7c2aaf25d225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5096bf8e-32cb-46bf-abeb-4265063dfdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c667bbbb-7cb7-42c0-8b23-373fd85b46bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b7adfd-70cc-4b20-8b47-326fc0d7b7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bee978-8f06-468a-bcb1-882b84b729e1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d78ea3-c355-4874-9c4d-11d1c44ca168",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9975ee9a-35be-4d37-aff7-851c0376169e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38db0b07-7ef9-4a92-b17c-6a291f0999a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d241e8-9ef5-470c-859a-58e202b858d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6294a9-2d59-472f-ab87-e77f1dbdbb71",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b2f392-5b7a-4bf6-a896-d0913a9e8f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ce9a647-28ed-472d-98ac-3b49211c96ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc95e9b-786b-4401-b03e-08e5080e346a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23612ac-eac1-4b65-bb84-4353df3186c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ad009f-b0a8-4d37-96f3-092e032b2852",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3bb4ca-8a4e-4c1a-9334-d97828bd61c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d046791-d091-4cdb-8033-76cb4228113e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab52a20-e0bf-42fd-88fb-3b8d0b1b99b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9886f0-76e3-4437-9482-d219b0408d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dba983-499a-4fc6-a92d-13b9c09538f3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683e9ed5-f6b8-456b-98cf-0b5287bcf7bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00371ef6-5d49-4006-8d35-98f762878622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30a5cce-6c88-42fd-bdf2-6fec4d551576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532703ef-71db-4634-814e-98fe0c76f478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e522c322-59b7-47ae-91c1-bc074c8a4eb9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae4ecd-5403-47b6-a761-0e9863e84ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd9189a2-8bae-4ed7-a26e-4c4cc7655e34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9af43f1-394c-4283-a558-76141416ff1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96d584c-f079-43f1-b52c-25773df26dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81904f9f-4656-40d9-be4d-17c85c394b2b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af91b006-fea4-4493-95b2-fb8dfbee75d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53eafd8c-8f02-408c-bc3c-4424061b8283"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425585a5-83e2-4fe1-a1c2-c4d38d8fc34c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67825a6-3a71-4ef4-a105-8a1b200e48d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a34573-56d3-42c2-af21-a562155f6a8a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c536e5c5-bfa3-499f-8c50-b1460e3dce3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e41704-deba-44ba-9ce0-3f614a453191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ffaeb1-996b-43e6-a096-8e8c1404ba36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfcf1c8-c328-4f6f-a700-5fd954af6dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e253142e-0c70-4c63-a1a2-e2f41362fa90",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79326021-4edc-4cf1-b563-900462ff0fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fe288ba-30ca-479d-8588-f8f57a0fb190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45490f1c-5e9b-496a-8961-14dc987d8d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b6cc84-5746-4604-b64a-c11173baec0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c45370-57e3-47fa-b5e0-41169941dd56",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a16fd21f-9db2-47a6-80be-ad3507e99b1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dc92c2b-3984-4440-a298-e3f888a91da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f39f0dc-b128-4fa1-a366-d17d05fd6c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f409079a-53b4-490e-9ffb-98545d87f861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6066caef-3e33-4816-9c46-f075fadd1273",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcd610b-7e5d-4c12-bd27-c84f9a46b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8467dcc9-b1c3-47bc-b335-ae6c44e7c052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7542c5-6847-4945-8bc8-634fb4bb67cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223d83ee-9c6e-42e4-bafe-7140c91731ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cd6e5f-1a33-4423-9e2b-25d4cc4620b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725dbf32-b634-4a35-b1fb-19e2e72bdd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f6befa-e166-449b-8748-c6adc60e00a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d2f379-9db9-4ff1-9205-a7d3e0ecdd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7837dbc2-c34e-49d3-b03e-a124d4388e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3555cbcc-521e-4401-a7c5-a0647e5fdb7f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbe718c-8de7-4051-bd15-edfd7a736563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe59d4fc-c94d-4bb3-a55d-9bdddc0eca80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf9868a-a97e-4663-8ae2-91d36d116e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1b1ac0-2a55-43bd-a2f5-bab9b1d19cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae1921-aa7a-4242-93fc-dde5fc0d9683",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0f425-6508-4bde-aafd-fcb96f37ff35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70501b90-bc4a-4a3c-a0f7-13c5bf493618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1e77c9-4c66-45bc-89ba-ad32846126c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7d7c2c-c68c-4d10-a8f0-ee582026d638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06187f1a-b5d3-4e65-aae5-8b2b58134238",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17da96da-112b-4534-b377-be5f71101571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c916d56d-ed8a-442a-a1e1-a633717824c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d601e70-390f-4af0-8029-d3a75099f34b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee8a3692-cc9c-41dd-a76b-84006d941620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33256499-b464-44cb-9e66-d42ac53c77cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d06cb9-be6d-4188-a24c-3ae5de78d93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4402dee4-c40d-40ba-b355-c25671e14217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af27ea9e-da96-4049-96c3-0ec225043755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661e087c-f956-4451-849d-107bc29abdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63dd3fb9-7447-4d3b-a144-af1b77c8d6b9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f90a084-a71b-4bb0-8ea2-06cc35effa8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2e9f338-92bf-47c2-a648-6cf91a899eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ef029-d842-4cd7-a26e-b9b2a84e990f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c87e4b5-a74a-41e3-be5a-0bcee30bcd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4de483b-af6b-44ad-8216-b1abba518714",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf427b7-eadc-4730-9d05-792542ca96be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f489d7c-dcf9-49f4-8dd7-053eb71d2e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c603453-5eac-4b24-b0fa-03ec97b173ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4f4635-930b-41da-baad-3b4ed71dce99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d3f0d5-dbe6-4004-a456-d14c3a2a8233",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0387766-3503-4ecb-957c-7432f5c58fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41be256e-e16b-4b25-b4e3-f9dd0d185464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "968cd4fd-4806-4e2d-a5b4-af7fa2633b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5be1b58-4371-47ad-a76f-18d42e9825fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855ab987-faf6-42d3-9006-766abc8f76ff",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20062e0-30b5-43dc-b291-63f06e12ce08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84163dda-b963-439b-9423-7dbb01d3c609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8becc13-d567-4c8a-b10a-faa0461b3446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f87993-68c6-43c0-9d0f-eded9769b1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07545068-be92-4c27-8204-96b2da830941",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6175615e-f09b-4025-bc8a-d4b6fb372362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e098d9c7-c184-4987-8a1b-e65db2734c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d54a4f0-b7bb-4633-9556-49b3d7097ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a398bd-44ca-479f-93c1-308e8f52ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe9a069-ab82-43d0-a3c4-fb832c38fe48",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf62b65-98fc-4d60-8a84-0091acadc2da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23dc677-8206-4268-899b-39891f2e2139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf875e0-1e0d-4cfb-8104-75a3a6c5db03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327ff108-892a-4db7-b405-1e072b1a6aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10200364-bfbd-46cd-86b2-f353629c1da4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6319c7-226f-4f4b-a067-4114c215d03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f87bf77-b980-45bc-b566-e4c96d7afae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1dd7a8-9526-41f6-9f85-402f31fe7fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3718ee5-cbc1-4989-a31c-9bb35aef804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1471b87-164a-44b1-91c5-5b29aa37d787",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca92b25-328e-40ca-a306-8a7937807106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c91393-cf4b-4402-8c16-05b87ffc3ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad0bfd8-5cb0-49a7-9f24-820d072f5cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f11db5-2ba9-4343-95ad-3a267455f44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e25199-56f4-4b8c-9145-056757ecf899",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b96b7ff-f1c9-4f87-a2a5-1cdcef71d88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503d5765-6fef-4c4a-9aa6-a17a1bc32dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002f4b03-d6fe-4767-be4d-7d200283dd96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a5358f-7a5c-4252-9534-a4b0dae9b794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c95ab8d-7c40-429a-801d-394c4d9995ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16b7877-101d-4f01-a0d5-3b4c6df99700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8780f62e-197b-428e-a858-b1c365428158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "953dc9a5-3467-47b0-8906-1b001248d898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075ba64b-9971-4be2-b63c-9c3912cdb7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af07aef-d2c4-4a6f-be26-9630d4d3016c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e78c38-bb18-4a97-8277-2052d007600e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22df032-10ad-4d48-8622-769cb7f324b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad77da8b-8913-44e3-9de7-3fa9dcc25dd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8f8e5d-170e-4eae-8f4b-222fd051afd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea23bebe-a22f-4f6a-b34f-b84aab949617",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ff50aac-27cf-4da6-83b8-45a62d581706",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24817cb5-a49f-4a2a-9db6-9cace2b7a247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29798f2-b3e4-4659-9f3c-5adbaf2dbc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "114d0f1f-8599-4789-ad9b-96dd9ee24470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270d7443-6094-4eb1-b6ce-20441def58b6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a7800c-93a5-489f-a7ea-e91c9cab03e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3d90f2-b81e-4305-9456-8dee230a6a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881a725c-a3f8-4ac1-9a97-2424bff645cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b310c35-3a29-44af-8f8f-27dd9fd46147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe18fd3-4666-42e4-8e64-7c6cebdb6704",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfdba59-8d43-4ec6-861a-e2403f5f86d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b6fb518-0758-4a75-a860-e54e2235ff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f400d1f8-400c-4813-99ad-98e1e7a8a35e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706e15f6-dee2-47b5-9608-167b710d4b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2193b3-3d8e-488f-a8a9-04df51684070",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9bd000-75d7-4c21-905f-b6203a0b18d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d99f7454-1a1f-4524-b5ff-4a56a66cce96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997756fd-8e05-49b7-9002-9e7c886bab21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eed121-4fa2-4311-be78-4bcad85fbeb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b728e18-9024-4c15-90c7-9019c5b1a65f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b333040-8e22-4f97-85d3-d6ffc2520152",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43524079-b2c2-4929-bc46-163efe65b008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2009ba18-be40-4326-814a-fe940a105afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b091cad-95a8-4ade-8547-c5dd00c56c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea6b4bd6-b2a7-436b-89b4-3c2582dbde78",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e165f3b2-2404-4a31-8cea-2bddcb75a81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ec3599-2d49-405e-aa0a-0a4cab50862d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb78b61-aea9-431c-b7f4-2612fdf295ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a066e5a-8b56-4a1d-8d8c-8e5bf6ef7acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e42f71-c205-4df8-973c-b26d6828d478",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea29116c-dee6-48c4-849c-6987cdc33455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71e1b6e-1dc5-4c4a-a1f7-d20ab9c410fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca8e1f-8dde-44e7-9869-a2a8e74f4ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86e100f-afe2-4596-8196-a00f0590b3d3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84811797-baa1-48ff-8d60-6a8109cbbc92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06b097ad-d2f8-44bb-b13c-a54b4c161511"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28951ba3-1f0c-406a-a3ba-a40693dbb100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02126237-63e3-4a3c-830f-5ea4ace77ffa"
                    }
                  }
                ]
              },
              {
                "id": "9aac7208-303c-4483-aa49-6c9d1ca1a79f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "508740dd-5df4-48b5-8629-e5a64e564e7b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd5dd34-5ab8-4767-93d1-0c32c6a65814",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9555fae1-f4ff-4194-9af8-ed62154858c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9556af-8e64-42ad-a863-69d6ce5e0dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b4caf74-00e6-4d63-afc3-741ab17bd675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2abb8d4a-0b0c-4c43-90b3-10a2af668cf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f972b4c6-c7da-4e89-84eb-11fed75fa1d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc4d8e4-f52a-436e-bc7a-0eb0fc8f6f5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07cdf9a-0c59-4952-9ee7-cc6375c6ae2c"
                    }
                  }
                ]
              },
              {
                "id": "50722820-6af0-4961-93a6-315da6289c11",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "73390d4c-5d29-4eb1-b653-71e2a1e49bbe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a93d721-2852-4916-9d52-e347955cbf4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "43ed4400-4006-4f3b-bf81-425c7e203c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae496c3-a555-4c44-832f-1302ab1d62ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e89597-c177-4147-9b4e-0ee8fed34e00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d536f164-8840-4527-b185-fdac73f874af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "964b88b4-ab27-4946-9c77-a1a9521a8ae1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d800258-f325-4af6-9728-0510f8dbbf63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1aa636e-02bc-4571-8a1e-872d9029369c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21e12eef-9e1b-4460-8bb5-1d7c7b1a80d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c07bf996-e86f-4eb9-9b51-27b87363299e"
                    }
                  }
                ]
              },
              {
                "id": "a3fc4136-a608-4503-868a-3d225324fcfc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d4c93bb-2a3c-45b0-a543-8449c8515334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5fa0962-494f-4bff-9f12-5f2e5a305125"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e27d7ff-5bde-4694-be53-495a1835e0f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30530cbe-aad1-4ef3-8bca-8908d2f19c92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d8364c1-76e2-4fbe-ab20-63576a5523a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7dcb7cd1-588e-4ba4-b65d-adf7d2ec745d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68901ff2-94d7-4f29-bbfb-62aedafc9ed6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ae97ec0-7d8e-4f44-94e9-1f73f4fb77bd"
            }
          }
        ]
      },
      {
        "id": "993e21ea-3238-4489-aac6-12387abea757",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bcd2980d-de91-4590-bf03-58ac0e9295f5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "105aa469-fc19-4d3d-a84c-ee459e1bbfa9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "214d9a04-f62a-4066-8382-dcb4883c21e6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c343cf-7fea-4570-8a03-1eb4f94ef4e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "32debdbb-6667-4cb9-b055-205df9616f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01790dfa-2d06-441f-a12f-9b4a3c259c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "137ec7d5-d534-4ff7-aee1-2dc0d0097aec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09753112-9b8f-4a8d-a9c4-9ae554181e22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76f43ec2-cc42-43c5-bd71-1ce9790ac73d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a65b1a0e-80e9-4b41-aa45-a154d738df41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2a21979-a9fd-4884-8f86-de5309656fe0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "288c2170-52e8-42af-a1e3-df703b010745",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1d5dfc0a-00a8-4775-95de-4380f02b72bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f51118-ae5a-4465-b8fe-beba12a83303",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1a1c432-721b-405b-8d9d-6ec4ecaaa7ed"
            }
          }
        ]
      },
      {
        "id": "5ff7c4c3-fd89-4ab7-bd41-d109184af078",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d7fd17f8-d573-4e02-8258-4043a313f66c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7caa164e-3e8b-450c-b9b5-c41ef1dd1b30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e889fdc9-1973-4073-8d8d-6bf20c878975",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d59ff4-5957-4b26-b713-7d387c264c3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d94cc58-f8de-416b-adb4-a6fb055dba89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6e1231-e870-4fd7-aaf0-a6a56a648474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf7d5659-878b-4cd9-9f0c-92d3fd2e7b2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c4ff603-7b83-4395-9cee-1aa88d5c1f53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54c1d1b8-2aa6-46f5-a336-9cecc2e89204"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3156ba84-6b6a-40a4-8c50-9331db9a228a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beb6d194-02d7-4f69-b559-01e4ed69d500"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198fc988-7885-403f-8943-bf8b36ff52af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94363f2b-8b60-4c2e-9024-0e44bf0e0cf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5f27a7b-1dab-460e-9b01-aecf4bcbb154",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b41cce2f-e969-41a0-b703-3467505af67a"
            }
          }
        ]
      },
      {
        "id": "12e4a38e-5185-4b39-a330-2b59d3bd743a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c046ec79-6378-4957-b7c7-f3e25338f04b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d86e3ae9-9f16-480d-98f3-60cb6f3931b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e072a53a-c15b-4057-9b62-07c1b9f1f2a0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5598dfe1-3197-4ae4-9860-b0dfb7597291",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5debba4c-3805-49c9-9068-160bfaa8c583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b8e09f-1a0a-48fe-86fa-07308bdcaf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "282d9831-d5e7-46e9-b106-70f486765168"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "105d9dd0-2298-4fb6-85fd-cebfae996a07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11026204-7e15-444a-b1cc-ed3717e6a0b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde4b957-eef3-48fa-91ad-a3b45325aca9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c618c1d3-ea54-4a7b-8e75-f2047865601c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b5e1137-7484-4dad-bf13-83922abf811c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a707a473-6e0d-4bde-b45e-933314b4da22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ddb0dca-70e1-4d2c-a720-20840a026366",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5ad6221-f62e-47b4-bddf-8d5c6a4e389d"
            }
          }
        ]
      },
      {
        "id": "1ddc9c55-9413-4a2d-a26b-8f4110cc09a6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7a84e92-36f8-4f75-b0c2-59bd135449ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc7632cd-69c0-49f3-87f4-a13b2019b006",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "16907a3c-30cf-4f2d-b559-5850c607ea3d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f63bddff-4b67-4d8a-a4ab-ddde8e194864",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac759816-f575-49a1-b9d6-0e79d47e0c23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 103.62676056338026,
      "responseMin": 11,
      "responseMax": 5119,
      "responseSd": 497.1538021033773,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694219492682,
      "completed": 1694219534351
    },
    "executions": [
      {
        "id": "33073aef-7837-4afa-8853-5f9d9acfc763",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aef1201c-76cd-4f71-b584-b93e67b63785",
          "httpRequestId": "697454c0-dc52-41d6-be02-5c7bc3ed3437"
        },
        "item": {
          "id": "33073aef-7837-4afa-8853-5f9d9acfc763",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4dc22252-89a8-49c5-8d99-a7e2ddcf8db8",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "939fe898-ffd0-4f44-b46d-0bdf670af387",
        "cursor": {
          "ref": "00371b47-b792-4c90-829d-68149cf9c4b0",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1a68d7b1-4712-4f4b-897b-186154135f06"
        },
        "item": {
          "id": "939fe898-ffd0-4f44-b46d-0bdf670af387",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d97a630d-b05e-4356-a05a-5d28e1475ddb",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "cca3681a-8116-41d7-b485-864efab2363b",
        "cursor": {
          "ref": "9a9ab961-9973-42f1-80ea-9a6b722f0b26",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4a773258-4c60-4638-ba60-d941a84fea4d"
        },
        "item": {
          "id": "cca3681a-8116-41d7-b485-864efab2363b",
          "name": "did_json"
        },
        "response": {
          "id": "8db036f4-ac43-4228-9428-e67a627c8856",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de04a2-c8d3-4c84-9b87-27bbb55a7eda",
        "cursor": {
          "ref": "0cee3c44-e6bd-4f89-8715-7b1e015dbfa2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3b590af4-0d80-42e7-8bd2-89d725962966"
        },
        "item": {
          "id": "a9de04a2-c8d3-4c84-9b87-27bbb55a7eda",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e57f1a5-af03-4890-961f-93bf9b5dea9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 894,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de04a2-c8d3-4c84-9b87-27bbb55a7eda",
        "cursor": {
          "ref": "0cee3c44-e6bd-4f89-8715-7b1e015dbfa2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3b590af4-0d80-42e7-8bd2-89d725962966"
        },
        "item": {
          "id": "a9de04a2-c8d3-4c84-9b87-27bbb55a7eda",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e57f1a5-af03-4890-961f-93bf9b5dea9e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 894,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b5a129-c890-45f4-9160-57abc1ff53de",
        "cursor": {
          "ref": "340161be-4398-46a5-9986-27ab026a008b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "70b287e7-d5b5-426a-816e-4313e51a5222"
        },
        "item": {
          "id": "51b5a129-c890-45f4-9160-57abc1ff53de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "deaf7b2d-9957-48a2-8f2b-96ccec5755f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59ad4a5-537a-4288-a30e-328ab15fc326",
        "cursor": {
          "ref": "36ef0c16-e757-4a86-b815-80a2f16272b7",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b07bfa34-df1a-49e5-b903-385edb2fae34"
        },
        "item": {
          "id": "d59ad4a5-537a-4288-a30e-328ab15fc326",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "58036a56-59ee-4d66-a2e0-e65a426da253",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c852c7-c57d-412b-a10c-c60d56c301be",
        "cursor": {
          "ref": "6a35c029-a637-4f50-9161-e58f88dd7088",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "963715b5-0c01-4f2e-8400-0e2dd984893c"
        },
        "item": {
          "id": "d6c852c7-c57d-412b-a10c-c60d56c301be",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2d89d432-b548-4dd1-b89c-3e573de1ffc0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a61e54-1d90-44c2-af3d-e5d2d88c6980",
        "cursor": {
          "ref": "dfb767e1-2036-4b86-a9ca-9e460edfb9bf",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3917b8ea-cb6d-4889-9a29-2a1c0d4739f2"
        },
        "item": {
          "id": "70a61e54-1d90-44c2-af3d-e5d2d88c6980",
          "name": "identifiers"
        },
        "response": {
          "id": "cdf6b4c5-4d77-4d0f-a17e-736929069ff4",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf9c32a-80ff-4012-a189-869ea07e6730",
        "cursor": {
          "ref": "89ff9b80-c2d1-496a-89cd-be5083e6813a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8b5568a7-07d4-4361-84f0-0ce3cb28b686"
        },
        "item": {
          "id": "ccf9c32a-80ff-4012-a189-869ea07e6730",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a6707ab7-c9c5-4119-8830-d1cde5901025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76522b5-be4e-443d-911e-a3ec5e4b123f",
        "cursor": {
          "ref": "b506089b-73b0-4eb9-9aa2-6242a86be802",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "22a22ab6-8346-424f-9fd0-dc1e233e5d5d"
        },
        "item": {
          "id": "e76522b5-be4e-443d-911e-a3ec5e4b123f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d102bc8e-0987-4b36-87e3-bd91acbedefe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd9f949-3874-4b27-9bf0-e110b41bb2d1",
        "cursor": {
          "ref": "2e65853a-92d7-4405-b0d0-d57f490bbf02",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3ee03d0b-a9bc-45c7-85db-02e6f49d71df"
        },
        "item": {
          "id": "6cd9f949-3874-4b27-9bf0-e110b41bb2d1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bf10933d-ab06-437e-921b-ba0f702e5a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2de0554-f549-4f5c-9a76-015eacb93209",
        "cursor": {
          "ref": "19376cb3-b0f2-4cc7-870f-1120c0be47de",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1551024e-5a53-4bba-8994-d523768d278c"
        },
        "item": {
          "id": "b2de0554-f549-4f5c-9a76-015eacb93209",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "931e777b-9b4a-4d3e-80ba-ff1b98dbd399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac6dd64-a9a6-4806-bda7-33d8210d3684",
        "cursor": {
          "ref": "7fa1f58d-cd50-4ca1-8f66-8008b936f60c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c925139c-968f-41d6-9e15-9253df7cc733"
        },
        "item": {
          "id": "eac6dd64-a9a6-4806-bda7-33d8210d3684",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c9b791b-a59e-45f8-bc7d-ed7feba7e7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b5e753-81dd-40ce-9cae-69109439a9e5",
        "cursor": {
          "ref": "f8fb9644-7c89-48c0-85a1-e1fd651e951b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b006e736-7637-4f80-ae89-c4562dcf0b38"
        },
        "item": {
          "id": "80b5e753-81dd-40ce-9cae-69109439a9e5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5f6c2183-bb7d-43c5-af43-08f25ec9462e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20e269-69e0-40b9-a3e8-56f3e0e2f9b0",
        "cursor": {
          "ref": "eacdda6d-dcd5-47e0-ab4b-3c8497f510ea",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f80f5b5d-11b2-4c73-a8ef-c28fd80a2731"
        },
        "item": {
          "id": "4d20e269-69e0-40b9-a3e8-56f3e0e2f9b0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d6600153-d2d1-4a29-8655-bf5455cc56aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8aefc-103a-465e-b4df-4ec0cb667607",
        "cursor": {
          "ref": "a1f5a6dc-03e5-49cb-b6cb-4a5c88cc68c5",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f5d82f03-8037-4091-a110-1a4aa7ff4a97"
        },
        "item": {
          "id": "e4b8aefc-103a-465e-b4df-4ec0cb667607",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "769ad027-7525-4fdb-90c5-344804f42639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedd6b8d-63cc-41ed-a263-7ae81323f6b7",
        "cursor": {
          "ref": "995a04e5-2d3a-4f51-b977-2c47271e076a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b2febb40-8d27-4751-b299-5a77abfb4a10"
        },
        "item": {
          "id": "eedd6b8d-63cc-41ed-a263-7ae81323f6b7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1c834d65-ea5a-4498-b0ce-82bc3ddd8590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83e56a2-be3e-4762-84e8-7c5f6c70e14f",
        "cursor": {
          "ref": "e6e8fff2-4736-4bda-b20a-a598378cf478",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "14108818-1442-4006-b607-d6bc597270a3"
        },
        "item": {
          "id": "c83e56a2-be3e-4762-84e8-7c5f6c70e14f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "579e020d-ad3d-404d-8dde-6c1f862f54f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3decb2e-9c66-4c0a-9dbe-09d3678eb9b0",
        "cursor": {
          "ref": "1c056702-f00e-4009-9b97-a89c3d70212c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "574ef8dd-bb1b-4494-be9f-fa30bf35c380"
        },
        "item": {
          "id": "c3decb2e-9c66-4c0a-9dbe-09d3678eb9b0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bc7073c5-1df1-4524-87fe-c5ecb191fb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d579d901-ae9a-4756-b775-139cc80798a9",
        "cursor": {
          "ref": "7280e86f-daa7-4ad5-822e-34f43ac45722",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9eb835fc-55a8-4c82-9f29-c670e58e306b"
        },
        "item": {
          "id": "d579d901-ae9a-4756-b775-139cc80798a9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "939d4ba6-acd5-463f-ac30-6ca57fb76bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ca4887-66d8-4009-9b10-24dfce3b2524",
        "cursor": {
          "ref": "a011baa0-3ca1-4eeb-8d20-857b5dc6eaea",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "607cdfb5-7ff7-4fdf-8d8c-b11ac12380f6"
        },
        "item": {
          "id": "53ca4887-66d8-4009-9b10-24dfce3b2524",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "539d59e5-bd25-43bc-a15e-5feb23ead7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c963e728-206d-4ab3-981f-d3c683c1c05b",
        "cursor": {
          "ref": "9d6227b7-843a-44c2-bc62-9fcfbb897883",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "11b3ba2d-e0cd-4525-bcde-91af0d615470"
        },
        "item": {
          "id": "c963e728-206d-4ab3-981f-d3c683c1c05b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e73513be-c389-461e-a398-a8c6273b3b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef287b14-a521-4054-ba78-90daf9dc4a36",
        "cursor": {
          "ref": "2bd79d83-36da-43fa-8264-4b4cc3987c3f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4c94214b-68de-4e70-8e05-e3f5e45232d6"
        },
        "item": {
          "id": "ef287b14-a521-4054-ba78-90daf9dc4a36",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e7a6deec-0113-4a40-9fb0-6740bf77fa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ee1539-4816-4d9d-9fc6-352dbeec5184",
        "cursor": {
          "ref": "0d4a7d87-7c32-4a5f-864c-2a670c7d83c5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "810b40a3-5caf-4169-bd80-84a038ec34cc"
        },
        "item": {
          "id": "b7ee1539-4816-4d9d-9fc6-352dbeec5184",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36a6f6ef-a951-4a40-a47f-78c13cc6f2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0bc97b-cdc3-4e16-8d4b-74dfe121257e",
        "cursor": {
          "ref": "8ad39dca-b5d7-4d78-a0bd-f9ca91b26830",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7a9811c3-b2a6-4e8a-a507-73a99a71e397"
        },
        "item": {
          "id": "ac0bc97b-cdc3-4e16-8d4b-74dfe121257e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5a983594-4a1e-465f-a6ae-e7aba228e0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ce9415-019e-4eb2-a0e1-9ffebd9fd852",
        "cursor": {
          "ref": "806f6bfb-a272-4e31-8be1-ec7e4488abe8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "76d31074-c40a-4279-8e45-e0bc01851fc1"
        },
        "item": {
          "id": "78ce9415-019e-4eb2-a0e1-9ffebd9fd852",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9eb58cb8-22a7-4056-b024-8984e724e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fabcf40-0a59-449e-a964-d8609a5871bc",
        "cursor": {
          "ref": "0ba2ed2f-4655-41b6-93e0-f37438d96e35",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bc4abc99-690c-437c-ac2d-d7d5f59dbcdb"
        },
        "item": {
          "id": "9fabcf40-0a59-449e-a964-d8609a5871bc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ef0e5bb-15b2-4e31-b3de-2a8dc7395233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcbdeea-2f3c-4efa-9a97-3843bdef12e9",
        "cursor": {
          "ref": "d2d94969-1303-4ab1-8f29-dfaad11e7d05",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "211c4505-d309-48b6-8a9a-b3c15346a540"
        },
        "item": {
          "id": "0fcbdeea-2f3c-4efa-9a97-3843bdef12e9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a4837bbf-e728-436d-94ba-be3c4b83dd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3745f735-2744-4d2b-b563-c038320023cf",
        "cursor": {
          "ref": "f5133d5e-f2ec-4037-bdc5-cc96457df131",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2491e704-fddb-49c0-b9a8-2749655aedad"
        },
        "item": {
          "id": "3745f735-2744-4d2b-b563-c038320023cf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d9443b68-42a3-4a59-8d79-588e97907b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbcb9ae-531a-4a64-9777-f548c3b5e4a4",
        "cursor": {
          "ref": "d556ba12-6c25-4eb5-90cf-5638ea09d711",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e3a9f6c2-93a0-4d58-87e0-985e2cf2c6ed"
        },
        "item": {
          "id": "2bbcb9ae-531a-4a64-9777-f548c3b5e4a4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "81ba0c16-fcdc-4419-af72-4fe364e0c783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3525123-5f45-4ef8-9316-5ee48fb277fb",
        "cursor": {
          "ref": "32f69dc1-ca13-4d6c-941e-85100cdcad5d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "948f6e72-0f68-4bee-aa91-9c634a94601c"
        },
        "item": {
          "id": "c3525123-5f45-4ef8-9316-5ee48fb277fb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5cb9a15c-c04b-436d-a7d0-1fa5e4fe6eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01100d5e-cab7-4c3f-83dc-a5feca1a828a",
        "cursor": {
          "ref": "13b91f80-4b94-4843-a5d2-fada64624f83",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ab47dd1b-3c15-4baa-9efe-aa8715522c29"
        },
        "item": {
          "id": "01100d5e-cab7-4c3f-83dc-a5feca1a828a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "49771eba-8445-4c19-a39b-2755dfd465d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9fa4c9-8e78-4c17-a2d9-689dc8b86b76",
        "cursor": {
          "ref": "5354dabf-0fda-4be4-9b7f-66c6a1ee077e",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "728ecc58-5287-49c5-b72f-1d7beeec1d7b"
        },
        "item": {
          "id": "4c9fa4c9-8e78-4c17-a2d9-689dc8b86b76",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4333ea0f-d670-49d4-a715-a818d68d2bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de44beff-3e31-4dc8-855f-9bae72f00f18",
        "cursor": {
          "ref": "871eb61c-050d-4d19-9dc0-9f4df698bd2c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e16a6266-0afb-4e50-ae8e-c0a9c1310145"
        },
        "item": {
          "id": "de44beff-3e31-4dc8-855f-9bae72f00f18",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ac19577-f783-4988-bd51-93a967e1a19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeaf661-1930-430b-8e73-d93e57cd7ab9",
        "cursor": {
          "ref": "a7e27078-bbd6-4406-8981-4f846b59823f",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "92b122bd-937d-4c58-9084-d9e9eaf7246c"
        },
        "item": {
          "id": "adeaf661-1930-430b-8e73-d93e57cd7ab9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b47acc23-fa14-4059-b4d4-8843aa250eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d6be5c-b8e7-4afe-8145-0b6b4f8925b3",
        "cursor": {
          "ref": "3bacbf25-7f1d-4cc8-b313-e9eebc6ba607",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9ef93aab-b0bd-4a8d-aa57-54209d69c0d9"
        },
        "item": {
          "id": "c8d6be5c-b8e7-4afe-8145-0b6b4f8925b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f019ac3d-d382-49a5-be6d-c6e04ec7de5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e95ea2-a0e2-4f35-b1c0-d53db40ee4e4",
        "cursor": {
          "ref": "375e4f4e-0ff3-46b8-8471-42e9ebafb926",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8f3a5201-f2eb-4665-8c11-58badbbf2055"
        },
        "item": {
          "id": "21e95ea2-a0e2-4f35-b1c0-d53db40ee4e4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3f088f1b-813b-40a0-ab61-2d27f0b23795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18fae2f-d48d-4f17-8c84-956ce7f3cf1e",
        "cursor": {
          "ref": "50f4012d-87e4-4884-b654-23faa7121a97",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "300fe59a-6252-47e0-b7f9-2ca234cf20f6"
        },
        "item": {
          "id": "e18fae2f-d48d-4f17-8c84-956ce7f3cf1e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b21761cc-f58c-4141-9805-a74696181465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f0dde0-ff41-4ac9-a109-dd232d6807eb",
        "cursor": {
          "ref": "af5b8b80-b679-40a6-9016-b88cf574a13a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9632524a-ca4f-438a-b371-1a8cca59438b"
        },
        "item": {
          "id": "43f0dde0-ff41-4ac9-a109-dd232d6807eb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "407976d2-f8f9-49c5-81db-d34c2d567155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a62ff45-0f63-4748-a4d4-76e78b4ddb6a",
        "cursor": {
          "ref": "9a08043b-7716-45c4-81f2-dfb5ba79680c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f263bf1c-f4ff-47ac-a656-8da41423e7f4"
        },
        "item": {
          "id": "0a62ff45-0f63-4748-a4d4-76e78b4ddb6a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4cca4dad-5670-42e3-a85f-7b305fb5cb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7750d936-fc40-4098-b2f1-54ae3b6ff502",
        "cursor": {
          "ref": "42ab344d-7335-44e5-bec0-d467b73798ab",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b36eaff8-1b8b-4e3d-8325-7ab0d312d392"
        },
        "item": {
          "id": "7750d936-fc40-4098-b2f1-54ae3b6ff502",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ff5c4df2-1395-4304-8b02-fbf5599699f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08ef745-2022-45ae-a000-719ee8e206d1",
        "cursor": {
          "ref": "5f7bff2c-456e-42cf-a51e-bd46d21e05fa",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "228d9180-c50c-43ab-97a3-a4ee8df418f0"
        },
        "item": {
          "id": "a08ef745-2022-45ae-a000-719ee8e206d1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fa5b3ae9-83b7-41f9-8654-0a35ca037056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f64ec6-5f35-4d22-8a03-5c5669a500ad",
        "cursor": {
          "ref": "eb048158-18db-4e7f-a9e6-2ba197892fb7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "557aa250-e51f-4298-9709-59bfd9123ed1"
        },
        "item": {
          "id": "22f64ec6-5f35-4d22-8a03-5c5669a500ad",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b906139e-6093-4094-8886-3cef888a564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9529fe9-3e97-48ed-a1f1-9c0627a55fac",
        "cursor": {
          "ref": "0b5b83db-5bd2-41f6-8f01-af06b8329826",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0c4da97a-2151-4ebf-bb29-13c978471b76"
        },
        "item": {
          "id": "d9529fe9-3e97-48ed-a1f1-9c0627a55fac",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "52db8917-090b-4487-a0f8-afb62680fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb98226-e1a8-4e3e-b7d2-3bc2075fc0c1",
        "cursor": {
          "ref": "846ea832-e515-4c98-afb3-d8ec5c0d010b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b4a63304-6a28-4031-9e38-72fbc7103a22"
        },
        "item": {
          "id": "deb98226-e1a8-4e3e-b7d2-3bc2075fc0c1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8c572dbb-7ed7-44c4-8e61-27dc69358231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791db588-346b-4af7-a8b2-a3f37adac1d6",
        "cursor": {
          "ref": "08ec654f-2b83-41e6-bee9-1a4a26dc9dfe",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c33faaf1-a58c-46ff-966b-2bac458b1a86"
        },
        "item": {
          "id": "791db588-346b-4af7-a8b2-a3f37adac1d6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7d1a483e-ebf9-41ca-b11e-10c9e7ba6841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5fced1-b611-4e89-8d16-ed322fc2bfa0",
        "cursor": {
          "ref": "6a0c2332-03c9-413d-896b-5fd1e3cdf59a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4b3e1c0a-4db8-4b66-80e9-e5f0ed2fbdbe"
        },
        "item": {
          "id": "6f5fced1-b611-4e89-8d16-ed322fc2bfa0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "957f441b-5cc6-4fa6-9d33-2948180f7d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38edfea5-1777-40d4-a4cf-324ef3b7bac1",
        "cursor": {
          "ref": "988bf37d-7a0b-40cd-bcb6-f5fae02ae26e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9b991f4e-0134-4e26-a69c-87829fb73ce5"
        },
        "item": {
          "id": "38edfea5-1777-40d4-a4cf-324ef3b7bac1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e8d6e82f-0c25-4ecf-a300-6769703a96b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962ecfe8-41ff-49dc-a38a-d66d3f53ca2f",
        "cursor": {
          "ref": "5a224917-ff1e-4372-a59b-f8ed3f1a798d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c01280e7-a357-4c4e-a7cc-fc7b6cfdfc68"
        },
        "item": {
          "id": "962ecfe8-41ff-49dc-a38a-d66d3f53ca2f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6abc3b14-5951-47f4-a33d-99121e349c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5d5787-8b34-4e97-b4c8-140babfd19b6",
        "cursor": {
          "ref": "9d311fd1-8f28-4c18-9cb8-fe9e89803e50",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "79c29b48-8a8c-4215-b051-4b0baf2b5114"
        },
        "item": {
          "id": "aa5d5787-8b34-4e97-b4c8-140babfd19b6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "096f2cbf-be6b-4018-911a-885cf117d672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a238bd-2cc2-4a60-8d76-6abb67eb6603",
        "cursor": {
          "ref": "922c3eb9-866c-4881-8ff3-45499d609bf1",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9aa17ac4-7df5-4ebc-a069-1f206707cfe4"
        },
        "item": {
          "id": "34a238bd-2cc2-4a60-8d76-6abb67eb6603",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "53a6ad14-5a35-428f-97fc-f33c51f2f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d2fdf3-fb8a-4825-a9db-35e84016dfcf",
        "cursor": {
          "ref": "5b6c9fe4-dd3e-4505-9f5f-5b683b14fe65",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "270eda60-b461-4410-a3c6-0daaa77021a9"
        },
        "item": {
          "id": "d2d2fdf3-fb8a-4825-a9db-35e84016dfcf",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "81163fd9-9d5d-4cfc-953e-67ee8355a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1934ade-ca72-4611-8f09-c86f68584353",
        "cursor": {
          "ref": "5c528a84-1c3d-44fd-98d0-8690a42eb2e4",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8d640e99-5c02-4b3d-8348-8e1d43375f49"
        },
        "item": {
          "id": "f1934ade-ca72-4611-8f09-c86f68584353",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f56f03d-4cbc-4df7-944d-4f3db648d73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e936d23-1c08-4eae-a181-2b3467253293",
        "cursor": {
          "ref": "fc2189f0-5378-4c46-914f-719a52c82ce3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ff003a50-6355-47d6-aca6-bbf24a4fc81c"
        },
        "item": {
          "id": "1e936d23-1c08-4eae-a181-2b3467253293",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7f7de4a2-b80f-468b-9581-810a0e5e7389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c954190-ce72-4f72-84bf-4876175d057b",
        "cursor": {
          "ref": "bbaeae8d-f122-4043-92a0-fdb9672b7eb2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e96ead64-5803-4dfe-9c56-a663c2246bea"
        },
        "item": {
          "id": "8c954190-ce72-4f72-84bf-4876175d057b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ca50e6fd-60d5-4723-903e-e26fe3852ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a0837a-8cb9-4d0a-8e60-7ae8b6fd6ab2",
        "cursor": {
          "ref": "39dc20e3-5563-41e6-b70c-9d8a13df88a2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "642d1570-9fdf-45ab-ab35-7169bf95c3de"
        },
        "item": {
          "id": "97a0837a-8cb9-4d0a-8e60-7ae8b6fd6ab2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bd8dd83a-7a1d-432a-b5c5-c9152c64b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524889dd-5652-4cf3-8a97-0d0f1bba531a",
        "cursor": {
          "ref": "ee88d7ae-b4b4-40fe-88f7-a3a584f56e6a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fb793569-bb93-4d14-b99b-2a7bb960ede6"
        },
        "item": {
          "id": "524889dd-5652-4cf3-8a97-0d0f1bba531a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c7f9dd54-f9b0-443e-aebf-c7f19341f283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55343b-1e09-4e5b-ab18-162466c73dff",
        "cursor": {
          "ref": "4c00bb34-1dba-4daf-a668-3671c5bb3a07",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd056a4b-f931-430f-a6e5-208e49315b34"
        },
        "item": {
          "id": "ff55343b-1e09-4e5b-ab18-162466c73dff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b5627941-1b2a-4805-a3e4-327c5e79a35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8c50e3-d7ab-4d8e-b0ee-85b50fe3b030",
        "cursor": {
          "ref": "d325787f-69a4-4ea0-bb60-3dbfd5bccfae",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a6e68e9e-825d-4f16-b968-87689c4b6afe"
        },
        "item": {
          "id": "bd8c50e3-d7ab-4d8e-b0ee-85b50fe3b030",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d4584f48-df3b-42ce-9ddb-0f97a6ff7802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eabf77-3597-4b06-884d-27f068c2f17b",
        "cursor": {
          "ref": "7fd0f170-3c22-4aed-9f53-4419e428b85f",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cdb5ab43-3681-43ff-bb63-d8d8b7be54ad"
        },
        "item": {
          "id": "76eabf77-3597-4b06-884d-27f068c2f17b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "0bfb3277-2fb4-45be-869c-f5fba71cc055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7da1a20-1c36-4dd9-a90f-c650aad65d35",
        "cursor": {
          "ref": "496c870a-14a5-4b63-afc0-a55ec161ad6c",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0fc59015-2c72-4c9d-911c-9795bc9420af"
        },
        "item": {
          "id": "b7da1a20-1c36-4dd9-a90f-c650aad65d35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7fa2cdd1-480e-4f02-a9bc-0403a2b7dfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299ff13a-d9e6-4d24-bed2-4f5fb25855d6",
        "cursor": {
          "ref": "93ad375a-62e3-428a-8700-7960a4b21d7a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4a621873-d23a-4a25-9ae9-35cf6df3e774"
        },
        "item": {
          "id": "299ff13a-d9e6-4d24-bed2-4f5fb25855d6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e1fda9b8-4b97-490d-9cc9-d30ce8db0e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3903f3f-a0cf-40dc-a94a-7ed935202078",
        "cursor": {
          "ref": "a03cb904-9230-4a6a-8a54-3b5cb749b738",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c2786c43-3755-4a21-97cb-8efb186af8c3"
        },
        "item": {
          "id": "b3903f3f-a0cf-40dc-a94a-7ed935202078",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "73db11c2-ddb5-47ae-97ec-6268c90b498c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10b41fe-e612-42c7-9bff-2e82702d2cfb",
        "cursor": {
          "ref": "7cba87d5-1170-4ef1-9c99-c7014feebca9",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "02ebf36a-f7e3-407c-9e23-729d6fd7a7a5"
        },
        "item": {
          "id": "e10b41fe-e612-42c7-9bff-2e82702d2cfb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "86ea9295-0ca4-4c82-b061-43088e6cafd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24828519-ac16-4a10-a2b4-c86c663e72a6",
        "cursor": {
          "ref": "270ff444-ffd1-40ff-90ad-414e6e96e662",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b43a96e-8e01-432d-824b-e53fc7597d38"
        },
        "item": {
          "id": "24828519-ac16-4a10-a2b4-c86c663e72a6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d8b6a665-f164-4cff-890a-d271bc95b78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb3f5bb-31f4-4814-8479-068554b7f7f4",
        "cursor": {
          "ref": "93f58ff7-8e03-4036-b0a2-17112e7c99ca",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2cbf54a8-4375-4180-9506-b87f378c95a3"
        },
        "item": {
          "id": "1eb3f5bb-31f4-4814-8479-068554b7f7f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4916a131-3272-4dff-a8c9-311cc2741da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4ef4d8-5553-4a11-9fe8-d025f52aef19",
        "cursor": {
          "ref": "f8c7fe1f-fd07-4e53-863d-cfd245a47620",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c386e52c-0117-4d9d-9941-05d9672f0a61"
        },
        "item": {
          "id": "4a4ef4d8-5553-4a11-9fe8-d025f52aef19",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "66d6e5c2-4472-4956-a9e4-06d7fd8d6e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6229b-c438-47d4-baf9-a8d0a05ea7eb",
        "cursor": {
          "ref": "534de6e9-1292-4e84-98a1-a8d35115f36c",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f73583af-050b-426e-9be0-f373bb6c7c97"
        },
        "item": {
          "id": "8bf6229b-c438-47d4-baf9-a8d0a05ea7eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "77b77010-8eb6-4711-a863-97b98df3c9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde223d4-7bb5-4a1d-9bf3-dcfa89ae61ae",
        "cursor": {
          "ref": "f2750b74-8519-4ec9-921a-fb58e7c9f5ae",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8b0e5761-f653-4c5f-8d28-ab1c7e8629ab"
        },
        "item": {
          "id": "cde223d4-7bb5-4a1d-9bf3-dcfa89ae61ae",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7ff669ad-7e4d-4d29-803d-85200fa07a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfbf41f-b0e2-4b79-8445-2e3f04955f43",
        "cursor": {
          "ref": "9197af93-f43a-46e4-824a-b65bf2fdda50",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2a58bfae-db23-42a3-9b11-9f2a7b100f03"
        },
        "item": {
          "id": "2cfbf41f-b0e2-4b79-8445-2e3f04955f43",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7c8c7432-a806-49ff-b696-29882506771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2b4203-63c1-4703-8d09-02e1ba146503",
        "cursor": {
          "ref": "20ca862c-55f0-464a-b995-723905867b0b",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "78aaef7a-edde-4271-8657-b62ba28ba9c3"
        },
        "item": {
          "id": "0b2b4203-63c1-4703-8d09-02e1ba146503",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "950841db-7b97-4275-a73f-7f085c53f54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c03f95-6346-4c9b-9bd2-3ccd6e96d934",
        "cursor": {
          "ref": "c42e5b45-7399-4053-8ce9-52ca0f9235fb",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fa041a38-03f3-4b17-ae2e-bf60bfca2133"
        },
        "item": {
          "id": "e0c03f95-6346-4c9b-9bd2-3ccd6e96d934",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "337c501d-6449-446a-bdc6-4ad3e40d7fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518bc230-ca10-48c2-962e-b0b92d28e054",
        "cursor": {
          "ref": "c4db5ea2-7405-4b8a-a768-20cd4601de02",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6fce0e47-441f-4bdb-9c80-2a8d7e23ee0d"
        },
        "item": {
          "id": "518bc230-ca10-48c2-962e-b0b92d28e054",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a10cc88f-310d-45bf-a30f-c3909887e7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49696623-2b28-420e-abe5-dd9602141911",
        "cursor": {
          "ref": "7461d6ee-1c7a-41f6-af93-8e7dc6ffb804",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2219fb4d-8d87-49ce-8d3e-4a8465495f62"
        },
        "item": {
          "id": "49696623-2b28-420e-abe5-dd9602141911",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "19645c14-02a6-4587-9959-d471a756da4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c21693-4393-4580-9f11-d0ff14655f61",
        "cursor": {
          "ref": "2a29c7a8-e4a4-4126-934e-822f11229869",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "232c27ab-556c-4ecd-b2f4-890ecdf6ca8a"
        },
        "item": {
          "id": "38c21693-4393-4580-9f11-d0ff14655f61",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "787cf522-e269-41db-be1a-fd4bf64b371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30424e5b-3f21-4a2f-8b7f-2c5945ae425c",
        "cursor": {
          "ref": "1d4a801b-b90c-4243-9c04-70eba49e63b1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4a00ffcd-9306-4b86-abe7-a452bc11ffb4"
        },
        "item": {
          "id": "30424e5b-3f21-4a2f-8b7f-2c5945ae425c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a03c1f7e-b2bc-468c-adab-eb098ae447d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ccc2b3-ff76-41b5-bbdc-c64fbe7482c0",
        "cursor": {
          "ref": "8c5d3522-02eb-4419-95d2-1e2649cfabd0",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "455bc21c-2351-4228-909a-887bda1c7d50"
        },
        "item": {
          "id": "56ccc2b3-ff76-41b5-bbdc-c64fbe7482c0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f16aa4ae-1a99-43c7-939d-aeda81b44b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08d0f2e-4589-4a13-85f1-457934dc5841",
        "cursor": {
          "ref": "594a2a8d-1238-45e0-a0af-4fb45785ae61",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "85858b2d-941d-4650-9843-2aebfbf39103"
        },
        "item": {
          "id": "b08d0f2e-4589-4a13-85f1-457934dc5841",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9f60d6c1-5fcb-4c4c-b391-07d30fb5b72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1169b450-5354-4869-873c-a4bfc9f70469",
        "cursor": {
          "ref": "d1b9ec52-75fa-44f1-bcba-51f98c6f4a87",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1869995b-7bef-48c1-8e4e-c664e028dcd2"
        },
        "item": {
          "id": "1169b450-5354-4869-873c-a4bfc9f70469",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5f606a33-c3e8-4fa9-b852-28ffb1f32c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989758d1-9a37-47a9-9631-50cadd1af972",
        "cursor": {
          "ref": "011444c1-79d0-4432-b835-c2f0fa4a1e95",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "525ad317-b2fa-4423-be59-0d871d4b5f35"
        },
        "item": {
          "id": "989758d1-9a37-47a9-9631-50cadd1af972",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "caf75b5b-658e-4818-8e57-e2296756abb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22914c26-d496-41ff-a5de-ddc0d4707c6f",
        "cursor": {
          "ref": "789d6570-ef0e-4952-9109-d579d94760af",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5361ac5b-6eef-400d-9610-2715e1fc40b3"
        },
        "item": {
          "id": "22914c26-d496-41ff-a5de-ddc0d4707c6f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e620e24a-6021-4546-8235-967593624dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf2ad17-caae-4ff6-bbbc-27569aa61e1c",
        "cursor": {
          "ref": "98401eee-e918-49e3-aa1c-daf625909504",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "629effab-4608-4c02-86e6-583b53ba5787"
        },
        "item": {
          "id": "1cf2ad17-caae-4ff6-bbbc-27569aa61e1c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1c517ea3-4f14-4397-b479-2b724bf61f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b9f6b-8e28-4bb8-9f67-5d13025a437b",
        "cursor": {
          "ref": "53f4f2f0-c2c7-4084-93b1-d231fe12ab05",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6ba8ef56-25a9-4723-9c7e-2fb00f1a6e87"
        },
        "item": {
          "id": "595b9f6b-8e28-4bb8-9f67-5d13025a437b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "fbe1d134-dc7f-40af-a402-9470957f76c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c3d404-2d34-48a0-a40b-372aa84bbaf8",
        "cursor": {
          "ref": "2508c13b-2f21-4c08-888a-874c633aeebc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c090c904-4f01-46b2-b10b-18f24c3d15a9"
        },
        "item": {
          "id": "10c3d404-2d34-48a0-a40b-372aa84bbaf8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fab2d5e3-a729-45e7-adea-80bc428b21c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06934966-e44a-4166-aa66-113581c509d7",
        "cursor": {
          "ref": "46978fde-1c48-4e25-8158-1f1b98513488",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b0216eb9-c28d-4a9a-981a-7a22cff4bd38"
        },
        "item": {
          "id": "06934966-e44a-4166-aa66-113581c509d7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "60346430-48c5-41fd-9775-2fc8d30b2760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21f1b9f-360c-4b52-ab60-5c807bb1c315",
        "cursor": {
          "ref": "4369bff8-e2e9-4cbb-bc6e-63a06c41ca3a",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4365458f-2f59-46e9-b875-c6da87a32228"
        },
        "item": {
          "id": "e21f1b9f-360c-4b52-ab60-5c807bb1c315",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c0c3fe89-9d80-42d5-8795-5b2aec88d60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61160758-752b-4be0-b2a0-4ce6b9412974",
        "cursor": {
          "ref": "7249f709-2747-46a9-90d3-5fb5c6d9d0dd",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81c910c4-2e8d-4bfe-8c93-4ea1f4794505"
        },
        "item": {
          "id": "61160758-752b-4be0-b2a0-4ce6b9412974",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e93fd6d6-55ee-4874-a8e8-0603fe9d7448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb225fe-6ea9-4fca-a10c-069370201275",
        "cursor": {
          "ref": "74d72075-6d67-4d77-8554-7f7b9ae60678",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "76fb6fd3-a585-469a-aabb-0f726adc948a"
        },
        "item": {
          "id": "4cb225fe-6ea9-4fca-a10c-069370201275",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "12ce7178-0d80-4948-bdb0-d684a7fa10b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2635bc-17e0-4187-acf9-552d70b09e85",
        "cursor": {
          "ref": "dad0178b-dc6d-4831-91a2-a132cee0d5f4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "af3334f8-5438-4200-bf02-10b1dbbe8e11"
        },
        "item": {
          "id": "9d2635bc-17e0-4187-acf9-552d70b09e85",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4a3220ae-70f8-445e-85e1-a8bbfe581163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bb1fc5-0677-40ea-925e-5652f4698373",
        "cursor": {
          "ref": "4fca996f-875a-4106-924c-53065b0ab4d5",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bd587076-77fb-4ee3-98db-fe783ae6d393"
        },
        "item": {
          "id": "32bb1fc5-0677-40ea-925e-5652f4698373",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "295751d1-6687-4bc3-b90b-703ab0cb1dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c70142-8b25-447c-83a1-8a482f3531a3",
        "cursor": {
          "ref": "72e1e15c-8ed5-4489-9737-0c93270dca5f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b64ea3c6-15a2-4b7d-b070-b385a5df92f4"
        },
        "item": {
          "id": "65c70142-8b25-447c-83a1-8a482f3531a3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "681bbbf2-304d-4262-8d83-9f09bc2fd2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df470699-4e29-4a3c-9e9e-afc1daa1e151",
        "cursor": {
          "ref": "94ad2f6e-3cf6-4ae2-ba8c-de5ac8f3a05a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "59580064-2b93-44b4-80e1-a882173f2684"
        },
        "item": {
          "id": "df470699-4e29-4a3c-9e9e-afc1daa1e151",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8be61ede-1e2b-40ff-b163-938392ed0f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1d2da0-4fa8-4c76-a353-059cb86ff209",
        "cursor": {
          "ref": "c64dcf5f-b7a2-4907-b736-880f770ac8bf",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "393aea07-5585-45f6-affb-a3e878b128fa"
        },
        "item": {
          "id": "4a1d2da0-4fa8-4c76-a353-059cb86ff209",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f049e32e-f99c-4bff-b119-9ffcc32a5bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9481aa-70b9-4c0a-be6e-f5563658900e",
        "cursor": {
          "ref": "198910b3-65b4-4455-b49b-559560751811",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ca4cbaa9-ff4f-4eb8-8947-d0d59dd89c46"
        },
        "item": {
          "id": "ea9481aa-70b9-4c0a-be6e-f5563658900e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9203d2b8-8f1c-445f-b9d6-9ac0bc186981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4f820d-b6ba-4ad8-9e70-6ef297526e91",
        "cursor": {
          "ref": "399e2a11-51a0-486d-aa8d-d89dbf36b1e7",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "873501c5-f4af-4590-bc88-4ee2dfcc570d"
        },
        "item": {
          "id": "3d4f820d-b6ba-4ad8-9e70-6ef297526e91",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0b631499-3c6c-449f-985e-04bd67516c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a74bf9-17ff-46c3-8644-db319bd5adcc",
        "cursor": {
          "ref": "baa15185-47af-45f9-841e-e17c17470148",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eba6b95f-7e7c-4df8-b418-7ee965585d33"
        },
        "item": {
          "id": "e5a74bf9-17ff-46c3-8644-db319bd5adcc",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7e5fadc0-0b5d-4dbb-8f13-06adf1fa12fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41960fe0-4b3a-428a-89b5-f1a8c7a0365a",
        "cursor": {
          "ref": "40dcb465-eb14-4bff-9dfa-4d45ed6d42a8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a159eb8a-fb8c-44da-b58d-166706d204af"
        },
        "item": {
          "id": "41960fe0-4b3a-428a-89b5-f1a8c7a0365a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1c458ad5-ce94-4361-a03c-44869f5a1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2695eae4-3107-447e-9c44-4f1f57bc3c7b",
        "cursor": {
          "ref": "57d981a6-75b1-4e01-912e-fb3d5e7b83b0",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "062e3fee-53df-44e4-83af-711f81878dd9"
        },
        "item": {
          "id": "2695eae4-3107-447e-9c44-4f1f57bc3c7b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6f56eef2-7fcc-44cb-881b-3a6e44c32023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81fafa0-54f4-4b70-b4d7-06152fa557aa",
        "cursor": {
          "ref": "3052c005-aa4d-4db2-8a8a-4a52922d2989",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3f6ffb9b-370d-4a99-bbb8-9ae22599f86f"
        },
        "item": {
          "id": "d81fafa0-54f4-4b70-b4d7-06152fa557aa",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "50498157-9ff9-4fc8-b5ef-e75c269c629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7095f3d-f7a1-4d85-929e-4c1c77d8b0b0",
        "cursor": {
          "ref": "1c70fd68-4249-4705-94fb-67b8bc24e89b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "012604d8-9466-495d-b57b-8a70f782202c"
        },
        "item": {
          "id": "b7095f3d-f7a1-4d85-929e-4c1c77d8b0b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ab7479c7-d157-47c9-a5f1-cd4fdeb604bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3df4645-3fb2-42b0-84b9-a2765ed40b0c",
        "cursor": {
          "ref": "488ce3d4-a798-4a70-828a-f8b5d3af8b64",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "07a470cc-7419-4a32-9051-3e71b69cb647"
        },
        "item": {
          "id": "d3df4645-3fb2-42b0-84b9-a2765ed40b0c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9e1532a6-546a-45a7-b89b-2e639aaabe6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3534f68-8912-4a08-ba20-eb339754b728",
        "cursor": {
          "ref": "4999bd8e-21eb-466d-94e7-7dd627b32605",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "708017e2-6330-4c00-afe1-058cedbcbd9e"
        },
        "item": {
          "id": "b3534f68-8912-4a08-ba20-eb339754b728",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e6b79100-3c27-4def-afa3-b16dedbc5c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "28711939-6383-4ef0-bd3a-1ca5870dd421",
        "cursor": {
          "ref": "c471cb5d-db98-4687-96f5-1c5ca7e24a6a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c7371ceb-c56a-46b7-876a-c085113fca1c"
        },
        "item": {
          "id": "28711939-6383-4ef0-bd3a-1ca5870dd421",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f849f3dd-d811-4ca1-9d36-3f2afea082cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "cfa6da09-e917-4949-80b7-d12c9da49628",
        "cursor": {
          "ref": "120c3255-4968-4bc2-85b6-5bd40922b1a4",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c63f35c2-b0ce-42d0-a54d-989c6f9f9411"
        },
        "item": {
          "id": "cfa6da09-e917-4949-80b7-d12c9da49628",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fb210abc-e210-4f18-8858-3466ee8ecf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bab99e47-3f73-4169-a5e4-ad33b2adbd4c",
        "cursor": {
          "ref": "9c2f6236-a02f-4f0a-8352-35607d3f37af",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "af942103-9fcb-4ae5-97e8-70024da846a7"
        },
        "item": {
          "id": "bab99e47-3f73-4169-a5e4-ad33b2adbd4c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "100f1304-d663-458f-b1b5-25dbc097a30d",
          "status": "Created",
          "code": 201,
          "responseTime": 4738,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afcc1af-7712-4535-b332-92338cb7dac4",
        "cursor": {
          "ref": "a2f1db11-231b-46fc-8911-7471e802b22b",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a253ff31-0395-424f-82a9-50c7df944291"
        },
        "item": {
          "id": "6afcc1af-7712-4535-b332-92338cb7dac4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "323477c6-0815-4453-be9a-b5fb3a161c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "eb026db9-61f3-44e8-a890-d26106563f23",
        "cursor": {
          "ref": "3fd0e6ab-2435-4f6e-af2f-47ac1ebf9fe8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7a633c37-f068-4ecb-b12e-90732bee04f7"
        },
        "item": {
          "id": "eb026db9-61f3-44e8-a890-d26106563f23",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6fe6ad0d-4e6b-439e-bed2-c28da79977f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e1f3745a-5f73-4248-ba62-972b5ca03cd7",
        "cursor": {
          "ref": "02573e38-7e44-4191-b630-57db05f25ada",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d244435-4810-421b-9cd9-51b1d59709b0"
        },
        "item": {
          "id": "e1f3745a-5f73-4248-ba62-972b5ca03cd7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1c3e814a-a00d-490b-8440-4e92b3610cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7228ac40-987b-4526-806f-bf57cff33e4e",
        "cursor": {
          "ref": "a9d942b2-6291-42a6-86d5-f1439606714e",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "93f0b7d8-136f-4ee6-bc11-3b4d830ffe4d"
        },
        "item": {
          "id": "7228ac40-987b-4526-806f-bf57cff33e4e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "50d1af17-8cd4-4455-8f54-f4964d6ac4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038dd136-b724-48ce-88ff-f7251091a16a",
        "cursor": {
          "ref": "85cc2024-a280-4d61-976e-1167349b4400",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d22566df-822f-4797-8aff-efcb817f2181"
        },
        "item": {
          "id": "038dd136-b724-48ce-88ff-f7251091a16a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "00d3cff3-62e3-435c-b912-94b63b8fe38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362876e1-9b6c-4c68-ab8c-0923a9cbdb54",
        "cursor": {
          "ref": "3f334df5-762e-4b73-8a3f-2a074188302c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c29cd044-6fae-4319-b48c-190f0e4a1f18"
        },
        "item": {
          "id": "362876e1-9b6c-4c68-ab8c-0923a9cbdb54",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f9a06be4-dba9-4dff-a222-e795a96bee14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7326c05-d59a-4045-a50c-b8027356c6d1",
        "cursor": {
          "ref": "36c8b351-221f-4a9d-8290-3c27d3990774",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a5d9334c-d12e-49fb-8a10-4dd51390d5ec"
        },
        "item": {
          "id": "f7326c05-d59a-4045-a50c-b8027356c6d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cc7120c5-6299-4479-a609-5d8d7ca3dffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454a09c8-9170-43d4-9277-91081bdc7f9a",
        "cursor": {
          "ref": "e6f6d7ff-4263-41e7-bb25-aafa39cd34cf",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d3af5572-300d-4bdd-a053-723d2dd7c2d1"
        },
        "item": {
          "id": "454a09c8-9170-43d4-9277-91081bdc7f9a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e5a71578-92df-4b28-8454-784d01226abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a05ce6-e6a0-40fe-a535-74a718bc67f0",
        "cursor": {
          "ref": "1043be80-4448-4805-a042-7012fe01d2ff",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d04b32ec-88ce-4cfa-9835-f52ff8e21f43"
        },
        "item": {
          "id": "28a05ce6-e6a0-40fe-a535-74a718bc67f0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff108a9b-687d-416f-97cd-5fefd64a985d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb31f47f-abce-460b-8917-cc42d0214b39",
        "cursor": {
          "ref": "d31f0f77-efdd-4f84-897a-910b71e406c5",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5334fa3c-f7fb-42ad-9d98-e3ebd0597340"
        },
        "item": {
          "id": "eb31f47f-abce-460b-8917-cc42d0214b39",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d7b7839e-aa3f-4e4f-b9aa-eaba5aa08ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99513589-47f6-4453-a30a-40073fbde118",
        "cursor": {
          "ref": "0e4e9970-f5b8-4c2c-afa7-a8acad633eec",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bcf2dc2e-2c61-46b9-beaa-f5f786f44c06"
        },
        "item": {
          "id": "99513589-47f6-4453-a30a-40073fbde118",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a58f7334-5d71-4521-a366-6df7261ebc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436a3842-0f08-4c43-890a-1d20a43e92c8",
        "cursor": {
          "ref": "aab757af-0a99-46f4-9eaf-786345be4d57",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8b6a2816-5d4e-4ee5-9a58-72c5e2dc0b58"
        },
        "item": {
          "id": "436a3842-0f08-4c43-890a-1d20a43e92c8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "77d9e530-18fa-4905-aa37-52c26b9063e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da448f2f-0db6-4abc-8bd5-6a7d0fd4b009",
        "cursor": {
          "ref": "c9f7b3fe-fff1-4b4a-a20b-9ef385bf6e4f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e605cecd-f162-4459-ad30-b0f91c57adb1"
        },
        "item": {
          "id": "da448f2f-0db6-4abc-8bd5-6a7d0fd4b009",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "51f09870-422c-4669-b5f3-87ef04a0e165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59e03bd-7a11-4c7e-8986-c1eb73eed298",
        "cursor": {
          "ref": "348a81b4-fa13-44e5-b31c-07dd74268997",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6dbf2b7e-bd8a-4adb-b1fe-d008699a1547"
        },
        "item": {
          "id": "d59e03bd-7a11-4c7e-8986-c1eb73eed298",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "70b02c20-2b05-4dae-803f-7cbbfbae26b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3cb0e5-76f7-4a44-8743-53d0f0e5e352",
        "cursor": {
          "ref": "d8eef714-0793-4070-b951-5e7dce7dfe3f",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e17cd83c-3a64-47b6-8f2d-5d5d95e12ed8"
        },
        "item": {
          "id": "af3cb0e5-76f7-4a44-8743-53d0f0e5e352",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e31eaf17-caaa-4f0f-a31c-4a20123eb8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e0c079-c8de-4cb6-9a5e-187b426d5e14",
        "cursor": {
          "ref": "dd8c6617-da45-43b6-a436-f27469cea4c3",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d439c7ab-ad6b-4234-ac73-242379f7623b"
        },
        "item": {
          "id": "84e0c079-c8de-4cb6-9a5e-187b426d5e14",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "eb022384-3efe-4782-a8f2-d7420718f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c88eb53-01f6-493b-9ad5-da7058d68fa5",
        "cursor": {
          "ref": "2ddc3abb-fefd-40d3-a7de-56202f75797c",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "372dd6a0-b8b2-4490-8986-df0e4382a093"
        },
        "item": {
          "id": "3c88eb53-01f6-493b-9ad5-da7058d68fa5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b88fb22d-909d-4a39-93db-fc6509a8dab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5158bec-3cd8-4f61-831f-11463d33bcb0",
        "cursor": {
          "ref": "7b1b20d3-bf5c-454c-bca5-b324b0d51d64",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8293e68c-431f-4a35-be8c-2c5d5402c7da"
        },
        "item": {
          "id": "f5158bec-3cd8-4f61-831f-11463d33bcb0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6074db1e-1510-4bd0-bb89-0da8401bf88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481783cb-c22f-4082-8408-965347fa54df",
        "cursor": {
          "ref": "4f1ca230-3d14-40bb-a6c0-627b5c38a482",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "29830fc3-2622-4592-be5c-ae22fbdc95f7"
        },
        "item": {
          "id": "481783cb-c22f-4082-8408-965347fa54df",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "fac4e66a-ad46-4248-8071-8933af60695e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145cab7d-31a8-486c-a22f-23167077d9da",
        "cursor": {
          "ref": "92aef744-1c68-4b88-bf4a-b2f70eadb514",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dc28f8ef-2cb3-49b1-bbbe-a06b093416e1"
        },
        "item": {
          "id": "145cab7d-31a8-486c-a22f-23167077d9da",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ebc1e408-1c80-4a7d-9905-a04731ed9474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf51a1c3-6a1e-4c98-8afa-ef5576d4c499",
        "cursor": {
          "ref": "b56850f0-94f4-4cb4-a045-b2d507ede0ad",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4e4c1bf1-b8d2-4f46-a1df-b642794b4ff1"
        },
        "item": {
          "id": "bf51a1c3-6a1e-4c98-8afa-ef5576d4c499",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a1b30eef-92cf-4c6b-a0d4-ce3dd0941d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e283978-3044-418f-ac61-e22074311c83",
        "cursor": {
          "ref": "c03c7826-4d6a-46a8-bfd8-fc2bb2a4e5c4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1bfbdab5-671e-4721-9632-f33e62df49f6"
        },
        "item": {
          "id": "0e283978-3044-418f-ac61-e22074311c83",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "bd3ca049-7547-416c-9e17-84ed80c8c100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd81fc8-ae1a-4dc6-93bb-96074a27fe8b",
        "cursor": {
          "ref": "91e6f05a-9d73-4c28-a038-35f255732134",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c504ae21-c191-4015-99f6-fa0dff99da31"
        },
        "item": {
          "id": "efd81fc8-ae1a-4dc6-93bb-96074a27fe8b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d35a6686-ae06-4013-a498-3967311aba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1060d79b-dc63-489a-8fe3-f572b3082fea",
        "cursor": {
          "ref": "44981aa4-6581-4603-8714-d0469bd1f9a2",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e81a7b23-5efe-472e-b351-5c88abc7585b"
        },
        "item": {
          "id": "1060d79b-dc63-489a-8fe3-f572b3082fea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95c3d4ed-b5fb-48f7-be25-6c9b08f6e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622eaa37-08e1-4138-8a3a-2acfe54a4586",
        "cursor": {
          "ref": "10d6fca4-e2d8-4ce7-ad8f-9828d5989e6a",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2923b52b-b628-4de3-ae13-abd7283a9e74"
        },
        "item": {
          "id": "622eaa37-08e1-4138-8a3a-2acfe54a4586",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efd27fc8-9b82-4d0f-98e8-549d37abc77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de088f87-4100-4df6-9446-e8cb40f73ffa",
        "cursor": {
          "ref": "9a2edc4e-e99d-4244-b676-7f7596659f0d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "418b3220-a3a2-47b7-ac06-90566a6ce3cf"
        },
        "item": {
          "id": "de088f87-4100-4df6-9446-e8cb40f73ffa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7ce00159-86b8-47bb-b502-4f6d3fea3df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a242fce-61bc-4935-8673-e1e224ce40ec",
        "cursor": {
          "ref": "cdb99602-3025-4670-81b5-20f24798adfa",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "98ad95ad-b05c-4163-8dde-7ac0b374eece"
        },
        "item": {
          "id": "6a242fce-61bc-4935-8673-e1e224ce40ec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cd41d153-26c7-470a-8292-62072692237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d9c3c7-daaa-4948-a3de-fd037120e8f0",
        "cursor": {
          "ref": "29de70ac-c35b-453d-8320-ba9f97ab74c7",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5d80be2d-d837-42bb-ad90-736a40a02cc8"
        },
        "item": {
          "id": "63d9c3c7-daaa-4948-a3de-fd037120e8f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d19ba74d-75c1-4075-9188-2b663ccbad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a52b6e3-2cae-46b5-a5da-e3df945b549f",
        "cursor": {
          "ref": "52aa3d0a-8ae6-4c5e-9c90-6c7ba81e2dfe",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f01151fe-c221-4a16-8f4c-69e0cfcb4552"
        },
        "item": {
          "id": "4a52b6e3-2cae-46b5-a5da-e3df945b549f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "96c864d1-d581-4e52-b429-f28f6832339a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e62bc97-f0f5-4410-b068-747e4f3a76be",
        "cursor": {
          "ref": "494c8756-6a23-4382-95a5-938b60b09004",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a8853c6a-3732-4687-ad38-edbaad31bc55"
        },
        "item": {
          "id": "7e62bc97-f0f5-4410-b068-747e4f3a76be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0da2e432-1e22-49fc-8acf-103653423d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53abe777-8e82-4751-94b0-d629fc6f56bf",
        "cursor": {
          "ref": "059a5271-6b1b-4b92-b264-1c4f2789e905",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "83cc1b28-b7db-4210-bd90-482705582bdd"
        },
        "item": {
          "id": "53abe777-8e82-4751-94b0-d629fc6f56bf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "34c2a2bd-38a3-4470-b2c1-d27f9daa633a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6253864-8368-4bca-ad79-ea10d80361ad",
        "cursor": {
          "ref": "6ee156fc-c759-46d1-904b-0399619d8fa1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0eb5acad-e70f-41e4-a914-a35967216929"
        },
        "item": {
          "id": "e6253864-8368-4bca-ad79-ea10d80361ad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "febaf843-6be6-4bba-9715-f0887d7c6a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57c8ad-7c92-47e0-afa1-ee0fd645059d",
        "cursor": {
          "ref": "0362a562-4cc9-4f5b-900a-d8df6be0e45d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "72b3aad3-abfa-47b4-9ebd-b42e2ca90319"
        },
        "item": {
          "id": "4e57c8ad-7c92-47e0-afa1-ee0fd645059d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "94b65895-c293-4d63-ac86-9dfacca10e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe2598a-4da6-43d7-b131-4b9936a04672",
        "cursor": {
          "ref": "57d214be-7c4b-4d96-9406-176221cf44af",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0603411a-f702-41ef-8ba7-b9f6eda9047b"
        },
        "item": {
          "id": "3fe2598a-4da6-43d7-b131-4b9936a04672",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5cba63d4-5429-45b9-a242-6d8a46ffd991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad404fb-d1d1-4566-8148-8d5e39c0b1d7",
        "cursor": {
          "ref": "a81f4b84-d278-4379-8895-30a2213882bf",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b087ab3-77e1-4bcc-a246-ef0a11a9f553"
        },
        "item": {
          "id": "5ad404fb-d1d1-4566-8148-8d5e39c0b1d7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c115124e-ed58-41b7-ab89-9708da1930ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f01666-6652-4a53-ad7b-2f1de7bfe149",
        "cursor": {
          "ref": "65d4f3a9-96ce-434f-9e09-37047e5333a4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1f9c1d7b-cbf0-4316-b276-316c46c52317"
        },
        "item": {
          "id": "47f01666-6652-4a53-ad7b-2f1de7bfe149",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7752a441-e7cd-4581-9a04-55cd7b61f3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99aaee0f-2b33-4416-b3ab-26053918e3b4",
        "cursor": {
          "ref": "b9075a52-9f5b-422f-9636-d7a99180ca02",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "49e06270-c7ef-4e26-8022-1157c33b4498"
        },
        "item": {
          "id": "99aaee0f-2b33-4416-b3ab-26053918e3b4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "35946211-40e8-446d-9550-bdc163d87ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a573003-3f31-4afc-853f-2ac814d8a8d2",
        "cursor": {
          "ref": "f4d82d6c-2d54-456d-8d3f-60a8b698b9e4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8fd8202f-e539-4551-80d4-5e37fe7a9aee"
        },
        "item": {
          "id": "7a573003-3f31-4afc-853f-2ac814d8a8d2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5a10d9bd-81a8-4da7-86d6-8f6d9f13f554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b95adfa-45d9-4c6b-9d40-d50bb6861118",
        "cursor": {
          "ref": "5f0d91fa-5b6c-4d19-a6f4-89832ee5433c",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e1d78fe-0744-45b7-9ab3-6f6cae51fcdf"
        },
        "item": {
          "id": "1b95adfa-45d9-4c6b-9d40-d50bb6861118",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3123052-a0a0-4f2d-a633-8082fdb53fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5de3e1f-b845-4601-b010-84230e7cf7a6",
        "cursor": {
          "ref": "3e4db65a-68e4-4533-837c-7f22314300a9",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ad1d2727-3fcd-45db-8836-b7f4c2a9ec57"
        },
        "item": {
          "id": "b5de3e1f-b845-4601-b010-84230e7cf7a6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "13c88660-668e-4f2d-8394-18335a2ed070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181940db-029a-44e3-a05d-3592ef0fc2f8",
        "cursor": {
          "ref": "d5af1f0c-a43e-4484-95cf-e44efbe8bf46",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c9bf569a-657c-46de-85f4-acbf255486d1"
        },
        "item": {
          "id": "181940db-029a-44e3-a05d-3592ef0fc2f8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9115e541-7471-4fc0-a521-a2aec10dff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19525450-8593-4e0f-a5b6-c1f08e2dba03",
        "cursor": {
          "ref": "d75c22ce-6a28-421e-b808-308cabe8a3e2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cb3d474f-d905-4df9-872b-018f5d3695cb"
        },
        "item": {
          "id": "19525450-8593-4e0f-a5b6-c1f08e2dba03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a752694d-86f2-4577-9b15-67d9f934a4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbd57c3-66b8-41d8-9f38-da4510b33050",
        "cursor": {
          "ref": "ded68ad9-0628-420e-a301-d865972dbae9",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "297c773f-7481-4ba5-adee-ab7fc5804e51"
        },
        "item": {
          "id": "adbd57c3-66b8-41d8-9f38-da4510b33050",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5b31bead-6276-40cf-af07-36bc2af1b408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0e13a0-02e8-44c5-8adf-a7475e762eb6",
        "cursor": {
          "ref": "aa748b18-77f9-4451-9671-a04878467ffb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c681c999-5395-4d2d-84de-90b4bf5a4c3a"
        },
        "item": {
          "id": "fa0e13a0-02e8-44c5-8adf-a7475e762eb6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "69b1af56-e8c5-45bc-bcbf-8c6206b4da9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e810e8e-c369-4302-a961-d77c50651c45",
        "cursor": {
          "ref": "66439523-4d3c-4ee4-8ed6-574494e294ef",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e4a68ee0-d9f0-4301-a17f-a4906f113728"
        },
        "item": {
          "id": "1e810e8e-c369-4302-a961-d77c50651c45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b8db21c1-a866-478a-8131-e3358249e2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eb1040-a5bc-448d-8bc0-080073a29822",
        "cursor": {
          "ref": "06c9f271-afd1-4c19-b420-c0bdcefbd148",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dc848da4-992f-4216-a645-04aaa28dd63c"
        },
        "item": {
          "id": "c7eb1040-a5bc-448d-8bc0-080073a29822",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "98a6a324-c9c5-4665-a88c-2377c0bcc02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661dbd55-ecd7-4100-9bc5-e821297b9b4d",
        "cursor": {
          "ref": "0f1c2997-fec9-46ab-b74a-de122bcda02c",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dc1a1f63-0562-48ac-b47c-36b2c27366cd"
        },
        "item": {
          "id": "661dbd55-ecd7-4100-9bc5-e821297b9b4d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d55bb567-3373-4069-9544-d88047b9425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa91d5a5-c024-4f3c-a7ea-ef8f3288e032",
        "cursor": {
          "ref": "2aeae73a-2423-4207-8edb-0fad4d2ae4c1",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ead0b164-241f-4dc1-b836-629c10286c7d"
        },
        "item": {
          "id": "aa91d5a5-c024-4f3c-a7ea-ef8f3288e032",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "57e8d687-c8be-4715-9c2a-7c1383a40ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d9ec7-49f7-46f5-9ce2-ab74e183bd84",
        "cursor": {
          "ref": "08fbf94b-07f8-4dd4-95bf-39b0d82889c7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d374cbb6-2e7f-406f-831f-28c9c17a2c75"
        },
        "item": {
          "id": "916d9ec7-49f7-46f5-9ce2-ab74e183bd84",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8500f9c8-9be0-4ca8-b3c3-89a0eee7137d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca861fc-a288-45a8-af38-0517c8146a79",
        "cursor": {
          "ref": "da5476c0-5b0f-40dc-a980-e7e11b6f9e5e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d8d96d51-1e29-4f2a-bd5e-4a6b0170b09f"
        },
        "item": {
          "id": "4ca861fc-a288-45a8-af38-0517c8146a79",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b518b3a8-0298-48e7-aebd-fe6def1c5164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b8274-d348-4360-bad6-56a904a51e62",
        "cursor": {
          "ref": "848409cf-60bf-4028-94ec-50eaa7c76082",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "302626e2-9d02-48c1-8bc7-7250138dae33"
        },
        "item": {
          "id": "558b8274-d348-4360-bad6-56a904a51e62",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5763ee87-a90a-4170-b18d-30b5e15803a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08671bc-4ab3-40ce-a448-d2613926ad0c",
        "cursor": {
          "ref": "7176886e-91d8-4d5d-a5ac-c90a931922a9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6d4ee8b0-f720-42d3-8b35-4723bfca4146"
        },
        "item": {
          "id": "f08671bc-4ab3-40ce-a448-d2613926ad0c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6a76d577-baf4-41d3-9fac-a860ee89da36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008d3c88-073a-4d9b-8863-5a0cab718b3e",
        "cursor": {
          "ref": "fcb14dc4-ab3d-4b12-91b8-8f024cf4297c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c68043a3-4ced-43f6-8168-d9b3d338b5a3"
        },
        "item": {
          "id": "008d3c88-073a-4d9b-8863-5a0cab718b3e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0be247f9-38ee-4cd5-82c1-f5eb9cd8a9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ef7e8b-83fe-4853-bbfd-9f3a3af3463f",
        "cursor": {
          "ref": "8c27bd6f-8ae7-4197-a5dc-1350668552c7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b6fcc78-6928-493f-b7a6-0da95846c36b"
        },
        "item": {
          "id": "a6ef7e8b-83fe-4853-bbfd-9f3a3af3463f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cd27dcf8-f67d-4d12-a60a-c844d073bf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3ad346-04f7-43cd-8580-78c477db333c",
        "cursor": {
          "ref": "ed59b982-3451-49be-952b-b4d361c25193",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "74d3334d-2b9d-43bd-bbd2-b15784569447"
        },
        "item": {
          "id": "1f3ad346-04f7-43cd-8580-78c477db333c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ff8d0ab5-7832-4d8b-b58b-e9cc96df0541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740a05b7-9326-4f67-89b9-571dfb281d88",
        "cursor": {
          "ref": "3b5eef6c-af42-4f66-99d1-9e80b5f70954",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "27f47a31-4292-4c76-a386-e78e08d83088"
        },
        "item": {
          "id": "740a05b7-9326-4f67-89b9-571dfb281d88",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b66e922a-346f-45cb-960a-fd6e28126f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c36236-bc18-4f6a-ac8d-fa0bf9df0444",
        "cursor": {
          "ref": "e9fbfe5d-c256-479b-b7bf-3de6c7ebcb5a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "04313be6-ddd2-49de-bc5b-db0814b545e4"
        },
        "item": {
          "id": "f9c36236-bc18-4f6a-ac8d-fa0bf9df0444",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35c99c88-0ec7-417c-9909-de54894ec6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3114d0-a2ad-4dd9-8f17-e0123e29604e",
        "cursor": {
          "ref": "97313c9b-21a3-47fa-ae7a-0dcb7db0a26f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18f2849b-d82b-4fc5-97ec-51150bb8b9b4"
        },
        "item": {
          "id": "0a3114d0-a2ad-4dd9-8f17-e0123e29604e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "51dc0a5c-a57a-41b3-afc9-2cf5e3af45c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb55ae1a-badd-4f4e-b0dc-af71f3aff35c",
        "cursor": {
          "ref": "5f604e9f-8fe9-432b-920f-b2ae3e86acac",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cdc47eed-27b7-4a0e-ab83-7cfd2a080a73"
        },
        "item": {
          "id": "eb55ae1a-badd-4f4e-b0dc-af71f3aff35c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2a4a0db7-8be3-4401-833d-60db4b4968c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442c3523-1a6c-4458-857b-6b12e2a973cf",
        "cursor": {
          "ref": "b36ec249-1fe0-456b-a8ea-de0139141114",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f8669de3-aa10-4992-9fc4-56457e3500da"
        },
        "item": {
          "id": "442c3523-1a6c-4458-857b-6b12e2a973cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "06e926d4-198e-4571-b9bd-a2e501e0d78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e9394d-008f-41f8-bb1b-3b1d3cebda2a",
        "cursor": {
          "ref": "eeb52e66-2df4-4f87-bc52-2edd0609af87",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "734bbb96-2baa-4a4b-9b8a-a795e8263813"
        },
        "item": {
          "id": "97e9394d-008f-41f8-bb1b-3b1d3cebda2a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d122a18e-b357-4651-953c-411aa4932635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e647e301-7af6-4add-b57d-02004d8b6b4d",
        "cursor": {
          "ref": "4b03c379-99cd-47eb-9742-e951004882f2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d5591c73-f583-4fed-ba35-18b70731b57a"
        },
        "item": {
          "id": "e647e301-7af6-4add-b57d-02004d8b6b4d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "107ca38e-2ac8-4dc6-8423-3326f17973dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249f6cd-5a6d-4299-965c-7987fc4559b3",
        "cursor": {
          "ref": "4e93c8ee-d19d-4c94-8182-8190d9621f7c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b60d4db6-0c99-4ec5-9257-881a88ebb024"
        },
        "item": {
          "id": "d249f6cd-5a6d-4299-965c-7987fc4559b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "aa4a825b-1564-4df1-9682-0bba57dc74d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5ebc06-cbff-408c-9fb0-302065c086df",
        "cursor": {
          "ref": "9d46d1f5-580f-4a56-adad-c029a2092ebb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c0a75e8e-69c2-43ca-b23b-7d12cf617ce2"
        },
        "item": {
          "id": "5c5ebc06-cbff-408c-9fb0-302065c086df",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f5a86830-f7e8-46d2-a5d0-c4b58de8815a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94ec183-7904-478a-a6af-15489cf9b572",
        "cursor": {
          "ref": "4c1c9161-4af0-404d-8b0f-2d1a80c899f4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba0923eb-559e-47fa-a210-aa9618457c76"
        },
        "item": {
          "id": "d94ec183-7904-478a-a6af-15489cf9b572",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3ae911bc-07c7-4baf-9315-8f3cb8b6d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d51130-8fb9-4c23-8f31-7f6b9c6eeb6c",
        "cursor": {
          "ref": "d6ad0e5b-1bac-453d-b643-32f59b9771ce",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "630b7b14-32e5-4dd4-bd8c-d8f4b19f0370"
        },
        "item": {
          "id": "98d51130-8fb9-4c23-8f31-7f6b9c6eeb6c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e8192a27-361b-4dd1-89bc-f82130e54000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1411bf-2134-451c-85c7-ad767b5ead10",
        "cursor": {
          "ref": "824f84c9-7126-4cd5-9675-427389188d87",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6cdbd46d-d1e9-4a27-88ce-9a408d90692c"
        },
        "item": {
          "id": "cf1411bf-2134-451c-85c7-ad767b5ead10",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b8836515-3352-4a7b-866b-3e0aff74ba55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23e3ff9-0842-4ec0-9ecb-d844eec44c8a",
        "cursor": {
          "ref": "c69d2567-55c5-4bc7-b3b1-e9c319233bcf",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4d6fbed9-aa63-4cfc-b861-f4f0a863aa63"
        },
        "item": {
          "id": "a23e3ff9-0842-4ec0-9ecb-d844eec44c8a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c05a835e-984f-487a-ba17-e583085c25aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c84e667-de17-4fa2-a345-ed257797ef3b",
        "cursor": {
          "ref": "7d3051c0-b4fa-4fe2-a3cc-ff051937d679",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "82250740-c20d-4eb3-8f2f-c58b8d4a734d"
        },
        "item": {
          "id": "0c84e667-de17-4fa2-a345-ed257797ef3b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c067909d-5372-4069-90a1-8aefe1a2e073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6276255e-0cf9-4a17-99fc-562fa6046e77",
        "cursor": {
          "ref": "73edb8c9-e3a1-4460-b262-aa65ed5c6015",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cfb03993-9702-41ce-b191-313eea9584c4"
        },
        "item": {
          "id": "6276255e-0cf9-4a17-99fc-562fa6046e77",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9d90cc2f-31ff-4ad6-9806-082645e90dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3720af-5237-4a2a-8186-a3b070ffa3d6",
        "cursor": {
          "ref": "b617544a-7c37-4cdd-8346-6d813b8433a8",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "810722f2-6108-4e4c-9438-a59a999e772f"
        },
        "item": {
          "id": "de3720af-5237-4a2a-8186-a3b070ffa3d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bbfd72de-af15-4374-a39b-3d26da6ed8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02f37fe-20b9-4574-8369-ff59495986f2",
        "cursor": {
          "ref": "d62e6ff5-c60e-4517-a8a3-4a7b099c8b04",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4309d9c3-a1f7-48e4-bd8d-c920733d0a7a"
        },
        "item": {
          "id": "d02f37fe-20b9-4574-8369-ff59495986f2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e77c269d-9813-4f36-9221-aa97a4d8063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2f4e60-a64a-4247-a9dd-20d16f8518dd",
        "cursor": {
          "ref": "bde65f69-26b4-40f6-850c-5b76210fe0d0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "46341159-c1a3-457a-bf1a-2d6f06a0bf19"
        },
        "item": {
          "id": "6a2f4e60-a64a-4247-a9dd-20d16f8518dd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "20432d2a-5ef2-44cd-bea7-3772893404b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a701811-87d4-4038-a59f-dabfff797968",
        "cursor": {
          "ref": "d03acfe4-cf60-4a5d-8311-cc1998b602d3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a60f256-c76d-4ec1-940f-80d89ee7050f"
        },
        "item": {
          "id": "8a701811-87d4-4038-a59f-dabfff797968",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "75804579-1de2-44f5-b287-8ad2252607e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3cc9d0-cb05-40e0-ad7a-a2dee534ab42",
        "cursor": {
          "ref": "467d2b0f-1c02-4aed-9bc9-dc71ead983d7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "67bdf5bd-7bff-4377-8073-94bcd793388d"
        },
        "item": {
          "id": "8c3cc9d0-cb05-40e0-ad7a-a2dee534ab42",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "918bd336-900f-4369-bf59-7dc98f989a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0774bd97-5a93-41ec-8b5b-c478d9d8009b",
        "cursor": {
          "ref": "a10c9f0b-c2ed-4c88-95ba-12b4343db026",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d5649cf2-c5db-45ae-b482-6e321af1f506"
        },
        "item": {
          "id": "0774bd97-5a93-41ec-8b5b-c478d9d8009b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ee54eb4e-8dff-437d-a7a0-74abc64941b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750e3897-ab13-4727-bae0-7b3e8c26296e",
        "cursor": {
          "ref": "9bfa37c3-6a62-4795-94fa-9554ca060aca",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "38ad75f2-97f9-4f5c-abce-3a921ddc48be"
        },
        "item": {
          "id": "750e3897-ab13-4727-bae0-7b3e8c26296e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "242a1f84-15b6-4ef8-92bc-d35b2e91cb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3c9149-b146-4cc0-83d6-e629c9d9143b",
        "cursor": {
          "ref": "df35c787-2b8d-4a0b-8ab2-949a48dd7a99",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4a524c7b-f818-44f3-b84b-e59e3956a5dd"
        },
        "item": {
          "id": "7e3c9149-b146-4cc0-83d6-e629c9d9143b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "48444974-dd21-48d4-899b-0684487c4009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46ad08c-2a2b-430b-bb98-fa0b650e4ffa",
        "cursor": {
          "ref": "11333ebd-c0f5-4f0e-a614-19bd14763545",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5c7e7dbf-a3c8-4d81-bd74-109b3d3cd24c"
        },
        "item": {
          "id": "e46ad08c-2a2b-430b-bb98-fa0b650e4ffa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e5870009-c2e1-4de9-a581-ada817fa6801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da004581-eb9f-4252-b2ff-9ee91bbc26a1",
        "cursor": {
          "ref": "d04de71b-7e13-4df2-b5e7-57e8459843bf",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0bef91bf-3076-4cbd-ada0-402118f3e1ef"
        },
        "item": {
          "id": "da004581-eb9f-4252-b2ff-9ee91bbc26a1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9925815c-6b59-44d6-8fbe-17df8c920f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68594c6-51e1-4382-8dd6-6fffaf402a5e",
        "cursor": {
          "ref": "23c47149-dfa4-4726-a946-cf08bdb1f77d",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "55eb43cb-923c-4de1-abc3-eca36f64c5cf"
        },
        "item": {
          "id": "d68594c6-51e1-4382-8dd6-6fffaf402a5e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e9c9638e-8216-40d2-be14-5ceb3dd7cad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08501923-9b27-4cd7-a3f8-897fcfe1c1d3",
        "cursor": {
          "ref": "4fc9603a-ddb6-464d-b3f8-334bdbf64511",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c1fc2e26-2224-4e38-8017-40b21eaf1d11"
        },
        "item": {
          "id": "08501923-9b27-4cd7-a3f8-897fcfe1c1d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "158ab2c3-af5f-4107-ad68-96d1f3f79eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396d173-8f60-4061-9982-e13d7b42b2dd",
        "cursor": {
          "ref": "7574ed7f-5cda-45fc-8d00-98b4e5d19d54",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f90a7bbc-2eae-459b-b2e7-666794e60453"
        },
        "item": {
          "id": "c396d173-8f60-4061-9982-e13d7b42b2dd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "db1e9f27-1fc6-4c17-acc4-f0e5e2f8ae9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66cc63c-9073-4157-aad6-8fd7f14d4dba",
        "cursor": {
          "ref": "ba6db7cf-b655-495f-bafa-96ae4c1d9f44",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4c4935e2-d4ea-4628-b903-b1dd529b5487"
        },
        "item": {
          "id": "a66cc63c-9073-4157-aad6-8fd7f14d4dba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f58fba74-e6f1-41cf-8002-25a14939a726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b536132-3fe6-44a4-953f-24d861ec095d",
        "cursor": {
          "ref": "9e188dda-fa20-4fda-936c-85c1d47bc725",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c453790-e31c-4cfb-b937-cf6ae580bed3"
        },
        "item": {
          "id": "3b536132-3fe6-44a4-953f-24d861ec095d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c2c186d6-a9a3-4998-a8b3-8f5c34838ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8170c53f-d259-4b5a-8370-d118038b1f4b",
        "cursor": {
          "ref": "a9326712-ba55-40ff-84f2-7c00ffca9281",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2f99dd8d-43c3-496b-a270-f8fdb31e8ce2"
        },
        "item": {
          "id": "8170c53f-d259-4b5a-8370-d118038b1f4b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "388c6802-3355-4671-be35-f4f93ba9a721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5a0cdb-1b0e-4a90-88db-eec4eaf80d57",
        "cursor": {
          "ref": "09f8a49a-ab4f-45c7-aa6b-a28e87758b07",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6dc0c466-173a-43bd-9af9-efd133192c5f"
        },
        "item": {
          "id": "ff5a0cdb-1b0e-4a90-88db-eec4eaf80d57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e57f671b-d3c8-4957-a4ee-6176828d0882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119f2066-dd26-430c-89a5-e56955b6930c",
        "cursor": {
          "ref": "356a969b-c69d-4f9e-b7ea-2960d7fab81e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0cf148ba-fb7e-4d97-8070-8af7461b97ba"
        },
        "item": {
          "id": "119f2066-dd26-430c-89a5-e56955b6930c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a90e739f-8351-422f-847b-5ef95dfbfdf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba7f0af-e4bd-4de5-b432-b494d2f8cbaa",
        "cursor": {
          "ref": "6cea8c74-96b8-44bf-b060-ba1f6435084c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2582bf35-a9e8-4513-99c3-914f13f8d370"
        },
        "item": {
          "id": "dba7f0af-e4bd-4de5-b432-b494d2f8cbaa",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "69059075-4617-4032-9f83-33062418fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025863d-39b3-4876-83f1-37357ccb32e3",
        "cursor": {
          "ref": "90d5c8e4-c54e-46b8-ba4b-191dea845533",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a661ff0c-3f11-4015-b959-c49cfff4c68b"
        },
        "item": {
          "id": "b025863d-39b3-4876-83f1-37357ccb32e3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e217aef1-c189-4602-a45b-aca899017bea",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "9fd1b759-a70f-4034-8b92-1b6602009412",
        "cursor": {
          "ref": "08695d2b-ff6c-4b9f-8600-b3b4d450d35f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "97ec9d10-1a7d-4617-915f-afedcc352add"
        },
        "item": {
          "id": "9fd1b759-a70f-4034-8b92-1b6602009412",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b3abc7cd-8dc8-4d65-bd17-dd34ac35faae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d05dab-b9ae-47f5-89d9-9cbc8e4d1f4a",
        "cursor": {
          "ref": "a49974b9-26c9-402a-8ae3-e5ff4e9c765b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "85005374-5541-4c90-96f3-71709e38c1ad"
        },
        "item": {
          "id": "82d05dab-b9ae-47f5-89d9-9cbc8e4d1f4a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5509e98a-2eb1-4936-bf90-f9971c91e56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba32d1a-b31a-4429-a32e-79a91f98508c",
        "cursor": {
          "ref": "9e054812-c799-4b53-9752-66b572d33d0e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "64223f48-aa7e-4018-9d09-f8a0e3100260"
        },
        "item": {
          "id": "2ba32d1a-b31a-4429-a32e-79a91f98508c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "de5de946-6fd6-4dc6-a41e-52e99a08036d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "812185f2-d2c8-4c95-a6b5-aef5b5e21790",
        "cursor": {
          "ref": "19cf01b6-d843-448d-a443-089de38bd9c6",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "040a55cb-1f6f-4099-8709-f727068ca41d"
        },
        "item": {
          "id": "812185f2-d2c8-4c95-a6b5-aef5b5e21790",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "351ca2ca-a517-4548-81f2-6d43419324fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697beb6f-fc05-4282-a6c0-4a912ee6c833",
        "cursor": {
          "ref": "fc381cae-bb25-4be4-a07e-089392ed57df",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e554e99-7411-4925-8c42-85bd96ec9d77"
        },
        "item": {
          "id": "697beb6f-fc05-4282-a6c0-4a912ee6c833",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9ce8628a-2f7a-40da-abfe-dc573ccd5f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b7f63b-e8c6-466e-a464-dff609f27ff6",
        "cursor": {
          "ref": "a0a8c3d7-67f4-440b-9632-9b6cf3f9f70d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a1803239-a85d-4772-98e5-6b9d0c9c25b5"
        },
        "item": {
          "id": "99b7f63b-e8c6-466e-a464-dff609f27ff6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f19d806c-1538-4125-8f13-ecc4afc33f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d479e-d89d-477c-9b38-3eedc5cbbf41",
        "cursor": {
          "ref": "d4e5eaa8-b580-44b2-b434-02aa90893957",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "52e9c85d-30da-4807-b446-d914885061cf"
        },
        "item": {
          "id": "7d8d479e-d89d-477c-9b38-3eedc5cbbf41",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0f688670-3d03-4906-a739-c23f3aea39c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b1dbd6-9fc7-4a0e-9fa8-cf59c46d4cb6",
        "cursor": {
          "ref": "53c468e2-49bb-4476-bff3-c6a866244f62",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dbe4e13f-8754-4e7c-a296-8c2551b09384"
        },
        "item": {
          "id": "f8b1dbd6-9fc7-4a0e-9fa8-cf59c46d4cb6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0e1cad39-7632-42b2-a5bc-7a4855a5431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b202af3-0720-47fc-ab1f-a8c4a4267c4d",
        "cursor": {
          "ref": "949dc570-1fa8-4098-842b-d037e95d59a4",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60c5c007-5da3-492b-a23b-605f59cf0480"
        },
        "item": {
          "id": "8b202af3-0720-47fc-ab1f-a8c4a4267c4d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1483a067-f35c-45b1-b810-24ebf78cf500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b830727-4b32-4be0-acef-c35bac349781",
        "cursor": {
          "ref": "0f6adcc0-0a47-4f21-8b7e-c13b7731b8bf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8ccbe2a4-a2e5-4fe1-8c43-be0d3c46fd06"
        },
        "item": {
          "id": "9b830727-4b32-4be0-acef-c35bac349781",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b4b2f9c1-eecd-4b1e-a86f-07f470c00d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab0c251-0c59-4495-b858-6be04919a39d",
        "cursor": {
          "ref": "3938f2cc-d1da-49e0-b21f-d4ab84f42cb5",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a67dabc-4d6e-4966-99cf-e092fe858314"
        },
        "item": {
          "id": "5ab0c251-0c59-4495-b858-6be04919a39d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f0744480-c17d-4f70-99e6-467f18883275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c0b3a1-48e5-4c20-afa0-f850acd008b0",
        "cursor": {
          "ref": "c228e17b-d59a-4e05-8bf2-6c47d357b746",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2c5390b9-7f59-49b9-9094-140f1f1cc706"
        },
        "item": {
          "id": "89c0b3a1-48e5-4c20-afa0-f850acd008b0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b20482d9-a5e6-4edf-a721-8ecf235cee40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74899126-189f-4fad-b3fc-fc3c6d186043",
        "cursor": {
          "ref": "549029a0-0a67-467c-8583-7ed6e8fb852c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3e778688-2070-497a-beb7-edc71852da78"
        },
        "item": {
          "id": "74899126-189f-4fad-b3fc-fc3c6d186043",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dc742136-097c-412d-b858-54f78601d674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b795fb-c79b-4199-aa22-0b66993e2877",
        "cursor": {
          "ref": "bb16e9a2-d516-4469-b536-3efe4fb316cc",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c12baf28-7a2b-4cf9-a9cb-e191c708ce2d"
        },
        "item": {
          "id": "89b795fb-c79b-4199-aa22-0b66993e2877",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a187dcab-f595-4c10-baa9-f49795fdb26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309639c-4dbb-4831-b464-5840abceee2b",
        "cursor": {
          "ref": "0a64638c-df96-4f9a-bc30-a1bf2d0b113f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e184b80e-2e41-47bd-8699-d58211c5c1be"
        },
        "item": {
          "id": "e309639c-4dbb-4831-b464-5840abceee2b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "16621b16-2d17-4c3e-96bd-ea746d1c990f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed404a0a-1ccd-466a-a179-a1ffdcece1c8",
        "cursor": {
          "ref": "8fbe199c-5488-4d96-a500-40d559a96017",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "893a9ac2-55a1-4daf-9d54-665a424f82eb"
        },
        "item": {
          "id": "ed404a0a-1ccd-466a-a179-a1ffdcece1c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "08b36481-1d7e-4c1d-8dd3-2e274da8ca78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d44971-cbac-4825-b4c6-2675a42b3c9a",
        "cursor": {
          "ref": "e5efc1fa-2040-4d08-84d3-79b61c04df9a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f9c36759-3103-4ce1-bef9-1804e5cf8636"
        },
        "item": {
          "id": "85d44971-cbac-4825-b4c6-2675a42b3c9a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5fd03876-db3c-43bb-a8ff-8d74c553e91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5107886-8564-4f2f-be0d-6bb6b5400cc3",
        "cursor": {
          "ref": "95c51dd0-9938-48e3-93b4-44b0df245fcf",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f51205f-0bad-4a85-afdc-00d9a874976e"
        },
        "item": {
          "id": "e5107886-8564-4f2f-be0d-6bb6b5400cc3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e3030f72-9c54-46b0-9eef-ec546c257bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddb23d5-69ac-4f21-ae76-b3b24e5e4bec",
        "cursor": {
          "ref": "d279b681-55f6-442d-8b21-b8e4c34a1f92",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a5632c78-bbe0-4029-b412-0082e70e9d19"
        },
        "item": {
          "id": "6ddb23d5-69ac-4f21-ae76-b3b24e5e4bec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f296859b-89f8-4f25-9cb4-112bfe893a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605e3741-6e36-455f-858d-ed3498c2a508",
        "cursor": {
          "ref": "66b284e0-2aa4-435c-8cd7-06b9e8a16db8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "733a503e-e3ff-4310-9f18-3e9455abef85"
        },
        "item": {
          "id": "605e3741-6e36-455f-858d-ed3498c2a508",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "21be45a6-c51c-491f-bebe-602f177b5816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338cab45-08d7-468a-8aa1-fbd250bcaa93",
        "cursor": {
          "ref": "61c50e0e-a096-4b85-932a-a1e65bde0205",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "76d262b3-11f7-4a88-9ac5-fe2a04e0d77c"
        },
        "item": {
          "id": "338cab45-08d7-468a-8aa1-fbd250bcaa93",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0284ef97-c1ef-43cc-b1e6-359d119585cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09f69f2-6045-4dc8-8e8d-cf98f8b1c82d",
        "cursor": {
          "ref": "a75ad20c-8dbb-40e1-9bd3-b7da9614b1bf",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ce77712f-e374-4f2e-a7f5-4fc8277f6fb4"
        },
        "item": {
          "id": "f09f69f2-6045-4dc8-8e8d-cf98f8b1c82d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1e4c9f8c-8af6-431b-a421-d6efbcbf7561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689222ed-f09b-4776-b015-6a95c22a3de1",
        "cursor": {
          "ref": "99c41f08-f7bc-4095-9169-8e27f9662942",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "acc2b624-2f27-4c2c-8c7a-1937564f4cc0"
        },
        "item": {
          "id": "689222ed-f09b-4776-b015-6a95c22a3de1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "40325ba8-3422-4bf6-8f93-5e3e4612529c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f529cbe-f114-40ba-b532-74d8cdf9ddbb",
        "cursor": {
          "ref": "b17d6f17-fe4d-41a4-b390-e2b210c7a675",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2773f2ce-7aeb-4ed4-8bbd-fb46b3e93353"
        },
        "item": {
          "id": "2f529cbe-f114-40ba-b532-74d8cdf9ddbb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6aafae38-043a-41ef-9a9e-cb41edc9a782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c2cc2b-2dcb-498d-8bfa-ec285a7ad11b",
        "cursor": {
          "ref": "21609fba-1ad4-496f-a5ab-ed120cae9b9d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f174257-7f37-4c9c-a727-1f0fe26ff17f"
        },
        "item": {
          "id": "82c2cc2b-2dcb-498d-8bfa-ec285a7ad11b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4f601b77-17d3-40ff-ac16-ab72f1f85eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d2c147-d69b-4a26-8a61-475cee382602",
        "cursor": {
          "ref": "c478a9d6-4a7c-423b-b4cd-50deb5f0cdd9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6a79a9d1-ea37-4bda-a7e3-94fd8201c2d7"
        },
        "item": {
          "id": "52d2c147-d69b-4a26-8a61-475cee382602",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ecc06d72-2fc9-4cc8-a169-bcff98302f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027cc1b3-0ab0-405e-8c01-44102a66ac41",
        "cursor": {
          "ref": "cc6ed71c-8d42-41c6-8e39-129d4ace2509",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ca6ce414-814f-4f88-ac64-cf9e2342c298"
        },
        "item": {
          "id": "027cc1b3-0ab0-405e-8c01-44102a66ac41",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "61d9bee1-c20d-4131-9b57-990434376371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727acdee-2a31-4405-89d7-fadf22e1e924",
        "cursor": {
          "ref": "dd9fc85d-9696-462a-8ce2-1d57fe937852",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9687dab6-a84f-4ece-83e3-2d8cefff9295"
        },
        "item": {
          "id": "727acdee-2a31-4405-89d7-fadf22e1e924",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "634550ad-91bb-4332-ab33-eaa3864897b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed11219-0b90-4b2d-ab42-342b48cce3d5",
        "cursor": {
          "ref": "a134aeab-5124-4bb4-858c-c5c692b6731f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "df7e5e83-d827-40e4-98bc-54778a1c49d1"
        },
        "item": {
          "id": "2ed11219-0b90-4b2d-ab42-342b48cce3d5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1dc0f9d2-c690-476a-ad67-f25c9b78235e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02651e2a-d97d-4b7f-9917-cb3968e227f5",
        "cursor": {
          "ref": "78e8c35d-e748-4404-851b-79dce62d31d8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "43cfcbc4-5ec4-4af7-a17c-3ae0776a6266"
        },
        "item": {
          "id": "02651e2a-d97d-4b7f-9917-cb3968e227f5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4b6cc431-80a4-4118-bde1-5d99b126a8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0568ff95-5ea3-4844-bc2a-65d471f24b01",
        "cursor": {
          "ref": "b6297e96-c0ff-4cb5-997c-7e0aad33375f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "37fe9d13-2d76-441b-8112-f53e32300f8b"
        },
        "item": {
          "id": "0568ff95-5ea3-4844-bc2a-65d471f24b01",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1f1ac852-7240-45fc-9115-6d5df9975be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb13ff9b-3d7c-4e16-80ee-f65ff230d586",
        "cursor": {
          "ref": "0f1841d9-ca60-4c3b-94aa-8d7d9fc6a5d8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3f8bfb3d-833c-476f-936f-8786e48df174"
        },
        "item": {
          "id": "bb13ff9b-3d7c-4e16-80ee-f65ff230d586",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df5f9dbd-bbe9-497a-a22a-803e5b9dfde4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715cf693-f8b9-4a60-be77-365dd819853d",
        "cursor": {
          "ref": "6f7a4838-469d-4f30-ba13-e3d37204fbbe",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "06e4763a-a7a9-4ff3-97cb-df15654a718b"
        },
        "item": {
          "id": "715cf693-f8b9-4a60-be77-365dd819853d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8ae3686-978c-424e-92b3-a9efd47167fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a98ce6c-59fa-4e53-a385-ee05c03d59b6",
        "cursor": {
          "ref": "ec0a471f-8f60-4e97-93dd-01ab499fb214",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99ae0316-ecbf-4abe-944c-154d43f732b9"
        },
        "item": {
          "id": "9a98ce6c-59fa-4e53-a385-ee05c03d59b6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0bbcc7fd-eacd-4561-b639-7300a4c32c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d27622-d944-407b-a366-67f7a49b8438",
        "cursor": {
          "ref": "eb6f222f-6e55-45d4-8ef2-b43d009e3c46",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "af34e99d-b6fb-482e-8fb2-6508c0e63755"
        },
        "item": {
          "id": "51d27622-d944-407b-a366-67f7a49b8438",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2bd17148-fc0c-4fa0-be3c-8f87c613f3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a11561-a70a-4262-a206-df2e0e8d528a",
        "cursor": {
          "ref": "67d4844a-837f-49d4-a349-0060488f755f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "14dbc503-5e69-406c-8509-04975a903307"
        },
        "item": {
          "id": "e5a11561-a70a-4262-a206-df2e0e8d528a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6e1883eb-a6cc-405c-bec5-2aab58f19632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c90a47-4fd5-4a2c-acea-609d67763ba7",
        "cursor": {
          "ref": "c64113f2-0857-48e7-86fd-8bd695a325cd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "73b7a0ef-4700-4458-9b0f-0aa11b494e02"
        },
        "item": {
          "id": "60c90a47-4fd5-4a2c-acea-609d67763ba7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e16b70d0-c0b0-4762-bf7f-9abe45926c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3e497c-2ec1-4cee-bbea-734c77c81f4a",
        "cursor": {
          "ref": "23cf56fa-6c3b-40f1-bff4-3fc1bfb72357",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6eecf27-c863-486d-b012-af108be37b4d"
        },
        "item": {
          "id": "ed3e497c-2ec1-4cee-bbea-734c77c81f4a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "035d57dd-71ee-4ab7-ac68-9d5cd9b3bc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651cf144-eb6d-46ee-aafa-e8eb8028be96",
        "cursor": {
          "ref": "54bf5e4c-f2d1-499b-8074-96cfc9d0818c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "04db1f93-f9ff-4aee-9567-06b3a7088cf6"
        },
        "item": {
          "id": "651cf144-eb6d-46ee-aafa-e8eb8028be96",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c66e9300-9d37-4ad2-be56-3b1dea74b97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c773c86b-367f-4864-8c64-34efba698f05",
        "cursor": {
          "ref": "7bea3fb3-48e6-41b1-aefc-1ec6215e7f29",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2ab65ffb-2a59-42e0-b0a7-94506d7a4947"
        },
        "item": {
          "id": "c773c86b-367f-4864-8c64-34efba698f05",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "63f6d3cb-ac27-4b56-8f0c-c39563c5c247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f7e090-f1f7-466e-82ae-b782fe4c9bc0",
        "cursor": {
          "ref": "e1f125a5-fe08-49f6-b206-fc5d48bb4e89",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6b3c74ad-df5e-4ea0-9b49-bc3038c19db2"
        },
        "item": {
          "id": "72f7e090-f1f7-466e-82ae-b782fe4c9bc0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e6dd291a-acca-44b2-9a58-d7c5f561ae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee89c20-2cb8-49c8-aabf-4607fc1ec21c",
        "cursor": {
          "ref": "3d4d860a-ef43-4eea-9822-0dc1fb88d62a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7e22a38b-a50a-4b62-b9bf-6ce9e37ce590"
        },
        "item": {
          "id": "fee89c20-2cb8-49c8-aabf-4607fc1ec21c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e138f9e5-5902-4caf-8252-f3f62aa64115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a3104a-c51c-4de5-b257-906ab9bdb79f",
        "cursor": {
          "ref": "c3219d43-0bdd-4351-b0dc-70d9a077bed8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "54dba0fb-d73a-48af-b43b-0f527cbd6fb4"
        },
        "item": {
          "id": "42a3104a-c51c-4de5-b257-906ab9bdb79f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0661fd93-3123-4947-9313-3b734bb9fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247e8237-40a3-49bf-ad13-6dadb4174552",
        "cursor": {
          "ref": "b9100016-1a7a-4b59-aeb2-1ae5e242107b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "bfcb8ca2-5f0d-44d1-b22c-219c9ceddb5f"
        },
        "item": {
          "id": "247e8237-40a3-49bf-ad13-6dadb4174552",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7ba7a165-fc7a-4ebe-ae5c-46d5db72d74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e19dc6-df21-48c9-b6e2-8b01a1ae14bd",
        "cursor": {
          "ref": "f6338dcf-5f9a-4667-9f77-9d6aa7432a65",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "20b7d5cb-8000-463e-821c-d377f82cbcd6"
        },
        "item": {
          "id": "d8e19dc6-df21-48c9-b6e2-8b01a1ae14bd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ea9e716f-faec-4b77-be8a-51bb06090272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b20f9-4654-4f2c-bbdc-0b6d6dfefe09",
        "cursor": {
          "ref": "2179b776-8806-44de-ac2c-4aaee7e6b31f",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a68da149-f6d5-4e58-8069-c6c9c88ba937"
        },
        "item": {
          "id": "a20b20f9-4654-4f2c-bbdc-0b6d6dfefe09",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4a5afab1-4e25-439e-b263-d88ca9b9ce46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a60a5d3-6872-4877-866e-85f8f59875f7",
        "cursor": {
          "ref": "bfa4eac8-f7b2-4805-b062-8763b7546716",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3722d3bb-f921-4385-bf8e-2bf8f982415f"
        },
        "item": {
          "id": "5a60a5d3-6872-4877-866e-85f8f59875f7",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6e1a38cb-825b-4eed-9df4-5a3b1b8e9ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bee978-8f06-468a-bcb1-882b84b729e1",
        "cursor": {
          "ref": "ba7c1a08-2355-4726-bde4-0417fe5b4182",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d8a17aba-23e2-4cce-bf80-a43876b01fbc"
        },
        "item": {
          "id": "b4bee978-8f06-468a-bcb1-882b84b729e1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fbba8a8b-3c8b-4ff7-9477-2449aeb8eb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6294a9-2d59-472f-ab87-e77f1dbdbb71",
        "cursor": {
          "ref": "41e08f27-efb8-4cfd-b7d7-440f26b80b49",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "54667440-52e1-46e9-bfba-fb3c3e88731d"
        },
        "item": {
          "id": "5e6294a9-2d59-472f-ab87-e77f1dbdbb71",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "46696b37-cd74-4d5b-b0e6-6e3c7ccbb54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ad009f-b0a8-4d37-96f3-092e032b2852",
        "cursor": {
          "ref": "c2a78b68-9111-46d4-a398-022957ab6ed2",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "09cc2a1c-36bb-4b81-9352-1585b0aafe3a"
        },
        "item": {
          "id": "c2ad009f-b0a8-4d37-96f3-092e032b2852",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6d7a0981-f100-4adb-b36a-36461b2b33e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dba983-499a-4fc6-a92d-13b9c09538f3",
        "cursor": {
          "ref": "e5c7dde0-8439-42d2-8e3a-39c0a522a827",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "289ee77f-bd4b-47fd-a72c-2ae1e9aabe5d"
        },
        "item": {
          "id": "16dba983-499a-4fc6-a92d-13b9c09538f3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "431e246e-f136-4029-b5ef-4bd977576bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e522c322-59b7-47ae-91c1-bc074c8a4eb9",
        "cursor": {
          "ref": "1b48aa73-3333-4aca-80aa-06f96fa2ba0e",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d45ddf0-34e1-461a-b003-cb0221448db7"
        },
        "item": {
          "id": "e522c322-59b7-47ae-91c1-bc074c8a4eb9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "75ff07e7-3307-4681-8890-4939923a33c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81904f9f-4656-40d9-be4d-17c85c394b2b",
        "cursor": {
          "ref": "3a9cd998-50f5-4a1a-aa63-9cb5f37f185e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ea806605-1e0b-43cd-b980-9750cc22da9c"
        },
        "item": {
          "id": "81904f9f-4656-40d9-be4d-17c85c394b2b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f2ca0056-bf27-4a98-875a-5e7af2cf0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a34573-56d3-42c2-af21-a562155f6a8a",
        "cursor": {
          "ref": "48dea098-4814-4108-9ca1-7aa7971e5555",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0d088e68-a07c-45fb-874d-0d1fd59c97a9"
        },
        "item": {
          "id": "22a34573-56d3-42c2-af21-a562155f6a8a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "01d2d7d3-cc41-4523-8698-ac0837810ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e253142e-0c70-4c63-a1a2-e2f41362fa90",
        "cursor": {
          "ref": "a0005ac4-785b-4723-b16d-162b9ee9ebfd",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "12325ada-ad51-4c64-b8f3-8a7dfd851e73"
        },
        "item": {
          "id": "e253142e-0c70-4c63-a1a2-e2f41362fa90",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "001387ae-8844-46bf-9e10-0b366f8740c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c45370-57e3-47fa-b5e0-41169941dd56",
        "cursor": {
          "ref": "3c0ebd65-4b2b-4b5b-b811-4bcbb2db26a8",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1617ef04-f7db-4b38-aa7b-e05b8c78a95b"
        },
        "item": {
          "id": "63c45370-57e3-47fa-b5e0-41169941dd56",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d79ed301-ff56-4ec1-ace8-29c52ecfb317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6066caef-3e33-4816-9c46-f075fadd1273",
        "cursor": {
          "ref": "002e1229-be96-4742-9ca4-647b9aebe957",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "8c6312bc-4d0d-4b0a-8828-f93ece0fd55c"
        },
        "item": {
          "id": "6066caef-3e33-4816-9c46-f075fadd1273",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a57ffc28-675e-4c13-8113-7371921a1384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cd6e5f-1a33-4423-9e2b-25d4cc4620b0",
        "cursor": {
          "ref": "0bac082a-04cc-41e5-b2e2-4a5eda3e45ac",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "38574a71-f2a6-4003-bf24-dbf5151779e6"
        },
        "item": {
          "id": "c9cd6e5f-1a33-4423-9e2b-25d4cc4620b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c261c600-68e3-47eb-85cb-a4257bcc19d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 202,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3555cbcc-521e-4401-a7c5-a0647e5fdb7f",
        "cursor": {
          "ref": "0063f4e0-a356-45f2-930a-335cba5e9efa",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a746c56b-d365-4781-9f3f-0694f00c8656"
        },
        "item": {
          "id": "3555cbcc-521e-4401-a7c5-a0647e5fdb7f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9004b866-5ba2-4180-a021-3d22ac43e25a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae1921-aa7a-4242-93fc-dde5fc0d9683",
        "cursor": {
          "ref": "55987164-e49f-497a-adc1-95eafd39bbf4",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "453c8f22-43ff-4952-b788-2bb3122e2e7a"
        },
        "item": {
          "id": "46ae1921-aa7a-4242-93fc-dde5fc0d9683",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "73c7628e-d614-4e4d-990f-03b54fb17f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06187f1a-b5d3-4e65-aae5-8b2b58134238",
        "cursor": {
          "ref": "286babff-f756-4f35-9f1e-022a190bee03",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "543ee922-6c5b-4485-86a8-dd0e237ef111"
        },
        "item": {
          "id": "06187f1a-b5d3-4e65-aae5-8b2b58134238",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "38ac7c51-b89b-4209-8cfb-ee9b1fc46ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33256499-b464-44cb-9e66-d42ac53c77cc",
        "cursor": {
          "ref": "05079d56-8e11-4aba-bdfd-f4c0af0c4781",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7d958ff9-4223-494c-a278-4f3650caef38"
        },
        "item": {
          "id": "33256499-b464-44cb-9e66-d42ac53c77cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "17ca1d2d-85f9-4563-b314-5a6a2037b8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63dd3fb9-7447-4d3b-a144-af1b77c8d6b9",
        "cursor": {
          "ref": "fc3a6163-ebdc-4ac1-9b37-a85a36d30d26",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5cd5c2fd-6cc1-4b3f-81e0-d70bb851b0b2"
        },
        "item": {
          "id": "63dd3fb9-7447-4d3b-a144-af1b77c8d6b9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5cadb559-95ca-4cb6-b695-ace8048948d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4de483b-af6b-44ad-8216-b1abba518714",
        "cursor": {
          "ref": "d6291be0-99bf-4aa3-8757-b357eed1e18d",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f9910348-3bad-4d14-9d10-8fc9034cd7e0"
        },
        "item": {
          "id": "f4de483b-af6b-44ad-8216-b1abba518714",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "064fe867-1b53-48ca-97e5-63f144228d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d3f0d5-dbe6-4004-a456-d14c3a2a8233",
        "cursor": {
          "ref": "fae744f5-85bf-4e88-9525-3074ce3f726e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4722b963-b9f3-4c5d-b4de-6f5766a5a955"
        },
        "item": {
          "id": "b9d3f0d5-dbe6-4004-a456-d14c3a2a8233",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bb44df30-dd7c-4df0-b58d-9f586c1bfd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855ab987-faf6-42d3-9006-766abc8f76ff",
        "cursor": {
          "ref": "0364544d-657e-4094-b77a-c1be99e6c358",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "dbea5c38-583f-49fd-a0aa-0ba0e63ffad9"
        },
        "item": {
          "id": "855ab987-faf6-42d3-9006-766abc8f76ff",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "57a99e53-5d6c-4258-b235-493c7422ac91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07545068-be92-4c27-8204-96b2da830941",
        "cursor": {
          "ref": "a8708648-07e1-48fb-8abb-0f3ba7e5aa6b",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ac2de80d-aecb-4e09-b146-c00b0f453713"
        },
        "item": {
          "id": "07545068-be92-4c27-8204-96b2da830941",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "03f651c3-1891-4cd6-a1f4-4dd779ad36d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe9a069-ab82-43d0-a3c4-fb832c38fe48",
        "cursor": {
          "ref": "122aa3f4-aaaa-4593-af40-65db48be5cb5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1024cecf-b31e-494a-a2b8-fb12dfe578ed"
        },
        "item": {
          "id": "ffe9a069-ab82-43d0-a3c4-fb832c38fe48",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f417fe3-778c-4dc9-b94e-11f62ebd0212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10200364-bfbd-46cd-86b2-f353629c1da4",
        "cursor": {
          "ref": "1e8201a8-4f68-4a9f-9ed4-6fae4439ea3c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8c0ae1ad-dcae-44ca-a664-3b1a596dc765"
        },
        "item": {
          "id": "10200364-bfbd-46cd-86b2-f353629c1da4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d7ca213-17fc-4c53-8085-c743df549193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1471b87-164a-44b1-91c5-5b29aa37d787",
        "cursor": {
          "ref": "209022e7-54f5-4564-976d-5f5bed5b596f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ff1f6558-2a1c-4f32-bf73-c1b218ab10b4"
        },
        "item": {
          "id": "a1471b87-164a-44b1-91c5-5b29aa37d787",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "564d74c9-cbb6-4b98-8b1a-8b0a8e2b7c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e25199-56f4-4b8c-9145-056757ecf899",
        "cursor": {
          "ref": "9e1fd008-f7e0-402b-9426-80bc7772a9ff",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9b11bef1-32df-495b-898a-e8a2df531400"
        },
        "item": {
          "id": "a8e25199-56f4-4b8c-9145-056757ecf899",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f75c697c-b0d8-47ee-9a02-98adbd526340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c95ab8d-7c40-429a-801d-394c4d9995ed",
        "cursor": {
          "ref": "9eafaecc-a5b8-439d-a749-28a2136cf746",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f3fd29ea-aede-43e4-bb02-da7456edb5f4"
        },
        "item": {
          "id": "8c95ab8d-7c40-429a-801d-394c4d9995ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2e4ee6a1-57bf-49c6-a15f-4aa3cc86dded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af07aef-d2c4-4a6f-be26-9630d4d3016c",
        "cursor": {
          "ref": "84822435-db63-4c9d-be62-2407e6334c4f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "2913ea68-27fb-45a8-9cd7-3d2541a58445"
        },
        "item": {
          "id": "1af07aef-d2c4-4a6f-be26-9630d4d3016c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6aec98e0-1e25-426b-b8af-49c627963362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea23bebe-a22f-4f6a-b34f-b84aab949617",
        "cursor": {
          "ref": "6c289224-d4f2-4705-8f0e-f3e24b4a9c6b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "f715197f-61a1-44ba-9f8e-237889e43097"
        },
        "item": {
          "id": "ea23bebe-a22f-4f6a-b34f-b84aab949617",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b6c3dd8d-c50b-4bf0-b598-651ec4b76941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270d7443-6094-4eb1-b6ce-20441def58b6",
        "cursor": {
          "ref": "618bc35b-c8f4-478f-9318-d912b5706df9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8629abe1-5431-4548-9f94-e2c9083c1713"
        },
        "item": {
          "id": "270d7443-6094-4eb1-b6ce-20441def58b6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2a92a531-e660-44f5-84c9-e26ea5aa6848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe18fd3-4666-42e4-8e64-7c6cebdb6704",
        "cursor": {
          "ref": "7e216719-62ff-435b-9811-b8526eb82c24",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "54cdd1d0-2339-4ebf-86be-2324a82a4e82"
        },
        "item": {
          "id": "6fe18fd3-4666-42e4-8e64-7c6cebdb6704",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5f2fe8a-80ed-4a7b-b4c5-9b4d1736f798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2193b3-3d8e-488f-a8a9-04df51684070",
        "cursor": {
          "ref": "45bcba0e-7280-4ee1-9b31-a5cf81c3502c",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "96f4d089-dbeb-4f44-8775-6679f137417d"
        },
        "item": {
          "id": "ae2193b3-3d8e-488f-a8a9-04df51684070",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c8341320-ce20-441c-a741-a15074387944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b728e18-9024-4c15-90c7-9019c5b1a65f",
        "cursor": {
          "ref": "1e3f2f7b-d54e-4911-b285-5d8f82134587",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "88c8d7ee-ab71-4a30-a37a-2098015abc43"
        },
        "item": {
          "id": "6b728e18-9024-4c15-90c7-9019c5b1a65f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bfd16556-79a8-4038-a9e0-38d6879011dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6b4bd6-b2a7-436b-89b4-3c2582dbde78",
        "cursor": {
          "ref": "b13f8565-3faa-4526-a202-fb00ded694d6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ad1570fd-63ad-4baf-bc67-454c294a90b8"
        },
        "item": {
          "id": "ea6b4bd6-b2a7-436b-89b4-3c2582dbde78",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a9aaeca0-c7d2-428b-b86b-a443ca8b17fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e42f71-c205-4df8-973c-b26d6828d478",
        "cursor": {
          "ref": "977b3a98-3191-4517-a9d6-bce55945b702",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "36fc3474-f1c0-4c34-ba4d-9fdd53053ce2"
        },
        "item": {
          "id": "59e42f71-c205-4df8-973c-b26d6828d478",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d57040bc-56e9-43c4-9fe6-a252819af361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508740dd-5df4-48b5-8629-e5a64e564e7b",
        "cursor": {
          "ref": "ae39daf6-616e-428a-9f57-753e68680e13",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3145865d-1c3c-4ecf-84f6-182c20251f61"
        },
        "item": {
          "id": "508740dd-5df4-48b5-8629-e5a64e564e7b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8e1a9596-23f4-4bd8-a109-a5059f736f02",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73390d4c-5d29-4eb1-b653-71e2a1e49bbe",
        "cursor": {
          "ref": "8c142b88-e57f-43bf-b765-a0335c086b64",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c223ea64-d798-4563-82c8-c0c09598b10b"
        },
        "item": {
          "id": "73390d4c-5d29-4eb1-b653-71e2a1e49bbe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c94193c0-26f3-4172-8204-c642b8e432df",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "964b88b4-ab27-4946-9c77-a1a9521a8ae1",
        "cursor": {
          "ref": "c122c9f6-c851-465c-a244-e04c1664c9dd",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "35c4ce01-826c-47c6-a040-0a5a5cc3f475"
        },
        "item": {
          "id": "964b88b4-ab27-4946-9c77-a1a9521a8ae1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd9d9e17-80cc-417c-a21a-80db603f1932",
          "status": "OK",
          "code": 200,
          "responseTime": 4495,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3fc4136-a608-4503-868a-3d225324fcfc",
        "cursor": {
          "ref": "fe5db23a-4dcd-4666-be42-1e8eea920e1d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2219ea1f-d999-424b-a50f-2884051370aa"
        },
        "item": {
          "id": "a3fc4136-a608-4503-868a-3d225324fcfc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a03968ab-d9d0-49ea-b432-abad975c70e7",
          "status": "OK",
          "code": 200,
          "responseTime": 5119,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "214d9a04-f62a-4066-8382-dcb4883c21e6",
        "cursor": {
          "ref": "2c132c90-8acc-4f7f-9d1c-1d4c9593dfef",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "daa4af02-b690-4cc2-9cd4-277c344c0d2c"
        },
        "item": {
          "id": "214d9a04-f62a-4066-8382-dcb4883c21e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2e8aeead-283d-460f-9657-35ed042af8cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214d9a04-f62a-4066-8382-dcb4883c21e6",
        "cursor": {
          "ref": "2c132c90-8acc-4f7f-9d1c-1d4c9593dfef",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "daa4af02-b690-4cc2-9cd4-277c344c0d2c"
        },
        "item": {
          "id": "214d9a04-f62a-4066-8382-dcb4883c21e6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2e8aeead-283d-460f-9657-35ed042af8cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e889fdc9-1973-4073-8d8d-6bf20c878975",
        "cursor": {
          "ref": "e4b627f5-4e44-44a0-bc67-a54c54921c5b",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "220c2802-6018-4011-b7d1-5291dcbd07a7"
        },
        "item": {
          "id": "e889fdc9-1973-4073-8d8d-6bf20c878975",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "58431e55-6e8e-473a-ae41-5ee06f2cca7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e072a53a-c15b-4057-9b62-07c1b9f1f2a0",
        "cursor": {
          "ref": "609ae64b-6bcf-4633-bc32-12235258a6f2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "16524870-3ed9-4f27-84fe-c88b19b8c79b"
        },
        "item": {
          "id": "e072a53a-c15b-4057-9b62-07c1b9f1f2a0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b81357fa-5bec-4b86-b0e1-658effbea6be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}