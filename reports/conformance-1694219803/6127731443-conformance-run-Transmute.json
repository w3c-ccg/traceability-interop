{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9378b5b3-905d-4bfd-af76-2ac0bb5b93a7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4f1905d6-bee7-41e7-bf53-ee0180ba8c5f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e76c79e9-f224-4352-9d29-2dee7e9e62fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a2da8684-2502-4e56-9767-a900f44d0ae6"
                }
              }
            ]
          },
          {
            "id": "bbbe8dd7-44ab-4219-b636-8fb820c8a446",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a999db1-e7a2-4a22-9ffc-df6d18debe91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "07c8908b-a501-4b89-aa3d-271362bc3e92"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "14fc42f7-2fb3-403c-a333-ebec68659de9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "485171b8-d284-49c6-b12e-9b84d884f1af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4289c21-0763-49e6-a963-db3b9c3b94f5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61ec364e-35a3-43e5-9406-0344edda6ae7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8e3a2d6-737d-460f-8cbb-70dd52ecf6e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3301c6fc-890d-452f-ac87-f27273a89b96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5e2b813-2b32-498a-bae6-577bb9c47e72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e72f87c1-0022-4930-b55a-8fcffe0624c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef79eb35-5981-4a43-ab27-56e7cec4a868"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05320786-e5bb-4f8b-a1ef-4a2c2e82cea8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "01c348bf-f333-425e-9aa9-b6e2b71cb105"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "986f6ae8-c403-4db6-80a1-1d5e851eda87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d4ba551a-c381-402d-bf8e-53a4945a8aec"
            }
          }
        ]
      },
      {
        "id": "2106dcd0-88be-47cb-bf8c-650b74ab9114",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cee5d6ef-e9dc-47f2-9adb-939a5c5ad9b6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92ffe957-b3aa-4f51-beba-13bfb73ef20c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4a17bbca-0f3e-4057-b812-552592882c74",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474eef3e-0009-4ba2-bf62-bfc6e6d12643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "543fd863-86cf-4b7f-a3f6-37c33e8e0191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29af641-bf55-4771-ae5a-477a485f2f52",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9207fc0-2540-42a4-a74a-13294d44237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73fc81c7-1c8e-4e27-ac42-8a02f0fa562c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658a938e-ad96-4fb7-8edb-1d1f569ce1c9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95dcd66e-3401-4c1c-a0a9-2cf9156e2b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7cad9bf0-5a43-40b8-9e12-19dd62109bce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "526dfcc7-0df6-4bdc-8b1c-c680aa195133",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5343bc02-1d08-4058-884f-b6d70504c1ad",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66951d7-d6d9-462f-8f80-7c5834d5fea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a25260-a601-4c75-b0a3-7453b1301b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8357b8-721a-4bb0-83ce-cf813cafdf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def52a0d-759c-4f40-8e3f-7c3574f7be56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "56f968fd-772a-4097-94e0-94ce2764a279",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2b8abaa-c044-4a95-a1c6-049821e89b7d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7700a163-0daa-49ef-bf7f-ee4dd20e98ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "51df98d8-243f-4c38-8e46-b6961d5f93b0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91e9c371-8b38-4d5b-8517-b79cc4ac3cd3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "72eb042a-6de2-4cf9-b81d-12e166398f74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bff07dc-0898-497c-974a-1e93724c9386",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c117527-efa8-45c4-9918-26f51d57c4e0"
            }
          }
        ]
      },
      {
        "id": "c3b2b534-d734-4971-9149-bd5ca42f392a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96f49f95-5643-469f-a478-b796b206ebd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a45cddb-f9d9-4ec5-9bbd-32cbca4f7283",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "632a0d87-f7ca-485d-b63c-633d4c3366e6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11386aa7-6855-4f4c-ac48-cad7277ff15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf7b991-d9db-45eb-ada2-1c3363dd5a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9b0235-8786-4dd0-ac6a-432a7c6b97c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "369617d8-ded1-4ded-aaa1-703c23277645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892ffc1b-8bd0-45bd-9686-c4428dd0e6fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68535ee8-af96-4b26-8098-0408aea5c0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae0c4163-1dc5-478d-a360-f2b458b17ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a2e4eb-a7e7-4fcb-b301-ae998a939b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b2f5e5b-0675-4675-aa61-8bbdc635f831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f83106-5168-4187-a97f-f6dc35e7d1f1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0e8a87-4aec-4d8f-baec-3c57e8edf904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b692d0-007f-4b99-9b34-de68a3512332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06add37c-2ee7-4054-9cbf-aa103c75b96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6ece32-e10c-4db5-99ce-fd25f519be03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892c15ea-f85f-45a5-ba12-aa3b1c4ba7f1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da553a68-beaf-4bb0-8aa4-f34337f2196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d159f54a-7981-4152-8f5d-75536ac2d229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6178fbef-5cf0-4c0e-ae9b-7c8b2ca5f53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8881c319-00af-4edf-a7b2-89bff87f0fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad89ba3-0f6b-4b83-8510-6bb26b645736",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d42447-f7e7-4be2-9086-94bcdb1998e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeea741-d240-414e-93e4-5c53e44ba085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24360ef0-f7f6-4d9d-a2c4-e52e361d804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9770a4fd-8cc8-4f2a-93ec-1c130e3f0aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb75362-ff2a-424e-966e-9f9cbb955812",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a124a83f-0e85-40cb-b62d-91bc097548e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e6dd7c-2308-4b47-b472-3974c7dbc7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf16cc-3d45-4785-b5a1-703a4cfc3d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fafc45a2-3f08-4996-ac3e-949d29cadc23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f817909a-a96e-4f9a-b57b-06d1af855582",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28060011-cb8e-4d3b-a0ee-5f0ac68d7b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cc3459-0ddd-4e50-879b-5bbcb9f0890a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c191b662-7607-4d26-ba62-d28e8b4144c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58a20f1f-36e4-4fa0-b6fe-0fb7c33b40b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904be14a-5d02-4a4a-abad-1ec1ca2f6d78",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da69974-e04d-436a-b103-2a1bca431512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a2affa-04db-48bb-8066-53ebb4e62ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af71952b-7c44-4294-940c-d95ac221ec00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c761f5a6-2d63-49ac-8621-3f704c1b18b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30eefa1d-23ee-41cc-92ea-ce87c2c5f277",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953b4e1f-a0e0-4630-a386-2a50918db5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2183114d-fc31-4510-96e2-5808c28fcb99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943ff7e6-1e8b-4217-a7f8-a65ea39997ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e60b3f8-d3d1-4aba-b15c-1b2c1ad19758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006cfa81-83de-45a3-b3d6-a24e10275e54",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda77d3b-7382-49ac-a267-2e239bb529b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6317e4e1-ad0c-4d44-a8fa-6bbbf26b6511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469b3dc-0d58-4389-b131-d97ca9460ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf7c524-0fcb-4529-b10a-8fe12a0af47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6881305-3b70-428d-a100-054fb9647d3a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7191302d-c38e-4c11-aa87-573b2be6d719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1f7faa-a3b8-45e8-b853-d70145d3d60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aaa69cb-2b24-4db4-aa4d-f8078c6607c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d70b41e-83ff-4cf9-958d-4b798bf8d0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcfb47a-9979-44dc-97a0-5c0ba9dca0b6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85faac7a-f2c5-475f-b21e-f5b0e5a50a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713b1809-6d7d-473b-a1da-7ca3a9ad624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1810a73-5ca8-47c8-83b1-fdc5f944fc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5769f09d-037b-41ae-9ddf-26cd91c48008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1519b37-247b-40f0-aa80-90f9901e86e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fb4566-eafe-4a32-aeb0-d7c0504c1ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58243ca-8795-49dc-a9e4-2cd8f8c52323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a90843-45f7-4726-9aa3-440a20e79c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e713c796-cdec-41fd-8677-4fc6ff589c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584c6db1-f53e-431f-b495-b1525f97b2d3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f73cda0-dcc6-4dc0-a65e-19b8ead345aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ba4146-0b9e-4835-a654-e58c432fc92f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c5cdae-4bf6-4e8f-a84f-cd9d941bf7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6b1c10e-d528-4313-8d5b-d56f49a159e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9d1df3-5553-4ac9-8d63-557ca7e82828",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37113de2-8343-478a-9922-5f3c8009e3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5aac46a-d7ee-47fa-9d2f-af51afded600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb685c5-d2e9-4288-ab7e-641034ad3da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d2d15d-7fe1-46e6-97d7-485bbd9e29c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa353d-418d-4e81-825e-12daac483a71",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b81a8a-7a50-4482-90fd-69671a39fac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e968bd4f-e4f9-4af5-8fcc-a6c330804ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169fd836-0d3c-418e-ab33-2959d4afb784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e669f7b7-afce-45cd-b8e1-0b437dffed76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ffc5ed-f832-4a64-a0ff-26f42f780206",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d453f5-898e-42be-88f3-c5d61fa01c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0237bb2e-7391-4992-aa88-2df10fbecd34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79548c1-e90a-494d-bd0d-c1435801239e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21615ba3-31e6-466e-9bbd-e2fd6f3ff7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0bf136-ec07-4e28-ba89-91060d045752",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df9eb9d-39f0-4c4a-808c-2c921b1cff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230aaaad-322f-4819-8cd7-6ccaf8a72c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0f5a40-5a8d-4444-8d4b-ad63e5054f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcf46e6-8c1b-4388-834f-ba4f79f068bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4944105-89af-45f8-a57d-bceb02aa6e47",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da1bd2c-6a3e-4f3f-8e5d-08519eca616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2187eb2b-cee9-423c-8240-8d9b4f2643c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d9fb8a-1cfc-44ce-9b9a-b4afc5a07423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "11867aa6-f48b-49ce-9bca-9d7b57be61dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d087e2-fae9-43d5-b900-33b3788bf26c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb12cb2-f401-41c7-b5f4-f9dc93f8defe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d165ee1f-9b3c-4ff5-8fde-ff207b100215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1879417-689e-4b2e-9589-443cb599ab28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36fef953-211f-4718-96f8-1414f7d064b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5367b2bf-09fa-4146-b57b-b58920c1b38d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d83dca-b809-4db4-b182-d2560632b009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce9d1c6-b3a0-4a4d-8028-f15c0ade70a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e84b45f-43db-4a5f-b601-861bbb5cd80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9563ec3b-c599-4ce7-8649-686d6805c873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc2320b-02a1-456a-8f28-b7c8692b400f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46abb5-b4df-4840-a99d-c01406bd7a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a975ebe1-3b23-488c-a5d8-a34a6575a3c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3757a7-a6c8-4d56-bd40-60ae529425fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b15e6231-8919-4507-9c3d-3c36671e8e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ae0bfd-d16a-4689-bd79-cad5704ade74",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f604143a-bdea-4fe6-b402-ebb0324232fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c93cb6-b16d-47a8-835e-317fa3e7f0fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e916acb-c8ce-492c-9fce-9bce9d7dfc16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61c33249-73ad-483c-af0e-ecbdc80022e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad31fde5-9503-4f12-a83b-89fb87b69322",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f58f5f-ec5a-40d5-a52c-ba1ab8484d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbb74aa-65b1-4d48-a3aa-5f5a729888b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb588b3-b00b-4990-be7c-e374cea38910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6149d54-a828-42e1-8642-59754bffc041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5abf00db-7d2d-4b2e-8f58-1bd55c6cae9f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc4e4eb-9840-4723-98fa-d9f21b6d0cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa973e1c-69df-436a-95cd-93f7ef452f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c951aa90-3415-4486-8c3a-db4e90bb3862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3635a6c6-cc14-4e94-992f-97cedfed02a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da75503-5e41-4412-913f-28a374518fd4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb7e537-2b3d-4b2e-b1fd-e9c6e9edec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af20f1ad-5107-4c40-82b6-19cbaac27565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b41dd5-7bac-45a4-ba03-eaf0bbd863d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b45b58-0e4e-4336-9074-f75e3e9c5413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f867a2fe-c8e1-4a7a-a534-a697251d8acd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61cc2b9-fd7a-43bd-905a-cc9339aa2f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf632c1-5c32-4e73-b1f6-b55fc052372d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff681a7-e10a-4e29-b82a-bb7a7030408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2d41fe-8388-4b6a-8ffa-6c9fcf936383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af6b89c-41ac-48e0-9c77-6757ab381d59",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6ddcce-d2f8-48fa-8cb0-dd6e12c9e9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5e4d64-565b-4fd6-a8c9-466540e63ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f362323c-de65-4a9c-a609-8f545bb46167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2894b583-449f-46de-b5ab-4214ab43f499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f8517c-fee4-47a8-bd77-dd593d525b61",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59dbbab-c866-47f9-8a71-ce5b2af9a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83aafda-7cd3-4ac9-9c37-23f87968ff96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef696e5-cf36-483e-9309-5d8fbd63f0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79825034-25f0-4583-85e0-a28a188825ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc50628a-7d42-4f98-acd8-de6de35dd383",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631cbd2b-a01a-4c57-8c88-d5fd6132854f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7beb8c3-a48b-4fb0-9fff-2a41434b124e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce2ceae-b81d-4069-be10-ed2205d15f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "78befb0e-6240-4468-9b75-939f588c2e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340dab0c-aed2-4823-b963-cf5053f128ef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa723cf-9cc9-4b13-b48b-14a1d14c1d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81718801-317b-4e01-ba2f-6f6871f453b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d77141-1203-4fa5-bbf1-83492bd15989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae76f8f-9255-4758-91d0-a30faf0ad2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a22982-25a7-4275-b781-1241be907679",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09895960-61cc-4dae-bc6e-c035859bafb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f010576-1c5f-4954-a601-75224d5f2230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb3afa7-942b-40de-b55d-3c89a022fb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "914cf593-286a-4554-a228-d29343f9d5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013389f0-2e11-497d-96b9-10f0f0040e2b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a712dcc-b72e-4445-a823-cb556ef45f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca073f86-9168-496b-82d2-e9c43ba7c7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79e57c9-82c2-49ae-a1ac-e74b38176733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb1c507-ad40-4816-82a1-72679a47650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd227836-a43a-4c9e-93c9-691b5975b593",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e439ff-8695-4fd4-ac43-8e5ba0df2277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "710cf74e-861c-4633-86da-cec3b688895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02e7d74-95e0-4873-87af-0c080c4017f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "480cbd26-9fbe-4ea5-a5da-cdcc6a978daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bca37c-6892-4bfa-8143-37dc340bdd46",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857350ce-34e9-4dbe-ae22-aeff44b9471f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6dc733-06c7-46f9-8cb8-ad697d3dd166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9b6a1f-4fa6-4027-ac2a-4052d71934c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e26ac892-2bb7-4982-ba79-04b1bccbc8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e585b22c-e115-4c9d-a885-009f4760546d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3e7453-ed05-4032-bb19-da6634e71e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b3bd32f-24b5-4bd4-af34-fa6fe4780819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786a8dc5-4a64-4816-94e8-888e46c0a6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f11dc490-334c-4cad-a28a-f39d3df69cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448e445-da5e-4e2c-9964-c3d57a558bba",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea837ac-687d-4d03-8c39-34aa727ac582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cd85cb-d651-42a8-b332-41ddc4672507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a28989b-3992-4c6d-a351-6cb04f49e1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71e0baae-df15-4df6-bf73-6c2d0af2a3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db97fc-2bfc-4d51-bd8d-8ca739b2e29b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309c77fb-8691-4da5-9ce9-c4bbdc37d83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6513ba06-cff1-4c69-a8c8-8d558955ca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07485579-d2df-4278-81ff-70901a74fa96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00e77ce1-ea5a-462c-ba28-60fd50499b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249c2f03-3565-4eeb-9351-6464ebbdc80e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a43e7e7-c75e-48dc-a8f7-6d0883d42872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b752d3-a142-4bfa-a2bd-74603d0979c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c4f613-c21e-4ad7-9e40-01cd9ed0cb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a75ab7-f40c-4deb-af4c-f81baf619efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68109a5e-1732-4bf0-8483-99342169087d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d014caac-98c3-4d98-aa92-7539229616dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45728e65-0dae-4518-8164-66b33932a617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc732bf-216b-4202-8f12-45f748dae200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f07d8281-e528-4869-bdf1-d390d88ba8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780fdeec-bb20-4fff-9940-092dac9a60ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df30800-164e-4f60-9d74-1682c95bd737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1801e76-f483-451b-8ede-55f5a851bde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecdae8f-38a0-4a60-b30a-0dcd56ef6d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5acecac4-0b68-4c6b-ab3f-ee5e308f9551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caee2f7b-0d9b-463a-865b-f5f94a56fdcc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294fd050-f9af-42d8-89f7-2d6e58e36ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a7547-579e-41d3-967e-c14540ad99d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dc7be5-ee7e-4ae4-be8a-f10ee12b0453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d1bfaf-f0fa-4d32-923d-efd34d159007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f1be6d-34b1-4797-bcef-a692315d10b5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedaf751-ada0-4ac5-a4b1-10345065ec58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98d018b-f9e0-4b0a-ae5d-71a25e3f3a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993526df-3951-4c75-98b1-774cfea434df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebebe22-1abb-41de-92ce-0063108e0028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5a005d-5f4d-4a13-ad8e-e67669b6075d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dabd2276-c54f-4d1c-abb4-277d96519185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942f6fe8-c43b-45bf-a05c-f804983cce47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59786149-e061-4322-9235-fee067a931ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "429fa8c2-50ec-424f-b6ae-34a129783acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437e80cc-c961-4b4a-a965-d23683faec57",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca00920-466b-47c0-a42d-6f12d060bf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da310621-8d7e-4a86-8da4-6b0424c3af9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5fcd71-59c3-4eed-8428-e8c144305872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37175ba5-5bc2-432d-b349-9115b04cd42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7154f6-c6a6-4bbf-8b5d-140d70eca433",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23800f8a-4993-4aa1-9d18-7ec9e22b4775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "008ee554-5798-4ea5-bf43-615bc19c4e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0b38d6-b0bd-4600-ba83-d4df0d11672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08acfd9d-6976-4390-b2eb-ab64b489f980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102c778f-c977-4255-8f54-0d3caa5d257e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7143c469-30ea-4f5b-9dc9-8258dca00518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e045e16-a266-4ff0-8149-3c0dfede110e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340d92a8-1944-49eb-9fe6-981012101dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba04ce10-997e-4ff7-868c-0c8c33160b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34567104-054e-440f-ad5f-80f96969f9af",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56202957-068e-4cad-bb0f-b4ddddce0325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b21156-949d-41d7-ac77-0f58e753a806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657badef-eb61-4230-b396-91b3b5169c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc72b512-36fe-47f5-8702-86da399a7b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5903cd0c-7cbf-4842-ab03-94637afbbcb7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c41ed05-c836-46b0-a303-28ceff25a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf91a16-e091-4b72-8ade-f517a8fc7b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d3e4d0-ad87-46bb-a58d-e0332c96a9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17261ee3-eea8-4909-91e2-01d43d7a8132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a4caa5-c9d5-4127-be10-58ad3b42c0b9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8926da0e-b5a5-49c6-b91f-cf1eebd7fdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b2bfc2-1742-4d83-8dce-6560b5aeaf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e960498-a1d6-4063-bf2f-98cd1a016ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "accee299-0028-441c-8fec-319a16cad481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecd1a4b-f30f-43cd-8c4a-12163d8b96ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74cc2f1-e2a2-49b8-bf9d-89c949103b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e87de2cc-91b1-4d53-96aa-524a80aca40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6050275-c18d-4f14-a393-ef44aebf4cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9da4eae-8bf7-4eb6-ac9d-668de454d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8713e6-8343-40e3-a59e-2c12c7961924",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f01d5bd-5365-4b73-9259-1b8c64ab77a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01549cf-ba1a-4f5d-a72d-ac821cf128dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8486cb-be26-48b0-9850-b931d5fb0e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a34ed5a-de8e-4b68-960b-f3b43d2ecaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6757b8b1-9707-4ede-a65f-cf10167cd3a5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f214cbb7-be5e-4938-9d28-de7f033c9302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61ebf14-c9b5-4f2e-91c4-5918760e3a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6081afc-685c-4e6a-b0be-11ed82bd672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82d5b5a4-c645-4abe-b73d-e9c28acb977d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90beca8c-4d03-4c32-a2c6-8dd3f71fba48",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f0cf16-33ef-4356-8556-c9af42bff8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1390b7-a34c-45b2-8b24-416054f652e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42608a2-5160-4fe6-abec-eafcef694735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c40f0c6-563d-424b-aa95-5c2a7ba679dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2611fe4d-41fa-488e-8253-38900e3200f1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56875e0f-e579-4a34-abbd-1bc528c6da71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fdfc0c-ec88-494c-a47b-4f220a5f35ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697410df-d43b-4340-9bda-55528bee723e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6336d6fd-24f4-4275-8000-3de8c1bf531e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb62cc33-3785-447b-9593-089b7554586b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481c05ab-fea4-474e-88c6-5ea1089dca36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53e1d5e-ef06-47fa-94fc-42852cb072dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c221db-6c3b-48f6-9377-6b970de0ee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2b2a8331-668a-496a-b55d-d1ede17046cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30f9385-17ee-4dc5-94c9-63b2e5df8e87",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b7108-6321-4a61-991a-9123fc899d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb75e11f-62b1-40d7-9f7d-f32d5da76e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fbeb83-4c87-4ea3-8832-547b047a9563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0494b82-cb57-4c25-8c6b-8fe76aee29c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6570d8d-0149-442c-a066-262248b671d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eb49ac-99b0-45b7-aa5f-17c7248f3972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fead6df-b65b-4af6-acfc-d0244027c9dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4b060f-496e-45a2-b7bd-66e03d50f996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d588db-0683-4c9d-96a0-25f739815e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a77d65-42a8-4f17-904a-80dfb7b93e75",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cd68e4-9bc7-470b-bab2-59807d59a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10ba741-0554-4638-9e22-0111ef12d03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a35bff-c152-4a5a-8622-4769259e981d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "166011d4-72ec-477a-9574-b9eaa714859e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187a6a31-cddb-4b4b-a5ed-07357e109f7c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14da0769-540d-4f45-81c1-8491e1862778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e0eb2e-e868-4b0e-b6f4-69b0b78e2265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49366260-6dd1-4d08-a874-1d775cbd2592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9feca6cf-dab7-482f-bf3a-c3adcc6cfe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8087f19-e751-482c-a852-39d31432dcb2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1146ce2-ce04-4185-888b-b0172bbbb379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1ecc96-628d-4f22-b90f-444cf0f9e783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfb5398-ce5c-4807-a5fe-8ed189172ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5caa192a-506e-4c09-bda4-8483757b7f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc64a7a-8aa6-4b7d-b7ec-db40c61bae7f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8ecc1d-db65-47fc-bd09-d3695d3e0157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46838b5c-6f1a-4210-8464-019ed7cfa957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0861db-0394-4879-a55e-32c31416d3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c3f673-2a7c-460b-9992-6bf10fbda464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002026e5-32f0-46e1-b87d-5d49e0c7108c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2056fccb-6a2b-412f-816e-19ef7ff05431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9d197d-c504-43c5-975a-5996c5a063ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04a78d-b38b-4ef8-9049-008f94b72088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e13b18e6-4902-4a50-93d6-66cb704c9469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f56c32-6224-4785-99bd-dc2cf198ff1a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6186af5d-9c51-4012-b096-635ab7ddb67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237a91ef-c86f-49c8-afa1-2c366e07fc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60aed3ca-9082-4f02-93b5-00c6434ad293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45e3b5c7-d630-4d01-80ab-36c3aaa12147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45604daf-6aad-4a66-ac63-10a07ddccff8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973a253f-f9fe-4c0c-8803-b03822744e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aa2b0e5-8cc7-4a20-b870-1f3aedf3ee6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe879f1-d2af-4b4d-bf8e-c0aed160acec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "580d0c3f-48b0-4308-a1ae-e5b9c5bf1647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a5007e-e33c-45d9-bc19-429688e493a2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68408e13-ca06-4745-980f-36e8ddb37549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d4d1d5-a3f8-49fd-b3e5-ab027910036b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a821d28-430f-4940-ae89-4e5fa34eb71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "251b2c82-cc6e-4ac8-b9e2-af12005976e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60d01d2-92b0-486e-a12c-c473fdf84247",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8241f546-f5c1-4b8c-9ee0-955e9f0fdd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0126b04b-0bf6-48f1-bb3d-e3cd655d72fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af22fe9c-6604-4754-959d-b53556e57365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1e61e2-c6ac-4458-a6cb-ee7491523c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a7094e-b339-4cb3-b7a7-9300a129f1cd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f4675e-d17a-49bf-bc8c-898214cc2e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0813a3df-1422-4e70-b3fa-af9c61c7884d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9e5e5e-15bc-4b44-973c-b145c5c73654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa57c930-9ee7-41dc-a6a6-eb95f60479e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640476ef-09b1-43ca-a315-453b71f90c25",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd0868e-60e7-429a-ab6a-2ad4f8196226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c59496-e797-4505-9484-dae118dca706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ea98d0-406c-4e91-be4d-b582a7df6a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "91870032-07ce-4772-abcf-5770a0c91d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2146c987-e36f-4541-8a71-4fd2cbaf567b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0ae399-0b5f-477e-8b4b-cf1ca0b9cd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e38057d-638c-43fe-ae73-ed23c13fe22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f9c56-8114-48c7-a2d1-de0fdd010dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "728b81e9-0159-4539-9a2c-3caaf9b496a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af2d8b9-a4bf-4ff9-acb7-d92a55c0f07f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14868c5-f771-41fd-8239-cd61caf49dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241d2758-5e06-4549-9a43-04a69f4276f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e772648-1548-428d-a016-d56f4f455995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7e4a36-74af-47d9-94ab-693fa04cc601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e23961-ea37-4917-a33b-48b2dc80e1b3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f9a057-32eb-40df-9a70-af2792ed0c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48035e73-a035-4a8c-b580-3bbd53c4279d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9999d9a3-f559-43ef-b95f-42ced76bb55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a51e57d4-e31d-4894-a41a-80217881a77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed847711-a192-45d1-acb8-edd151f8d362",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d802e2-b639-45e4-9da6-a1a4cb3aa202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12dc9727-e1aa-4d63-8382-d55c73763abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98d58c9-0bc6-4916-a59d-e3bdaccc1b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c17777e0-c427-4ba0-8838-321eb4e03f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71181b5-a411-48de-90ba-f434554a6011",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a7d1fa-62e3-449e-9bcd-b63891c377f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8342eb58-3abd-4439-85e7-4db434631e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbd69f9-db6a-46df-8a6b-4cd7795f144f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd146dba-f906-4f1c-a8d0-f799b47f19e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf8fc38-ead7-43a2-8fec-d4ac3ce87550",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22fa404-b1f0-4aa2-bb77-776e29df7a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f47ac7b-cb4a-47d3-abcb-9f678df911c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc24397-db1d-4190-a17d-e58adb2e8f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af7a2d1-ff69-456e-9aae-f5250db662ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9e541a-18b1-4584-8669-002032dde1e1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48cd7e8-2cb2-4ffe-ba08-3cce2ec6c423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef974f9-e6b2-4204-ba99-0b3ae8087495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd39030-2f33-4254-a46e-7a49b8184378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14d5a4e0-1315-467b-a49c-d7345620eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954bf890-f51e-4b05-ac49-e8ac837b3723",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edf34c1-157e-4d40-a3d4-5fcc1267fcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dcb385f-c20f-49fb-a1d0-8345c13ac413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c176b-c61d-4590-9581-5973a457339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2238b0e-f718-48d2-a134-decba820700c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c55c412-7b85-4227-ad8f-5d49325cf4b1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a0cb9b-ee0c-4e98-8350-bbfea379d5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636ab1d7-b41c-4d32-a21c-9fb987dd946b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d14a5bd-9e99-49a5-bed4-2dae775a2d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5206cf3-934c-4917-948b-04b2f2f210cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5ad7fd-228a-4427-b8dc-ee380e6312bc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c2c3ac-2681-46a4-a29e-93c73ee4a313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d30bc43-166c-4090-97f1-262d8408395c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9565fe7f-9adc-449d-989f-fba139025c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3b6675-df08-4c8c-a155-82d9665ee14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390fcead-0d33-4552-95e5-8813fa08c96f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f4fe52-9612-4c78-8feb-8c11f7fc166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0e6ff7-970d-4fa8-a1ef-7bc38e72fc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cdeea6-e202-4f8d-80cc-abe1f81790a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8565dbb3-84eb-409c-9e24-086cd7bc5662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785b9e9b-28cc-4f8c-84aa-bf12aa8d6a41",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5938b363-9922-4833-b2af-ab9b04166170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb86167c-df75-4378-8f3d-411460f3d261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4230f5f3-f584-42e9-9fa2-cd19b8b827cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c140c4dd-2c67-45a7-a3d8-29ea5f9ba336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf43afda-e530-44dc-af05-c6cd7db3a005",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8a6876-f8a4-4ddb-bd0e-cada5dae2ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3656b64f-adfc-48ec-b35a-74015166207e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8038706c-e17c-4660-b215-a9890c197117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8577dc89-d086-4ffa-82f9-39303a6737d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4152b78a-75d9-481c-84f4-b297e60d0fee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec38bd68-cdb7-4d8a-9dda-6fc358d1fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1639521e-ba76-438a-b450-adc686e52f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7222a88-f176-4091-b620-499b165930b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3bbcb63-bd6d-4b92-aaed-1e98d46654f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c81755d-0b2f-4a57-b272-14e4911722f8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1da786f-c865-43e7-aea9-9de0d957ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0623cc-26a7-475e-97dd-a17af38ae68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e03d41-122e-4b9c-bd4a-10308cf3e428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96a4532e-d13c-4a21-8449-05d04a1050d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c3011b-8a59-4cd4-ace5-6e3118aa2568",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b505b48f-6fce-4de1-aef0-67ba2c3d9e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4667500c-b6cf-42ed-9aea-07bf6e2f6fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31baa3f-8c64-45e3-843a-c65803c3a30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef05a110-b5fc-4d29-8095-38f4cd53927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648fb2ec-1871-495b-94df-97ae1eba64f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f3fc4d-27ea-412e-a9ac-096cf663fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d8fcc7-4e6b-4696-9ab0-fdcabd7f4509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bbd2b4-fb7c-4335-bcdb-2a8ec9ae9225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf7554a-5747-4f11-b95b-b67e5a68fa60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cabfc4-23f4-4e26-85d5-0f9ec8fe322c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7d2e3b-52b8-49bd-90db-12e2a64e64d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfc6edd-d337-426c-909b-6d708c5bb0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c56257-1a17-402b-ad9d-d2939b5bc313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab52e478-243c-45cd-b3d7-20b8134df3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de772ac1-dbde-4166-b3e5-f96815ebaa7a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e261cc-a673-4e18-83f8-161dce05d446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ff5dd1-c22b-42af-9410-5e244e56f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65b42f6-aaaf-4392-a5e2-704015e7f95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdff32a-f3bd-4db6-ad2c-7f2b64f6af31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c6ed52-6a25-4bae-b46f-e8619b9111ef",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222bbb1a-af6a-4d7d-ab42-c3f872add6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9dffb7-3dc5-4d7f-96fc-8e7478f83202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2509f95-0873-4946-9d3e-ee56c8583cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "500f2959-6971-44fd-ab6e-35517ac47e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8a2a2b-0e1b-4840-b5ed-af92bd076857",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bec6565-3053-46bd-adeb-f331d375dddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318b7d05-574c-4d6c-95dd-29e6fc592dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96b87ac-f55e-4e8f-a016-c7d09a54ece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1afc7f-e0ef-45a3-be08-9b7560c5e43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59d9f8a-0ffe-46f8-be81-ca9c5b42f8d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239bbb0d-fef0-4a6b-9e34-c31e773e34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31814ad8-c901-4e68-84fe-a1d8eb6bf556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54d9144-ed8b-4d78-9bdc-06413933ec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9904181-de25-4d59-ba66-776097e1070e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55f11f4-8c5c-4c49-9ce6-0fa56e977dfc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26525452-988e-48e7-a824-3cda30c0d27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "359ad3ed-8eec-4e26-a1e0-77e6daf3db1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7b12ea-0cfa-41a0-a65d-c1db21239e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "063334e6-6c66-4a7f-8bdd-03b9f746b148"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3954df5d-6cda-458e-b3d4-35693e1cafd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ccd9ece-0d05-4c8f-9cfa-0e02e8d5e1f6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8ef61e-3680-41cd-bcff-25e436e4da33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2feff770-1350-4f77-baf3-b21e07a84444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8588ca38-264d-4df6-9d72-7c37b29b6f55",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89d8ab37-4cf3-4b47-974c-8d9c1c7f68dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5bdf24c-7cb0-43a6-80c0-b8824c6176ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "753c9ea0-7daa-41e1-866c-b72de335aac9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee0245b-124b-47fa-85a5-f6d5becd73fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6cbf030b-5eb0-4dc2-89fe-ae4a9013e089"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9d794d4d-d816-4cb5-932e-d7c65e0c29c2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44cfc07e-c7fb-4189-9f85-4923e1c14ea8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "681addba-4691-4ea2-8148-ef2f83521137",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0691301-a6a8-48c9-b970-e75cb768a159"
                }
              }
            ]
          },
          {
            "id": "23271632-1e83-4115-aed6-97afde5806f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94e0bd07-bb74-43e8-b945-efe0fcb1ef12",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1ff156a-89ff-47f2-b001-382cccbbac43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f77fb5c-85a3-461b-b324-e3b824cb9d50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "64a68001-bd80-4857-8c66-683df94fa98a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc12ca96-27c1-4e86-832d-7b3bbc3cad27"
                    }
                  }
                ]
              },
              {
                "id": "8228405f-b28e-4783-9408-427c8c985e07",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf33cc85-1abd-49a7-a33d-bc9c0604167e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8bae5ec2-1c7e-4cc5-8b7c-2461bd387ef9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a629bcd-f6ef-4af0-ac34-95552eb0114e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f431c49c-8475-494a-a5e5-4083337aefe7"
                    }
                  }
                ]
              },
              {
                "id": "4ed72598-ec43-4d75-adc7-5177cc0864c9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea8c9fba-e484-4a25-ad02-164fb033baf2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d816dcc6-1546-42a0-bdf7-5402ef2c37c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00058dc6-cd38-4140-9c39-3c9842f7dac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9ab21364-43b7-4051-900a-d197f1802bc1"
                    }
                  }
                ]
              },
              {
                "id": "376ef2ba-1cff-4767-8372-05dfa502d1bb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5b65f0f-d4f6-4771-9bd9-8258c4843c6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40864239-bfe3-442d-881b-96e21bf6b906"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97b2eb2e-d8c8-46b9-b30f-f30ba8817049",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "99d7a89e-d255-4f35-af13-740560bc10c2"
                    }
                  }
                ]
              },
              {
                "id": "5ce3495f-751b-48c7-9a07-44aecbe78292",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d7e995-23ac-4d39-a895-ae939a984c94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "916d0f53-baf9-49f2-8bc6-19b91128209f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4a12778-bcb4-419a-9f64-eb9d1a6456f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2b01fc87-3130-42b8-890d-9b582b8722e9"
                    }
                  }
                ]
              },
              {
                "id": "be3b1ae0-7b34-408b-8ae8-a6a8521563f3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f582434-c603-426c-89a5-e4a521b75490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "88609d98-14c7-43e1-9b30-58f8b0225723"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c34320d-fd1f-400e-997f-33f51fe5a5e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0cb342bd-825c-4227-8382-9173ef6cecd9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f32cf30-ee08-4d7a-9fba-96a87f3ccd34",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cae3146-e95d-42ed-802b-f38155dbbaf7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "acaf949f-f233-4999-af37-38940af94550",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4006f981-5a62-46a3-9c05-ee37203c0c5e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f93668b9-5ce3-498c-94c0-8324e410588f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "695cdebc-d492-4df4-8ba5-21875ba567d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2648953-f8ed-404a-b27a-0c89c63c7da1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34f3c603-cb32-4393-94ad-dcbc2ad5e1c9"
            }
          }
        ]
      },
      {
        "id": "45ab05f3-0e54-4bb7-8760-f15ce30973a9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "23f4886b-8fd1-4dc2-b103-8abcebdf74fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad31846a-c914-4aba-bfeb-a6f342d10749",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "613f4c44-4803-44ab-a894-60eb5e86f36b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6942db4f-3769-4cd4-9e80-2b2cdb4b707b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb202d13-def8-4d6c-9e4e-3fb8e9286892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f0805d-8a45-4885-82f9-f282add426de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "279cd1a2-9b0a-4aae-9f08-58ae1f6dd562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19212fb4-03c3-45a6-a584-1d59eadd758c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7191c00-4465-410b-af17-fcc03aa9fa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a418631d-4139-43dd-8827-bd4a9a33128f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40b6ab2-ee19-4829-b771-e807e9d1239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6313db-0753-4b0e-a2fa-5af4dd3b7530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bac950-b6c3-4796-a406-7709e5e01006",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2460c0-5437-4ae5-a13c-14cd897787c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613d75bb-3759-456f-91ec-f8f5e68bd2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87fc39b-7d94-4051-85bf-781aa900cae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c634f504-22e2-4fc6-b24d-abfb164e14ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed2a5b1-578a-4865-8419-8dd1a66661e9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fbb90a-1012-4a44-b992-58ac6ca23bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dfd105-ae1e-4139-b3ba-18ebc2725016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721a7f1b-9bb6-49fd-a492-3c70f6e2f5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e58f20-92f0-4b30-b85b-7f0cdb1b8183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e368a6ec-c451-4b21-bf18-ce90d1faff36",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97abd438-963c-4b9e-bba2-517589eadeac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5cff87-9ddd-4e86-b2e0-01e64c00c95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0486e81-5de8-471c-91f4-9934a27cf383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b71bfd00-9fc9-4757-9f6c-288bae5cdbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c3347-dcbf-4c4b-8169-e75658bc140c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e305c7-d5c3-4e1f-b934-1a6419b8428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69c4a61-1585-4bc0-9930-6777833a346d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627e442d-c7c9-4e67-a424-5216b1daea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e75f3fff-31aa-4c10-8816-833d4377d959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d69417-5b93-4eb6-8833-23af1d04e42e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cffbf9-b36b-48db-8147-3678c775c935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c4b9b9-0ee6-40be-8891-6a2efe60905d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8795bd13-ec14-453b-83fb-dc16d23dcdcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fb8b29-620e-4da3-9147-35470dd52b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741135fb-13bd-46e2-a865-80eb1d657d34",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80aea9c-7c35-4c40-a0bf-a6d93b029766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cf860f-dfd6-4416-8d0a-82b0deafe089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89339432-36dc-4412-8bdf-4d82df908769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5175ac-7be6-4d30-b416-8100df7f3822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520fd611-1bc3-4b23-84a8-17a7f43399d8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79cf2b3d-e552-4a11-9af2-bd4008f18c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9919ba43-0af8-4120-9609-bb45ae872739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e699c4-6dfc-4505-8645-02ec759e22b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf87634-3ca2-45c1-90c7-58cd93079a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6ecc18-a342-495d-87e3-404db1afea21",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afeaab65-e55c-4a26-92af-dc06f28e573b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2101fa0f-4822-4826-aad8-4e76330dff2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413693f2-2e9d-4b8c-a5b4-005562991b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e301e6-8095-4adc-b7cc-ac64d50921b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795215cd-842f-42c5-a183-7525c9c8e6d0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9620cd-5c02-41e5-bc0e-14337cae00de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90d77be-c563-4029-8ecc-5ad40cc820cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06e9051-0737-47e0-adeb-38f4f58de54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d686c-694e-4814-8435-8e00408491eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3a10c1-1a62-45e7-8458-42db4f3f5808",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d553ec-9c77-4d70-a538-3bc56b10f414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2f809c-aba7-4283-b3a6-3d3633cef8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4875872-9aba-4cf4-bf00-52f64885a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72034c6a-6833-4112-87bd-b0b520eb6412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a17d3fc-6da6-4c4b-a218-4a3fcffa8102",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88082a1-bf67-4521-b02d-3dd552d882e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7746940-5f68-4a9b-82d3-f8505830ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7e0435-b06f-4fe5-9651-f5f92783cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae711e90-6793-40c0-909b-7138db592425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a4be8e-8f1a-4b07-bb61-34bb8357b953",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f079fd5c-8f6c-47d7-8fdc-ffca28dfb5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cf4b2c-941a-4bb7-a4ad-3dded1d74cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e05feb7-dde1-45bc-9e80-2b8dc38dd700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c4f15e-90d1-4ca9-886c-a75176be1388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5639cbe2-5cfb-4e31-a649-2f3d28417a5a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998f15ce-c75e-433f-8036-6f005415210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b93f228-59f2-448c-a5f7-7bf7df28beae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7230e67f-ce6a-4470-aec7-48af1b33bdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a444c5f0-4d4e-49f5-9e2d-45b76fb48038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca8253-0324-48b4-9302-3d7a06127fa1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b13ba7-149f-4b7d-8a05-c41b2f939640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbeeb7d-94ef-42ea-81b2-5200c9dd6349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183ab41a-468f-4138-b407-210752a078a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "630d6e7b-4f02-418c-a191-85a3c989847f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e9041c-2629-41a8-ac64-0051c30b58d1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c221a5-803a-491d-a76e-35b56922741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eaa226e-4994-4206-b6f9-0df43ae84fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc1ee2e-6bc5-401e-bbf4-22681151c03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "baf31949-72e0-47be-ae0f-c1da84dd90d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced20b06-049f-4d5b-a110-3ccb9aa1c260",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbd383e-aeed-4373-86d0-c36c96105d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c19bc01-54af-4e66-9119-68aa2907ef31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee0e2c1-8f3e-4c44-9bb8-775915d5b39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32a7fd6-b2b1-473f-b236-e171e4253099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8c247f-d5a3-4351-bc5e-28d55c8df857",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a1c75f-cf05-4c18-a2b4-8b37789eff58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6acc346-ec70-4426-964d-c8d6ab3fd970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeca9c66-ecf8-4c1d-9023-3baae526f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbb1203-877d-4e34-a07d-54f8296e3f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99712405-92bf-4de0-8809-cf7cc1edbcf7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b0634e-f0a3-49f6-a27c-7e456d0e860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba0bcda-d07b-4393-b471-5468df909004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390363b9-e5be-476b-8189-1bb6efb67980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdbd3a0-69d6-43da-ad38-48b2250542c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de1f629-3c48-4bdb-a139-02c53649ad28",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53434c7-609d-4ee1-880a-ddbf71b5de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529029bf-dc9e-4764-acd8-608cc2f4baa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48b4352-d137-42ff-986c-c5548db9ef6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768bf917-9b1a-460d-825c-b2c183692c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa05bb-3931-43a7-9fc2-25a10c77851e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed116d8-f9fc-4ef1-a705-689d6e0d631c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99c8050-e422-4525-85f6-d858db3fd45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83217d10-3c42-4f03-80b7-e454e374eeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc18512-6473-4bd3-a7c1-f1eac17bb7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77895914-de02-4972-85ea-cec0c8831bf3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692cc487-0059-4ddd-bf4d-ef973bd12245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee5cdd4-d0e6-4d29-911d-d00bbf26b09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a108b3b-79b7-4a27-a38a-94584c2833aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1d36d6-77bc-46eb-a05f-4da5aea9a76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569f3997-dc7b-47d9-9b4b-0acbc2a62285",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b35be26-af9a-41bb-b3a9-f61b01f888b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7615ade6-c8bf-4a52-9fc7-8b92efa0bad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d69517-7dc7-4641-b685-d44f2e59f21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a19f11-5ff1-4942-a119-94cd71e3223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abaf045-4957-4471-b028-decf2f5a97a0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444b649e-3144-4986-ab0b-2bdc41e37b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202e6c92-be7d-4633-b023-e6c816b75811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d5b97e-5f37-44cb-ace3-a352faf0671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "658d0e6f-9bbc-4807-83f1-fe170da1f406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2059aaf6-6948-4bb9-8b04-59bcbc66a73d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a5fb40-25b5-46b0-8174-d125ef46ca80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e26fd414-181a-4eb7-ac3e-b47febdc2d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c63b84f-2194-48f6-9310-68e8ac11a90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7afb8f-2354-441d-890a-c86b7456537f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a74669d-71ec-42f7-b55f-90d31a0e70f8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67bf765-bde3-41b0-a224-5b894a1ac36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273fe59e-6b73-4764-bc9f-fac75e6a0dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9aac5e-6a69-46dd-90f7-e5495f33b849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd51bf1-6023-4ca1-8f83-239df49a3569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9490a3-f2f4-44d5-948b-89c1516fed29",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cd278b-92fd-4961-a17c-9aa88d3674f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11083115-5aca-425a-aa27-5f30b6395249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b803c26-771f-469e-8960-60b1172a7e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd1a004-6a9c-4692-b5d6-2513c13e04f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7140c30a-22d8-4907-82f2-e44db234a76f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedd31a7-97b9-4c3d-ab4e-b95047e69082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865375b0-ae11-42ec-9777-f57e6c52f178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff5a8e-2967-488f-a7c4-7d785a2b9dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ec532a-ad0e-4431-b18e-9984c6ac4b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e62b5f-d450-4bd1-9911-089660b0ad37",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70a3c65-a935-48b1-bf7b-ccc0cb0b628d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa967a35-d0a3-4515-8c31-87a1714812c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb0dca5-99da-4727-9704-775315d99a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1de6f039-6456-40b5-b074-54a9f384d34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79211a6-419f-4e8f-96c8-7a38d5065749",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4218165-0af9-406a-99c5-81857761325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a6a3eb-25cf-419c-8409-c6682f37e1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2622bc-dc79-4228-af33-8842d16ce688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "626d443b-42df-4e5b-9a12-55a9cdf71d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c35e7a4-493b-42f4-99fa-1a55223e8273",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a049e53-6062-44ce-b00e-ee06ae35f534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ce391d-9138-47be-9881-d206fc617f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d4b9b7-2cca-4eff-853e-107181444a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c94263f8-44ac-4b35-8028-db55f160bfdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eddb04f5-d511-439c-8d78-86d11408ad65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9f353b6-d993-44ca-bc6c-aa7331cbe91f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f60326-7ecd-471b-b292-fe3089b34244",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3849c428-6f4f-4c8f-bc40-d0d65a275a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82700cae-cc5d-4afc-8c26-84349af7a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d98ec91-b6cc-41fb-96f7-3a2a67df1fc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36e1f186-e31e-442c-860f-856fe98fb36f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6aac9d1d-4392-41a2-ab17-ef981a59c5d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c5f6b89-2fa0-4c0e-83e9-5d0624629f47",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52b3b09d-a309-481c-a62a-e2991b49bf96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d869ce3e-0a62-4063-8b0b-0102a69ac7dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8bc33bc6-ae25-41c9-a0e8-3cee0472e231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f59c2669-8d08-4c4b-8de8-9e29deaacd24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f9579d0-b51c-46da-9d66-20dec07366a5"
            }
          }
        ]
      },
      {
        "id": "3cf7eb9c-0b8d-40d2-bfbd-dad0d7db59f8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "881c1386-290d-45e7-b4ce-d183da1c6fdd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "adce8545-fafe-4dec-ac6a-bf60cd2b4825",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "664c1d44-9fdf-4f49-9f21-c0e5df4305c4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c81066f-c7e1-4f62-be60-efdd5be25fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b219fe-ffd7-44b2-93b9-3edab5f82574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e4816f-f72e-46a3-9309-6d402cbb5c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "441921ff-e8a4-4ec2-992e-a92a10109050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd74ee38-3cc9-445c-b0ab-28b39a08449a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7bfc3e-c14f-4c6c-bb8b-5fab5f3907e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "497b1557-f2ab-44e3-a044-3c13ff026371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e53d351-c1dc-462e-b961-68a89a43c706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff9708c-ae7b-4dbc-a1e9-6d1765631e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc888ebd-492a-4399-9648-f2b939bc5ae4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "832ece0a-bd0d-42be-bfea-7bef347aa33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019463e1-97f7-4ef9-941e-95a3eea104b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1021a0-11c9-4902-b482-16d4c755697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8647efc0-ba37-4c81-9309-6acf32137f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b24b0-f200-4acc-8c7e-83298cb00fc1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9689cbc-08e2-42b9-b172-e98f7047b199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297251ad-2caf-4495-b2f0-fcfa08efbed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439ffe5-2780-466b-bc49-afa6d96e0aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9894b558-38be-48f4-9d5e-b6c0d7388031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ade79f0-470b-470b-9b73-e4f3e54dce0b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70faab7f-a3b2-44fa-985e-2fb5be673b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94893be4-2d19-41a9-ae8d-345ff7d86d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2b3e9b-cf3e-46e3-895c-78fdaf192ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a10f901-2936-4783-bff2-467f2771b0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92402b26-1f50-498c-8cef-ce4f6396f214",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a5b82b-50c6-4583-9d61-b77b8158ea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6d9859-227e-447d-babb-c7aa777c6e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69379e74-018e-4483-98a0-d31a888648a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2ac0ba-b9ef-4324-a970-c62350992283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae28326-0a6c-4bcf-9e61-a4b9de66dde8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec358e-5825-4a16-a55f-e34d11ca9789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c75a245-8cb8-4cd0-9d0e-b2a3eda2affd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026f1b36-9480-4991-8426-2c17d66d3e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7302c517-34ea-4552-934e-187f182baccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b9e5fd-16be-4f3a-bee7-58604793c462",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6936f030-3168-4e6b-8ca7-b5c12387e6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad442f8-2d5d-448f-a2e3-3a56c1f5dff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1256f32f-ca62-4e7e-9261-6aaddaf7e95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37dc192a-a2c6-409a-ab6f-473cc2c066d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c046ae8d-724c-4341-b67a-fd571519796a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0869768-6cf5-4bb1-8e4f-70243cbf447b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53458fb-958a-43ba-ad2c-1455d8475e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35a8b58-0c33-4f33-a72c-daa00398dfdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c7704a-0758-4716-ad1c-b253bb318bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936c6eeb-a966-40a4-a60a-05cf0a5f3089",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82596e16-8487-4210-83ce-334ecfc3c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60439e00-82c4-4037-89d4-f999e849defb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299cb514-1874-4302-b966-5669adec025c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93918eb1-a666-427a-8094-eef1541f690b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53348c48-075f-41eb-a5ec-d72b775e9869",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40d36fb-79c2-4d78-8255-e226c1d4075d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b691a172-0273-4125-948b-0a0e828d495d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca58f43-1ead-4a64-acdc-7bbb94c42a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc42f6d-b8c4-463a-87d1-63f22be20f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb8ab6f-5261-4b73-9435-1499d553c4c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff59317-3c70-462a-8923-b07f996127c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4520d1-3281-4fa9-8f38-22b3ef2995b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55541f53-ac5f-424b-b86d-16266cdf2116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7559d1-5c6f-4620-a15f-8636028141c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa8d801-8521-49ea-8c2e-1ead8ad3f131",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c294e5-b89b-460a-a7e4-a0b6462c1883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c919e43-bc4f-4961-a20f-a43b66ca2bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61bb096-c8d5-4ea6-8373-9cc9ec0646bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "701d7970-e69a-44d1-8799-56f0d07f7f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba667f0-62d9-4044-940b-effbb8ddeba7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af15438-9593-4b8f-93da-a0e62e4f0617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfd0aca-908b-4202-a7de-776ca1bb97af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9956de-f51a-4fda-8221-902ba09b726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "79a00a2e-f2da-46f9-ad4c-b5cdcd1e501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5935abdd-4bd9-444e-915c-d67a3307de61",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ecf810-4835-4bcb-8557-5dc541ce6cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d019da8-b432-4e1e-9119-af2d00c157e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61872f1-3651-4f67-9ef4-c90a5035c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2522f459-82f2-41c5-b992-7fbbdb5fe3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef225a0-3d3c-4732-b443-b22a4bf17dba",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabd4127-cb67-4fc0-9d86-883d26c9deb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6301f5f0-9deb-4972-ae57-48f36337e1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad6a27e-7f4f-4c6f-84c2-22227ca75632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "231a5419-6720-4463-90e2-810b11fa14d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3920845-ac98-4b24-ab15-34d7cc236308",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5264ee97-fd41-4bb2-9391-04f58e8ef6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7737b65-81c3-4396-83ab-36c6e27922f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bc61da-fc37-4ebc-868c-efb4b8d8ed2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7e72e3-d6b2-4238-ab32-7fe06ed58827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc12386-e9cd-4dd7-a697-ca69277caa1f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a86e60-ab6c-4788-bc0d-d80877d87c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9c69dd-b13e-4060-90e8-bdad9ad671a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820f2a27-8520-4b49-b41d-4f2f7300091d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "830e6320-b211-426e-b422-65f6bdc3753b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e69ca2d-0d4c-4de7-9610-963cffe7f68e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb2f78d-ee6c-4ea2-839d-32b28526bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ede5dc9-81bc-4bbc-8560-351af5cb1ca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd8c3a9-fa6a-40c3-8000-15aab7403e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2954d65d-bbe9-4f5d-8702-0cca0e8fccfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50113539-7a7f-4659-9f93-20381353195f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ea9641-7eb9-436e-83d9-8fbec11da0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66646468-7210-4110-ab63-6231d8521011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5e67a-8da5-4704-98dd-b35bacd2f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d0420e-267d-4b5a-8f2d-1236536d93f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d83f886-9bbc-4cd2-b40c-fb94941246b7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce13cc50-d6b5-4a8d-a62e-ce0f50a2e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4906790-dfbf-46c6-b527-60e26f44aff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6319b109-48fd-4081-b8b1-779bbb21efae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cd1f56-5996-4998-b523-c16f0e55482f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814605ec-9dc9-42b8-a88b-324c5d31af4f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae84cee5-8835-43ac-bea1-edb19bd77891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11719ad3-b92e-43cf-891c-dcd74eb50c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55179e9-1d3e-42f8-87fb-82374ca05024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a6c29cc-c17a-4acf-bf49-add52ddd83c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d9927e-9330-4657-94f9-7ac6a1c657ee",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25db7411-7997-498f-b94d-5a934c2f7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4449d0f3-087a-4fbb-b9e2-508e820e1ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0085acf4-161f-4918-b3d7-811186485e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4346ad90-ff36-4c81-83fa-e6cf838072ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57909acf-6525-4b24-a681-38b384ffe7bb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f5b2b1-c039-423d-a400-40d327040bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2829a9-e17d-4eed-921f-d01029aa7c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8bb29d-bfb8-4d8d-9074-2b25c203e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d918f8f0-a094-434a-9424-b656fa42e545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159a4737-89e7-4ac6-9da6-57ad74e2acf9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae04b41-a909-4d16-ba2b-7a8509a0751d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227bd122-2dbb-45f7-b92c-ee59b0edc438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ac846-eea5-488e-8b8b-d482a98da852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd77cb0-3796-48e5-9a62-dd4a6ebfedff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50dc751-04c7-4801-a945-64fab5996556",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e28124-1f8b-4995-a733-6c8998fb972e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5e55f3-9880-4101-b01a-78603f5e6b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7169f7f8-ab1e-4fd3-9af3-7a90631509ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a0728c-c74b-4ddf-be5d-b6e3f086db9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36172631-12d7-499f-bb95-32376230d505",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0480bcef-20b5-48c7-b5bc-c145b7bf9aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85327d3d-9a66-40af-a6d4-e902c51cd4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d8a31c-0a28-40b3-8b23-9b7480d31c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6ff0be-c017-453b-9572-f593bb833e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef99c84c-9daa-4e75-9e8b-18f4ff8991a8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd122269-5733-4fca-91b8-e8ad01cdf74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22059626-47f0-4433-bc6d-867a59065f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2b367a-6fa3-4c47-966d-518201ac17bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67607608-0fbc-47fd-9440-50e1f69dd5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfddaf7-99a9-492c-8e8d-4a782ac16323",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eecc43ad-32eb-4b64-b2b2-8f5744fe94ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d915073-6315-4bb1-959a-8816239be5f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71961dc6-2cee-4719-b337-aa225b8eaa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0656da9-fbda-4d0a-ac32-44e4c16f9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7805bfdb-9e62-438f-bc84-803cf2f2c51b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd3f309-7a16-49cb-919d-7ab12596ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec0b63c-8d94-47b4-a55f-9ea3e1bf8a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104d4c3c-b74c-474b-a4ec-d54500984a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8289fe22-223d-4fb5-9476-43cdaadeccfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62019627-2e53-4aca-a0ee-fbc91e31004f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8e651f-ee37-4925-9a26-4e13c21e7941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43c3730-97ff-4e92-844a-1c0999708113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bba067-88d0-4817-9ffc-6efba94fffed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0824e5f4-14b9-4a1a-ad5a-2ab16ada2807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b72562-a9f7-4b85-b8f4-803af635322c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f41ad8c-90d2-424b-940b-2cff9c16e4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5570cd0d-49e7-4c73-b4ed-d0d45bb5b43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87f9d4a-5649-4fbe-86ff-7225d474a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be6b2a9-a601-40f7-8c75-aed0a4a13da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fdde5c-63ef-4bbf-b866-db8ce19014a8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1885dd0-7654-4d99-b924-d68e5a5ef109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca47ee5e-18c3-48ae-b137-d5feb1944cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f6dcd8-a2a2-4765-b478-c490f1e6dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35631df-e10a-411e-aeae-379e6647afc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61b8f32a-74b7-491a-82b8-b55f0e59c8d1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28d7c69-846c-43d4-87cc-c38f614a29ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92097b99-5f0a-4e0e-9616-600f00175190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a45234-4be9-4fc1-9d8a-275495f8f9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d658eef1-0b2a-4348-894c-e158ef75c84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3ee587-e1a8-48d1-ae4d-e7516f4daa62",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dcadb4-af54-43da-8847-fd76367199af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25049a51-49b9-45c9-8b71-d5641ad0928d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccbce67-941e-4892-a3d2-1a430d7e17fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0c90b0-de25-4802-a8d1-926596c78309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bb2451-b935-4596-99c1-7c759a6be006",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864fa6e1-bf5a-46e6-8ae0-923fd70063ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bee405-9065-4141-b97d-1c7439216d82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a911b4e-0724-419c-bec3-5ef7987282c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49de9de-10b9-4f31-acdb-527da73f49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5e0575-8c44-41a5-93c3-ca5c41bf3241",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565e0969-954c-4532-bb01-f3b966748925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d49a99-1d30-49e2-8a38-72932629c09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f68ca87-e744-48db-bd0f-5e1aaaeb260a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8572c03-5729-4019-9d35-7d47975be0c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0449c190-4fa5-4ed0-a440-9a2c7ece03a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1c1279c-3bc7-44cc-85bc-3f9fc69ebaee",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b84382-af6f-4a31-b165-49ec711125bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4dc932-bda4-49fa-afdd-40d1653f3e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeebb61a-3e7e-440b-acc4-2e2617c64204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f6a46bd-3617-467e-ab30-3cf22d590055"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4ade470-0c67-4584-969e-0b0138f5502c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ac083d0-1926-47c1-b6cf-751195142d0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9e5adc3-9cb7-44df-a192-30c5c9e288d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5116f943-098b-410d-a050-72f3b5a746c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "358012c9-3da6-481d-bf20-8927b9dee85a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f0a4438-22e1-4c82-b168-dad77bcf558e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9031b929-2b4f-4a97-adb0-3934c0c42900",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac35604e-ca40-41fa-b6c5-9bf529ea9e92"
            }
          }
        ]
      },
      {
        "id": "561c0a6d-ac1c-4dde-9e6a-bdc7f3cd971e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2f25f443-562e-436f-83d6-0d60e52efc01",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ed56520-a762-47d7-84c3-badaea5a52ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0bc65baa-2bbf-407a-8aea-35eccdbf0496",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaee32d9-d861-49ff-876f-eaf2fbb101cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e67894-ae27-4fa5-a1e3-a7ba75ae301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1762a0c4-439b-4f0e-87e4-d8910eaec7f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69aae5c7-b46b-4062-ab8c-9e57603ab0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8dab9c-a851-47c8-a2c3-dcc741e50d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb71e3c-8a3e-4c33-8ff5-f3ce5f8e65e4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019264d7-cfaa-4fa0-a6ed-baa9557f3863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3739a012-ee2f-412c-83a8-0c6bc104aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea847e57-11ee-4f3f-a3c0-728b8fe63cff",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3711895-36eb-4afd-aef2-de01095b17e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3496bb62-cea2-4f63-838a-854c4cd7c4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acfa8d0-9eb1-4145-b110-1fd13f602847",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bf27fd-ee05-4376-8a7d-503344d4ba9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d080f6df-8d83-4c63-ba55-2f81f3dce1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94d66bf-e708-445e-824d-8e929ecb4718",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54313f8-a042-44d8-8ca9-d832b8b4445a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2498328f-f0d3-4305-ae3d-e6c5aa413ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2448c5b4-e92b-47b4-8924-d5763ecc8700",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49031edc-a7e6-4b0c-a6b9-ea546702707e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a44b26-499f-491b-8bc9-a3fe68413536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649a92b3-7c28-4119-8810-5b2408f26c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d4f76f-4f3b-4ffd-bb0d-d600538ec7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21db572-ebe8-4a1a-9283-8560c84c15bf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72e4584-848b-4b09-a791-317d8bdc67a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eee2768-81f4-4842-af63-544ea24f7992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb84d41-d12c-42d1-870e-5faa7296c910",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f06ee6-1252-4477-83a4-c39a5024e305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1ef4c1-59e3-4427-84ec-3057f47baa26",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03fbfc2-1a58-4883-a45b-3e02633ac130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a01bb1f-c3e5-4366-9e59-5c3f239ea999"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2508e3-fed0-480d-a217-0ebecd98e145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891bb6bc-caaa-4a23-9a06-366e1801b896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed57fe-8a52-4dc7-bf3a-b00b32e597d5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603c5293-fc15-471e-91a0-861d337a24ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c08d9d-7590-4a19-9ea3-af7c05d7711c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60501a0c-ddd1-43ec-8740-8ca7df90fe1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba448e1-caeb-4eb7-a120-6195c3fe3501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31438cd-c0cc-4c3e-8598-2c97c13f4e47",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df11d1c-7019-44cc-b8f6-98286901f84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fcee56-f552-4fe4-8218-11c556d61f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13250fb-a557-4ae2-9fe1-db177ef39404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382a5c0a-ff16-4fa9-b5b5-6f92fb02e6ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f5634e-4a2a-46e7-ad5a-2f21e2e64670",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1baef650-4744-485d-98db-8406ee9f22a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a1a271b-b2ff-4af9-b564-6aa4a80632b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7ad23a-d483-4929-96cf-b5d07a1b01f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc56f789-3d03-4303-8806-d6576b7facac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681e873-bc74-41c3-a1ca-a991fb398f44",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49061d60-90ac-4982-9a67-481cf067e373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "759dc870-d564-430c-89a9-47a528a51630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf6fc52-947e-4b21-bbc6-468e6bd000cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034ebb2f-6f68-45d2-ac87-2d0857bd2481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e6fe6f-85aa-490f-9c1f-6ebba07f585b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d22f3d-11ca-403f-8223-06b1e1a7eda3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead973dc-1d4f-4050-a36d-7c5f74f9fc86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b46258-129a-486a-ba2d-d86420827c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b25e41-4520-4d09-907c-139b6f629c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb6ca73-a93f-4d80-94b2-9fdc5e263012",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b33b653-c4a3-429d-a12e-801e2ddc42b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02442ee-6130-4adc-a6bd-79be127b5dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e087e41-a7db-4afd-975c-2c3201ffb21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c909b7fb-2762-4df6-af2a-50d04943224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d652ce-bb63-4b42-b782-01904f998688",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1533038-3b52-4b65-ad7a-db083d2dc1c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9146314d-76bf-4bd1-96ba-7226d3ad9598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08738348-90db-4311-8561-964b4f5977a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bc3863-417a-4f91-9dc6-e35cb4758439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e542211b-c689-4a4d-a007-658cd888c1d3",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37424d47-d44f-4d9f-a539-589236a698f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a0c08d-acc5-4f69-9cfb-1ee08035a52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84445984-0128-47cb-a2f6-b76930b6378e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d460607f-ca19-4dc0-b249-938c47127b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1366dc2-4622-4eb3-b400-2b4062174185",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfea2a4e-5302-4abd-b0b6-f8b59b558b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdd0c0c-aaee-487b-9c10-a1bfc1c9a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f89ab7-f48d-41b3-a042-0ec3e5cb9915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96544c3f-7d63-48ea-b0b2-51eaefa9227c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568fdde9-75cb-4063-9fb7-a8ddc59ca626",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3908d660-25a8-4421-b5ad-c63e5515efc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168505ad-b2c7-405e-a9a7-dab7b9ff6b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac835dc-e5b2-4391-a0ce-aab63d108b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee64e3f-32ac-44b7-aaea-de34a8ef8cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135197c3-0a31-4124-838c-91d76331ba1f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768235f1-b4bf-4f49-8f2e-4a8b2a184212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886a508e-6255-47ec-bc32-ff58de052922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b55242-8646-436e-b593-bcfffe7e365b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a428e896-ba47-4ea0-b91c-54267c8a8beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f3f69-9597-42d9-871b-026c0a988ac5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32967aa0-0c77-41db-b9c0-80dc812b57ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8af87e-9fa8-4fec-98f9-61a4e655c49f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d968b94d-ef73-4acd-8ff8-e56cc113ac4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bdd1dae-3e98-40a5-b33d-0daa69d699bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05f1b07-59b8-4d17-ab3d-4dce4870df8e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e28b9e-16a0-449f-b13f-3f323f3dd80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d35397d-1c4b-4382-bf55-7e64be5f31b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc6557a-25e1-4165-867d-1803a58d216f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1e7601-5f5b-4b1f-8bbd-de26aa0519f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b8e474-906a-485a-81aa-735295ec081a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cfdd0c-b730-45ac-a2d7-efae50898911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16973d6e-ca75-4b64-90b9-6f28eb997bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507bae7d-afec-41ed-8856-b6135c2b53f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7addf5-7475-452b-8e60-c4b46daa0e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1c53f3-59ff-4a78-bebf-1cfbc29c3430",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408d8c61-f489-482e-82df-70f1cdb94fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc5006ab-87d5-4eed-8e4e-759101733432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935ebc63-f4d8-44f4-8b0e-8373b3b6eeab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c471be-a1a9-4842-93c6-a6f672f273e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0dbe14-18f4-40a7-9535-efc5ab727d3d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da10a770-d2da-49b4-a94c-fa5db2527691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56bfc388-cfe8-489e-ad2e-b3d976adad0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15768179-4779-4dce-83c8-089f6028b866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4c4a6e-6d80-4527-8f0f-c2ee6791a742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faa136e-2870-4edf-b050-f4d8d0994640",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b143ae76-a044-4045-9452-f92081568b70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80aa3e04-ab94-4d66-96c9-7af941d95d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe64650-c2e8-4f00-b0fb-91387d8a3d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456c8242-aa35-4a37-8a60-684dbc649b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51376a58-e69c-4460-990d-3440d8fb1694",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec6f552-94fe-40e6-8400-1eff1d82b78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a453a390-b8df-48f6-a836-261e6d27dd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4227aa73-523f-4ddd-a5b7-f0abe4556a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d4f4b6-8791-457d-b448-c82409b3c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91c4016-37c6-4c11-b0d1-f2850ba62ad6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f837d0-c71e-4808-972f-e16f5a79eae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc3ef80-7ae2-49e9-916d-10b37aed8fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e292660a-cf12-45ad-a7a8-774551364858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0929a0d-5b5c-41f3-a18a-8e4cf8a4364f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54681330-ead8-494c-a581-e2a202c5bccc",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d474c284-082e-4e59-9f74-5adb545ae14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e8f781-c274-49e2-9369-ceacaa7b4984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "435cb090-7a40-4840-a81f-4157c299fa0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f793989-3a97-4e12-b66d-f3ccd014f6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1410a0-826b-45d9-b08c-502d0161de6f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6187f64-19b5-4613-ae3e-bb2205d3ad7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5159f69-01b9-4f43-a38c-754867a390ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3ae721-fee8-41be-8f7f-e37502b513e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf15fc9-c97b-49a0-a98e-5db05c47f5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6d5e41-5604-4f10-92bd-47577d756e28",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668fc22c-2103-4097-85ab-392c2f35d026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb0580fb-6c9d-4ee6-a34e-96c3c713c597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af03aee3-53f2-4232-8d3e-e6c0bba6fe79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de846bc-80f0-438f-932a-2ffcbc409ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84bc26-d851-43b6-a6b6-d9ac11b40583",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502cb1a4-8d05-467e-bb33-27de22307d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba572ac-7d99-4bf0-a67b-9d3feb787851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8640d7a-f6ec-43ac-a599-252a8525301f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d709581a-005d-4b70-8a40-2759b5843af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3489c9-8d38-430e-9fdc-def83e9b9e95",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be38a414-a6be-41c1-91e9-618a58027517",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ec0c980-4e4e-480d-bc31-ab58807f87a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f454e-d94c-4c67-894e-af01f93779ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8e3cd3-c96e-4d56-9ebf-71850435670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f303293e-c299-4cb5-92cb-ca9f15c54453",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2c4982-e1a8-4607-836c-2d49f9eb5ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ad93e80-926e-43e5-a01a-b223c1dc4ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcdc697-b636-4a4d-9b77-6e52bb918954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781c0ae6-8d1b-4be3-abd0-ebeb75d522e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec34835-d909-4655-9ab9-df8af4acb0d3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c5eb8d-9101-4091-9aaa-36142d47d73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3021d3-ba46-4d37-a31b-5565c9fa13ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d707b1-f523-4149-b9f0-eaa0d116aa49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afbe618-db03-4ef2-8bb7-dbd3880f2208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c2be4d-48c9-4b2b-8765-f07a0da20727",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d51cf4-e778-4992-87fa-92738eb84e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081cf9ff-91e7-4ba3-8a49-ef733796cdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59031252-81d7-488d-b91e-9bf490060029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86a11ee0-41b2-4c80-8011-c9c3ce860c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d3db27-3b71-4d43-baf3-1a3c55852599",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9559a566-fc43-46b1-b3a8-5e9542739351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f39794e-58d2-4ea9-80d3-59ebb8f3a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0894074d-167e-4979-9f34-6daed330b7b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7f5983-3f26-498b-b3d4-bead28d27ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57bb2b1-1930-4352-a948-45fe54852cee",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814fd9c5-25c8-442e-adb7-457271c56c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc374d4e-de13-4cec-9dce-61579a010fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049dfb6a-bbb0-4377-8ab0-d7745383f4fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a3c953-53f6-4255-b2e1-1c603da879d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4971d9d-40f4-46f3-bc87-fbb513d64b1a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda2ee9b-dca3-4d75-b1ea-8f403693619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1dd88b-62c9-4bf9-8bc1-cca61052db6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477fc856-fda6-4d3c-99bd-6e743837f018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5872ba-59a8-402a-afb9-0f2d8304d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db291e-a304-46b1-930b-347e5de9c5aa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501dd0b-4996-4f83-970a-013520fed129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4299464-d422-4fb5-8b10-fde23298c14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3577cf2e-7c81-434f-acce-b0f10a955482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5483ac4b-44ab-4e3b-9bc0-135aed5f5488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80148af0-ee6b-4cc2-bf4a-4fd8d2ca0751",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb6b055-b30e-4914-b1be-010fa91f6107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35f3569-8274-47c0-9c53-9f3436132b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15657a6-1075-494a-8658-a489b88fa5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7f05b2-8119-4eb2-8b3b-e62ac4b4e3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b664ebc2-82a4-4b9a-a8be-85572185d3a6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a51d4a-cd18-41b0-8ac0-f4d20cb16806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a68ef9-2720-492e-8dcb-37b06cbaf5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60205a2-d7b3-4f28-adcd-ce2e3a0719ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74b1b7d-d011-495a-a825-3b9c6fbdf9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a83b1c8-25c4-437e-8a95-d4d88e3e3f6c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdda97f2-e1f0-48ef-9943-6a5b296737dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943fe843-bf2a-4600-a8d7-ee6a4082b06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff700a90-8fab-4ac9-b74f-b628583f4d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc57260-eae1-45ae-933e-9da6f1b4a6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0abd6c2-574d-46b1-84ad-4aa2d058dae9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d77b508-ccc0-497f-9b74-959585efc70c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8e00e2-7643-4f73-9276-aea37100bed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994b828d-4c74-4a0f-93c7-0ed533989523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57b6520-9322-4b84-9754-130c5fdc6a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7486d-387f-4510-92b3-27193242469e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2297e9ad-c66d-40dc-b90e-cc5c8944575a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbe1b5ed-7418-4db6-a25c-6874530a8f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf260c8a-5b73-4692-abaa-ea867404fcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170493f7-9ac9-4779-945b-28a9b1ffe75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d32fab-cd73-4e6d-8a4f-5357f6e03957",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8e648d-f7b4-4c85-bff8-43c5772f249f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091b40d1-2ec0-4deb-a4ce-450c4823c288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4610dbc0-cf75-4ae5-8fba-9fd08f68970e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e047e6e2-662d-434b-b876-d59074b4132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efe9e36-01bb-4ff6-955c-6931e17cdea7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6cca0d-21f7-487f-9f23-841ea617c72e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c1ecf3-870d-4858-a122-bac5c34e01b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580cef4c-cd66-47c3-8a5d-b6c67041bc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbc4da3-aa76-4d5d-a68b-a3fcc569a040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6937bc2f-b421-4694-8b8b-5b3d688a1746",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890ced60-70f6-4ad1-a619-7da0c63ea1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e53071-90b8-45f7-9caf-ad1305eae548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aa8d2e-42c8-40a4-8c1d-16371067a990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775907e9-bb2f-43b2-b2ff-45cfc86bbba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f22163c-e6d3-4c77-b616-df097f3d6af0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fb14e6-be3d-4704-89b4-295a7eba94b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff8ea408-0501-4a09-9636-4ae23dd35289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7079e0-8236-461e-baf7-41bf3e068a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a49e46f-7555-4010-9303-64842fde4ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6cb12b-ed11-4a70-9828-72bb95720fc5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d729a122-b095-4ec7-a95a-f672c7d3597b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f53e9c-05bd-4411-b1e8-17f1cbb942e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed5e57d-412c-474d-aa18-532d7232124f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef64a30c-f706-48a8-acb8-c6418ef295a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50854c7a-cda3-41f6-bccd-b02a70f3c91c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbdfc2d-4a03-4831-9eaa-ea1a56f2daaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "582553d5-96a2-4292-9c01-535743b489ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0e9d8a-0667-4ad4-bb05-a4c7b9f7c50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a02543b-9ca9-448a-a02b-78ab85a7013e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfd9aff-b838-4928-8012-3d2ce3e5c760",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c4cfa4-9d8a-4f19-a8f9-e4870cd1ccf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc867f8-2f09-4d33-a5fe-8060410b561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad707faf-c0e4-477b-8ce6-118ddd04866a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4db79c2-5ef5-4a55-aeb3-62ff428caf8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efad6d2d-8171-4f71-bfff-2891e3c75376",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd283064-227f-4ae7-af2f-fb8626f73ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d066ec-4355-4210-80e0-0f002c318b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb9573e-e992-4d8a-a0b3-0a8035fcaa55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a44dd1-22f0-4bcf-b38f-7b984137ba10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de28e35-9b63-44b9-b970-dd3038a89bfa",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0405351e-aeaa-4bf7-8902-9348727d5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe234a7b-4b45-4ce7-b02f-46ee6bc9a37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238e2594-506a-4c33-a48e-e3507ca32d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7a069c-bf08-43aa-9a20-a109220083b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58509efa-df34-4eed-9268-eb86787ef2fe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83be425-24bc-4cf9-b47f-b4bd4508d0c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a17be8-5a09-4908-b047-48f82da76363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa95c9f-a6ca-4325-80df-94fd1b406585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d64f93e-0e48-40af-9f1c-35d1141aed5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a643c77c-f4d5-4780-a3c1-fada3e748cba",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2561e8-4616-4267-897b-ea04b9175621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b287571-9759-4509-9007-60d78760a525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e6de4-a33f-4d50-84a8-b0d6861bc668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09127c23-b6f2-4886-a0f5-6453e6dcf36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08e5a5d-da85-4314-bcce-21e507ff4aa2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5876c94-e9c0-4302-b1ae-34f90acd3a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76795e6-1aa2-42a3-acd3-b5753eb097e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125bd163-20dc-402b-8989-88237fe76878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfd36e4-1871-4c66-827d-f6f009538a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b665a47-0357-406c-b2a3-c2631d215597",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6af0776-6ef2-4dc9-a78b-a592c2dbc8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691222bd-1eb9-42bb-a4b5-e605360ad9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eae22c1-4fc9-4b24-88b0-68069309b735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b98994-0a3d-4ac6-9395-b23c5bab248c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93abdd10-a779-45e7-a41a-d9487196b9e2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84fd05ee-82a5-41d5-a961-d4c8da723645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca91f61e-0b22-4c2d-b224-5d924a568716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e444dad-9c52-4ed6-880c-a3c0c98fc879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edde035e-13c1-43ca-a2d5-394f200e0d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83345674-6210-4201-b912-3bb3ac506727",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e20ea9-1837-4f8b-a53c-42082bfec843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe2d1df4-4fa6-4117-8693-f8655b86734a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85d62b7-509b-48e6-ab50-832c921456d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f7bf4b5-405b-485a-9786-0a92dcf61815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2921f01f-0e36-4e7e-a6df-fe4324132102",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed8ddf-1668-4782-9e36-50d920cf8ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb229168-96f2-4c13-9db5-cf9909e29b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349e8761-7a06-487e-b7ad-8ca8d60f403f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10461c58-8abe-4184-9e86-0f44a5bfde8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31a3412-6d2f-468e-a67a-e4f18aa3fbd6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b21105-e2ca-4a38-9734-b34da70f8f76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6386c11-b8ae-4217-9c65-39e9b42bbfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2f23f-7966-469d-8264-b2e6bd8613b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d5c2b8-b719-420f-aa94-c41fce2bc2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f4bb5d-2a9d-483c-91e0-480ddcb2ca17",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68bc8b2-79ab-414e-9446-498fb2834fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b9a3395-333c-4764-b0d1-73e2a73f22de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b55e6-23a1-4f84-903c-3f598ea64aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74ae199-0256-48c0-90c5-9af1824e0e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e418363e-eebd-4f4c-8202-2898abfc67f5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04607df-10e7-46ec-bda1-ede94ee7dc07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11d31956-ed98-4f27-b81c-51d7a67ac1f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35e9977-2673-454a-b880-90636ada2b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e6b0c7-9766-4965-8aad-f1212f7eced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f45c07-c9bc-40bd-b340-2e2efd4deda5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe16e6d8-d391-4388-b4f9-890d10f55e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4211a1b-4281-4e8f-8e9e-ab568f05bbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b93925-a54d-4892-940a-d2194354458c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c351ce7e-3b87-4604-a1b6-df8324d078b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0c76cb-8e38-4631-aa0e-a5acd1e69699",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1588042-fa11-43e3-bbf6-2903b773ccac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ce7dcfa-1338-48a4-8c29-daba1041f3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abefd8f-3668-4a4d-b664-cd979d19e936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436f322f-ef1a-466b-b669-79ae2b2ac576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d7c410-a92d-4b49-b306-20a6bd6ec52d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce369d4-a4b6-471e-9ca2-e03a15c513d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e25b0079-c7fc-4998-9c93-e7301b9b9d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb338170-d60f-40cd-bbe8-10e22b094240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e039535-83e5-4428-88e0-4c321718494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c91da2-4861-47dc-a698-d6c5875da5e8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9b03a9-e9a5-494c-9a1f-608ac8118432",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b758dacb-76d2-47e8-bff5-b7f03acf443e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7f3df3-df19-45e9-a833-3fd1eed08ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0b0397-33f7-4d15-a3f4-da3e41e7b06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c688081-f180-4ac9-838f-87caf3e1e70f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae2797d-ec7b-46e7-853a-233cfacb68c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299248a1-9810-4b58-9acd-27cc61123871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a31c73-e8a5-4e9e-a562-98cd070189b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d1f566-e719-4306-b9a9-19f2bf80e7a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e514e3-49da-44f1-9740-f8025d35dd8c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f18d465-0061-41df-b683-b51c260ac334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d547ae1c-a137-435c-8fc5-ccc5b185f249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1953e526-c88b-48db-8aac-164a92765180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6438a793-0612-42c2-921e-7ac2c306a0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13041f1b-f271-4576-9311-2cf1c8cff3f7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc87feb-5470-44b5-bcf2-a40e9e5dd25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "690939f5-d0ad-4f2a-8f14-583e561592c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe88b875-bcc8-41fc-a366-2dee7e1b3b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73061a2c-92a5-48ae-81c2-0e6cfb0760cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe381e86-2071-4f92-bd71-fb34ca96332e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f27fe8a-49b3-4fdd-9f98-a925f12b9809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8d948b-bd56-4a99-9f8b-9b6308a3a8d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "927128fb-914f-4d61-b0ed-93fc77594fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bef438f-063a-496b-805c-853d6149846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7bdba4-9e01-446c-9f2d-29669a47372b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89139e5-b738-4496-9612-3f4f5ea3aa5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb18eab1-d838-44ad-a04d-4e3816c277b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138231a7-acfc-4695-ac14-b1083e5791c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799509b9-3f9a-4d52-a27e-7c56a0b49f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11be7c9-c75f-417a-8d08-fe13a8b26158",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50771eeb-6d04-447d-9edc-5eed5725b9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07bc0907-aaa4-46a3-bc31-504046d36c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a666c12-9c12-4691-8e70-921e99e29928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60165c15-dcc5-4ac3-abe5-f7cb1da8718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531634b5-8014-4966-90e8-ee2f00a9b7fe",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b32557-efbc-49b7-ad40-b1dea927239a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ddeaaf-1727-4daa-9f2d-10f6d9a3e490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b3ced2-414e-451b-8f95-12007fcf2262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3b8873-060c-4b62-a572-26ae1d6c1075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b6a9c3-4ef2-416b-bf35-b393fde5f218",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d2f430-f609-42d7-a632-c4798b14ff52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a69151fd-07a3-4d07-9d9f-c508fcbd6aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a90b258-ceb5-4712-a9c8-054aafa8c640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a5eb44-7ae0-4f9d-8dff-87c0b52f6528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e820e6d6-892c-4074-b3e3-1eb31c695e41",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed80b64-29ae-4b07-834d-f0ddfa3bbe55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2740c9-bc80-469e-837e-ac64438d2604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddbb657-6afa-47c6-9fc1-8be0ee94dc1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ecd870-9afd-478e-be30-f761bc93e9e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c6d1ea-5a35-4547-8366-418e96de45eb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04352bbc-e6a5-4baa-9f14-c93936c3d257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c898672d-b3c4-4ef6-b37c-912a5cf3b246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50409d5c-4902-43e6-91a5-25f2db04c541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228845db-10d6-4909-a599-1de1240787ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d72027a-adc1-4333-8c7d-d4fa196623d1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14c7a84-7864-4b01-9c06-3e97ab6a329f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6a73b3-68fe-401b-9464-e7e6d0406ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edd9210-ecd0-4b88-bf96-d22961fcc0fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05cfb00d-e4d6-4735-8c83-1d026dd3030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae3f00c-d6f4-4cb0-85dd-95fc2c3310b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd7a885-0f35-42b0-a772-b4802766a201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f78ea16-4592-48fb-ba2d-eca2ac21548b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a48b66d-febc-4138-9ebc-e68270f8e1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c54a469f-ea1e-4e77-b4d8-d40d4bff301e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2f4de1-72a9-423c-b088-1003294ff575",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a38b855-93a1-4c40-9974-6034a9954c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901a1a49-3cbf-483a-a65c-7007bfb03a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0fa4a0-0e67-4c74-9c8f-4ec72b8b4584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc14580a-afb6-470b-81bc-593b09dc5d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56424267-39dd-434f-b65f-e209e3cc8afd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b446ce37-5ff5-4ccd-85d2-ae13a8368856",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07c0794-c15f-4a95-8385-6e56108d1dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac75d4d-ae81-4483-80a5-0d16e59fc74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f23880-ee0c-4cc5-93ba-6cbc5300d795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916c9ee7-745c-410b-a73c-aee33d35af60",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532fbad-9cec-4d89-98fc-ce7c217cc305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe0a0ca-bf5d-467f-997c-97ac0170b624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e8ef5-12b8-4d4f-853f-605609446f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9509b2-d70b-4bcf-9141-d3bb6af5aeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd94ea7f-2b86-45ab-b845-689fa71a98ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab8715a-8a75-4ba7-ac31-e17868748464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d17042ef-c3bf-4e2a-8023-bb8a15c1c11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907895f4-a2c1-401c-9b02-aef94dd1ace8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee6e1b5-bb8d-4554-913b-9588c3e3f4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d956a20-1419-4408-867c-acf4cbd2630b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d813a0ff-8f59-4f0d-8a94-687728391537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3566bb3-7928-446b-b125-53927afdf68c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deabf0a8-b0b7-42db-8aba-2da88f0156e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d547f7f-57b5-4db9-b9d3-a42c34741e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6dcc01-6a8d-4ae5-8613-750bba17b578",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2a9ac5-3961-4766-9f14-2dca0d7d19f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9eea7a-d15f-41b7-9e4f-5f633178df8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35050bd5-8fdd-45bb-bc39-f3007db32a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d982a065-3e68-4bdf-ab4a-a4c3734ad7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd8641-76f0-4ade-9f1c-e4bd264ab679",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a1caea-d660-450c-a802-758c13d9d064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6dcecc-6efb-4309-9748-a08b51410ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2750ca39-3439-45ef-8584-5bd170e1e10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae7ead4-519e-428b-84dd-923385a80654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c474ed-cffc-4ff5-96c9-7d0395d696df",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fef761-52c0-432c-8534-8a163868cbfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a233bb34-b0a1-4554-ac03-156486f1603b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fa040e-aa8a-442d-ac74-1582598a4321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e568a0-8860-4f7f-9253-280702f9bfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b2bdc0-fb1b-403b-8966-607f060ba849",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cfa518-ffc3-43c1-9390-520027d47fbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18212e9d-5709-4b76-be37-70183feea4d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c54bdf3-4bfc-4dc0-b5d5-f12c7c56f8ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5976d429-d915-435d-ae0b-83e16bc7dea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5169feb-6877-4013-a88f-2aaf0f65e2b7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6185716a-95a7-493c-a179-7f4e52bed348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3aa8c12-43b1-4f9d-9d82-78b5cefe394d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4328328-4a0a-4477-8fa2-9737b4b0f27f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a41a48-8c8e-47cf-baf6-b604bc44b9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547db8bd-bdd1-4cc4-808a-59c3a1e0d083",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb6f27c-0b92-4a1d-a836-aeba29be008d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c054d262-1e5d-435f-9f9f-af23c45f1c9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95f725b-d0d9-40bb-8d5c-c5be48a4f3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216cdf17-658d-42c9-b1bc-810635a63a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21aef44-4d43-43ae-b592-d072f8da1076",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40427e91-f56c-40fa-875d-93dda6cc6d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118082d8-d0da-4e8f-95ae-50c5514ae3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80066912-d471-437b-ba96-3effc0b4cf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "106f1da4-cc38-475c-ae46-60ec6015c013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe174919-d237-4122-a3a1-46fa6bddbb7b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032d6fe7-2388-475e-b2e4-23f68aa655f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "943f5ad3-f3a0-4a0f-b538-bc9a01adee89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a922e3-5f7f-4981-87ac-f8bf71fb8225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b04a03-d146-43d9-83c8-00ada0786f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0385f658-7df3-488f-8d3f-086bb948e674",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215a8c10-6fbf-41a0-9f19-9ca13a4cfc4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b085d148-22bf-4495-b69c-f0896afbdd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff34276-dbf8-410d-9a88-b021f5380e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "131832fa-5970-4aee-9623-a1f76f073e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7acf9-3ba7-4097-8603-39198560007a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f27031a-f5ac-4785-88b9-7147f6117af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fde08fa-39fc-4440-bfb3-8cfb4f28100c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7910dada-5ac7-47cb-9169-05cc3e3516bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f4954c-5858-452d-9191-0e1e615b60e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97ffecb-cb74-4f52-8fdf-6b9a26ac69a2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad26585d-b95d-402e-ae45-79167edfe08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5d28bef-c8f3-4234-8b56-5338fc57974d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa238ec-53c5-401a-a872-977ba0e6089c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719aa1e6-614c-4b8d-99f0-99635f49a2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7ef75e-e4d5-4442-ac2a-6190b06e7db1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34e0759-91c1-4073-bdc9-15ebf6090f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a554184a-7ace-4bf1-8749-ae09ce0cec16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547e9e5c-dc54-4d25-97f2-0e441aa6ad71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb98f166-f409-43de-9289-faf25e29d04e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da777f7c-c3cf-4f39-96a8-6e2976ccae58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ff741cf-dae9-46d2-8984-09615996281e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e23d9c63-e3e1-4f06-bec3-98a7be4e0ed2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a588f33f-34b6-420c-b336-4b7f3ecbbd30"
                    }
                  }
                ]
              },
              {
                "id": "54d6b580-5c2a-45d0-a923-6642496440e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccaa085a-2904-4b1d-a3c4-423fcff430d7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e115ec-12b7-4aff-8588-ca1c897e9b70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f7481136-c4ee-4203-95e9-8caba38a6935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2055d497-d523-4aa7-a355-0d537e4e1809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1673fa2-6127-4f78-9864-cc23beb35746"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ec7aa8-f220-41d7-ac4b-6a1fd574c3d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed483b41-37d5-4181-b2a3-cdb0d3658596"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8e63fe5-847c-49fe-94e1-4c82be83343a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19afa78c-bc92-4f1b-87b9-c649f931fbe2"
                    }
                  }
                ]
              },
              {
                "id": "cb318460-47d9-43b5-b300-d59aea091607",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "55d4d415-375f-4cea-9e20-bf9c7f81829c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a0af47-de6b-4860-9363-4a5a7dea5ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0bce7cf2-35de-4b27-88d8-7e84424a461d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aa2a1f-708a-498b-a045-f8091a6f8658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2c96f5-88e7-48f0-befc-0c1d2ceb506b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba3561d3-80c1-42f7-999a-71bc69bf3386",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4f06a9a4-e731-4151-97d2-da737ae193b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e28f49c5-055e-4d8b-8fc0-8f11c8346e35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b3102187-ede5-42f1-b056-a8bd360f8068"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9268a237-635a-4e8a-ad40-ceaeac4692ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03a1f5ef-15fe-476a-824c-95a16e499784"
                    }
                  }
                ]
              },
              {
                "id": "3d4daaed-613b-4f18-96ab-3c017c586d77",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ce12321-3bde-4e28-9598-274615cc56fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6f73316-29c0-4ad4-a8bd-fb6728018b81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fedca441-9bc6-4d24-a3d8-fada864becbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f76f514-7317-40ff-a894-5ca9e49d5207"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf1091fd-f7fa-4f8f-870c-e4794884dafb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1b4af6a7-2a70-48d6-bf28-babf3751427d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e589c08-cfba-4773-922a-fcbec341e69a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e17bb0b-963a-4f6a-9164-63ca25e6ebae"
            }
          }
        ]
      },
      {
        "id": "247f88b6-7de6-4136-8ced-4dda964a2da5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2ed81698-021b-41a4-bcd4-eba00373e29f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e9036b6-805c-4c95-89af-aa67c39fa215",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1ddce67-a00d-42de-b6b1-a342d9677a6c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31b0ee4-4ed9-4a18-baa2-2b2a72682377",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "162dd5fb-1906-41b5-bd15-963773e9bf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb90e2f-b43d-4989-856c-459f65b2cdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0aecab9b-74ee-464f-ba2c-88983d7cb3f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a84e139-58a6-44f5-aed4-7361de9ca561",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79a9b70-8008-4bd7-89f2-2698f978b836"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9df419e8-5c3e-45e2-af1c-f51656f90676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1fb2f5a-d72b-4b36-a60e-2809eb5e921c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d965a6fa-8d9c-4260-bdc5-5b14c24aa06b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "130b0390-bbae-43f2-8f50-fb71c4141181"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85d217dc-765c-4668-981e-223a2bd46ffd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2e0dfb2-99f4-493e-974f-b144dd9fdab2"
            }
          }
        ]
      },
      {
        "id": "d406f6bb-3930-41d0-8643-0123c8d24993",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "70c3757b-9269-4d87-ad5a-249ee26eae06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "41689855-e07a-49bc-b8c0-351289d94425",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34193b73-5d1c-4572-993d-53b48c415a10",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f25b6da-697d-4d8e-83e5-e7a0341953c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca6845d7-9ba5-4f83-be81-323410124dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ef41a5-3979-4f8f-a557-6e2d33e7495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "531d006c-6a28-43bf-8988-98fef9cc5f9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "608c1275-3932-4c8f-a13f-58b864cfcb89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99e100f1-378d-400c-bf1a-e4829e90192b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc07043b-a160-483f-9ed9-3bed494d0cf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5f8b6f0-05ab-41bd-bdce-e588ee19c596"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49fa19b8-cbf4-4f14-a99e-ca0524916315",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "771b3b93-1b64-4bdf-a19a-8a05534ad990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73648eba-43fe-48e0-8fa8-6727a9c31956",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9d7582d-60d9-4b43-b555-9afdb42a8327"
            }
          }
        ]
      },
      {
        "id": "15fa2a00-4afd-4390-a8de-6532e46806fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ac85353-42f7-4165-8b7d-36d9471de758",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89a2803d-29f6-426d-be50-7b46c4a8327d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc6247f3-e67d-4d4a-9bd9-2c8da88c795c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f04b88-8a78-4ebc-b327-466933ea6fd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4616917c-22f1-4d4f-a30a-4fbb4db54e9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77ab099-31e7-4174-a75b-77e88dfe77b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55148431-a495-4713-8b41-21a17e5d40bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2249fd94-2ed6-460a-9336-725eb226f7a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d890d1e9-98c1-413b-8aca-f1794c42a23a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e1cac77-dc72-4df2-b7fe-63dcbdb12d8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a4dd60-9202-48dd-90ad-18e64d48dfc9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9deb939e-882e-46c4-ac7e-59afd240b9dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c2b490e9-159a-42b0-957b-6402d6a872f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "136daacb-4811-413d-adb1-0120b5c505b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0baa9845-9d55-48a8-a726-7d95ba5c0fc1"
            }
          }
        ]
      },
      {
        "id": "711cf46b-820d-4b45-8ea2-6d7e582b2117",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32f095b1-7d8c-414e-9930-d00a948ac031",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "777081b2-2965-4391-bd4f-67e2a06275cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "90571e9c-5af6-46d3-85e1-0a09529f235e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "058db2e8-a011-4b3c-940f-b1526f7b35b4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d86c97d-dd32-4c06-a71a-ff7822f03ed6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 321.0070422535211,
      "responseMin": 7,
      "responseMax": 7663,
      "responseSd": 928.9770422463776,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694219492368,
      "completed": 1694219595829
    },
    "executions": [
      {
        "id": "4f1905d6-bee7-41e7-bf53-ee0180ba8c5f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c6b3c31-96bf-4552-b589-722d6ebe4ecf",
          "httpRequestId": "7c4d8b66-ca4e-4620-9d30-7d4ae6603cd5"
        },
        "item": {
          "id": "4f1905d6-bee7-41e7-bf53-ee0180ba8c5f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6a5c7863-47a6-45a3-8778-8cc03f3e6699",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "bbbe8dd7-44ab-4219-b636-8fb820c8a446",
        "cursor": {
          "ref": "fdd661d9-7dde-4271-bf4a-f44b2b9567e9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "965a5fa2-d43e-4366-899e-3822bf366a05"
        },
        "item": {
          "id": "bbbe8dd7-44ab-4219-b636-8fb820c8a446",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "154cf444-41a2-4a6e-a00d-a02e4a4552fe",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d4289c21-0763-49e6-a963-db3b9c3b94f5",
        "cursor": {
          "ref": "ae036630-6774-4d91-9561-f6c24f179811",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d0561255-a2c1-47e4-a544-e27e57c5ba1f"
        },
        "item": {
          "id": "d4289c21-0763-49e6-a963-db3b9c3b94f5",
          "name": "did_json"
        },
        "response": {
          "id": "7d1b00dc-f95f-4740-86ad-ee9183962418",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a17bbca-0f3e-4057-b812-552592882c74",
        "cursor": {
          "ref": "981ed574-137e-48b7-8538-73c83a3a944b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8738e34d-48ea-4baf-84be-1d3f774ae039"
        },
        "item": {
          "id": "4a17bbca-0f3e-4057-b812-552592882c74",
          "name": "did:invalid"
        },
        "response": {
          "id": "e8acf9b5-860a-4dfd-bd70-814c6b626cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a17bbca-0f3e-4057-b812-552592882c74",
        "cursor": {
          "ref": "981ed574-137e-48b7-8538-73c83a3a944b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8738e34d-48ea-4baf-84be-1d3f774ae039"
        },
        "item": {
          "id": "4a17bbca-0f3e-4057-b812-552592882c74",
          "name": "did:invalid"
        },
        "response": {
          "id": "e8acf9b5-860a-4dfd-bd70-814c6b626cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29af641-bf55-4771-ae5a-477a485f2f52",
        "cursor": {
          "ref": "2cbd8253-0c79-4539-9942-a8b46aea53e7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8b08912b-87be-475e-a829-4cfcf55a8620"
        },
        "item": {
          "id": "c29af641-bf55-4771-ae5a-477a485f2f52",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "025c4025-2ac7-44c3-8862-30b05fd2c185",
          "status": "Not Found",
          "code": 404,
          "responseTime": 394,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658a938e-ad96-4fb7-8edb-1d1f569ce1c9",
        "cursor": {
          "ref": "f3d3ed08-f7dd-4272-8787-eeece2cc68ac",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f178beb1-866b-40a1-8a4d-6e71c0d0c113"
        },
        "item": {
          "id": "658a938e-ad96-4fb7-8edb-1d1f569ce1c9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ba82cc4-3b89-421f-81d8-45d109e305a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 252,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5343bc02-1d08-4058-884f-b6d70504c1ad",
        "cursor": {
          "ref": "465bef6b-b72d-497d-98d7-978906cd84ce",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "307a6b9d-2d77-4c53-986f-63d7908149c3"
        },
        "item": {
          "id": "5343bc02-1d08-4058-884f-b6d70504c1ad",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "34812f46-198f-46ac-b128-0d1c4ef62955",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b8abaa-c044-4a95-a1c6-049821e89b7d",
        "cursor": {
          "ref": "d1e2c0f9-8736-4d2b-95eb-aabb2c329417",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b10a2786-53ee-4418-8ab6-9f0087587636"
        },
        "item": {
          "id": "a2b8abaa-c044-4a95-a1c6-049821e89b7d",
          "name": "identifiers"
        },
        "response": {
          "id": "301c23b4-03bc-483a-8725-98f5aa624b98",
          "status": "OK",
          "code": 200,
          "responseTime": 1234,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a0d87-f7ca-485d-b63c-633d4c3366e6",
        "cursor": {
          "ref": "afbedee3-c1a7-4f62-9bea-55ba38c55a60",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8ffd666f-3f43-4a9d-84ee-f35b71bf273e"
        },
        "item": {
          "id": "632a0d87-f7ca-485d-b63c-633d4c3366e6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a2e828ff-b817-42e7-b53d-d9a6b9a8c0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892ffc1b-8bd0-45bd-9686-c4428dd0e6fa",
        "cursor": {
          "ref": "d6ea3957-f157-4184-9ddf-67d093daef55",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cd79bc1c-becc-4442-aa8c-db1b8b409b05"
        },
        "item": {
          "id": "892ffc1b-8bd0-45bd-9686-c4428dd0e6fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "885d4e87-aa16-49ca-8800-603d9554a906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f83106-5168-4187-a97f-f6dc35e7d1f1",
        "cursor": {
          "ref": "760d959b-7175-4a1e-9259-f870ee2efc0e",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "041e4586-05fc-4382-9de2-53693cc9e7d2"
        },
        "item": {
          "id": "c9f83106-5168-4187-a97f-f6dc35e7d1f1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "57710e73-eba2-4e12-a261-c7a7cfc3f6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892c15ea-f85f-45a5-ba12-aa3b1c4ba7f1",
        "cursor": {
          "ref": "184297d5-4c6b-499c-8cbf-0858813c6a82",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb9e5283-5615-4532-b86e-0131ba0e3122"
        },
        "item": {
          "id": "892c15ea-f85f-45a5-ba12-aa3b1c4ba7f1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4f65c892-c73d-4814-80c4-1f6ce9cdd73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad89ba3-0f6b-4b83-8510-6bb26b645736",
        "cursor": {
          "ref": "08f99859-7fc1-4d43-b24c-e6d79f2a556a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1c1441cc-7804-4de0-aafa-31a6a60185ac"
        },
        "item": {
          "id": "6ad89ba3-0f6b-4b83-8510-6bb26b645736",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e1d26f17-f5d8-4421-bda1-eb42907f5de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb75362-ff2a-424e-966e-9f9cbb955812",
        "cursor": {
          "ref": "45e1208a-2310-49b8-8dd3-6c76adc937f6",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8f78ccd8-8a96-4766-b53f-ac863e4eecec"
        },
        "item": {
          "id": "acb75362-ff2a-424e-966e-9f9cbb955812",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8a2b0d22-3232-4009-8857-b741c1aa7a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f817909a-a96e-4f9a-b57b-06d1af855582",
        "cursor": {
          "ref": "5362e3a0-d8f6-4156-abcf-83c80be48a7d",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "77696d41-c130-4e50-834d-3313b4346f47"
        },
        "item": {
          "id": "f817909a-a96e-4f9a-b57b-06d1af855582",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "339c1fcc-adef-4d01-9bc0-7fa080c7e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904be14a-5d02-4a4a-abad-1ec1ca2f6d78",
        "cursor": {
          "ref": "b3b4bdcb-5d33-4974-b1e6-a5ab7be38be1",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8475cbb5-23c4-431b-acdb-a0c933fe0e65"
        },
        "item": {
          "id": "904be14a-5d02-4a4a-abad-1ec1ca2f6d78",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1563940e-f47a-4c86-a55b-6709a4ac2084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30eefa1d-23ee-41cc-92ea-ce87c2c5f277",
        "cursor": {
          "ref": "02dde841-6ca9-4b47-ba81-7c7cf7e89d39",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d629b26a-3e66-4e16-b3e0-eb20e96ddb93"
        },
        "item": {
          "id": "30eefa1d-23ee-41cc-92ea-ce87c2c5f277",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a18895b4-60e3-4c46-8b0e-7925831d508f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006cfa81-83de-45a3-b3d6-a24e10275e54",
        "cursor": {
          "ref": "b3b769f5-3f9b-414c-b47b-ee20d4e7675f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2e6e3bb3-f6b6-443a-92dc-af2909b8a754"
        },
        "item": {
          "id": "006cfa81-83de-45a3-b3d6-a24e10275e54",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d616fcf0-cadd-421a-8d8d-8d12a510fdaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6881305-3b70-428d-a100-054fb9647d3a",
        "cursor": {
          "ref": "2615046d-14da-46a4-bf1c-82067cb71189",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9c8389f1-4d51-4306-9ab4-6564d949ad84"
        },
        "item": {
          "id": "b6881305-3b70-428d-a100-054fb9647d3a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dabce800-b693-44fe-b3b0-e4ae6f08cd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcfb47a-9979-44dc-97a0-5c0ba9dca0b6",
        "cursor": {
          "ref": "ab7eb22a-2da4-45b1-aad6-69a93f44795a",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "13103ee1-d0d8-44fc-bbcd-7e0911b9545f"
        },
        "item": {
          "id": "1fcfb47a-9979-44dc-97a0-5c0ba9dca0b6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f669e9fc-fc04-41fc-93bb-a977bcb9b99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1519b37-247b-40f0-aa80-90f9901e86e4",
        "cursor": {
          "ref": "d0e01dbd-9e16-4f5c-af50-1bb9e9744833",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a892e7ee-7396-4c62-b07e-1a1b053924b6"
        },
        "item": {
          "id": "f1519b37-247b-40f0-aa80-90f9901e86e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "eba05f42-72cc-4612-bc34-4be37e18d017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584c6db1-f53e-431f-b495-b1525f97b2d3",
        "cursor": {
          "ref": "2cdead45-56e8-4b5a-a236-f87330a1d764",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bedf5cbe-27b7-4499-a9c5-676f571ed818"
        },
        "item": {
          "id": "584c6db1-f53e-431f-b495-b1525f97b2d3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fc598d67-95a3-4431-b243-0e5e74144f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9d1df3-5553-4ac9-8d63-557ca7e82828",
        "cursor": {
          "ref": "b6a76594-9f0d-455e-b684-49ec03a63759",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "36b0ac64-16dd-4622-859e-212b70ae8474"
        },
        "item": {
          "id": "bf9d1df3-5553-4ac9-8d63-557ca7e82828",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "065db575-69ab-400c-a7f7-947485646c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa353d-418d-4e81-825e-12daac483a71",
        "cursor": {
          "ref": "a05e1b43-527c-4a6b-ac74-8a3f83e383b5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ff949351-200d-4296-a8a9-256a12d310f1"
        },
        "item": {
          "id": "56fa353d-418d-4e81-825e-12daac483a71",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b8989095-32cf-4045-8232-def8ab48db01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ffc5ed-f832-4a64-a0ff-26f42f780206",
        "cursor": {
          "ref": "6535aa75-3c59-4809-93a0-ee15a6b2068a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "85499311-c040-486c-9cc9-2f73d70092ac"
        },
        "item": {
          "id": "93ffc5ed-f832-4a64-a0ff-26f42f780206",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b347c1de-ac19-4084-824f-b591975c99ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0bf136-ec07-4e28-ba89-91060d045752",
        "cursor": {
          "ref": "2dc883a7-9107-45b3-a600-18f079ed1412",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "77c399d2-1f02-49df-8a16-7053d9724cdb"
        },
        "item": {
          "id": "1c0bf136-ec07-4e28-ba89-91060d045752",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8a6eeeba-5e89-49e3-9000-d90b41d05890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4944105-89af-45f8-a57d-bceb02aa6e47",
        "cursor": {
          "ref": "6e8f68be-43a1-4805-ad66-f7443b317ee7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ef456b5c-f8f0-4114-8bc8-43a0c06da9da"
        },
        "item": {
          "id": "e4944105-89af-45f8-a57d-bceb02aa6e47",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "301134f2-1a94-46a5-9b3a-af5f4f1a1e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d087e2-fae9-43d5-b900-33b3788bf26c",
        "cursor": {
          "ref": "728fd434-1bca-48f4-bc6f-51fc3e4aaaf6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e3a5491e-4d71-4ad0-b002-dcaab2c13e40"
        },
        "item": {
          "id": "14d087e2-fae9-43d5-b900-33b3788bf26c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4f00632c-5997-4355-9955-0db4f169fa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5367b2bf-09fa-4146-b57b-b58920c1b38d",
        "cursor": {
          "ref": "49f46dcf-3054-4195-b5fa-f6ad06fe75ef",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1af0439e-f4c0-4c23-aefb-ee153b4e507c"
        },
        "item": {
          "id": "5367b2bf-09fa-4146-b57b-b58920c1b38d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bc3c3b05-1a3b-417a-9448-5faa16972e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc2320b-02a1-456a-8f28-b7c8692b400f",
        "cursor": {
          "ref": "09a7dcde-a56d-484e-8372-321244062e5d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ad0b4549-62e1-4015-b6fd-72e50c2d125e"
        },
        "item": {
          "id": "1fc2320b-02a1-456a-8f28-b7c8692b400f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "429ff87e-7d6e-4bb1-8a7a-b193a9208512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ae0bfd-d16a-4689-bd79-cad5704ade74",
        "cursor": {
          "ref": "49b7e0ae-54fc-418a-aba2-40c181306f63",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "917c37ef-675b-439e-8211-af5e1d1686ce"
        },
        "item": {
          "id": "04ae0bfd-d16a-4689-bd79-cad5704ade74",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "63b8478a-4c31-463c-a444-e977dc177f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad31fde5-9503-4f12-a83b-89fb87b69322",
        "cursor": {
          "ref": "4884137f-bf43-42f7-8c9a-0223f3fe770d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c5659b39-02f6-4804-be1b-d9f28b186de9"
        },
        "item": {
          "id": "ad31fde5-9503-4f12-a83b-89fb87b69322",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7ab8117c-bccd-4f94-bdd4-20cbbc6fcbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5abf00db-7d2d-4b2e-8f58-1bd55c6cae9f",
        "cursor": {
          "ref": "06d8594f-ab4a-4ff8-8f3d-a6d1965e2e9b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0be6a76b-fdf3-4b78-a801-e33215b3f48a"
        },
        "item": {
          "id": "5abf00db-7d2d-4b2e-8f58-1bd55c6cae9f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3cec56af-d79e-4830-97f7-4911f5e08c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da75503-5e41-4412-913f-28a374518fd4",
        "cursor": {
          "ref": "f21f7b12-7653-435b-9ce5-c3b3c8ba196c",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4930e179-1350-423d-aca5-09a40a1865ec"
        },
        "item": {
          "id": "2da75503-5e41-4412-913f-28a374518fd4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4ddfdc1-cdf1-446c-8ab8-de74c77cc099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f867a2fe-c8e1-4a7a-a534-a697251d8acd",
        "cursor": {
          "ref": "2c76d5d4-7feb-4efe-b6b8-feb270632def",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7b87ac1b-ae4b-465a-93f0-b8050fbaeddc"
        },
        "item": {
          "id": "f867a2fe-c8e1-4a7a-a534-a697251d8acd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "17f311e9-6073-4fd2-897f-5215f6bf2ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af6b89c-41ac-48e0-9c77-6757ab381d59",
        "cursor": {
          "ref": "fcd22ff9-cfa8-4449-b96c-54fd7053c195",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0fa2baad-ddb2-4465-a7ad-68bb57849fae"
        },
        "item": {
          "id": "1af6b89c-41ac-48e0-9c77-6757ab381d59",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "772f1514-9464-4b5b-8dd5-428daef2f158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f8517c-fee4-47a8-bd77-dd593d525b61",
        "cursor": {
          "ref": "c731d37c-2152-45f4-ad70-14b1bc8c2cb5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d61af71f-bd68-41be-bf10-9be6ff808b36"
        },
        "item": {
          "id": "58f8517c-fee4-47a8-bd77-dd593d525b61",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "517237c6-dbc4-4cd6-bc93-71839a96e8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc50628a-7d42-4f98-acd8-de6de35dd383",
        "cursor": {
          "ref": "c618962f-314e-4c2a-a2f9-62c71173fff7",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "83961fda-15c0-4989-85b1-002e7bd9bae7"
        },
        "item": {
          "id": "dc50628a-7d42-4f98-acd8-de6de35dd383",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ba91c458-c3ce-4acc-a9f6-60bd74d33827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340dab0c-aed2-4823-b963-cf5053f128ef",
        "cursor": {
          "ref": "0ccbfc0c-3e93-4449-b964-62f1e8c03301",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20fd405e-1dd8-4d12-99f8-840ee0c3047e"
        },
        "item": {
          "id": "340dab0c-aed2-4823-b963-cf5053f128ef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "39ebc0db-6f23-4f61-98ab-7700c746076f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a22982-25a7-4275-b781-1241be907679",
        "cursor": {
          "ref": "8bd97c7b-cce6-4762-8dac-a870e4ad6b91",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4c72d21-990f-4a8d-9fb4-798def79eee7"
        },
        "item": {
          "id": "12a22982-25a7-4275-b781-1241be907679",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e922faf8-75a0-47c2-af7f-74a61db9a91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013389f0-2e11-497d-96b9-10f0f0040e2b",
        "cursor": {
          "ref": "a06c49c6-0746-4e8c-89e9-81f2b01d6150",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cbf6cb67-b82d-46ff-8f24-e1a2500ff60c"
        },
        "item": {
          "id": "013389f0-2e11-497d-96b9-10f0f0040e2b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2b9e8fb3-20d4-494d-bd9e-8eea9bc94893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd227836-a43a-4c9e-93c9-691b5975b593",
        "cursor": {
          "ref": "17519124-6db2-45f5-8dae-b1a6da70601a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c106c422-9c9a-48b7-a9f9-7a7d16c92190"
        },
        "item": {
          "id": "fd227836-a43a-4c9e-93c9-691b5975b593",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47402152-6a6f-4ba3-bb61-9b60770ab336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bca37c-6892-4bfa-8143-37dc340bdd46",
        "cursor": {
          "ref": "87921d73-108a-45ab-9984-0857d9de11c7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb93d3c6-6409-4426-b54d-8d8d124d1947"
        },
        "item": {
          "id": "57bca37c-6892-4bfa-8143-37dc340bdd46",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ed81f06e-4b87-4fea-8324-866d5264cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e585b22c-e115-4c9d-a885-009f4760546d",
        "cursor": {
          "ref": "ba74847c-65ff-4c10-9f77-e62128a2c7a8",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "44a2c545-ea2a-4829-9859-4b0eaf5e2e3e"
        },
        "item": {
          "id": "e585b22c-e115-4c9d-a885-009f4760546d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9a830fbc-e16b-4207-aaa9-59facdb922ae",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 597,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448e445-da5e-4e2c-9964-c3d57a558bba",
        "cursor": {
          "ref": "654c2164-0174-4a27-a055-43e247f2d771",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "156be246-6781-4e26-aee4-c09c127efa37"
        },
        "item": {
          "id": "1448e445-da5e-4e2c-9964-c3d57a558bba",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7ccfb89f-5a58-4ab6-8f41-ee7aaaea0980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db97fc-2bfc-4d51-bd8d-8ca739b2e29b",
        "cursor": {
          "ref": "8c333f0a-a6fc-413f-8783-b376ed706338",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a7a31dc2-1d51-43d8-a002-a9ec57600eff"
        },
        "item": {
          "id": "40db97fc-2bfc-4d51-bd8d-8ca739b2e29b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8174c7af-f90d-4049-a231-269eeff1ae12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249c2f03-3565-4eeb-9351-6464ebbdc80e",
        "cursor": {
          "ref": "1537ae08-2dbe-41b9-bcef-519a89393c0a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ea8960d3-96b2-4327-8558-afe72147b106"
        },
        "item": {
          "id": "249c2f03-3565-4eeb-9351-6464ebbdc80e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c861e2c0-3258-43ce-b440-18dba170be7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68109a5e-1732-4bf0-8483-99342169087d",
        "cursor": {
          "ref": "02b51b7d-95b6-4148-8f91-49e7b1198dad",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2c1a6a09-afb0-446f-8893-57320ba59761"
        },
        "item": {
          "id": "68109a5e-1732-4bf0-8483-99342169087d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d15b5730-11e6-4861-a9a9-cb8404e0990e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780fdeec-bb20-4fff-9940-092dac9a60ba",
        "cursor": {
          "ref": "72b2a129-365b-4695-96ce-b4397b655fbe",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0635ed72-992e-4365-855c-51bb7c9ca67e"
        },
        "item": {
          "id": "780fdeec-bb20-4fff-9940-092dac9a60ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2a04d417-0a9f-4b6f-a7b8-2c817d2852a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caee2f7b-0d9b-463a-865b-f5f94a56fdcc",
        "cursor": {
          "ref": "90271706-9536-42ce-968b-9b46e1d07583",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "975b9292-94cf-4255-ba64-14411dba1698"
        },
        "item": {
          "id": "caee2f7b-0d9b-463a-865b-f5f94a56fdcc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "22d98560-16f7-42bf-b838-500546dd88ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f1be6d-34b1-4797-bcef-a692315d10b5",
        "cursor": {
          "ref": "63d9ea79-6f67-4960-834b-aa1f0c19da8c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c704b13-9f88-4617-816c-0ce099f2a323"
        },
        "item": {
          "id": "75f1be6d-34b1-4797-bcef-a692315d10b5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "311299dc-3130-417e-ada6-f2a47b62ce6f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 594,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5a005d-5f4d-4a13-ad8e-e67669b6075d",
        "cursor": {
          "ref": "55166611-7ecf-47f9-89be-d4030b184813",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1956c871-4a63-4815-8d39-0b1903c825d0"
        },
        "item": {
          "id": "6e5a005d-5f4d-4a13-ad8e-e67669b6075d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8b1c98f7-6035-4348-b3f1-2f29c0d9bfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437e80cc-c961-4b4a-a965-d23683faec57",
        "cursor": {
          "ref": "e22b0a73-138c-45fa-8ae9-bef87c747003",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "add11d61-a009-4f4c-b5c5-e0cfb037c2e2"
        },
        "item": {
          "id": "437e80cc-c961-4b4a-a965-d23683faec57",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bf8afc87-687b-42d0-b6f0-197fd9a5236e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7154f6-c6a6-4bbf-8b5d-140d70eca433",
        "cursor": {
          "ref": "0971b61a-b899-4b26-a00e-0ca6f0fbd3b3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2d359184-edb6-4c70-b034-1d049dbb6abd"
        },
        "item": {
          "id": "6a7154f6-c6a6-4bbf-8b5d-140d70eca433",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9c03ee72-4fdc-44fb-ac6a-fb2f7c8de691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102c778f-c977-4255-8f54-0d3caa5d257e",
        "cursor": {
          "ref": "3bac078a-13f3-4a37-88da-e23125f159bb",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "53a6410b-650f-47a2-b322-21cdafdd80fa"
        },
        "item": {
          "id": "102c778f-c977-4255-8f54-0d3caa5d257e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c505271d-3107-4f8b-8ccf-ee038c79e9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34567104-054e-440f-ad5f-80f96969f9af",
        "cursor": {
          "ref": "a92ee4e5-5946-46c9-b74d-1a733eed1edb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "994a16de-5577-4f88-8f2c-cd94a6eca2a6"
        },
        "item": {
          "id": "34567104-054e-440f-ad5f-80f96969f9af",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "35af56a9-9c18-4be4-bfe8-6d7f154fd8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5903cd0c-7cbf-4842-ab03-94637afbbcb7",
        "cursor": {
          "ref": "92326544-d723-4108-ad3f-bb1f99edfcb6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c6c5311e-56fc-4d37-b34e-17440ca0576f"
        },
        "item": {
          "id": "5903cd0c-7cbf-4842-ab03-94637afbbcb7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6dda02c7-eb31-4a4c-a46c-bc2c28089d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a4caa5-c9d5-4127-be10-58ad3b42c0b9",
        "cursor": {
          "ref": "ccddf51d-20ff-4482-bea3-886ae229e6c7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ee6e0cc4-452f-467f-b0a5-7018c0494deb"
        },
        "item": {
          "id": "55a4caa5-c9d5-4127-be10-58ad3b42c0b9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e60307cd-2e0d-475f-a653-f49118099b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecd1a4b-f30f-43cd-8c4a-12163d8b96ee",
        "cursor": {
          "ref": "e2171be4-ee7f-4ce4-a47d-66b2f58c9598",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "180c9055-6e66-4a14-80e2-2bb2182e7e67"
        },
        "item": {
          "id": "4ecd1a4b-f30f-43cd-8c4a-12163d8b96ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2f57be06-cbaa-483a-b059-302e7f2608bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8713e6-8343-40e3-a59e-2c12c7961924",
        "cursor": {
          "ref": "c2697cbe-81a6-4188-bd6e-988ab3581fbf",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c278c6c1-fae8-45f6-a4dc-30191931e180"
        },
        "item": {
          "id": "cc8713e6-8343-40e3-a59e-2c12c7961924",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d5f92230-2a00-4a84-88dc-95b777000055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6757b8b1-9707-4ede-a65f-cf10167cd3a5",
        "cursor": {
          "ref": "438a31e8-547d-412e-a5ad-eee29a3ed467",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "594e89df-f7f5-4482-9773-c0943a8d1084"
        },
        "item": {
          "id": "6757b8b1-9707-4ede-a65f-cf10167cd3a5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8f88b7f5-7fe8-4dc3-aea4-8c7775407d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90beca8c-4d03-4c32-a2c6-8dd3f71fba48",
        "cursor": {
          "ref": "c9cffea8-9200-433f-92a5-3f3f484bcb96",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14740b69-c05b-475f-bd98-439393ac02c9"
        },
        "item": {
          "id": "90beca8c-4d03-4c32-a2c6-8dd3f71fba48",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6fec74a5-02e8-45cb-ae6a-8f8d9f525415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611fe4d-41fa-488e-8253-38900e3200f1",
        "cursor": {
          "ref": "d8ebf80e-123f-443c-a78a-29ccf224b093",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47a536ba-03d6-4c3a-8e88-9f16c34d9cee"
        },
        "item": {
          "id": "2611fe4d-41fa-488e-8253-38900e3200f1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "163a1f92-818f-456f-afc7-7873dcb7223e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb62cc33-3785-447b-9593-089b7554586b",
        "cursor": {
          "ref": "30c77ef6-1241-4554-839a-ba2e3e12f227",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "4550fd71-fac2-4ebc-82cb-18e1701d00eb"
        },
        "item": {
          "id": "bb62cc33-3785-447b-9593-089b7554586b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6ee77204-22af-4935-8489-b081026b4401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30f9385-17ee-4dc5-94c9-63b2e5df8e87",
        "cursor": {
          "ref": "21d29456-3121-4671-9d46-f7bf5356803f",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c233df15-8b18-474a-905e-be8d5d455efb"
        },
        "item": {
          "id": "f30f9385-17ee-4dc5-94c9-63b2e5df8e87",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "98579374-a869-46d0-9d33-6d9f9ce19953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6570d8d-0149-442c-a066-262248b671d4",
        "cursor": {
          "ref": "54e2bf16-9570-449a-9259-5d36cf26a8de",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e8f75e32-8938-4fc2-a637-372f23f996ae"
        },
        "item": {
          "id": "b6570d8d-0149-442c-a066-262248b671d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cd1d9487-b161-4ca9-8d2b-7508a9fd3358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a77d65-42a8-4f17-904a-80dfb7b93e75",
        "cursor": {
          "ref": "a3e7c3a1-cb72-4354-b461-0395c2bb25b4",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f7ae4b19-ad72-455e-9cab-8c87e092845c"
        },
        "item": {
          "id": "a5a77d65-42a8-4f17-904a-80dfb7b93e75",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "77e81c0c-773c-4bfc-bc60-4df7b5139f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187a6a31-cddb-4b4b-a5ed-07357e109f7c",
        "cursor": {
          "ref": "ba59a13d-b23b-40a0-9866-56832725e267",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5c525a7a-743c-4d05-83cc-bbd4ab35c508"
        },
        "item": {
          "id": "187a6a31-cddb-4b4b-a5ed-07357e109f7c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f345f83a-d74b-4ce4-b394-98b4b51eb404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8087f19-e751-482c-a852-39d31432dcb2",
        "cursor": {
          "ref": "3746946d-b4a2-4b19-96be-c65d16a3baf5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6bc9240d-4f5d-45a6-aee0-23fb3854e62b"
        },
        "item": {
          "id": "f8087f19-e751-482c-a852-39d31432dcb2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cb7892a5-e5bf-458c-8f47-207a843bb7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc64a7a-8aa6-4b7d-b7ec-db40c61bae7f",
        "cursor": {
          "ref": "69cac6dd-79cd-4ca4-bca3-9765f10645e3",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c7d0dbc7-f2e6-448d-9c93-63045582a6f9"
        },
        "item": {
          "id": "7cc64a7a-8aa6-4b7d-b7ec-db40c61bae7f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5704d569-a25b-4ece-9094-ed51cc923283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002026e5-32f0-46e1-b87d-5d49e0c7108c",
        "cursor": {
          "ref": "5306afa8-a650-48bf-a0a8-918a18760895",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "25e98511-038b-401e-ae88-83a4fb522bef"
        },
        "item": {
          "id": "002026e5-32f0-46e1-b87d-5d49e0c7108c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d24fb1e7-88f2-4a63-b8ab-ace42c89a589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f56c32-6224-4785-99bd-dc2cf198ff1a",
        "cursor": {
          "ref": "9194deac-cb62-4741-a1bc-e96df5540e10",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "79c05bc3-4199-4049-9907-e0650805e719"
        },
        "item": {
          "id": "56f56c32-6224-4785-99bd-dc2cf198ff1a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3bc28348-a226-4c67-9ea8-0c56660ab838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45604daf-6aad-4a66-ac63-10a07ddccff8",
        "cursor": {
          "ref": "aba674eb-b5b2-4036-971f-de90133b7df6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "332eb749-0594-4906-bce2-8a20b598fbfa"
        },
        "item": {
          "id": "45604daf-6aad-4a66-ac63-10a07ddccff8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "58dec1bd-6326-4625-b374-a8d999a90d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a5007e-e33c-45d9-bc19-429688e493a2",
        "cursor": {
          "ref": "d3d2bfa4-d2b7-4752-a72e-82a78794be53",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2b074f81-e9b8-4f4e-a4c6-65428c512d43"
        },
        "item": {
          "id": "e9a5007e-e33c-45d9-bc19-429688e493a2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "43d9cde4-c823-461d-b18a-3cf408188bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60d01d2-92b0-486e-a12c-c473fdf84247",
        "cursor": {
          "ref": "f59560aa-2286-44e5-b9c8-84b6500eb318",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "84430fc5-d528-458e-b022-926ab7fe146f"
        },
        "item": {
          "id": "e60d01d2-92b0-486e-a12c-c473fdf84247",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "482d3dac-54ea-43b3-8421-90ef5b7fe816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a7094e-b339-4cb3-b7a7-9300a129f1cd",
        "cursor": {
          "ref": "a95fdf46-c755-4820-a348-26f06e6c2b04",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9001295a-f3ae-4c7e-aa13-f03629822328"
        },
        "item": {
          "id": "88a7094e-b339-4cb3-b7a7-9300a129f1cd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cf234d0a-6c38-4e3b-9e64-0766cde284ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640476ef-09b1-43ca-a315-453b71f90c25",
        "cursor": {
          "ref": "a1e0e526-5aeb-4c55-a3b9-1b2fbd2cf7d2",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a4cdc71a-1967-4d2f-9d71-6fa7921c2227"
        },
        "item": {
          "id": "640476ef-09b1-43ca-a315-453b71f90c25",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "61d8e950-2d79-42b8-a2dd-8a14526b0736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2146c987-e36f-4541-8a71-4fd2cbaf567b",
        "cursor": {
          "ref": "575d2f9e-3af2-45db-9bf8-dc4c898bfd19",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34864b28-51ce-4d85-9916-0164528f2df1"
        },
        "item": {
          "id": "2146c987-e36f-4541-8a71-4fd2cbaf567b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ca8cf8cf-ce67-4411-b47b-1d5ea7960dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af2d8b9-a4bf-4ff9-acb7-d92a55c0f07f",
        "cursor": {
          "ref": "36f7d74e-201f-4e83-9e84-546aa7a681ff",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0a60c110-bc49-4a9f-bae8-05c0cf94afb6"
        },
        "item": {
          "id": "8af2d8b9-a4bf-4ff9-acb7-d92a55c0f07f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "de6b0f8c-3fd9-453d-83f3-6b7fdce3fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e23961-ea37-4917-a33b-48b2dc80e1b3",
        "cursor": {
          "ref": "4b37053e-f1f8-4916-8b01-573c9c9beeae",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "318fc95a-5482-454d-952d-55b86e5fdade"
        },
        "item": {
          "id": "99e23961-ea37-4917-a33b-48b2dc80e1b3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "8944a93b-61e8-4468-b52b-212ce5b0c449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed847711-a192-45d1-acb8-edd151f8d362",
        "cursor": {
          "ref": "0304c6d1-b8f5-426b-b04d-bfe1d1177cf7",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3b4e7423-80ee-4722-9a64-b82fb9a747c3"
        },
        "item": {
          "id": "ed847711-a192-45d1-acb8-edd151f8d362",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "58cd4774-5654-403d-8d3f-47b0817c44bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71181b5-a411-48de-90ba-f434554a6011",
        "cursor": {
          "ref": "21aae3c7-36dd-40d9-a849-955878026a6a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3dda25ac-c4be-462c-97c0-259e596a1e4c"
        },
        "item": {
          "id": "f71181b5-a411-48de-90ba-f434554a6011",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "11ff8ddd-5bba-4194-ba6b-090f985b5782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf8fc38-ead7-43a2-8fec-d4ac3ce87550",
        "cursor": {
          "ref": "0917e0c3-bedb-492b-a6c8-8a8f84351da1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "37cc7b2c-6df9-4662-8656-0e68d348b6d2"
        },
        "item": {
          "id": "5cf8fc38-ead7-43a2-8fec-d4ac3ce87550",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8baa30cd-aec3-4605-9869-24e9494d3654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9e541a-18b1-4584-8669-002032dde1e1",
        "cursor": {
          "ref": "1faa1afe-90af-46b1-833c-b6a1e193542a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c2dfe83d-2c95-411b-9060-350830c7ef7e"
        },
        "item": {
          "id": "df9e541a-18b1-4584-8669-002032dde1e1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e27e3751-bbf7-4c3b-8058-dc6766706f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954bf890-f51e-4b05-ac49-e8ac837b3723",
        "cursor": {
          "ref": "e5764117-2589-4196-bd8d-4e0c9f46daf5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "98326051-8df2-4b61-b8b0-7884a5d65079"
        },
        "item": {
          "id": "954bf890-f51e-4b05-ac49-e8ac837b3723",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0ccd3cb1-a0ec-4a61-8809-b57e4cfce2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c55c412-7b85-4227-ad8f-5d49325cf4b1",
        "cursor": {
          "ref": "0942a8ac-4ccd-4caf-8e58-1e1ba640c102",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "db519fde-4b9e-4ace-83fb-51cf3b5d125e"
        },
        "item": {
          "id": "6c55c412-7b85-4227-ad8f-5d49325cf4b1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fcbc3e23-58c5-4730-a053-e19fb4853667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5ad7fd-228a-4427-b8dc-ee380e6312bc",
        "cursor": {
          "ref": "fa783988-24eb-4d80-8a9f-a9c8ed32dbcb",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f55c7594-8fe3-4166-a09a-c393f2548a60"
        },
        "item": {
          "id": "0a5ad7fd-228a-4427-b8dc-ee380e6312bc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3266f138-7464-4b66-9c0a-a5d8040a4229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390fcead-0d33-4552-95e5-8813fa08c96f",
        "cursor": {
          "ref": "68839abb-10d8-4e0d-9ae0-38fe1ff81676",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3eee95b-157e-449a-b7c1-0e15fd385f7d"
        },
        "item": {
          "id": "390fcead-0d33-4552-95e5-8813fa08c96f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eabc39d7-ccff-4281-bd41-7f91550a2229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785b9e9b-28cc-4f8c-84aa-bf12aa8d6a41",
        "cursor": {
          "ref": "71573d23-a627-4d75-9602-2461980fc1ca",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3c6ae431-a004-43da-9228-7ec510bde915"
        },
        "item": {
          "id": "785b9e9b-28cc-4f8c-84aa-bf12aa8d6a41",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bded9240-c751-4da2-a228-16f5bd119dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf43afda-e530-44dc-af05-c6cd7db3a005",
        "cursor": {
          "ref": "38e6d8c1-ff85-4c0f-93a7-6d2d3da81ccd",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0a865dba-34a7-4d41-9357-9c8538bf3242"
        },
        "item": {
          "id": "bf43afda-e530-44dc-af05-c6cd7db3a005",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e1506175-a4a1-4c6c-8844-1bb4e6ece3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4152b78a-75d9-481c-84f4-b297e60d0fee",
        "cursor": {
          "ref": "ac0ea09c-cd77-4dcc-a1dd-f8c42e99d26d",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "41225fe1-915f-43dd-a020-53e61a6c6e9e"
        },
        "item": {
          "id": "4152b78a-75d9-481c-84f4-b297e60d0fee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "005d37d4-034f-4788-be9b-1c066d0b3d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c81755d-0b2f-4a57-b272-14e4911722f8",
        "cursor": {
          "ref": "a8e1d6eb-9c70-43b6-949d-8d21288d051e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "03cbe4cc-8867-4333-896e-f91910cd78d7"
        },
        "item": {
          "id": "0c81755d-0b2f-4a57-b272-14e4911722f8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "905d938c-919f-4a17-be7a-bfb6ba752bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c3011b-8a59-4cd4-ace5-6e3118aa2568",
        "cursor": {
          "ref": "8cf5a5fd-957d-4fd2-ad37-a7d26261c4e2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6b39cf87-279b-4a6a-a02d-66f12f078b80"
        },
        "item": {
          "id": "75c3011b-8a59-4cd4-ace5-6e3118aa2568",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6c0d54cf-bc12-4ef6-aeaa-7f9736349d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648fb2ec-1871-495b-94df-97ae1eba64f9",
        "cursor": {
          "ref": "8e95a744-b0f0-4ef5-bd07-a904ff44be39",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "370fc309-59c6-4b57-94cf-e6490e14eba0"
        },
        "item": {
          "id": "648fb2ec-1871-495b-94df-97ae1eba64f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d7f9b4c-42ef-4cd5-b317-37d9f3ba3457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cabfc4-23f4-4e26-85d5-0f9ec8fe322c",
        "cursor": {
          "ref": "b9457deb-5447-4d7e-950d-e0a3e39b1cda",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "367bf68e-2b04-44e4-880d-c74f67eee1cb"
        },
        "item": {
          "id": "a6cabfc4-23f4-4e26-85d5-0f9ec8fe322c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1b429766-05eb-465b-8572-992b25248e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de772ac1-dbde-4166-b3e5-f96815ebaa7a",
        "cursor": {
          "ref": "65e4a116-3fb4-4424-8a5e-e404a2e31e6c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "049e7cd0-5685-4b3a-934d-842e16b53301"
        },
        "item": {
          "id": "de772ac1-dbde-4166-b3e5-f96815ebaa7a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0fce219d-08f5-4e4a-97ba-b1c5c13fb4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c6ed52-6a25-4bae-b46f-e8619b9111ef",
        "cursor": {
          "ref": "cbb66ebe-f22c-44e2-8139-82a08c9aeb7d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "51de7b90-3c12-4926-ab9f-6c6cdcac0183"
        },
        "item": {
          "id": "e5c6ed52-6a25-4bae-b46f-e8619b9111ef",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1aa550e7-d8a4-4143-9d87-206a67cb7f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8a2a2b-0e1b-4840-b5ed-af92bd076857",
        "cursor": {
          "ref": "fab99ad9-81d2-49a7-82c5-7ceb2c04a4cb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "898a01ea-aea0-4fd7-bfb8-085a75aa504e"
        },
        "item": {
          "id": "6e8a2a2b-0e1b-4840-b5ed-af92bd076857",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8f9d3303-a05e-4cba-bd1f-2130266b2c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59d9f8a-0ffe-46f8-be81-ca9c5b42f8d8",
        "cursor": {
          "ref": "260459b0-8f32-49c3-95c8-d0a0977ea95a",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "45e83870-2bb2-4134-8f66-7104455dd8b0"
        },
        "item": {
          "id": "f59d9f8a-0ffe-46f8-be81-ca9c5b42f8d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1032cc33-dcd3-407a-833a-06e41f3f818b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55f11f4-8c5c-4c49-9ce6-0fa56e977dfc",
        "cursor": {
          "ref": "c606d707-a1c1-423d-84c9-861abda9ec3b",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8083ec68-7243-46a9-bc88-af5e47d0ea1b"
        },
        "item": {
          "id": "b55f11f4-8c5c-4c49-9ce6-0fa56e977dfc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0b7dcf25-630a-464b-914f-c96ba5d9f2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ccd9ece-0d05-4c8f-9cfa-0e02e8d5e1f6",
        "cursor": {
          "ref": "2451d366-a674-468d-90f8-e1a8389df1d4",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b4cd8aa0-ab9d-47df-b14c-f68243d45385"
        },
        "item": {
          "id": "3ccd9ece-0d05-4c8f-9cfa-0e02e8d5e1f6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3d30c96c-e62a-4fdb-82b8-ee6ae12cd462",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e0bd07-bb74-43e8-b945-efe0fcb1ef12",
        "cursor": {
          "ref": "19f0e258-ac1d-4139-8e80-e40461f9ab26",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9360198a-2d7a-47ad-92ef-821c36865b8b"
        },
        "item": {
          "id": "94e0bd07-bb74-43e8-b945-efe0fcb1ef12",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fdaa3b0a-5435-48af-b223-e18dde015e83",
          "status": "Created",
          "code": 201,
          "responseTime": 7326,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228405f-b28e-4783-9408-427c8c985e07",
        "cursor": {
          "ref": "457e8d9f-a880-4815-b31a-c4e34384ca52",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b336e3ec-3ebf-4245-8ce5-1c0e1e6102da"
        },
        "item": {
          "id": "8228405f-b28e-4783-9408-427c8c985e07",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cabf69ef-078c-4ea1-a2f0-cf29c5bdb6cb",
          "status": "Created",
          "code": 201,
          "responseTime": 7663,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed72598-ec43-4d75-adc7-5177cc0864c9",
        "cursor": {
          "ref": "3e8a8ff9-0d2e-46e4-9d6a-c9009d419366",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "018aaf35-22e9-48c7-bc35-546f1de0a148"
        },
        "item": {
          "id": "4ed72598-ec43-4d75-adc7-5177cc0864c9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "413cdf96-d701-43d5-be1c-1f7d995b4203",
          "status": "Created",
          "code": 201,
          "responseTime": 6704,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "376ef2ba-1cff-4767-8372-05dfa502d1bb",
        "cursor": {
          "ref": "09c3e448-a6c0-413b-9644-8feabde8df1c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fd8499a6-6752-4664-81ce-335220c76537"
        },
        "item": {
          "id": "376ef2ba-1cff-4767-8372-05dfa502d1bb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0435856e-c55b-469e-9b18-dae70b349113",
          "status": "Created",
          "code": 201,
          "responseTime": 6983,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce3495f-751b-48c7-9a07-44aecbe78292",
        "cursor": {
          "ref": "99080560-8ce4-4fa6-bea4-940c4bb2bfe1",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4eb25ab2-6865-4028-a991-9d0934616ba8"
        },
        "item": {
          "id": "5ce3495f-751b-48c7-9a07-44aecbe78292",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "71f85cda-8a72-4b92-bc80-fc0aaa2ca8f7",
          "status": "Created",
          "code": 201,
          "responseTime": 6908,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3b1ae0-7b34-408b-8ae8-a6a8521563f3",
        "cursor": {
          "ref": "52de8faa-aae7-44bd-8177-176ada32ba59",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "890bd087-4e6c-4b9e-8e9f-42b3a9e5fe28"
        },
        "item": {
          "id": "be3b1ae0-7b34-408b-8ae8-a6a8521563f3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5e0985b5-7565-4641-b242-f8ff00c7ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "613f4c44-4803-44ab-a894-60eb5e86f36b",
        "cursor": {
          "ref": "0a848cbe-77fc-456f-9c38-1684bcb56d8f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14b17ce2-49b7-4ab9-b399-d57d17e7bb94"
        },
        "item": {
          "id": "613f4c44-4803-44ab-a894-60eb5e86f36b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "83e3aabe-287d-4d32-bc95-3b7cba68902c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19212fb4-03c3-45a6-a584-1d59eadd758c",
        "cursor": {
          "ref": "74b24453-07dd-44e1-bb81-6b93fdd58613",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9309931e-88f0-4607-a9ef-764d17b5f205"
        },
        "item": {
          "id": "19212fb4-03c3-45a6-a584-1d59eadd758c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a8f00a7d-bf83-4fb1-93a1-74a03c677b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bac950-b6c3-4796-a406-7709e5e01006",
        "cursor": {
          "ref": "767239d4-4b9b-42bf-a120-7b2464e5e0cc",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "133b25c1-3e43-42cd-9f4d-b2f595cd069e"
        },
        "item": {
          "id": "97bac950-b6c3-4796-a406-7709e5e01006",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b5524663-16e1-4751-affb-82cd7005266b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed2a5b1-578a-4865-8419-8dd1a66661e9",
        "cursor": {
          "ref": "6979805f-a812-44f0-8785-260d417e575c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f0f4c335-2cee-42ce-a969-9d9586df5526"
        },
        "item": {
          "id": "5ed2a5b1-578a-4865-8419-8dd1a66661e9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a0d23514-95e5-4a0d-845a-ffc9e2c28012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e368a6ec-c451-4b21-bf18-ce90d1faff36",
        "cursor": {
          "ref": "4d3d5d9f-2ee7-411b-b755-e4a4b56e3825",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d37cd110-26ef-42fe-af09-7a986f4d6175"
        },
        "item": {
          "id": "e368a6ec-c451-4b21-bf18-ce90d1faff36",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5640d6fb-ba27-4100-8e93-8c88fa38dda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c3347-dcbf-4c4b-8169-e75658bc140c",
        "cursor": {
          "ref": "d69b8d92-4b00-426d-a105-13663bcdc096",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9bcaff8a-c93b-4438-a7fd-7365635dd182"
        },
        "item": {
          "id": "4a5c3347-dcbf-4c4b-8169-e75658bc140c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "afe09be2-f2ad-4e9d-8528-d4b470836e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d69417-5b93-4eb6-8833-23af1d04e42e",
        "cursor": {
          "ref": "307b04d3-5ce2-4128-a4f1-33fd17ca6462",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1ac400c0-8c21-487f-ae2a-39ff5d360b1c"
        },
        "item": {
          "id": "87d69417-5b93-4eb6-8833-23af1d04e42e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c10e28a2-5701-4b15-851f-9e35df732396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741135fb-13bd-46e2-a865-80eb1d657d34",
        "cursor": {
          "ref": "e2fc7ce3-733b-4b90-88e9-b6241b4863ec",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b49ecc3c-f440-402a-8eb9-66dbf4866332"
        },
        "item": {
          "id": "741135fb-13bd-46e2-a865-80eb1d657d34",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e16fee4d-c2c3-4055-8df9-7dc90ba79b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520fd611-1bc3-4b23-84a8-17a7f43399d8",
        "cursor": {
          "ref": "07b7b64c-cc3b-49ea-8915-95b81470996a",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "479f54a5-6944-4cc1-b2e7-4984ec062ec0"
        },
        "item": {
          "id": "520fd611-1bc3-4b23-84a8-17a7f43399d8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5a116290-02ac-4a02-993b-b13b0a6abdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6ecc18-a342-495d-87e3-404db1afea21",
        "cursor": {
          "ref": "5119f63d-46c9-4e90-9ce7-62d90ba6d63a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "788a40e6-d327-4958-ad0b-80c4c2d0acc2"
        },
        "item": {
          "id": "8d6ecc18-a342-495d-87e3-404db1afea21",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5ce24f6-bb04-49cd-bc64-5e423ee990ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795215cd-842f-42c5-a183-7525c9c8e6d0",
        "cursor": {
          "ref": "6a173a06-6917-43a4-bc3e-9bbefcbee09b",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fd12d0dc-0fb6-4d5a-998c-a3b81c604699"
        },
        "item": {
          "id": "795215cd-842f-42c5-a183-7525c9c8e6d0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "53f516b0-ec5e-4816-96bb-b0380a1c6c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3a10c1-1a62-45e7-8458-42db4f3f5808",
        "cursor": {
          "ref": "e81c2192-063c-4c2e-838b-9fbb265339b4",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "83197e22-77c0-4c17-888f-00012722c716"
        },
        "item": {
          "id": "1e3a10c1-1a62-45e7-8458-42db4f3f5808",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef82ae61-4a72-4660-b1a5-266fafcf494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a17d3fc-6da6-4c4b-a218-4a3fcffa8102",
        "cursor": {
          "ref": "fd891c07-2b23-4824-ab42-b1654afa91f8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7e245815-da46-426e-8a52-9fac03ecb004"
        },
        "item": {
          "id": "8a17d3fc-6da6-4c4b-a218-4a3fcffa8102",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d5e35372-d343-4de8-b283-679a1f1a652f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a4be8e-8f1a-4b07-bb61-34bb8357b953",
        "cursor": {
          "ref": "b7cc8a8a-7f25-4778-acf2-feda1621af91",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5f411889-a377-4e8d-8dc9-4bec2ca7fe0a"
        },
        "item": {
          "id": "56a4be8e-8f1a-4b07-bb61-34bb8357b953",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2e22520e-ae04-457c-9dcf-64affd7f6476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5639cbe2-5cfb-4e31-a649-2f3d28417a5a",
        "cursor": {
          "ref": "f7e784b7-ee4a-4038-a186-dd109bebd031",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cdc99488-6e80-407f-ba01-664529d6af3a"
        },
        "item": {
          "id": "5639cbe2-5cfb-4e31-a649-2f3d28417a5a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ca0f1bf-9307-44ef-bbb9-6059cc20812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca8253-0324-48b4-9302-3d7a06127fa1",
        "cursor": {
          "ref": "e2345d19-65fb-4939-bfc4-12a47c8df6b8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "136575c5-3275-4d99-821e-87a5bca14b07"
        },
        "item": {
          "id": "b0ca8253-0324-48b4-9302-3d7a06127fa1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8e631937-3494-45f8-a230-b0ad4915b217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e9041c-2629-41a8-ac64-0051c30b58d1",
        "cursor": {
          "ref": "d630ee9a-4f79-47be-8f2a-3da8da8b70c6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "24df48b9-df3b-453f-8b5d-6ca67fd94a2f"
        },
        "item": {
          "id": "95e9041c-2629-41a8-ac64-0051c30b58d1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e89a6d05-c27d-4ab4-9aa8-0a5d0fd97291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced20b06-049f-4d5b-a110-3ccb9aa1c260",
        "cursor": {
          "ref": "afb3e47c-ff76-49e7-af12-e2b4cc88d866",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "62e621dd-9385-4e64-8b0d-a33249ac2550"
        },
        "item": {
          "id": "ced20b06-049f-4d5b-a110-3ccb9aa1c260",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "10220395-db2a-4dde-904f-0cfdba826ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8c247f-d5a3-4351-bc5e-28d55c8df857",
        "cursor": {
          "ref": "c71b86c1-99e4-46ee-bb25-739d16c8bae0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bf5a85fe-0c2b-46ff-9e9d-43d5198dae36"
        },
        "item": {
          "id": "8a8c247f-d5a3-4351-bc5e-28d55c8df857",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "800cef7e-befc-4086-bd3a-e95af8111673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99712405-92bf-4de0-8809-cf7cc1edbcf7",
        "cursor": {
          "ref": "f7015a39-fcfd-4be1-a632-e919dc069790",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ea3eace5-ca43-46fa-93db-b982a41cc4b8"
        },
        "item": {
          "id": "99712405-92bf-4de0-8809-cf7cc1edbcf7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4658b469-98ce-4e8a-b6ef-c148c700dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de1f629-3c48-4bdb-a139-02c53649ad28",
        "cursor": {
          "ref": "808333a9-c7c6-40fe-a720-3b663968d58a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d60d4f5e-1a88-4539-84f6-3f0235f1810b"
        },
        "item": {
          "id": "0de1f629-3c48-4bdb-a139-02c53649ad28",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba6d6bd0-eb72-4a37-86cb-ebd66a6d29b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa05bb-3931-43a7-9fc2-25a10c77851e",
        "cursor": {
          "ref": "cf4c5477-e113-4980-84aa-86137975c058",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4975a857-72a9-4d16-a5cb-9cf1bb36ddf5"
        },
        "item": {
          "id": "f5aa05bb-3931-43a7-9fc2-25a10c77851e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "708dead9-98ed-4aa6-8b8b-660db4d78577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77895914-de02-4972-85ea-cec0c8831bf3",
        "cursor": {
          "ref": "3105fe37-91b2-4ef7-aa89-5315fca043bc",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6e42f75d-3e19-4c47-bcab-1fe678561d4b"
        },
        "item": {
          "id": "77895914-de02-4972-85ea-cec0c8831bf3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "070fb3d5-3504-4b57-b502-c7d207022111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569f3997-dc7b-47d9-9b4b-0acbc2a62285",
        "cursor": {
          "ref": "f388686c-7a33-4bb3-b5c4-89c9835dcb06",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "860d06c2-9318-44b0-9020-b1dc6d3e00b2"
        },
        "item": {
          "id": "569f3997-dc7b-47d9-9b4b-0acbc2a62285",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "614fca95-8b6a-4c21-832a-fe1455683648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abaf045-4957-4471-b028-decf2f5a97a0",
        "cursor": {
          "ref": "ebe6a1eb-9d85-462c-ac18-9a33db3d16e7",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c42bd4d3-87e5-4a71-b60e-df69b218180f"
        },
        "item": {
          "id": "0abaf045-4957-4471-b028-decf2f5a97a0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d86270db-c017-4505-ab7e-8cff6a25b750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2059aaf6-6948-4bb9-8b04-59bcbc66a73d",
        "cursor": {
          "ref": "e8c61f49-b8d2-4274-b941-54158ad235c8",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f2e62ea0-23ee-4574-9982-122ba2aee743"
        },
        "item": {
          "id": "2059aaf6-6948-4bb9-8b04-59bcbc66a73d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "422d09e2-34ac-4b27-a699-037468b40c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a74669d-71ec-42f7-b55f-90d31a0e70f8",
        "cursor": {
          "ref": "9ceaffe4-4b58-48d1-993d-26a3873dc73d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7827b196-d8f2-4248-89fe-63473967aefc"
        },
        "item": {
          "id": "9a74669d-71ec-42f7-b55f-90d31a0e70f8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fe764349-c528-471b-9cc0-710e02638b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9490a3-f2f4-44d5-948b-89c1516fed29",
        "cursor": {
          "ref": "35722c79-9526-488d-ab9e-100d7a209f33",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b4f56528-2bf3-485e-9aaf-9f3b4d912d50"
        },
        "item": {
          "id": "2f9490a3-f2f4-44d5-948b-89c1516fed29",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "29a56159-27f6-4d3b-a2c8-1eb2a58bceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7140c30a-22d8-4907-82f2-e44db234a76f",
        "cursor": {
          "ref": "cec08822-558b-4afc-8285-71e90b1b124a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cd8d7237-755e-4a29-a165-fd191b324e3b"
        },
        "item": {
          "id": "7140c30a-22d8-4907-82f2-e44db234a76f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "339f9b1b-bf1e-4524-bff3-fafda2bf5b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e62b5f-d450-4bd1-9911-089660b0ad37",
        "cursor": {
          "ref": "fa3e90c5-7104-4ef5-b66f-fddf4c888952",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a4fc75ab-62b3-4d70-ac1d-b8d48ccdb1b4"
        },
        "item": {
          "id": "57e62b5f-d450-4bd1-9911-089660b0ad37",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4bef1611-51d7-4664-ae92-83f1cc0d2834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79211a6-419f-4e8f-96c8-7a38d5065749",
        "cursor": {
          "ref": "918b7c1a-3a82-4312-a96c-d7c963adfc30",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1b557dcd-47e5-4eda-811b-83d6748544c9"
        },
        "item": {
          "id": "c79211a6-419f-4e8f-96c8-7a38d5065749",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5673a6e6-ba93-4e03-bcfa-4bc2e990b20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c35e7a4-493b-42f4-99fa-1a55223e8273",
        "cursor": {
          "ref": "2e5c865c-68de-446c-a8c8-0e3db88eac33",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "86ec238e-4a5c-44f9-b63c-66eb7d8f0f71"
        },
        "item": {
          "id": "6c35e7a4-493b-42f4-99fa-1a55223e8273",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "84d5231d-ce82-43fb-90c0-cb87559fe2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f353b6-d993-44ca-bc6c-aa7331cbe91f",
        "cursor": {
          "ref": "48653f47-e933-48c8-aa00-962c0a80cffc",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "34e21c07-9779-4149-a61b-2f43d46e7e80"
        },
        "item": {
          "id": "e9f353b6-d993-44ca-bc6c-aa7331cbe91f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bf0c3c3a-c840-4312-8e1e-cdefac475897",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664c1d44-9fdf-4f49-9f21-c0e5df4305c4",
        "cursor": {
          "ref": "70e5fc49-a42d-499f-a96e-c137561a7839",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "299e9eb2-6c4a-417a-ba94-b58255072418"
        },
        "item": {
          "id": "664c1d44-9fdf-4f49-9f21-c0e5df4305c4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76f0336f-0b7c-4a1d-9023-6a0c5cc03f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd74ee38-3cc9-445c-b0ab-28b39a08449a",
        "cursor": {
          "ref": "563d067e-4a97-4652-abfc-006990c9d516",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "38fa2123-9a10-41e7-9d77-ea48194f3bcb"
        },
        "item": {
          "id": "bd74ee38-3cc9-445c-b0ab-28b39a08449a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1b608c62-c531-4249-898e-62ea1f19820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc888ebd-492a-4399-9648-f2b939bc5ae4",
        "cursor": {
          "ref": "e344371c-2024-4f90-a6b3-6fddd87d8460",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c7c96930-e844-490a-b050-2ac06c47b7a6"
        },
        "item": {
          "id": "cc888ebd-492a-4399-9648-f2b939bc5ae4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fcb1f4f6-1a60-46fa-b00a-bfd17b3bc999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55b24b0-f200-4acc-8c7e-83298cb00fc1",
        "cursor": {
          "ref": "5e7d7c05-422f-4044-85d8-16c9aceeecde",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2e20f360-d43f-4f40-9b46-832097ac8a92"
        },
        "item": {
          "id": "f55b24b0-f200-4acc-8c7e-83298cb00fc1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c6070a96-ccbe-4115-ab79-190b70d6bd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ade79f0-470b-470b-9b73-e4f3e54dce0b",
        "cursor": {
          "ref": "d890518d-ae44-4a08-af9b-1055d0f25904",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "179b4da5-24dd-40e3-a38e-809d2dcf68f2"
        },
        "item": {
          "id": "3ade79f0-470b-470b-9b73-e4f3e54dce0b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44dfe869-a8ff-4fd8-a793-ecdcb216cfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92402b26-1f50-498c-8cef-ce4f6396f214",
        "cursor": {
          "ref": "9ea37262-bdcc-47d3-a992-185b96ae1e36",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ffbe4a9e-dc55-49da-8251-8d9a646a435e"
        },
        "item": {
          "id": "92402b26-1f50-498c-8cef-ce4f6396f214",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e60b32b2-9ea4-4f4d-a5a3-a13acc7d2534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae28326-0a6c-4bcf-9e61-a4b9de66dde8",
        "cursor": {
          "ref": "30a0354b-4a34-442e-a0b1-c84cc7e4ec8a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d5f3779e-8fdd-4bf3-a594-5cbac2848f58"
        },
        "item": {
          "id": "2ae28326-0a6c-4bcf-9e61-a4b9de66dde8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "99c39ba9-5dcc-4d3f-87dd-cec0b54771ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b9e5fd-16be-4f3a-bee7-58604793c462",
        "cursor": {
          "ref": "ed5b3132-25d8-41ce-9fbb-bca2a5d570e1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "540dbfe7-a7c9-4890-8d3c-96cfdda9f8ad"
        },
        "item": {
          "id": "32b9e5fd-16be-4f3a-bee7-58604793c462",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0768ff45-7a15-49c7-a7e0-5662a3dfd94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c046ae8d-724c-4341-b67a-fd571519796a",
        "cursor": {
          "ref": "47ab45ea-ac0f-4cc0-bad8-e59b2d6a2569",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "97162c3a-d3cc-408f-bcb4-6f7c65287ed4"
        },
        "item": {
          "id": "c046ae8d-724c-4341-b67a-fd571519796a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4b16ad26-9882-4c7b-94ec-eb2115a88e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936c6eeb-a966-40a4-a60a-05cf0a5f3089",
        "cursor": {
          "ref": "559f255a-fd57-4495-8f93-e5d3d4d7608c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fb2e05be-ed72-42a6-9e80-91ae475e8855"
        },
        "item": {
          "id": "936c6eeb-a966-40a4-a60a-05cf0a5f3089",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6a4e59af-c79f-4735-8db8-4e8ccd4d2dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53348c48-075f-41eb-a5ec-d72b775e9869",
        "cursor": {
          "ref": "92afbb67-72d1-4ab9-9c8f-170a220627ec",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7527f9d8-d581-4830-93ae-d275ccb9aefd"
        },
        "item": {
          "id": "53348c48-075f-41eb-a5ec-d72b775e9869",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f499aaff-5fcd-41a2-bbd1-37cc62986154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb8ab6f-5261-4b73-9435-1499d553c4c9",
        "cursor": {
          "ref": "b6876c34-a7f5-4b18-95e8-b1d091e07eec",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9ec26738-2142-4df0-939e-5b48eaa3e11b"
        },
        "item": {
          "id": "dbb8ab6f-5261-4b73-9435-1499d553c4c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e7aa76e8-e6ec-4b0f-943b-dd891789a51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa8d801-8521-49ea-8c2e-1ead8ad3f131",
        "cursor": {
          "ref": "6dbab8a5-691b-4167-9935-38bb228ef19a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9b179c74-82d2-4adf-95b3-2c589fca0a4a"
        },
        "item": {
          "id": "9fa8d801-8521-49ea-8c2e-1ead8ad3f131",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd01bf7a-9839-4f86-b8a9-df7a8226ee0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba667f0-62d9-4044-940b-effbb8ddeba7",
        "cursor": {
          "ref": "78392445-0589-452e-83cd-920ae5c6036d",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "49ebff50-4e9c-44c2-ba43-851a5215325b"
        },
        "item": {
          "id": "4ba667f0-62d9-4044-940b-effbb8ddeba7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90e13fb2-d7ef-47ea-94c2-e94a9090158e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5935abdd-4bd9-444e-915c-d67a3307de61",
        "cursor": {
          "ref": "3dbefdae-1f63-4537-acd2-c0c7638f7872",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bbe9f525-a6be-4f49-8f37-b40fbc03c43f"
        },
        "item": {
          "id": "5935abdd-4bd9-444e-915c-d67a3307de61",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8c0e5e3c-9ce8-4023-afef-73b866c3bfbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef225a0-3d3c-4732-b443-b22a4bf17dba",
        "cursor": {
          "ref": "a8ef36c2-581c-4f00-9fed-7b8a1bad106f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "25b8e057-b811-4fed-825f-eda2ef0070c6"
        },
        "item": {
          "id": "7ef225a0-3d3c-4732-b443-b22a4bf17dba",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1f13b1b9-883f-47fe-8ab2-7aae14c80714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3920845-ac98-4b24-ab15-34d7cc236308",
        "cursor": {
          "ref": "c2564e3f-0a7c-4316-af4c-d066a9ebe121",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "542cfcea-919c-48bb-81b8-7bb9cf7b58f0"
        },
        "item": {
          "id": "a3920845-ac98-4b24-ab15-34d7cc236308",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d46ddc5-7efb-41e0-9fbf-9b67817bd2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc12386-e9cd-4dd7-a697-ca69277caa1f",
        "cursor": {
          "ref": "e7b03cea-f5f5-4851-9671-77610ecc58b6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f40b09a7-6f55-464b-ae1e-881c282c2085"
        },
        "item": {
          "id": "cdc12386-e9cd-4dd7-a697-ca69277caa1f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "daca76f5-dc0e-4ae9-a87f-aee40297c85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e69ca2d-0d4c-4de7-9610-963cffe7f68e",
        "cursor": {
          "ref": "b9681210-9c2b-410a-b585-3202feace416",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3095bd79-af70-4993-9d2b-9c32fa6f852d"
        },
        "item": {
          "id": "0e69ca2d-0d4c-4de7-9610-963cffe7f68e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21c504c4-6696-4b54-89d1-6a49fdbc00ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50113539-7a7f-4659-9f93-20381353195f",
        "cursor": {
          "ref": "90dfe315-d7a2-47e0-8a29-449defa8dce1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c375680f-ec33-4c6c-96ca-e4130a28bd91"
        },
        "item": {
          "id": "50113539-7a7f-4659-9f93-20381353195f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7d1051e-2fb4-45c5-a4b2-228f3402c725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d83f886-9bbc-4cd2-b40c-fb94941246b7",
        "cursor": {
          "ref": "64ef2419-dd7d-43cc-a001-f4b861b13ab9",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ad2c80f5-5e22-4059-9c81-3185cb78720b"
        },
        "item": {
          "id": "2d83f886-9bbc-4cd2-b40c-fb94941246b7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a2329e5-6e79-4677-80f9-a53fb065aff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814605ec-9dc9-42b8-a88b-324c5d31af4f",
        "cursor": {
          "ref": "ee088bae-3316-48e1-bc39-2d917f698872",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "be0438a1-7909-40ee-8f42-b2b39c3bfb22"
        },
        "item": {
          "id": "814605ec-9dc9-42b8-a88b-324c5d31af4f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5b0aa770-dd40-4e5c-9408-32aafa39a017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d9927e-9330-4657-94f9-7ac6a1c657ee",
        "cursor": {
          "ref": "95fe0db3-9ecc-4c47-a058-d10b2208a764",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e3e48ed5-2640-4291-b482-db565e17d936"
        },
        "item": {
          "id": "a3d9927e-9330-4657-94f9-7ac6a1c657ee",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2af930b5-b75b-4378-95b0-ff3a30df6f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57909acf-6525-4b24-a681-38b384ffe7bb",
        "cursor": {
          "ref": "629cba51-163f-48ae-8167-1085c266f0ed",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d9e81a4f-40fe-4b30-a04e-1209a7eda47d"
        },
        "item": {
          "id": "57909acf-6525-4b24-a681-38b384ffe7bb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8867ec90-30d7-4407-b525-a4e13bb786b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159a4737-89e7-4ac6-9da6-57ad74e2acf9",
        "cursor": {
          "ref": "d5d56a2e-16d4-46e7-8005-3c0c37e76a41",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "db815b9f-2c2b-4414-973a-3a0ca8d0a000"
        },
        "item": {
          "id": "159a4737-89e7-4ac6-9da6-57ad74e2acf9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "62e07336-67b9-44a8-a370-2519e063acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50dc751-04c7-4801-a945-64fab5996556",
        "cursor": {
          "ref": "adf68407-87aa-4e47-a2db-189dbd9f3f17",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "aa7db216-be5f-41ed-aeb5-ce73ac82397a"
        },
        "item": {
          "id": "a50dc751-04c7-4801-a945-64fab5996556",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a61a6439-abfa-4cfb-bccc-e68d9d13f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36172631-12d7-499f-bb95-32376230d505",
        "cursor": {
          "ref": "16355610-ad6e-4551-b9c8-414dcfd5dd69",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d8c4ac76-3abf-418c-b57d-095db1b31ab0"
        },
        "item": {
          "id": "36172631-12d7-499f-bb95-32376230d505",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5dbfb0b2-31d9-4929-b60d-577f9b70e26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef99c84c-9daa-4e75-9e8b-18f4ff8991a8",
        "cursor": {
          "ref": "dc914d53-6e6e-4c42-be74-1578a16b7781",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "cf3d9b0d-d267-4217-a559-1bac524f3f11"
        },
        "item": {
          "id": "ef99c84c-9daa-4e75-9e8b-18f4ff8991a8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b55cb5f7-c0ce-448d-b310-817817213e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfddaf7-99a9-492c-8e8d-4a782ac16323",
        "cursor": {
          "ref": "38678a02-4739-4781-9a7f-6ebf21adf95d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "98d35a12-3962-44d5-87f7-fb3b3794e1a6"
        },
        "item": {
          "id": "0cfddaf7-99a9-492c-8e8d-4a782ac16323",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0fa08cfb-bc01-45ba-904f-f3c39f45cc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7805bfdb-9e62-438f-bc84-803cf2f2c51b",
        "cursor": {
          "ref": "04b74c1e-3977-4193-a118-d74be98122d1",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "217bdba3-c772-4f82-af44-c576d69c2672"
        },
        "item": {
          "id": "7805bfdb-9e62-438f-bc84-803cf2f2c51b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "18478446-2c5f-481b-8bc7-cef539364ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62019627-2e53-4aca-a0ee-fbc91e31004f",
        "cursor": {
          "ref": "83f90871-5756-4045-bb1d-12387b2176dc",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "29a076dc-74d8-4556-af37-c1cc781ba53a"
        },
        "item": {
          "id": "62019627-2e53-4aca-a0ee-fbc91e31004f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fc8bd5c4-d6bc-4bc1-8a6d-626656422091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b72562-a9f7-4b85-b8f4-803af635322c",
        "cursor": {
          "ref": "2eb93aee-9ebc-4c8d-ba54-9749bda74e9d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7c9224ad-b17b-4a89-84f9-4184f0478fef"
        },
        "item": {
          "id": "57b72562-a9f7-4b85-b8f4-803af635322c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dab37838-6944-4d24-beda-de090a966b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fdde5c-63ef-4bbf-b866-db8ce19014a8",
        "cursor": {
          "ref": "580ea377-a9f1-4b68-b5f0-f9c3f07d9768",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6ccbc2ac-44fa-4a71-9397-768e9779dfaa"
        },
        "item": {
          "id": "17fdde5c-63ef-4bbf-b866-db8ce19014a8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "95e5f234-9a4e-4402-9316-62d3299259a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61b8f32a-74b7-491a-82b8-b55f0e59c8d1",
        "cursor": {
          "ref": "bcc1d01d-ce56-4ee6-8419-11942db24736",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "693bf161-b8dd-4a25-a3e4-c025c3d18542"
        },
        "item": {
          "id": "61b8f32a-74b7-491a-82b8-b55f0e59c8d1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a1c66f08-6274-404b-a1ad-6c8666fb881c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3ee587-e1a8-48d1-ae4d-e7516f4daa62",
        "cursor": {
          "ref": "473f7f39-5d5e-4bb1-94c3-9f7932f1977a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ce4b5cbb-9625-421d-8375-b68ac1402b87"
        },
        "item": {
          "id": "4b3ee587-e1a8-48d1-ae4d-e7516f4daa62",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d99829c4-4d04-4154-af84-714d8a6c91bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bb2451-b935-4596-99c1-7c759a6be006",
        "cursor": {
          "ref": "f620589e-d911-4554-a1ff-a232a6a83796",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f7e54b5-c00e-4af7-a0ff-5c23fe8b3cba"
        },
        "item": {
          "id": "28bb2451-b935-4596-99c1-7c759a6be006",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fdd4d58c-603c-42e1-aa84-0919c78e1968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5e0575-8c44-41a5-93c3-ca5c41bf3241",
        "cursor": {
          "ref": "6cb402a8-b12d-4f2b-8cbf-caa8df216f86",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a8034996-a1db-479f-8265-1dcacab37481"
        },
        "item": {
          "id": "7c5e0575-8c44-41a5-93c3-ca5c41bf3241",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4f3cb972-a079-4125-90eb-66da88fe67e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1279c-3bc7-44cc-85bc-3f9fc69ebaee",
        "cursor": {
          "ref": "3b759359-43a5-4599-9080-3333013e0e97",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e2d23dad-c488-44ea-9ff1-f1ef5df99342"
        },
        "item": {
          "id": "b1c1279c-3bc7-44cc-85bc-3f9fc69ebaee",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52d7db4b-1783-4cb9-994d-21420c43d977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc65baa-2bbf-407a-8aea-35eccdbf0496",
        "cursor": {
          "ref": "5dbabf4f-d879-47e3-956d-bd2a7fc27faf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1e923955-5b6d-4333-af33-5ca0ced4845d"
        },
        "item": {
          "id": "0bc65baa-2bbf-407a-8aea-35eccdbf0496",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ebeaf869-5433-4698-aa98-d262bb1b8b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1762a0c4-439b-4f0e-87e4-d8910eaec7f6",
        "cursor": {
          "ref": "111f3d31-e108-4873-b987-3dadd7a0248d",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "70f946bd-a6f9-44ea-a9c5-bba531934381"
        },
        "item": {
          "id": "1762a0c4-439b-4f0e-87e4-d8910eaec7f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e81e7514-fdab-44ef-bc24-8cfa5ca35e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb71e3c-8a3e-4c33-8ff5-f3ce5f8e65e4",
        "cursor": {
          "ref": "6c630a65-7715-4c19-a971-b90af56300a7",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "af310588-7e2c-41af-8734-0b27404038c3"
        },
        "item": {
          "id": "ffb71e3c-8a3e-4c33-8ff5-f3ce5f8e65e4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3864e110-a891-4a5e-9bbc-17f757d1d2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea847e57-11ee-4f3f-a3c0-728b8fe63cff",
        "cursor": {
          "ref": "32e49c96-7a55-4882-a265-b08beb36ed25",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "caab6bf6-b0ce-4205-8102-7cc176cd0690"
        },
        "item": {
          "id": "ea847e57-11ee-4f3f-a3c0-728b8fe63cff",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "eca0ee81-38fa-45e8-9c29-55793c137e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acfa8d0-9eb1-4145-b110-1fd13f602847",
        "cursor": {
          "ref": "36605c06-62ca-46d2-abcc-01eaba912313",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "56cb95b9-4e7b-4b2c-accf-63745c2baabf"
        },
        "item": {
          "id": "2acfa8d0-9eb1-4145-b110-1fd13f602847",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "329b08ad-1672-4880-aec0-a09aa2eb893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94d66bf-e708-445e-824d-8e929ecb4718",
        "cursor": {
          "ref": "91f28cd8-f63f-4d26-a030-811f09a32794",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9cf2be77-d793-4e33-8f32-1097184d2f4a"
        },
        "item": {
          "id": "c94d66bf-e708-445e-824d-8e929ecb4718",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbc341a6-6be6-42cf-bf5b-a8497decab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2448c5b4-e92b-47b4-8924-d5763ecc8700",
        "cursor": {
          "ref": "2399eaf5-fd0e-41de-851d-7f3cde64cc0f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "25c6dd78-6423-49a2-bf70-e4cf99df8b0a"
        },
        "item": {
          "id": "2448c5b4-e92b-47b4-8924-d5763ecc8700",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b70686e9-3a0c-425a-8f2e-7cf03f5d130b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21db572-ebe8-4a1a-9283-8560c84c15bf",
        "cursor": {
          "ref": "2286d418-f54d-4fd8-a9ca-3f12ce56b7c4",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8a8c84ab-ba9e-403c-8e85-645ef8c53f4a"
        },
        "item": {
          "id": "c21db572-ebe8-4a1a-9283-8560c84c15bf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "16ba2cb5-5946-4b74-a88c-3c3af1d380a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1ef4c1-59e3-4427-84ec-3057f47baa26",
        "cursor": {
          "ref": "cc55dd51-0146-4fe2-9709-6146b99e56ed",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4b487d45-f3f7-4cb0-9c99-a3e4ce5c9e07"
        },
        "item": {
          "id": "ce1ef4c1-59e3-4427-84ec-3057f47baa26",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "eb27e186-3e1c-48e3-84f6-dc6f742665a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed57fe-8a52-4dc7-bf3a-b00b32e597d5",
        "cursor": {
          "ref": "e0df7a66-1694-4a97-bec9-c45520f8813d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9e877208-1351-4787-b793-eb8f0273585b"
        },
        "item": {
          "id": "58ed57fe-8a52-4dc7-bf3a-b00b32e597d5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8de6d784-3a64-4818-8e23-a0707dda9b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31438cd-c0cc-4c3e-8598-2c97c13f4e47",
        "cursor": {
          "ref": "94707aab-f959-49f0-8cb3-ac179a5e54d7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ead11e39-2588-4477-8aec-8eb0c9860786"
        },
        "item": {
          "id": "d31438cd-c0cc-4c3e-8598-2c97c13f4e47",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e3a2804d-7e52-4c7c-9a8e-c55b76eaee31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f5634e-4a2a-46e7-ad5a-2f21e2e64670",
        "cursor": {
          "ref": "e7351482-3910-46ba-95c8-ad0866bc7e76",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1945e031-dff1-4fd2-95eb-1831459fcc97"
        },
        "item": {
          "id": "e9f5634e-4a2a-46e7-ad5a-2f21e2e64670",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c37abd43-67bd-4a91-a35f-a0cde18b5b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681e873-bc74-41c3-a1ca-a991fb398f44",
        "cursor": {
          "ref": "92d61815-2610-4c74-90b9-e8d83160b836",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "03f67c5e-c2d1-4bf0-89c3-43d6fea0cfc7"
        },
        "item": {
          "id": "7681e873-bc74-41c3-a1ca-a991fb398f44",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e829bb0-5eaa-44a0-a21e-15d92e45dbfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e6fe6f-85aa-490f-9c1f-6ebba07f585b",
        "cursor": {
          "ref": "56622073-2ad3-4e97-88ee-e727b17f977e",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "22a9722c-bfe3-489e-8bc9-d4a0f08d6209"
        },
        "item": {
          "id": "d3e6fe6f-85aa-490f-9c1f-6ebba07f585b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d387dd9c-bc24-4f02-9992-612a132d17f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb6ca73-a93f-4d80-94b2-9fdc5e263012",
        "cursor": {
          "ref": "f9a00428-a43e-4a8a-bc3e-c1b63e922ddd",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1148f9b0-72bf-4611-b1c2-b9add3c95354"
        },
        "item": {
          "id": "7eb6ca73-a93f-4d80-94b2-9fdc5e263012",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d59b7860-6c96-4698-96aa-3444f757d439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d652ce-bb63-4b42-b782-01904f998688",
        "cursor": {
          "ref": "9f24fcbd-b1ed-4921-804e-3614b84946c6",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "77a9a740-1a27-488b-b6d4-c875bbf87e6b"
        },
        "item": {
          "id": "98d652ce-bb63-4b42-b782-01904f998688",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e940d30a-de58-495a-a8f0-0edf1c4ef597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e542211b-c689-4a4d-a007-658cd888c1d3",
        "cursor": {
          "ref": "90dc0179-6539-4844-bb9b-7f884189f575",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3df2b42b-d766-474d-a72d-77a958c65109"
        },
        "item": {
          "id": "e542211b-c689-4a4d-a007-658cd888c1d3",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e0a83185-85f4-44c5-8a16-a9fb6747396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1366dc2-4622-4eb3-b400-2b4062174185",
        "cursor": {
          "ref": "256dc7eb-f3b7-4690-b37b-612af40855c8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "229455b0-6169-4064-a3c1-6ff6cfcecd7c"
        },
        "item": {
          "id": "e1366dc2-4622-4eb3-b400-2b4062174185",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ae573ad8-9203-484d-a39b-826cdd9ce2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568fdde9-75cb-4063-9fb7-a8ddc59ca626",
        "cursor": {
          "ref": "57c2d98e-9fca-4d11-9a05-57b4066a959c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4bac926b-9a94-4b09-aee8-81579aa93b61"
        },
        "item": {
          "id": "568fdde9-75cb-4063-9fb7-a8ddc59ca626",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5407903e-3a87-47b2-8068-bd55b0d3451d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135197c3-0a31-4124-838c-91d76331ba1f",
        "cursor": {
          "ref": "06a4c1f0-db9e-403f-906a-609bfed6e48c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c29e7aaa-5784-4322-bd86-8f48711035e4"
        },
        "item": {
          "id": "135197c3-0a31-4124-838c-91d76331ba1f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "70cee580-5eca-4051-9204-752686e37fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f3f69-9597-42d9-871b-026c0a988ac5",
        "cursor": {
          "ref": "0661f6bd-6c41-422d-9b6a-048db3d97e28",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "98284427-aa85-438c-b789-f8e4fca13f42"
        },
        "item": {
          "id": "cf1f3f69-9597-42d9-871b-026c0a988ac5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ee7159d2-a85c-41db-b99a-d39bec9d289a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f1b07-59b8-4d17-ab3d-4dce4870df8e",
        "cursor": {
          "ref": "7fdcacb2-c879-415e-98e0-5e95a7a9baf7",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9ef6070f-ec58-4c72-a5a8-8975581b2f68"
        },
        "item": {
          "id": "f05f1b07-59b8-4d17-ab3d-4dce4870df8e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cc861fb4-4846-462c-acb4-0abf8e49b38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b8e474-906a-485a-81aa-735295ec081a",
        "cursor": {
          "ref": "c869116a-17fe-4fae-a5b3-6b7869da8fc3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2d94eb01-6bef-4590-993f-826198f38ab3"
        },
        "item": {
          "id": "b8b8e474-906a-485a-81aa-735295ec081a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4abd84e1-5871-498c-93bb-08779bbf1cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1c53f3-59ff-4a78-bebf-1cfbc29c3430",
        "cursor": {
          "ref": "35ae3a0a-bdf3-4cfc-9318-f69df3852154",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b88e3712-7ba9-4725-acff-06cbc9d596ba"
        },
        "item": {
          "id": "fc1c53f3-59ff-4a78-bebf-1cfbc29c3430",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13096425-e9f1-44f7-8278-708c149c0739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0dbe14-18f4-40a7-9535-efc5ab727d3d",
        "cursor": {
          "ref": "85bd973d-498e-4849-ba31-5dea670eb87d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "04938641-ee1b-4389-8742-d949f475112e"
        },
        "item": {
          "id": "4b0dbe14-18f4-40a7-9535-efc5ab727d3d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "501414f3-24b4-462a-b3cf-316389502e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faa136e-2870-4edf-b050-f4d8d0994640",
        "cursor": {
          "ref": "2f3b0519-98cf-4ebd-aa0c-7fab61318a46",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6e160dfc-5301-4b95-8a5f-079311a976e7"
        },
        "item": {
          "id": "6faa136e-2870-4edf-b050-f4d8d0994640",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2611e485-5627-4feb-a6b4-bb72770eb658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51376a58-e69c-4460-990d-3440d8fb1694",
        "cursor": {
          "ref": "c0d40a6b-a21b-42c9-b162-7dcb0d77edc6",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "03f7c958-5cc5-42fa-89be-594a858c06bc"
        },
        "item": {
          "id": "51376a58-e69c-4460-990d-3440d8fb1694",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "395a236e-09fc-44c1-a9f9-e02f61287115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91c4016-37c6-4c11-b0d1-f2850ba62ad6",
        "cursor": {
          "ref": "c4ef81d7-11da-4382-9019-2a6a8bab1c3e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c75d2486-0c04-4345-ba61-84a707630faa"
        },
        "item": {
          "id": "a91c4016-37c6-4c11-b0d1-f2850ba62ad6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4df092a0-4c9a-44db-aae0-846212dd1c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54681330-ead8-494c-a581-e2a202c5bccc",
        "cursor": {
          "ref": "75c3871d-c6ea-4a2a-9f08-4aaf0f387838",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d39b4c9-351d-42f8-acb9-3a202cad3dd1"
        },
        "item": {
          "id": "54681330-ead8-494c-a581-e2a202c5bccc",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9a83ea7a-0964-4256-a33f-eba37b893ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1410a0-826b-45d9-b08c-502d0161de6f",
        "cursor": {
          "ref": "68fcaf69-d257-4099-8ea2-c38b9fd4a197",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "55845b4d-af39-4519-a30c-d0c5ea62a9f7"
        },
        "item": {
          "id": "9a1410a0-826b-45d9-b08c-502d0161de6f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dfdec7c1-19b6-4d4f-bd4c-e0b53db52f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6d5e41-5604-4f10-92bd-47577d756e28",
        "cursor": {
          "ref": "b586ac50-15ef-4755-a35d-9d66333b6ef4",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5b8bd9a1-d8b1-43b7-9441-edece1002b4b"
        },
        "item": {
          "id": "9d6d5e41-5604-4f10-92bd-47577d756e28",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2c6177c1-dc4f-44ff-a0f2-f7748bd9f7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84bc26-d851-43b6-a6b6-d9ac11b40583",
        "cursor": {
          "ref": "6c0eb719-5bc6-4120-a524-cea30496699f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eb878305-cd70-454c-9b3c-b29acf920838"
        },
        "item": {
          "id": "db84bc26-d851-43b6-a6b6-d9ac11b40583",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7c92538e-b026-46d8-8698-3d7ce31262a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3489c9-8d38-430e-9fdc-def83e9b9e95",
        "cursor": {
          "ref": "e85260b2-ba59-4ba5-a454-2ad66d569db0",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aaddb58d-6f94-4dd6-8f1e-615912a3d9ab"
        },
        "item": {
          "id": "1f3489c9-8d38-430e-9fdc-def83e9b9e95",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fe2ccf6c-7d5c-4450-acaa-bc670eda178c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f303293e-c299-4cb5-92cb-ca9f15c54453",
        "cursor": {
          "ref": "53a28f21-fa03-416a-b411-d41232f55264",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "095fcdf6-bab6-433d-be02-ec82ed85487d"
        },
        "item": {
          "id": "f303293e-c299-4cb5-92cb-ca9f15c54453",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "87dcfc5f-8c87-44b8-9d1e-81d9004a4c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec34835-d909-4655-9ab9-df8af4acb0d3",
        "cursor": {
          "ref": "a34cfde6-1a30-4d6c-8b25-2432ff662c6f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1e499b10-221d-478d-9d8e-a5d006d66d2e"
        },
        "item": {
          "id": "fec34835-d909-4655-9ab9-df8af4acb0d3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9cb80082-9cdd-4b55-90b3-38ca5d6e5010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c2be4d-48c9-4b2b-8765-f07a0da20727",
        "cursor": {
          "ref": "79785462-b29d-4a78-b7b2-da9c3d23af3d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "698d1722-6bb3-436b-8641-832397cd9db9"
        },
        "item": {
          "id": "42c2be4d-48c9-4b2b-8765-f07a0da20727",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0c77bff1-7432-4dbd-84fa-2902e84a1b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d3db27-3b71-4d43-baf3-1a3c55852599",
        "cursor": {
          "ref": "afeea2a6-448b-41cf-9eb0-8ce73fd697c6",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f2dbfcc7-8a72-4536-ba41-068510ff7cd3"
        },
        "item": {
          "id": "d5d3db27-3b71-4d43-baf3-1a3c55852599",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "51c59b60-20bf-4a29-99b8-be01d0482a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57bb2b1-1930-4352-a948-45fe54852cee",
        "cursor": {
          "ref": "0657672f-ad04-40d5-91f7-17bfb2f1fd46",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d3e83008-6d1d-48e3-91ac-acea5b411e95"
        },
        "item": {
          "id": "c57bb2b1-1930-4352-a948-45fe54852cee",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9a47d478-692a-4e45-abeb-5fb8a15f121b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4971d9d-40f4-46f3-bc87-fbb513d64b1a",
        "cursor": {
          "ref": "153bd074-54a3-4dc4-876b-ab9e305363a5",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1df9a6d4-5c98-41d8-90b1-f868dfd35600"
        },
        "item": {
          "id": "f4971d9d-40f4-46f3-bc87-fbb513d64b1a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "67329e63-8031-482e-abfd-f312c84347c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db291e-a304-46b1-930b-347e5de9c5aa",
        "cursor": {
          "ref": "c3542d26-7fa3-41e8-a46c-e83d6b4f916c",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2d2a11cd-0a89-476d-81f1-b9d9c07d495c"
        },
        "item": {
          "id": "40db291e-a304-46b1-930b-347e5de9c5aa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0551f6a3-e250-46dc-9fcd-7ebb2ac33177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80148af0-ee6b-4cc2-bf4a-4fd8d2ca0751",
        "cursor": {
          "ref": "96a30a67-3b89-431b-9956-8e216b90aa70",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6e41e40b-12c2-4429-b6e6-961d92a6ada6"
        },
        "item": {
          "id": "80148af0-ee6b-4cc2-bf4a-4fd8d2ca0751",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3486dc96-31c4-4cc1-aa99-f22c39341965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b664ebc2-82a4-4b9a-a8be-85572185d3a6",
        "cursor": {
          "ref": "a702733f-21b9-40a7-a1ee-e51f00bc6e5b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7eaea97f-63b8-4a03-bd55-d530bcdd21ad"
        },
        "item": {
          "id": "b664ebc2-82a4-4b9a-a8be-85572185d3a6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ab957517-d09c-4fb8-af62-0729a17f0e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a83b1c8-25c4-437e-8a95-d4d88e3e3f6c",
        "cursor": {
          "ref": "b715c44c-3e23-46dc-a674-3e31f00e01dc",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53024520-6939-482c-b665-7fa4d6160563"
        },
        "item": {
          "id": "6a83b1c8-25c4-437e-8a95-d4d88e3e3f6c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e35feb5b-008a-4db0-8428-8bdcdc742f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0abd6c2-574d-46b1-84ad-4aa2d058dae9",
        "cursor": {
          "ref": "debcb644-07b7-4fab-80ce-15ae18966172",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2cf45ecb-e1e2-4f39-bd8a-c520b9afd491"
        },
        "item": {
          "id": "d0abd6c2-574d-46b1-84ad-4aa2d058dae9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "03144306-e6e1-4aa3-aa60-c432ecb14cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7486d-387f-4510-92b3-27193242469e",
        "cursor": {
          "ref": "a72f51e2-ddc4-4e4b-aeba-c267a928d101",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "042ae837-8265-49ee-bad1-1c2ccefd9acb"
        },
        "item": {
          "id": "2af7486d-387f-4510-92b3-27193242469e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "26dbb692-2e9c-4238-a10d-8a56911fc65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d32fab-cd73-4e6d-8a4f-5357f6e03957",
        "cursor": {
          "ref": "ba6e2eb9-f7aa-4931-8715-d8b1b33df0f2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "606206d4-71ef-4260-9f3c-2ba6e8dc253b"
        },
        "item": {
          "id": "58d32fab-cd73-4e6d-8a4f-5357f6e03957",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6059e5f-ac68-4eee-9e14-be7ba659a9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efe9e36-01bb-4ff6-955c-6931e17cdea7",
        "cursor": {
          "ref": "00009679-2be7-468d-b7fe-799f85a27575",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23727044-6c3b-48b4-a277-e7df5f8ba76c"
        },
        "item": {
          "id": "6efe9e36-01bb-4ff6-955c-6931e17cdea7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6f061f35-51cd-4b0d-84f1-d767f42c023a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6937bc2f-b421-4694-8b8b-5b3d688a1746",
        "cursor": {
          "ref": "01728232-1579-4781-bfbf-7ea2b9f14fad",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "28ea4935-44b4-4344-901f-8fc13e1aed78"
        },
        "item": {
          "id": "6937bc2f-b421-4694-8b8b-5b3d688a1746",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0d6ef6f-fc98-45fe-ad63-90b1dd0bafba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f22163c-e6d3-4c77-b616-df097f3d6af0",
        "cursor": {
          "ref": "5307b9e2-0341-4a00-b481-8da77dfc1dde",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9a048bc-e577-47ef-b855-d541a79a9f61"
        },
        "item": {
          "id": "1f22163c-e6d3-4c77-b616-df097f3d6af0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b0dd6afb-19e3-42d0-b31d-42e1b2351f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6cb12b-ed11-4a70-9828-72bb95720fc5",
        "cursor": {
          "ref": "8e33c922-871f-413d-a892-432a7d0fba8d",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6b515185-6479-4f04-87f2-7bbd9e36091e"
        },
        "item": {
          "id": "bb6cb12b-ed11-4a70-9828-72bb95720fc5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4ba1774d-ee1a-4cd9-ba77-f8a2d0729033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50854c7a-cda3-41f6-bccd-b02a70f3c91c",
        "cursor": {
          "ref": "b79d0fae-ac66-4bee-89f9-9ba2040868fa",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f91ceec3-7b37-474a-b827-decb30d53c03"
        },
        "item": {
          "id": "50854c7a-cda3-41f6-bccd-b02a70f3c91c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5060a7b1-2c39-4ec4-9f50-72b1f6bd6641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfd9aff-b838-4928-8012-3d2ce3e5c760",
        "cursor": {
          "ref": "67d3c65c-f23d-4dd7-b123-37cf7475d30b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "263d50e0-c57e-402e-9649-edaf7836ed5a"
        },
        "item": {
          "id": "ccfd9aff-b838-4928-8012-3d2ce3e5c760",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ce86e9f-7456-4e3d-b449-c85d73f5e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efad6d2d-8171-4f71-bfff-2891e3c75376",
        "cursor": {
          "ref": "29da0519-062b-4698-97e4-c05a13f33cbc",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5a7158a4-bded-4e2a-8193-18d206363c77"
        },
        "item": {
          "id": "efad6d2d-8171-4f71-bfff-2891e3c75376",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f5812d3a-bcbf-4db7-aae4-dfd279b22b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de28e35-9b63-44b9-b970-dd3038a89bfa",
        "cursor": {
          "ref": "22ebe8d2-e303-4a83-8781-448fd7219d81",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "511fd2c4-c587-48dc-9480-39dfecd1fcdf"
        },
        "item": {
          "id": "1de28e35-9b63-44b9-b970-dd3038a89bfa",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ab5718e0-0dba-49f6-b904-819f118dc022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58509efa-df34-4eed-9268-eb86787ef2fe",
        "cursor": {
          "ref": "e5394509-b306-441b-a61a-dcfb6902b3b0",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5662af6d-84da-4a0a-903d-42dee1f3a5e6"
        },
        "item": {
          "id": "58509efa-df34-4eed-9268-eb86787ef2fe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "89ba1c42-1b84-4594-8905-f312155013e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a643c77c-f4d5-4780-a3c1-fada3e748cba",
        "cursor": {
          "ref": "c7390ab1-5f33-450b-9bae-5fcbde1eae86",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91fe86cb-9e05-487a-92ae-60d765f58d0d"
        },
        "item": {
          "id": "a643c77c-f4d5-4780-a3c1-fada3e748cba",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da43be0a-e120-459a-b9e7-a29bb4763420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08e5a5d-da85-4314-bcce-21e507ff4aa2",
        "cursor": {
          "ref": "9413ac52-dec8-44a3-afbe-61bb323463e4",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "6f5f86a7-7a53-430a-a59c-7983d5894eb6"
        },
        "item": {
          "id": "b08e5a5d-da85-4314-bcce-21e507ff4aa2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "75801e28-830f-4a90-8211-e9987b501eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b665a47-0357-406c-b2a3-c2631d215597",
        "cursor": {
          "ref": "26717251-870e-4e99-a691-b39319baf974",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b2c39b23-e64e-4b2d-a54d-25a8374dea8c"
        },
        "item": {
          "id": "5b665a47-0357-406c-b2a3-c2631d215597",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a1d0145a-d597-4e9c-8e6b-3e0d03e434cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93abdd10-a779-45e7-a41a-d9487196b9e2",
        "cursor": {
          "ref": "72109b4a-f296-4481-b170-1ad212650c99",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fab13738-3742-423f-ac11-99272147c632"
        },
        "item": {
          "id": "93abdd10-a779-45e7-a41a-d9487196b9e2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8286e78e-4008-4674-b2f8-9976ce69ae85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83345674-6210-4201-b912-3bb3ac506727",
        "cursor": {
          "ref": "3e1a7d98-e62f-4ca4-9d32-c47c64eb757d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d0fa30c6-a80a-4c39-9029-f879223641f6"
        },
        "item": {
          "id": "83345674-6210-4201-b912-3bb3ac506727",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e6915a9e-19bd-4ba1-a179-92ff899e6075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2921f01f-0e36-4e7e-a6df-fe4324132102",
        "cursor": {
          "ref": "5e554045-ad04-493b-940f-10fa7378a280",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f5d65928-abfd-4983-8ce5-525f83ef8697"
        },
        "item": {
          "id": "2921f01f-0e36-4e7e-a6df-fe4324132102",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d595a5b9-7a1a-4e04-8290-644100bff8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31a3412-6d2f-468e-a67a-e4f18aa3fbd6",
        "cursor": {
          "ref": "f5d1681f-acc0-49e7-ab57-7748a9240a60",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28cdd5db-c620-4619-8773-77818c09e00b"
        },
        "item": {
          "id": "d31a3412-6d2f-468e-a67a-e4f18aa3fbd6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4f49da52-f356-4eb5-a5c1-c4745803e36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f4bb5d-2a9d-483c-91e0-480ddcb2ca17",
        "cursor": {
          "ref": "f6e93430-f068-4d64-b7c1-fa65f78d3efe",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "88f6a3d7-e810-4e25-8b1c-bee2e18f5d9b"
        },
        "item": {
          "id": "90f4bb5d-2a9d-483c-91e0-480ddcb2ca17",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "497ab4bb-6b7e-43bf-853e-d01f3890a845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e418363e-eebd-4f4c-8202-2898abfc67f5",
        "cursor": {
          "ref": "c11c2565-0d58-4b40-b7b3-7aa985ebbdcc",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1b5bb7d6-be9b-4a86-b3e0-dd90245607f5"
        },
        "item": {
          "id": "e418363e-eebd-4f4c-8202-2898abfc67f5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f73a33e0-e51b-4e92-a40e-a25d957db768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f45c07-c9bc-40bd-b340-2e2efd4deda5",
        "cursor": {
          "ref": "b08d4b40-0cab-4084-b570-16d21ba711a0",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2b9177ae-8a28-4420-82f9-ab2f713a5b5a"
        },
        "item": {
          "id": "07f45c07-c9bc-40bd-b340-2e2efd4deda5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4eb75c32-3ef8-4ffe-b16b-23f61628c347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0c76cb-8e38-4631-aa0e-a5acd1e69699",
        "cursor": {
          "ref": "f10d43b6-45cf-43d3-8465-1026701bdb3b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c9978822-867a-4e93-8847-025e84ea25ad"
        },
        "item": {
          "id": "3c0c76cb-8e38-4631-aa0e-a5acd1e69699",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fa83de07-b066-423e-bd53-f41bfd5c8b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d7c410-a92d-4b49-b306-20a6bd6ec52d",
        "cursor": {
          "ref": "eb2ab9cd-d446-4175-818c-9dcb66667489",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0fb4f5f8-b666-4a97-b3ab-fc1a5320d197"
        },
        "item": {
          "id": "04d7c410-a92d-4b49-b306-20a6bd6ec52d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2f0694e8-160c-4f18-ac29-e8753c0af88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c91da2-4861-47dc-a698-d6c5875da5e8",
        "cursor": {
          "ref": "42a292a7-e6b6-45c8-8ccc-9f0da944b75d",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3471e8b6-65fa-406b-a81a-ad2fe1cb412c"
        },
        "item": {
          "id": "75c91da2-4861-47dc-a698-d6c5875da5e8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "da2e1405-d0ee-4750-a263-f0176f58b1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c688081-f180-4ac9-838f-87caf3e1e70f",
        "cursor": {
          "ref": "1ba80308-b2f4-477f-a6bb-71d61ebcde4f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b7860b90-1f7b-4c17-a082-165e0e0933bd"
        },
        "item": {
          "id": "0c688081-f180-4ac9-838f-87caf3e1e70f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a0ff1f65-4825-4552-9df3-a794dfdd29bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e514e3-49da-44f1-9740-f8025d35dd8c",
        "cursor": {
          "ref": "273b782f-0f22-438f-8689-9a1fd24e5468",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "585ab498-7a6e-4792-b2ff-d520d7dfa624"
        },
        "item": {
          "id": "98e514e3-49da-44f1-9740-f8025d35dd8c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "982ee739-df66-47ef-a85a-bf277a0f1eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13041f1b-f271-4576-9311-2cf1c8cff3f7",
        "cursor": {
          "ref": "ccea4322-2699-43c7-b0bc-caa162fa86e1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9042551c-af0c-4c25-b8cd-57284033ea5a"
        },
        "item": {
          "id": "13041f1b-f271-4576-9311-2cf1c8cff3f7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7fed9b42-a563-41e9-bed1-975e704ad77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe381e86-2071-4f92-bd71-fb34ca96332e",
        "cursor": {
          "ref": "3d2a07bc-ef90-4b3e-a65d-641c911dd10d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "96cc3128-e521-499d-b4f5-a9e1fbaac9ef"
        },
        "item": {
          "id": "fe381e86-2071-4f92-bd71-fb34ca96332e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ffde427a-d0ca-4095-9aaf-41d7bd9c4504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7bdba4-9e01-446c-9f2d-29669a47372b",
        "cursor": {
          "ref": "8889035d-6152-45da-b2d9-0366a0bfd696",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b0b05486-0c49-4794-a273-28a9c9468ced"
        },
        "item": {
          "id": "ff7bdba4-9e01-446c-9f2d-29669a47372b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1dc1d127-2408-447f-89cc-14eba30bfdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11be7c9-c75f-417a-8d08-fe13a8b26158",
        "cursor": {
          "ref": "9406a3f6-ba81-4fe3-8f7a-868a9841cb4f",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "14266d17-a215-49c4-9a96-82b4b1525e4c"
        },
        "item": {
          "id": "a11be7c9-c75f-417a-8d08-fe13a8b26158",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6f208392-6f8e-47b7-8687-4d93e5c2f411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531634b5-8014-4966-90e8-ee2f00a9b7fe",
        "cursor": {
          "ref": "1af0375f-0345-4c32-a749-f950a1bb277d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ea8ce43d-6cba-434e-a241-e35b77596809"
        },
        "item": {
          "id": "531634b5-8014-4966-90e8-ee2f00a9b7fe",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6fd05518-4472-4b19-8412-f8b8888fcadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b6a9c3-4ef2-416b-bf35-b393fde5f218",
        "cursor": {
          "ref": "e8762610-dd46-4e30-b61e-371f251122bc",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9cc70d63-2a10-498d-bd87-2c5ab0c9eea2"
        },
        "item": {
          "id": "f3b6a9c3-4ef2-416b-bf35-b393fde5f218",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "54f5a163-87ec-46ee-8faf-9d46db5a7cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e820e6d6-892c-4074-b3e3-1eb31c695e41",
        "cursor": {
          "ref": "ae34b4c9-1add-4551-868e-47f8d8ac0b38",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d0ecff73-fef2-45c9-94d0-fa50b0e16543"
        },
        "item": {
          "id": "e820e6d6-892c-4074-b3e3-1eb31c695e41",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d94a52f9-010f-49e4-a376-ea1f8f0987db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c6d1ea-5a35-4547-8366-418e96de45eb",
        "cursor": {
          "ref": "5d62ba42-4dee-4562-9bcb-d6a0df26637c",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "14201e0b-a850-4b9f-8e60-48f20d28dfee"
        },
        "item": {
          "id": "a7c6d1ea-5a35-4547-8366-418e96de45eb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c5b1dd50-8e3d-46c5-9773-41e1a25830d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d72027a-adc1-4333-8c7d-d4fa196623d1",
        "cursor": {
          "ref": "f16342a2-20d0-4970-a110-6bc72fcc0cf4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "552b89cf-61c1-4322-966e-ccf8d1299715"
        },
        "item": {
          "id": "2d72027a-adc1-4333-8c7d-d4fa196623d1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "adb82d79-a539-46df-a77c-96649d8dc79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae3f00c-d6f4-4cb0-85dd-95fc2c3310b1",
        "cursor": {
          "ref": "7011689c-0d7e-479b-9354-3d4cdbd9426f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "476b16e5-b6ee-4bc2-b889-05db668c45a5"
        },
        "item": {
          "id": "8ae3f00c-d6f4-4cb0-85dd-95fc2c3310b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9b009bd6-8a3e-4237-b825-9e0b57978173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2f4de1-72a9-423c-b088-1003294ff575",
        "cursor": {
          "ref": "7cdca514-6b0b-47bc-8395-98313e1c89b8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2fb30079-c197-45ac-8062-ccd61baca919"
        },
        "item": {
          "id": "3a2f4de1-72a9-423c-b088-1003294ff575",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "647357fb-1330-421a-a044-926068775382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56424267-39dd-434f-b65f-e209e3cc8afd",
        "cursor": {
          "ref": "a7a070a1-4cde-4095-9e9f-c2dd67dfd0c5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9d081a0b-edfd-4c81-9e57-e053c14d1da2"
        },
        "item": {
          "id": "56424267-39dd-434f-b65f-e209e3cc8afd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bd5bccd6-5621-4558-a830-7bce09607719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916c9ee7-745c-410b-a73c-aee33d35af60",
        "cursor": {
          "ref": "698dd54c-66be-4362-b02f-b8b57b2a876f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "752b4224-1a61-41a6-a089-2c9be5abb9a8"
        },
        "item": {
          "id": "916c9ee7-745c-410b-a73c-aee33d35af60",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "88123fe6-f4ee-4fa4-94dd-97361c25d64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd94ea7f-2b86-45ab-b845-689fa71a98ba",
        "cursor": {
          "ref": "ecf48b42-cafa-43a5-ac48-56ee4040e9dd",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "bb58baeb-2583-4844-a92c-a6e49b03bbac"
        },
        "item": {
          "id": "dd94ea7f-2b86-45ab-b845-689fa71a98ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0805a0cc-5cf2-425c-9a0a-34f74dc5ad19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d956a20-1419-4408-867c-acf4cbd2630b",
        "cursor": {
          "ref": "689b04e2-22f4-45f1-b591-6e28a8fd415c",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6741d9c8-3ceb-4376-b0c3-10e0f7daa591"
        },
        "item": {
          "id": "9d956a20-1419-4408-867c-acf4cbd2630b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fe12c727-1ee9-4ebe-843d-95e149d0b47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6dcc01-6a8d-4ae5-8613-750bba17b578",
        "cursor": {
          "ref": "96b605af-1731-45be-b21a-5e36aed8aaf6",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "47c295f7-f6b8-4f86-8f27-1ae4198cc74f"
        },
        "item": {
          "id": "5c6dcc01-6a8d-4ae5-8613-750bba17b578",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9bb3b1dc-1309-4694-b617-244ae20289c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd8641-76f0-4ade-9f1c-e4bd264ab679",
        "cursor": {
          "ref": "5321e625-65fd-4cdf-8f91-9551d13d3947",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "534a676d-928b-42eb-a063-0bf13dc32469"
        },
        "item": {
          "id": "2ddd8641-76f0-4ade-9f1c-e4bd264ab679",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0334bf84-a87a-47d2-8a25-57801ee93ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c474ed-cffc-4ff5-96c9-7d0395d696df",
        "cursor": {
          "ref": "da8b62fa-c0bf-403d-a500-88ef79af73b3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5e03f409-6fe1-48c3-92d8-76038742b165"
        },
        "item": {
          "id": "64c474ed-cffc-4ff5-96c9-7d0395d696df",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "bf18eded-73df-411f-9ab7-3f14f0e07773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b2bdc0-fb1b-403b-8966-607f060ba849",
        "cursor": {
          "ref": "186c7d8a-5933-4590-b838-7c19689596ef",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eb083060-2bba-4395-9a43-14cdae81a577"
        },
        "item": {
          "id": "60b2bdc0-fb1b-403b-8966-607f060ba849",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "96ab5454-0bf6-4fdf-b271-72e554b6961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5169feb-6877-4013-a88f-2aaf0f65e2b7",
        "cursor": {
          "ref": "3676514f-223f-4e80-89ff-13838af90fcd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0ecb130d-dbf7-42d3-885d-280465dcdee2"
        },
        "item": {
          "id": "e5169feb-6877-4013-a88f-2aaf0f65e2b7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "49ade1c8-5787-46a6-8eed-fa6ad5bb59ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547db8bd-bdd1-4cc4-808a-59c3a1e0d083",
        "cursor": {
          "ref": "3a26936e-5e4d-4e0e-900c-d0b9ea564cba",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "26c2dcf6-dd1a-4abf-9d48-b4d8ec782b9a"
        },
        "item": {
          "id": "547db8bd-bdd1-4cc4-808a-59c3a1e0d083",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4352f4af-a1be-4f8f-a6e7-91a9682ac382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21aef44-4d43-43ae-b592-d072f8da1076",
        "cursor": {
          "ref": "78f2fa62-1748-4b31-9b9c-9fc2da1cfa1a",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "d549cded-fd74-45ca-9532-09ba5b61bd21"
        },
        "item": {
          "id": "f21aef44-4d43-43ae-b592-d072f8da1076",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a0965733-9ab2-4c0c-92fd-bab5de921992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe174919-d237-4122-a3a1-46fa6bddbb7b",
        "cursor": {
          "ref": "3d3f5809-8cd6-4336-9b77-070840f8b292",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bb58da35-02a4-4a6c-94da-346f3d40de77"
        },
        "item": {
          "id": "fe174919-d237-4122-a3a1-46fa6bddbb7b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0fc06c41-3e39-49b0-87d1-ba6ee349ad27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0385f658-7df3-488f-8d3f-086bb948e674",
        "cursor": {
          "ref": "280c8427-4b68-428e-bf8f-dae263121cc6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "01cc51d7-d809-40d4-ba80-72d75fb41234"
        },
        "item": {
          "id": "0385f658-7df3-488f-8d3f-086bb948e674",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "23b4dcdc-5b79-407d-aa4e-249b5da56b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7acf9-3ba7-4097-8603-39198560007a",
        "cursor": {
          "ref": "7d3e967f-bb42-4830-9f4a-ac43689f716d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "60c5a6d6-544d-4c46-b3f7-f78a7718ce1b"
        },
        "item": {
          "id": "37c7acf9-3ba7-4097-8603-39198560007a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9f04213e-3d03-4d7a-b34d-d6fa1c394a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97ffecb-cb74-4f52-8fdf-6b9a26ac69a2",
        "cursor": {
          "ref": "06ee7d1f-7155-4876-b152-b6502227c37f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8adbc3da-c644-4727-95e3-8aa90f31ebb6"
        },
        "item": {
          "id": "c97ffecb-cb74-4f52-8fdf-6b9a26ac69a2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "52c1c423-6b88-44d5-8ab6-905f05f23e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ef75e-e4d5-4442-ac2a-6190b06e7db1",
        "cursor": {
          "ref": "1716b7a4-f93f-4762-8105-fdb4135967e5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4f2fdb4e-4756-4940-be5e-0924e02660d6"
        },
        "item": {
          "id": "8c7ef75e-e4d5-4442-ac2a-6190b06e7db1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "129d7885-ad14-43c9-8648-e00e6f6b26d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaa085a-2904-4b1d-a3c4-423fcff430d7",
        "cursor": {
          "ref": "22f26933-c1d7-4bea-8ded-2dbe1f310c77",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3c40ae82-3a6d-4577-87e0-5d46a9fd5195"
        },
        "item": {
          "id": "ccaa085a-2904-4b1d-a3c4-423fcff430d7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7617188c-98d5-466c-90ed-0d5fee7093bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d4d415-375f-4cea-9e20-bf9c7f81829c",
        "cursor": {
          "ref": "c0bd4285-1c1f-4c76-a09c-6a8aaeac0f53",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "92a00c95-469f-4ff7-8f92-2c2f6d16c6a0"
        },
        "item": {
          "id": "55d4d415-375f-4cea-9e20-bf9c7f81829c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5653e9b3-4fd8-4a44-b10d-d45142fb6e32",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f06a9a4-e731-4151-97d2-da737ae193b3",
        "cursor": {
          "ref": "676befae-a683-48f7-bff3-ca122c4f5375",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "95eeb3ab-ab58-4a9b-bd27-a21f1e35c512"
        },
        "item": {
          "id": "4f06a9a4-e731-4151-97d2-da737ae193b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "999d54dd-64ce-42e2-a8b2-6a597fdebdc2",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4daaed-613b-4f18-96ab-3c017c586d77",
        "cursor": {
          "ref": "3c016444-9448-44eb-9f7f-3c79805d9f4d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a0c8981a-86a5-4336-81d2-06ca86aab383"
        },
        "item": {
          "id": "3d4daaed-613b-4f18-96ab-3c017c586d77",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2d0b081d-3c4b-45b5-870a-c3c0342e0800",
          "status": "OK",
          "code": 200,
          "responseTime": 1313,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ddce67-a00d-42de-b6b1-a342d9677a6c",
        "cursor": {
          "ref": "e98cef48-a730-455b-9e9f-7adb43c4d00a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "93b004d4-d5b8-4682-b89a-d3119192286f"
        },
        "item": {
          "id": "e1ddce67-a00d-42de-b6b1-a342d9677a6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24cc2607-b721-434e-ac2f-a70379ede572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ddce67-a00d-42de-b6b1-a342d9677a6c",
        "cursor": {
          "ref": "e98cef48-a730-455b-9e9f-7adb43c4d00a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "93b004d4-d5b8-4682-b89a-d3119192286f"
        },
        "item": {
          "id": "e1ddce67-a00d-42de-b6b1-a342d9677a6c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "24cc2607-b721-434e-ac2f-a70379ede572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34193b73-5d1c-4572-993d-53b48c415a10",
        "cursor": {
          "ref": "83a0a1d6-f469-4614-a73e-5c283a3a0ae8",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "52c35447-7775-48f8-82c8-5d30b7c20a89"
        },
        "item": {
          "id": "34193b73-5d1c-4572-993d-53b48c415a10",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "29b24331-4f06-4581-a010-dff820cc2564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6247f3-e67d-4d4a-9bd9-2c8da88c795c",
        "cursor": {
          "ref": "cd7b52d7-b55e-4474-a4bb-660865ae8dea",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e712530c-efea-49bf-b6fa-bba99da54c93"
        },
        "item": {
          "id": "cc6247f3-e67d-4d4a-9bd9-2c8da88c795c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6cd45f69-0e92-4f06-87b0-d4d4155dc46a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}