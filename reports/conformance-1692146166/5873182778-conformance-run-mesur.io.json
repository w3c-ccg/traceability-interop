{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "49111078-30ce-4add-8472-670305aba309",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0b0c3ed7-fd8b-42a6-aaba-d7ced1d9e3d6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "54b79d8d-1010-4fe7-abe2-658dcfa50a7b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cacaa012-92d1-4081-b228-4de7c0cce46f"
                }
              }
            ]
          },
          {
            "id": "8b2b8785-acdc-4d96-b6b0-b500b636998e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6e80197-9095-4864-b653-b09acc31923a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "534195e9-6c98-4892-8e78-b1cd6f8208e5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a152b7b0-4da2-43ae-8986-a8ceaa4240a3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "09ddac04-8643-45ff-b115-122a8dd1b842",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d1df065-f8b8-4448-908e-2897311f57a0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43d90bf6-5a5a-46c4-ab0b-fc26e115c225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19c79a42-f872-499f-b238-0f08cdfc95d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51b4732a-8376-4d05-b928-2c2262904764",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6ce0653-fe34-4475-b82f-041a3361cfa6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43e61241-0b5d-42ff-b5d7-79117a9359e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d34c882f-adba-43c8-bb0a-1cfaa0f4c80f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30d66f67-b230-4b9b-9bac-cf06d5787f73",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ef1d4546-f3d8-4952-a0c0-ff271c673927"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62ca52a5-cf47-4018-bda6-1103f87bf0e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "428cc012-e939-4a6d-969a-a25b05ed87cf"
            }
          }
        ]
      },
      {
        "id": "3d8cc1c7-cbee-4f1d-88ca-dcad8f0736ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a7b8783a-c4a3-40b5-9bf2-bfac431e0f82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da32dd9c-aba7-410d-90ce-500f3273302c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5dc4904c-dbd2-4acc-a051-ef0eaba2adb0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc176a96-fdbd-4a65-95b2-e6443e54e6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b927e44b-9885-4bd8-aef6-0427484a3161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9998dc4-2b1e-4e2b-95d5-1a32100dc411",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d21fc56-f0d3-4f73-ac3d-49bf71c1f626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "069d0093-caaa-4f2e-bac9-9b9eef3ba59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2457eaaa-3a89-4994-8f55-a2be33653fae",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7a52b8-22dd-466c-9b1f-b59a68db21f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cd4e89d-5985-45f5-9d03-826e1e83d1ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "daa6dc49-269e-45de-a8cd-cb0ece667418",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35f6e0c5-1262-413e-94f3-fac718c270ff",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85617d35-fd1a-4664-94ee-3e4571a98026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "048cb801-4333-4579-b008-658f0a6223ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dab7413-6d7b-4b5c-ae8d-1852db007e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afde197-9e0e-4cb8-abcc-95551530b0fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6327a3b9-3e40-4eae-aedd-9b51c1dbd530",
            "name": "Positive Testing",
            "item": [
              {
                "id": "edd6adbe-98f7-4bb1-87f5-65489bf74edf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0652d6e-20e6-4a5e-8613-c8921fe28cb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e3232cd9-a868-4bbf-8a05-32e500ffb492"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db68797-aae8-4c64-98fd-0f663d2799a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d9528f43-6495-4f22-a4d0-70e1b3bee802"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "513a90d0-1a54-47c2-9b1d-caef57570b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee5c652a-0c21-46ff-a962-d131dcbb9cb6"
            }
          }
        ]
      },
      {
        "id": "1ca4892f-29d7-42b5-a57f-88341f4398e8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab400d0f-c2d7-42a4-86d0-653e85b80fe4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36a2e21a-5c64-4df3-beaf-a6861eb5319d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2e456efd-ad2a-4f66-b27e-3649597d8416",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e95457-993e-480d-9979-3294f5a96605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d9ad6b-e0ac-4a0c-b10d-600e059a2492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a926fd-61a0-4bf3-9040-8a11abee0d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b19c046-5e8f-4164-be43-f9c1f008863a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d73d57-465d-492a-b923-7c285561730b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5e669f-24e0-4f27-81d8-2097f6ed4923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f728e8d-a41a-45a9-bb28-5e6c82ed8d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c6f65d-8c63-43e1-a57a-c2a75595253a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a5ee9e5-4fc3-4f8b-8d81-20dabcba74c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337dd175-0c11-42d5-9f44-87c67e2cef4f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3f2f65-01a3-4736-aba3-9aae246a3386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c16d82-4cfb-46c0-bf44-4ebaa79f45fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2176d6a1-47f1-4126-9088-22a1380c8190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2efd4e6-ee0c-48ef-8ff6-84610a1d4eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7378d835-08c2-42e6-9b9c-ee7970cd0bf8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3994bb-2046-496d-9b3b-ef0fa513a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1f58e4-4c9e-4ad5-bafc-9037fc699068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe9c0b3-31a7-4cc7-b05d-03207ca65357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151a3fdb-74bb-4977-8678-54b61a805c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b77981-4656-4a57-a113-6c394d7ba555",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650d605e-34ac-4189-8380-b51f1c05e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3752bb-8fcb-4f15-981d-7d2e110023bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43bedb0-f164-4f7a-acb5-1e0e9c63837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8edb108-0ff7-47f1-83f6-136b176441e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc50e5f5-5548-47f3-b509-d7fb68faa155",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea18439c-7ca4-40f9-be51-f09223ca8ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4a8eb3-49b6-4765-9fd8-b27581754056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f139237b-5765-4294-80f1-e4d60ac30c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c858f7f-b608-4014-b39f-c86612619198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e19f1b-b663-4980-843a-e69e97ebe213",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9e75a7-41cc-4256-a868-87b465d28c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5538036-85b2-4594-9edc-ace7c3e7ad0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34afe8ce-ea16-4233-9b98-7fb9d5536970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a370f23-3467-4807-9b50-d10951bd9d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995bb272-f837-45f0-90f8-1c5690cdc660",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631e0e67-5c39-4ee9-86f6-2e2bc871433c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d615893e-386a-47a7-9408-eddf8a8265d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5a0660-adc7-40e7-9b74-e7424cfdc76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "337a59f7-0a7d-404a-9f46-66e3ebb72fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44783831-9624-43a1-84a4-f2bda53d462e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7ed06-dd84-4bda-b4e3-48d24dfd6c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02cec009-b165-4cc3-9e84-58631fe64f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dfe9e4-a506-41f4-a567-e985a966f6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "446284c9-1bf8-4ed7-adf8-5229dd0fd7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fe39ae-4a3a-4166-b3a1-f19b1d0c43a0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b10100-f61e-42ad-83b3-efca267225b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fee26d-4120-4db1-b036-554ac8f3afe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c966f999-a220-4b0f-a97a-0807f9655b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b8178ed-d6ce-4ef0-b0ee-0b5962f15a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04649f7d-62e4-404d-9912-6d3ab173569d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f92a32-2a07-4660-ad8d-c9a379877811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14d4d42-268f-4c6e-83db-74435ee3b880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9f46fa-3630-4aa4-9b8c-0621bd884a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d68d0a3-ffc7-4c88-956b-0dc45330442f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33b9aa7-1818-4b17-9e8b-745a420183c1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58bba93-c8ae-48bd-a531-f96bf169f2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e81a6d3-bd6b-4e95-bd18-9f5119dfdba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe80b2a-2c42-48e1-a8c8-557aa93bb66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c805459-65d5-4b7d-82c4-c20012cd13b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b29f2-5af6-4d59-8f33-2f5f05c86a41",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508c4bfa-dd94-4bdd-b891-8c1ec72fe7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedd590e-0303-4ff4-a5ea-b3f032acec45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85921a6-7a3e-4d01-a22d-1b33564979a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9167a7d2-8e83-4fa3-b422-48fed9efa1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ebc48b-ca3c-442c-aa30-463d7820c943",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79430e04-a34d-417a-a65b-c31ec01cb854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e189909e-7cf3-40d9-9245-060f321db7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557bf45c-51bf-4445-b4d0-e0464cbe4eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efc6abed-139a-45cf-8055-e4dd4331c08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc794aa-6ad1-4a82-9f98-403f5bdcdf11",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736b581f-a84e-4763-92c6-a23ea7a8a7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada339fa-82e8-4c98-bcc3-11616f0f1d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff62c1-c307-42d3-a609-89a87dcd24aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d49d030d-7ba2-4e4c-b661-3b8960130775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6822b447-d529-400c-949e-5c62e7ceeb68",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95468e1b-b1bb-4d05-bf7b-6b9a182fe884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3e9dc87-f51d-48eb-86b6-1ae023f22b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bbb713-55f2-4de8-a913-9457bcd6ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de5bc1ec-b5fe-40bb-967c-c955a17ca593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe149475-c36d-407a-80f9-04d764b4dd06",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f88dd8f-afdf-4984-a0c7-d7bbc70f8783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b8380f-74cb-467c-b043-908d7a8dd85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8529242c-56ce-4a38-a5ce-f98af618f8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98951487-beb4-47bf-88b3-552a2952cd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b064f7ea-87c8-4d43-a044-43590891a5ed",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72969e9-18a1-4612-861e-35e791938e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1597e9e2-7a86-40d1-837a-8e6fdaef5dbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fe5947-d4bc-4f3c-a562-a0a9b820d52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4a80e3-b6f9-42d6-8463-8d651bfa183b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a802cef2-9072-4f17-b1ec-c57fdccaeac1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a23b48-96b8-4426-b104-e2a532e9291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3359b181-2aa1-4314-bb19-5f58a3329150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0156bef8-1970-49e9-898e-cf085e04d30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74face2-6f67-4c18-bbbd-b629a14b5608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d927c3-0d07-45ab-a282-01c0a42a32d7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5048d7-46f3-4ff9-92f8-ff7b5a008733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c1fe72-b2b9-4463-a72a-bb4158733b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252501f2-e633-40d3-94a0-fb5aaca1b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b34f3c-631e-490a-a4ec-44d287ca9fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8804c9f-1200-44a1-b79f-e524a52afcb2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d9eab1-e66b-42c8-b1f9-f2edd11b381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d209cf-6e0c-4688-8759-643775b842a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402c5c0b-d668-4f67-aa72-6334fd6b0373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc5d429-e36b-4e9a-933e-779099014df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b58d52e-be5f-4f26-9eaf-1217e00c0c9a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3d75b6-f48f-4677-b543-361de7c19e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4358139-cf0c-47ed-8337-b6884c6d6875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81685a5f-8461-4c74-aac6-c8fc78f8c24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "207f26e9-95d9-4511-92d3-f5875aa9d8dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c59947-36ff-4f19-8273-ebf71805c6e2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537b5d69-4544-4c9a-abab-a767436cc25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5132692d-a3a8-4c34-b323-3a2ae617d4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b096fb6e-970a-4bf8-8354-a856b4dbed59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "460dd842-6ccb-477f-95f9-2b8a935f3fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdac55d-6efa-47e2-9c7a-bcedc7404c65",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574b6ad9-e5d7-41ce-b8e3-c5a72aaab6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38def11-fdc8-47a7-a6cb-653fb1440ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d2326a-a108-4148-9ceb-903d81df9091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e926d301-36a9-4e00-a76c-1f5adda48534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45d8cbf-64a4-4561-b378-316c310ca02e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6572a6a2-645a-4257-8722-5ba97738b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5e3baa-7f8f-4fdc-9a78-4b8b8458fde6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852c1398-2cd0-4fea-8d9e-9c88b3a1df87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "274f7634-1642-42c5-8bf9-37a1d5ec5ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b66865-4199-4323-a020-c63f067bfbdf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0d1a63-1bc5-4f85-9dd3-891af5120bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "260207fc-0a8e-4e12-9ef0-6719068421b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03c0e8c-2700-4dfa-84ad-02db32f3e3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71819822-5f88-4518-8ed5-e5ab2a1368f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da8473-c593-4c4a-8319-5027e60589eb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e0a8f5-b93b-4088-9c11-403b3fd6783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8070f80c-3b88-44c3-86da-5fcbfd74213b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30825c1-0719-459c-922f-5f822b5c30b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd9b68c-0c4a-4a5a-a083-641da1fd0929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25942fe7-2ee1-4cbb-8e70-830a5050b296",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5862f11a-e935-406f-9156-d84702cdfd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4f158d-8053-47fc-94c9-2141d65073c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455de8ec-a448-428e-8943-bbcfb00bd74f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5630490-d4da-4c07-9830-464ac4af9932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e50d712-ad91-4938-b722-3c567429e96a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8abae1-d0e8-4bfc-b9fa-d74d6a2ae1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5651d3-91dd-4f4d-86c0-c941c7958afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0476bccb-d999-4210-84f6-b55a17656311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3581af0-60b6-4a53-8033-6f25100bd354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438f2950-d804-4128-8cc0-ba346c41b8d2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a78d3-6d16-440f-b08f-f55d006fbdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fa3f6e-ef8c-4e92-938e-d773590eede1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed384596-15e1-4dd3-a22d-c6924a1733ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4480c53-d4d6-4fe6-b18d-e4c0c28fc849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c23e480-c777-4583-809d-775fb226ba17",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40661302-eef1-4703-a46b-3efb011ca811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbd2214-a3a1-44ee-acc7-d089a3948b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97542bf3-362a-49b9-8b43-ecdf5af94408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54fe6fbc-e4f5-408f-bb2f-7400d5187f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da6a76-87f0-4d58-bc17-056338cb65a5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04590a2-b94a-4d1b-810b-46d47c46efbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d835a23-2314-44d4-b201-4798da124b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c596dc-d811-427b-b4e4-cee715c4ac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f209d2-02ce-4464-b505-589d7758037a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1496bb5-27ab-40cb-a763-db8db38d5587",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18962e5a-04b1-4d90-9777-c0af158c39ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebab2de8-aa0d-4b5b-94b6-df751f6feed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64255fc4-2429-413b-8e52-db92bb0e71c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd59c157-80ce-41cb-8316-429598887a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06384ac3-977d-4cbb-97ee-b4e5e74dcb92",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b32349-f8c1-44d8-a8d7-678c5ef1724b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9eae20c-ce12-4b58-ac0c-e79f8aec38fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7e7f97-0169-4cf2-9309-bd618466c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00b9b5ed-a498-435c-8745-7eb5c380c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b8f30-7366-4dbd-a519-479a5282bb8d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29ed736-7a95-4134-83d3-990c92ab6ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619aef80-c3ff-41cb-a132-cf260fba674a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b96a5e-4abb-4577-ab6a-5bf8dc63857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "005f17ea-772c-4768-bb9c-8399a388e6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0495140b-6521-45e9-bbc4-6a41fe941e28",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910f95af-f39d-4ec7-af65-0ea4e2475036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "621b6c1e-b0cb-4603-a426-5246e3794095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa1183-5415-4b8b-842c-84bd0a4edc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "726e9a42-d905-4e16-be0e-62979994bdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72129f-eefd-4928-966c-907ec53ba98b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de482198-d431-4cef-a545-a768f474c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d61da00-7262-41a6-9dab-08bc4bfaefc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489b3be-ddb4-4154-9af0-2f72bf2b9b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a46a1ca5-16dc-4aca-a6e5-ea57273294ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db33ee30-d01e-4aa4-a676-2735d230b953",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ee9bd6-87b2-4aaf-bf5b-d0edab6541df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acaf0736-9d32-4c85-b6b0-f96152dafb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bb00ba-67b3-4ae6-bd1b-43fa5223a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9129c063-1cbf-4606-bed2-410ff382f557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ed86bb-4cc7-481d-88ae-8e3a307e8887",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaf55ac-160f-422a-896b-8ac17a4167a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb1227e-1fec-497d-a906-1f41856c7f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ee57b-833f-4de1-b622-bc05bd4f23a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1aa2b7b-941b-49ea-9bc1-d2682e975efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526dd477-21a1-4464-b204-a71c9c109ae0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3967fc77-92e8-4926-aea6-243570cf723d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e8ea96-3a40-4450-9b56-c6671275b9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ff7a57-88df-4a26-befc-fc5a607a56d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2534dd-afcc-4627-b1a7-5bff04cfe9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6b6664-4115-4d12-b0c3-ab482eeb866c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04f49a-34cd-44fe-9359-d7e742db7e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351a2641-0c10-4ebe-ad77-77eb7f8b84eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7c5268-831a-47fb-ab7a-232ab88cf0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "17189743-7b9d-42f2-989c-438878fd763e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17cb2f3-e4e6-4680-bff6-886ce7dbb589",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c9137e-913d-4da6-819b-a060c365e552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42a8182-84af-499a-a3ac-5d060ade982d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01f0000-e1fb-42ed-ba21-f62b2344258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d98009ea-eb17-40ad-85f3-ba5cda926590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381191e5-ec53-474b-9061-09604304d865",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435a5fff-0e51-44ec-94e8-f1d54e6b77aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e02d63c8-527c-43e2-8dd0-6f2981fdfcea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d216e7d6-379a-4a6f-969e-dd306b8a6ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31b8293-6d7b-431e-8bfd-f4f711bee742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b063a650-23de-4db5-b656-9921cdf6dd2d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37443e01-18be-4c6c-9fb6-addad9d65c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08bc1f7-9421-4c6f-900f-17c788554e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf544f0-20bc-41eb-9404-94a039ef0dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d449972a-a8d9-42cd-bb4e-d68d19bb927c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfb8776-9109-4e5b-a209-b23cf470d125",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61685fa6-6a94-4d81-b7a8-a8d7fa432b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9b5c72-4d8e-4add-a9a4-850770e495bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5775949c-4152-4701-92fe-430295af206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ffca73d-3091-483e-aa91-427cb3273fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5399b90c-9465-42e4-a2ce-e4dae69a1adf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3523c2dc-a04d-41f2-817f-191246a2ba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f966d1e1-07ff-4dde-b09a-0e13c1a7505e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e72184-28d5-44e1-a05f-c43df94db221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae833fcb-5c6e-4fc9-90af-988eea5966f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631dde26-52dd-4e7d-a339-bd7f97cda194",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12200ab-4f2d-43c5-98a5-f58b5d50bf65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024aebde-f3f6-41f2-bdf5-4af7df03eb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc58a6a2-b088-4edd-a784-20c43db75137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b8a14a-2507-43a0-ad4d-75e2379fc0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d79865-0ee5-476e-91dc-18f46727c980",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96629f3-acd5-4542-9dd8-fa66060e68bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b3eafb-dd2b-45d5-b9a0-c09445ea746d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2b63ce-d623-4ade-931d-193db28802e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75c5cf3-9f18-4efe-9d22-889f357500f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e4ab3a-6e8c-4f86-8fd1-2296ced6f5ae",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1990ffe6-3bd2-49a2-83ee-d5f54b18f327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a586ce4-1477-4401-8bca-5f36a52f1476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d7c8e-e2f4-4058-afd1-cbce6ae271c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d10452-da26-435d-9c0b-8a180fc5b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193a910b-9e30-43c8-9bed-7602663e6646",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75ae1f3-5b1f-4a2e-a361-9844f3d4e962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469fb362-5a5f-4539-9297-5777de41d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca40a23-0b36-4541-8d08-357b378a5624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9fec1d-a396-4182-9967-0bdd03878fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a714f4d-1b6c-4435-8343-d9cb317e69e4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf88835-0bd2-4a6d-bff7-23eb07ff6f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c844f5-20ab-44e0-ab4a-d122fd155cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e428b2ab-61a7-4ec5-b161-3763bd55b68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0ee9de-de86-4ae2-aa21-d285b071850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc214cd0-eb30-4b3c-83a3-12f08f2a2146",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beae4aad-c114-45db-a893-d8849e28a5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afc065d-35d4-422a-b0df-e683a175fce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5019360-5113-49f7-9c1c-4b69fc133f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "293f90ed-e1b3-4b68-8b0c-47be7f0beccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83962ec5-4b98-4a46-93ee-6a681411794f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc30ae11-ca07-405a-aff1-5ca497fed8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c8e4854-5c0f-41fd-8bca-a03ced4099ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef51040-10b9-484b-a4c7-f644a923e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a8a20f-2e57-4644-9367-ec67ac532ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1f7a51-609b-4625-80fd-a7c343b55543",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ab1c8c-329e-4b19-ac83-28c9045b923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19118070-250f-4c20-aa70-a10167a4d497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce2206-ccff-4c08-90f6-cbb61d0f1a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62bbf629-18cb-4bab-b86d-16bf29f1bcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7152b4d0-ce37-4a71-9ce1-08eb7e2fc4d5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbe7735-9f89-4edc-87b5-f34c3b00796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8461e6a1-0892-4346-861a-0c0d59ad38de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58540e6a-1d26-4e36-a0ed-a578aa1ace10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "582f69f6-8fdd-4011-93d1-9c1e9dd2d024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2682046-78c6-4caf-9bff-c07f84bcddd0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1271d279-336a-46b7-b805-48bf1661e628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "601ce0ca-4340-4c67-be4e-28e42032358d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580ad520-8847-4db9-be70-0084c4b5334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c4c6a4-6fca-4031-bd12-d350ad14aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b6b40c-95cd-4585-aa3e-c7a711276764",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e53e0b-f7f8-4fc7-bbed-8ff463cdaae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f4b77f-0441-4353-aa58-aff4234710cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7737ebd-92ef-412a-b880-5dfb04d43c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e26f14e7-c30d-4b70-86a4-c6fe0149378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee4c4e1-166e-4de4-8db6-bdd689060530",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e1228-f2ab-4bd7-94b7-b3576ffaf28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1da52d-fca4-44d4-b0ad-e2cf3916a016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8343cec1-5e22-4019-998a-7cfa930553c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb03fab-6fea-47b2-ac74-fc665db76a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46af8bec-30ff-4f03-a35f-689bff38a067",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e090be0-4c37-4c07-a306-eda2dfafc1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd39a99-fa43-4abd-8c97-99feefecffc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479fb086-a182-4b74-ad10-28e1d240b689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6267a73-7bda-4909-9183-1a8044de7522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9124b965-8de1-462d-b1bb-31466fd6948a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f27cf6-a6dc-41b7-bf01-8ba3255d227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2538cc3-2504-4d32-bad6-f8925ca5e7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d0598-d956-44e9-aeaf-081a86b7805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "59c6dde5-9106-4aef-a499-bdca8fb9ed2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c67a23b-25a2-489a-bdc1-bcf943bf4270",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f791a144-9aa1-4146-9b64-8d7c0c1c8eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f915ea4f-d939-4de6-b333-75ee003e7a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728f4a15-a854-4eff-a0f1-ef7d2b5b45d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce96286-e563-4560-ad16-2d05fcec9054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5335bb31-096e-4cb5-a9a6-75cd5e5e02bc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18de01f-e3c8-48d5-86f8-44239545bc7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9423dff8-91ee-45d0-b494-832d1ef0c370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c27331d-2f3e-458d-ada3-078a9c730d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa31f1c-4a2b-4cfa-aa9d-eaa3f6cb3356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b279c8-5723-4a12-8bb7-ea8d13c1afa3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40325d5f-f82a-4104-8a18-992b4dc5d02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aac8329-76dc-4cb8-8987-c4f66988e439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae22f1-99f9-4e7f-8f7a-f64fdb480ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8755bd55-8d84-432b-860a-52a45aa78ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbe0fdb-b3a5-4fad-af18-6384c93b0144",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d575da0-f987-42be-9435-a1ae4e6eb34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c9b347-8fb2-4798-8928-5f52549e21b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf1c3db-1b5f-4cf9-a82d-26a675bf0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1984fb-4000-46f5-ad1c-9ec270faeb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f249005-7140-4574-99ed-14fd316fe642",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d8685e-3576-4f22-8390-efddfb7f6010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4eaeb9d-2ea7-49dd-9390-b78a2ed2a2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22f66e2-519f-4bb6-bd00-7075a5807613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f01ea315-3f49-413e-a084-90787b78774c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204f9760-c89b-407a-a9d3-3dd774b25b6b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ec1b916-89b5-4d44-b27c-e0183db765e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82008fb7-f223-48af-9f82-7777a0998fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a913d9d-9b48-49ab-a255-335cbc39a8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e834a8d7-bf29-4b71-9373-d08150bdbc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea44fc3e-5a81-49a0-b261-a41965f173da",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67b481f-6460-4810-860e-fe27c623b98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf64155-ced5-448b-829c-484a5a205346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae26bb0a-159f-4fe2-8446-719ff790327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad324b0-6661-442d-bc61-d8cd7da31e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b8c7e9-b4e4-46a4-b2d0-69aab689a9d1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b352c003-077e-4aec-af2f-c772a67639e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15d79e8-fe53-4543-a47a-c287b4699872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4223fd36-3559-425e-becb-3a7f29782634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "992f1e85-6062-49f0-9a1f-e3e35319d83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267a2d0c-1caf-4242-9548-ae7839ea7046",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8f8d6-0985-4199-8f24-f6112717a2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25a3e27-25c0-4a88-a73d-147d1c2f6a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685e1ee5-4ab1-48eb-aeb2-d7e7fa220e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc543e0-c422-474c-a6dc-23214f1d3589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97493048-5b51-4005-a859-341ec961d30c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfccc6a1-a1d1-4d56-8b21-7677f5c14932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e3a96d-1cb3-4e94-9505-bab9173a200a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b512f98-a8c2-4602-8f5d-03099ad77f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "913e7af9-0707-4b2f-9204-0e7719a677c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e6425-f9d1-4344-b572-2f065c35a52b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2d8638-79b5-4e39-a8a7-1d9b1f2f39f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d46484b-84d8-439a-8004-4a99ba0c40d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b103183-dda6-46c6-abe4-c55190ef221d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85ebd1cc-61c0-44f4-8a7b-772a4c594d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c39f06-5fd7-49e4-bb51-0d53ccfabfb7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546a6f66-e7a7-4250-9e97-3f716c0d83a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0301eb5-9d0a-43f1-8a19-449981d32a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02cae8d-ef2d-4b24-be0d-bfabe7be04bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e38ebf-d7c0-4f68-b363-a8a9ae0be768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bc51f7-f54a-47ff-8ecc-ab26cc9783d5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590da84a-8c6e-49e7-bdee-e06904f98901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3e74f7-6070-4356-aea9-9b6784907041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925c551a-38ac-4e56-95ec-bc623dae4b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40238da9-0bd5-4c66-97b4-0c5720716318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1459a723-4970-481b-a045-18a909d032f3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7808c050-2861-4d09-beeb-e7ac784e16db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bebf91-bc80-4178-9307-df0e9770efc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05df4a1-09bc-47f2-87f2-edf0fb5a63e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e546e743-f31f-4248-9aa1-fd8978d0cb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23a9c9d-29b4-4675-a124-1e4a5fccd525",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21aa971-b0d3-43fd-ac8e-c4b4fc6054f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232224af-5d12-4042-b0c0-7a4c701cd5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78b7c5a-0617-4739-b524-6e92dfce53f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "560f8c26-941b-48b5-97cd-a6aa5bf1958a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5f49d1-6766-4475-99e8-c8e144f9c6e6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3a8661-2135-4d0d-84bb-b098d45ec0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ce90ca-d2f0-495e-b3de-d59eb8f2aac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd842365-ab20-4f51-8d5f-3fd3fb029bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e22a01-508d-4c7b-a97d-efa18fbc5cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1b9b1b-7ae6-4200-bc9f-b22f35c680d3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a6b49b-fb43-478c-8210-35e2675a0ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dc717a-3e2b-4c10-b391-0e49a67c735e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c37c9e-62fb-4705-9b0e-953d3d0643c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "624d94b2-d0aa-4281-b188-7322c9cce2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86350ebd-090d-440a-b019-20b0084a6a43",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073005c7-aab0-413c-98b9-17f131e0ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce16630-5b34-4215-9ce4-2b2211f0636e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a330622-0c7b-4e78-b603-f32e50ed89aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6eac21aa-1c6e-4ea5-b6c0-b5a21a17eca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc67a9cf-7c6f-48db-8534-2cd1bbf576d5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6074f0-dcb1-47df-a71f-95c49bea19c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa49822-0f4f-4e69-83ae-dfec52d7a83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34a1b08-172d-4f3f-97a2-fbd3310c71e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9792d0-5fd8-4638-a3f7-44fe1af2514b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38dd59c-7ac8-4ae6-a775-2c8d9e417c93",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13564667-cb5b-438a-8182-90f5c6d9b101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e24328-9482-4a7f-8edc-90676e16f9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8559cba9-bd57-4c36-8c7d-14dcc06b4597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d293ebda-4d02-4734-a7b3-ccd794ed5665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce15a092-3697-4b14-be42-9d0f2059649c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44cdf0b-79d7-407b-99d9-a8c032459d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efbe4c0-35b0-423e-86f1-ce5d439a67f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c91735-8102-4a61-a044-a9b2fb486594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4607282c-8081-4998-b228-209ad2c80baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4a131c-3638-4d89-8123-300ea64a4d79",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1614c5e-6fca-4c29-b054-d565228dfd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73f01b8-d69d-4964-bdea-f2ef1509248a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7df1a2-3fd2-4cbe-ad6f-8597a5ab3167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d26a737-d517-47a0-a54a-b4a6144e1fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e96f968-7b5a-4507-8e4c-ad503234d3df",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d904584-7d5e-4b43-93f2-05392591bc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6527a00e-f17e-4493-bbd9-6c2840f33287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57c2ff4-2a81-4cc3-aea9-1dc158514379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a9ad4a-94b3-4b2f-a3de-6888bb8e57fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb0fa7-b71b-416a-b500-a5df101f9c29",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7a3d31-ed45-4400-8a31-bedaa9102fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872ff5cc-4515-4757-be49-3dba3b6d244a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9e5d11-19f6-4c0e-86e4-4fc9028d134b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee456c1-7041-41f0-86d0-7255533136e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51cb3b0-dc52-443d-9e7c-a46dec253e64",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b729b8-e926-4883-9948-3cd1d11a7e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b4d7ba-4a88-4fa8-b237-e64556ebafdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d282f2-820d-4095-80ab-d5d3f9d3b203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed36e16e-f6c4-4053-a6d3-a32845f97890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374731a4-6aa3-4110-8f46-a70a89d38f14",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39505d28-4381-426c-bb10-c14694af7231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dae1e3-1f01-40f7-965e-01c536c5c4a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b1ba50-d83b-4469-b3d0-1545332cdebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10e9c5f-2d7a-49d1-be4a-be8aa108c8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6385b052-e1b8-4238-9b95-13af984a4d01",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee55fe8-bc7b-405a-a50d-78c67b98bd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab5ce9ea-34dd-419f-9432-b3f349afde0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e1badd-4cc6-4972-bf82-e4fbeac974c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "75907b25-1128-4e34-baa2-1de084085102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7d3d6e-42c8-4ced-9d32-05f44ba4f042",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba1e449-2241-463f-a7b4-33bfb6681032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51776172-9cc5-4dbb-9ee7-d4c4b4bc0633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac20890d-b06f-4109-b35a-db1a02168bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "32f1a826-b8e3-4804-acbe-fd6bddc190ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8150c46-c3c6-4c10-a18e-297e86d78e6d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e5416-5e31-48b3-8852-2ed7b969a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5e71f6-434c-4a32-a80b-eae7089d4555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a5f336-2697-4d56-9583-8446940a63ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c9ec38-1ece-4433-af6a-36da51a916aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a663d13-064a-4ec7-b325-6499df65cf10",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce412a0-eb4c-430c-acc1-ee92dd8649ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd24b8ca-4ff9-4589-8082-f688a44bb61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c12386-57c2-499c-aaed-a12a94a4b13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9189ef1-cdf3-403d-a600-0a8aa99cf33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa0f98f-b205-416e-9a09-239c97276388",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec99d68c-4bb5-4005-8b49-5572b9f31ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aec4e2-3a80-41b4-9d4a-f4bf3d1a980f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05af0204-93fc-49e0-afe3-9d6d57b807c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2f6216-0f02-4a65-8c67-30ce6eec8898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f967f6-5e79-414a-9c8f-7fd1a407ba9b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c28bf3-bc4e-4e90-8706-2033ee5ac8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "996995a8-4dc1-4a76-9ceb-2dbfeb18bcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4a1fbd-e02e-4559-a31f-e77d976664fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6386bdb1-b414-47cc-aafd-c6c3cda7705c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db0d8b8a-dc85-459b-a75c-5b9dce753eb6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77b4c9e2-0970-435b-8e8d-f30b4e241e0d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260d3af0-ef7b-434c-8a6b-ad035c234da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "860a2e63-f4e0-43ff-9278-44bbc8d54bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9300856-3016-415a-8755-8aacb929be80",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "587d0900-2f95-4ac2-9b2f-8c136185331d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7d9084a-ecc2-44ba-afe5-6b24a448c1af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bf4f08b-7705-46fc-9830-28e62f8b3f21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a494bf94-bf6f-435d-8563-66716a920dc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e3c74ec-8755-46a4-b8bc-7f87b5ab2b50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6c11f7f-8c82-47ba-bb9a-275d6cd585e7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7818d963-0a3f-4bcf-bc9d-00756bbba94f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5293ab32-9167-425e-be8f-033d98b04282",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24442346-d8b9-497d-9e0b-374f2ef3a9a8"
                }
              }
            ]
          },
          {
            "id": "e29f824b-b498-49cb-b17a-ccbb0ac301c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bde63410-a483-4303-93a5-c3beba8c1cde",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "19fe0496-a06c-4856-bcfb-2a03bf1d08e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d4be08e-d9a5-4534-bc82-11b770bf8069"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb4e1830-836e-48d2-ac2d-6bf3f1fef5ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bfd6778f-d7f1-4262-a91e-5b33027965ed"
                    }
                  }
                ]
              },
              {
                "id": "58e73f3b-2920-440b-b082-996c37bebe06",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65dc3ef0-8a34-4ea5-ba10-74e9cebe847e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a62d015-50cd-4b7c-8ce7-6fa0acfd384c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86a8d38d-a7c5-4847-a307-678abe90ea5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57105c35-c8cb-4831-a2a3-5950bd90af69"
                    }
                  }
                ]
              },
              {
                "id": "f8991d18-20d8-4fd8-8727-6c20c9834c65",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b75e682c-51e7-471f-9185-b9bb171bb6f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca2af092-1680-47fd-adb3-388d358e3766"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e578100-5b10-4035-a437-dfc5405a77a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f22ecdaa-da8d-463b-8d54-ef676e11030b"
                    }
                  }
                ]
              },
              {
                "id": "270dda24-143c-481c-b6b3-4fe348b7c99b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "903e1533-ad36-4590-bfee-274716b08c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0625eb72-3941-4210-9c47-7be53c7c6157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca348e43-da7a-479e-bf18-18e8914ca98b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ab67ea83-50bc-4258-b880-eed5b3d0cf92"
                    }
                  }
                ]
              },
              {
                "id": "55cf55d9-a8ce-43af-8879-135a728fa0da",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a02eda1-4cf0-44b9-bea3-4b1883244858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c118cf46-861b-490b-b3f9-fbbd4859226b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a47ef3d-e1ad-4b5d-be4b-52b17db71492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3c667744-5bbb-4fc0-b615-b490aa6797f8"
                    }
                  }
                ]
              },
              {
                "id": "067f2478-8781-4b9a-afbb-d270ae1117bb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "600b82ad-d00f-48f4-adfe-85d02b807003",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d820cce9-9ef7-41d8-9523-42b9e0107bfb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e145d1fa-70ac-4a3a-8c63-3d0910ed8f26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "946e099d-0afe-45af-ac29-2f92f9d4c610"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58480e40-6719-49bc-a376-903cfb8335bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c1fcedd-70ef-4666-b010-6c22fbe7e021"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b918ed8b-ed02-463e-b869-1240af3d668c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd3f9bdd-17e9-4f87-9aa6-a596458f9a2b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3180230-48b1-4020-a151-d0269a549570",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7ecd13ae-7393-42b6-88fa-54ee3f072a7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6cddf01-f9db-4cd6-8792-a390e5fed916",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c7ffc7b-79c0-4542-9912-d7e11226f649"
            }
          }
        ]
      },
      {
        "id": "7104ade9-2080-49e0-93b8-0b3343ac7d74",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5b07c807-78f2-4c57-8906-e23cc1c6d11f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64aad4e3-2698-4775-a39d-896c9b7df626",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "279556b3-11cc-43f2-aa85-891a975aa446",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8052b8-4ce8-464e-8f55-545873249623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4451f753-5f61-40f5-91fc-4e1138abc933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0f733c-446d-4ce4-8d6f-5cf86e4907d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ac867d-4076-49b2-a708-b38d3c0190f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba570e8-bfc0-456f-86ea-e298b9aab684",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6837929-9cd8-4b8b-8fb4-6e41108cc336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f22d11d-dde6-447c-92db-ac326ef24352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f618b0-5fa6-4930-bd99-3b8a8fcde245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a7bb3d-5af2-4708-bbbd-8d7828a14f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6aae05f-dd5f-43fa-9889-88aa40abb48f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aeff471-ca08-4c2c-9bd5-7e8f88ee41ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cc3ce3-f65c-4545-a9b1-9fc50c34d184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054f3959-cdee-4745-9209-97ce00533605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3ec494-f4f0-4eb6-9e02-a3f7681fe25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5effc30-a830-478c-b554-932412b42838",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c888a840-256c-4872-afd0-a053d9c98f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52376c02-89c4-43cb-861c-90e4e5f124d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6df160-f122-42c8-82ae-8ab2e036e7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76698bef-5d2d-4487-8150-c91c343be1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e137a53-919c-4d84-93c0-af6ec4c5df32",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11913637-cde7-402e-b81b-9357e84d6b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de351f6-ef50-435c-9d03-b7f23ed7f5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f42821-d6e2-4b5e-aa54-1de6f595461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c98b3b1-a356-4cf7-a8e7-76aa5b470d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5094363e-ee09-4d97-90e8-d87471bb027c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb050ae4-dfd5-4b83-a2ec-6df3d4b8800f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e6a8c4-3403-4606-8162-96b3432ae720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd785f8-5a73-462a-b851-d9a52ef6f0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f992d19-9266-4824-8e57-bf998dfde564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d05d1cc-69d2-46b0-a6ab-1de9272c47ad",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b166850-7e1f-4acb-a70a-bdf1f2ea0c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43379992-811d-4cd3-b9e8-8ba689602255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6115154-5cf7-4aa4-9964-73c591ecda6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e00e1fdb-f209-49ec-8347-7a1ab8fdbd83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb78c49e-e8db-4f19-b3e7-9f0cde53dc9d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "591bacae-4c04-426f-9145-f6e106e4c7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "673efc12-7770-4e26-aed5-665f0f8ebbff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eee2095-c727-479c-8e5d-6233c0457333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "761f0a8f-2130-44bb-9998-b79b09399dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d544caab-f72e-4d91-a160-f89e7341c803",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e43af2b-ff52-42d2-9862-93423caa7f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b2d1600-20b0-40fc-921c-9937710f51bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8dbe60-8bd7-4d27-8263-e7a9227f7535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63532774-dd19-4016-a5e9-299332b0109d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd1bfa3-3fb8-4393-b0a7-dec5d075ca20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ff4e9d-234f-445f-9d0a-3d2e445a0e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b09328-49c6-4e73-85e6-30b64acefc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57499d67-3553-4c2f-b2df-07473a8a57ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d649cb70-1bf0-49dd-a270-ae1eddac9103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fe4858-270f-4872-a8a0-dff6c0871e4c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0b7d3-efaa-4724-a942-4da96883f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b61ba1-4558-40d3-aacb-45d4997c88b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492f425d-3c4d-48fe-9b32-5cc87e5f1035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8e876a07-82ca-4ec4-8e73-f44918e85771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a307c-ee5a-4641-9bc8-acf4dc9b4f65",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b852a631-8061-49c9-8eec-540a73c73bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9e4994-2980-4c41-ada1-12893715541d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80987e90-8148-4c12-94a8-73d18bf4f097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6a12bad8-9171-4ff5-b5ae-93bcb16c712f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b816b7fb-b672-4aa7-94d0-158dcdd17b20",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461f0699-7241-40a3-8879-7c261d08634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1422652-2630-4569-a896-5392f6c40f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef48d05-880f-47a9-a867-e29dfc326128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "811ff830-d2ae-4ac2-a5ee-cda203f3a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d09d0b0-9c88-40d4-b3ee-cd275af36e13",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173f8add-ce4a-4ebf-bc92-8a9d7f1e5aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4a3527-1b74-4efd-bdbc-a3369f9610e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b8582a-4598-4f9b-bee3-b03ffdd5e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd446bc7-d562-4b92-b298-ef097ad5a9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d02522-aba3-4f71-8298-8f52b6aab7db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1adacdf-80d8-433d-8d42-d5ef02218c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa1ea71-a926-468c-adf8-2456e82d688f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e382ad-75ca-45e9-b1a6-08786bf9138f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eebbd99-a599-4338-9180-e9906b35bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618f5bc8-a017-4eaa-81ce-7b575cf5b1d7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900d2245-714e-4878-bca0-7bff202ed188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd8c53-ab79-400b-a364-8a058ed7c6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8584f7df-0fa7-44ac-9471-d1b7d3471dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fae3425-9e17-4761-bd7c-3a0cd7349b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9f79d8-b731-40f0-9588-ebd9222a1d22",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adebaa5-5d58-4fc7-81c9-cfbd4e55e32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf8cfb1-3eb2-4c46-b717-e5db9bf1b354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220f07b7-130a-4a0a-b61b-4733d14a8bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5c3c91-7453-4b62-b65e-66e9bf985b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec898be5-cdb7-47b3-aa3f-699c5d9313c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb16634-e9b1-4372-bfa0-4432242dfd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbcc244-5ce0-48ca-a67d-3e8ce8d4c962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1b212d-b4f5-4569-8692-cfe8e3762ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e24051f-ebd7-408f-bbea-b32a6ef4c714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d082f18-c9d2-425d-a064-3d3a6e233e70",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e098f6-8c80-42e4-bbdb-d1e87c1af324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f46753f-50e9-4fa6-a1ac-92633177ed27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c398a16-2bd6-4cde-b02c-75a741e2a9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea90c0e9-c3c9-4acb-acdf-8b1d925cda29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c63c42b-b6c9-4c37-8338-c45ae1f50b5e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9e33e3-109d-4c92-9422-b817dcc4c465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b779bc2-e526-48c5-9307-7b5d034777ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad027c2-ee7d-449e-97db-ac2d345468c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42734f51-c260-4c93-ae66-c9c07545048b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0779f26e-2c3e-447c-88ba-d0b7129d9d82",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b93ea6-3d9e-4b72-92f2-5e10d10abf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6527c2d5-3239-48ce-9942-5d8e8aa63249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b7116b-c39d-4ba9-bf7a-669b6e6f7b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11b13aa-7e24-4dea-893b-65c9e979c6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256e07d0-93a3-4303-b1e4-6c3803779393",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a779d2b-294a-4560-a00c-a68e0bb1d0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "234a0170-bd4f-4292-92f6-6af8727525bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae830a68-4e09-49ee-a846-3c3f1e341ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "957b09bb-f98c-4b72-9132-bd3b67b440ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf516ef-ad29-4531-92ee-cd7fba52dfc5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e8e75d-870d-44c8-8db0-6d69aed2df15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99c329d-1533-4775-9411-d631d930befe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4035243d-c3d3-4827-a921-d1d50928e380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4cef15-a129-46f2-b62d-024c4ad26dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95264d73-1e34-48c3-9260-a8a85e05b985",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bb102b-0bc3-4fa8-89b3-906cafeab3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980431a1-3f62-4dcd-a0fd-635b9e7a116b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d74be3-5096-4f52-883a-23ba9c038824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb627848-61e4-4e1c-a718-7a29c94e3f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afae829d-7f5c-4adb-aaaa-ad6895cb02a3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5300b23-41ce-49b9-8b3a-af8edcf15f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac9c900-57b0-48ab-8df9-4f02780a7aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f72c292f-cb3b-4a60-894a-340f1170039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7301079-2d1a-4da9-936c-48478ce92867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693801c8-80f0-46d2-8000-ed6f916d7cfb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd1334f-f171-4e61-93d6-5b82acb78f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6404b399-2985-49c8-acc9-6a829156c5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28004e63-064d-4418-81bf-dae43fc35249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "483ffb04-ba9f-4593-bc92-57c3ac6134d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8c6f4b-766e-436e-a20a-3bb29a06e867",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609957a0-0d39-4f73-9777-111ed279cae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def2cf4e-0ef2-470f-aae8-d9e04959cac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea8b05b-b797-4a1c-9cf4-24148fef78df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2256f72f-4102-4e4d-867d-edd3113279c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07656a80-3825-4193-a064-8f34e5787fbc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff44b4f0-12e5-49a5-8530-388817d9e56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd2b8bdf-a83b-44f2-b29a-52969542350d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91644605-7725-454b-8d7f-4dbacb097788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1326a2e-129c-4d2a-ae16-c8ac8af2ac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b61613-24f0-48fd-9cae-daf5dc20e253",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a130dbcd-da26-4a14-9fe6-4ce2d4934823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b49b463-0019-4d71-8404-13800369581f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f9f9f-3154-4826-9882-88df6d0f0f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec4914a-3424-419e-84d4-4350ad1a0c56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446b0f64-5022-4b04-af08-8ff83fecb876",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793adede-f4b6-414d-852f-4df56dbdfa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18553ba-7005-4cbe-a2ef-20b0142dec14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cc70cd-d98b-462a-b9c4-78dc4dda9fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ef880a-4f9a-48f6-aabc-8dd953903d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1062e-d175-40f0-9b63-3ea523bcbb8a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3bdb74a-9edd-40e0-bef5-ba09de41bce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac741ef-9395-4c8a-8a5b-06d4300d170d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c415a16c-7334-4309-912a-ef8d8dd8236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dab97ab-e1df-4bf1-beb7-a3917c3f5357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488637ea-bf97-4a5a-a2e1-b3388e653c4b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9270fec3-3bbc-4f50-a276-b315a8652324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb21d8d-18a9-41bb-af30-662c4e96a50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355602f1-082d-4d58-8775-f11fdb14835f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0771f379-997b-4d01-8b5f-d70692bbf352"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4cb42b4-9e83-4584-93fc-52afe15e43bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b57df062-2fc3-46db-b785-ab572a9d6b7c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c48c75-c75e-4804-a2f2-dc387feaa8cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "754ee504-34fc-41da-9f7d-41267008002b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d132e59d-8bf5-4b05-90f1-3a1590481c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ae24634-3c6a-4b9a-895f-bb3ab675e126"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c488c34-2f20-4631-a65e-d65101cca4a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6067233-2e3e-41e9-9c7a-f1d2c1f4481b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec9eff66-2bf6-4f2e-8088-a87d90157efa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9237e19-2751-4afa-a59c-73b35e50c144"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47f784ad-a951-4820-aa5d-fa1326a0b36f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f4b0c8b6-b42c-4f98-897d-bd1f62061161"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0cd6b0de-c778-498a-b284-02035383cb71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "526f603c-742d-4dcc-bc06-7ac399659d7c"
            }
          }
        ]
      },
      {
        "id": "d8cbc30e-7f1d-4232-8e09-c782f78b3250",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6653265b-d4a6-4b02-b39b-ed2996c967e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04a7f1d7-ef8a-4b09-82d6-b1bd1baad491",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13f693cb-380d-4921-944e-5bd992efefcc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a97a3e2-9c0a-492d-b552-0f281771e832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1e1e42-bcdf-4880-8ff9-abd7341ebdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954efcfe-ceb6-4e99-99d0-9a7b19634c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "109eccca-d8cb-4786-a469-36b6e893cb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b75b20-875c-41f7-9a65-472ce9753680",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bdefa2-aaad-4a83-aae0-bfef7d2103da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83565f9d-bfd2-47f9-a821-b38d65715c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa9fc61-f316-41ca-9228-d86ea992c59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a397780b-6723-4a8f-a99b-527845456820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69967297-7486-4c28-a46c-bae138f5bf5d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed29609f-f8c8-4cab-91a8-16b542bcb8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb02001-570e-4e1a-86d2-2a1f47b20939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd8ee78-a720-4199-b82e-a7f60f828cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7610aee7-226b-43dd-8196-cd2e7e1dedb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84573cb-f1a8-42d1-9b9e-c53f3d124299",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de119dd-c24b-47ab-8de4-49fc2ed6febf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4045361d-fc45-4ecd-8969-2ac454950e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa12f4c-1446-44e6-9b4c-484b2a2ed545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d81fab-0e31-41af-b17d-a66e476d1d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc294361-8f77-4666-ba87-5341a9b0f7ee",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bf486a-791e-43bf-a45a-9c22445878cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7beec7d0-72f2-4ad0-a8f7-e9f0fb3ba29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba15788-63a1-4fc8-a6b3-5cafcc041cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d036c5-bf2a-4039-b10c-eb05402bfb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf01dbf-bed4-4e54-b17a-8e23df810e83",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3493ea5-4b88-4141-828b-98b1b3feb538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69c5265-4908-4dff-95af-7a0dbde71b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ddf82d1-8214-444a-a356-4a958388bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a9a699-d881-4528-9282-2527901ece53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9d1d29-58b9-48fb-a571-eda5dbfe311e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8999af8e-6518-494a-80c2-7cc56e54a12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9290207e-ca14-4783-8e4b-e3c92f8c8c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0225e284-6dc3-4b50-b90a-89be53a94677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f57a0c68-4e3e-49f8-8805-2f303e6b51f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01407557-6ac4-4b7f-9352-04c50b9751f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf09b84-8566-406e-b271-1dfa87a22088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b9072a-6e0d-4732-99f5-d36bc93fe46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc32629-b368-403d-90a0-9108e3872e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70e39928-4dd4-44ab-81bb-17a65d3e0b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42593bde-61f4-44de-9b8a-0875cf09df9a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e07fb5d-53d5-4a4e-b394-52f844361cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e86c91d-1ad1-4d6c-ab82-52ac36086145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d6441c-0b8e-410b-82f2-18f96598feba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bad0615-a518-4f70-b1bb-377b26445120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c1da78-6472-4a2f-994c-2b63aad34e09",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5180146d-7a0a-431f-bae3-0af1888c0717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca3e0dc-3244-4628-a341-f35c45599a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d24ac9-ee68-4a50-aa3c-608d807f5bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e505d9b-55b4-4908-8ac4-4e29af57dde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f951ab9-f2c2-4d72-99da-8799f4fbda9d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87575dcc-47ba-469e-9761-e735634c5f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0557c7e-1a3a-47cb-940f-ceeaa378a98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0680fa1e-405d-435e-9996-342b01f973df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "82349ede-7a6f-495f-a3d6-9d33c95b0643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19705e85-7357-461e-90cb-0e9f70fce0da",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7937c5-14b9-4209-8e23-e77cf5d9b073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e5fd8a-11cb-413a-8bb5-dfd29ea49935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1adfc7-ba32-4209-9b33-895fa474eb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30d09957-5b60-4102-94d1-d8aa2abe2bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd95bbb0-a41c-461d-a836-9272f39163ad",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84057eb3-b717-4b36-8736-dce98bd27d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "896551da-17f2-4dfb-b978-38920c809ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5476c0-9369-4783-8d89-132a025875f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa05207-5ac1-49ea-bf54-38ec5ced09a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de53c4b7-9e6a-48fc-91b8-9759e07fde8d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47af5c8a-3b03-4a86-bd4f-95c2cf449bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c82ee8e-36fd-4b3f-8c72-8bb82e089d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81474c68-6cbc-4799-ac19-d107a0516e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "298ef6b4-3def-4d1a-9d8b-a9c9da9fa216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd13e8a5-1a87-4d9a-83b7-24be90656872",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d7622-6f54-4d6e-acca-574483fdbda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900ab08e-6315-4270-9532-8979fa5ee4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37c5be6-7500-44bc-88c4-79a290d9afc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "57ce54f0-1b55-467a-acf8-04f862f2811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7398d5-444e-4ff4-b2c1-12a3439980ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92da479d-afbf-433b-b72e-e6cb61ff92d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3254ef9a-3445-4fa1-aa23-f425161066cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d9faf0-bc8c-427b-a18a-7e21a8c0b9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed78d3b-12d9-4286-b41c-510439d6a9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64d4d8f-d096-49ef-8de0-3bb1e82dc98f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17b99f4-6430-4b12-91a7-bea316491062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b64e88-251c-4899-9c02-c1afd0d5144d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84738219-cd88-4437-b388-58f33bf2f396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6547ff-3f7f-4437-939a-11dabc5b5d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26ac89e-17e2-4cb1-9ba8-3b3192393ed7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37e7548-f7e7-4988-aa34-6146d9e8cc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70010fdd-b098-42ae-8e37-a33ad3242fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511c2417-cd6a-4963-8ff3-75bf5285ffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6bce77-101f-4f4f-9a2f-805c686efb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b57519d-1b14-4b7e-9812-c1914f632ce2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0044dbd-3516-47aa-a77f-40efa66ee502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c619a0-4b49-46d3-83b7-f05abf995372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09854d52-620f-4ad1-98cc-fd472ec7a6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e75b893-6d1a-492a-a37d-c9d74532095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f20b46d-e16b-4161-8982-b2ad636231ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20be7261-a5c2-4d7b-9624-64370fa8a1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582bbf19-9f90-4bb3-8cea-d80df9071bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2147fee9-7ab9-422f-921b-287cc42845c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e45c0ec-86c1-45aa-9d3f-6fdedbec1147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f57c5e5-d499-4bc6-85e9-77e64db30d71",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f33c21-b12b-46cf-a4d8-f127a6dabf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674f3cf9-6b21-475a-b57f-288fa3c02a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc74a05-7462-4be2-a323-af45d1eb6136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a37e98-e9b6-4683-b477-52189e1a1b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ae4231-d05c-48c9-acea-8aa18ac14819",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd6594d-69c5-437d-9433-51f2ac8c32e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7be5ab-a652-4efb-9884-56ea11078ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65169d6d-71b0-475a-858d-55994d182a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "347ab761-3d09-4d5b-82fb-7d30f0b9363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad44e08-29d2-46dd-9d20-ca42e9ebb474",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39439443-aeb6-4a00-ace7-15c16269482e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46283f23-3c99-45a4-ae88-7d86672f1874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a5aba1-ccb1-4b13-acf4-2e4541c3090b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b17177-8c8d-4781-a711-3167eb7c9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b408b4a6-8982-4f77-8a02-991ded7146a7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c896c57d-0902-48af-aa65-ef6dfcd19912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ae0ed8-1330-48b4-ac7f-b87c2c0be057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4394114-b8e3-4f55-ad76-6beb7fadc29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c168261-3783-4569-8feb-f1c208320cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cd7110-0b2e-485a-b932-f940088736dc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3147b7-2325-4d19-b0b0-2055f316ff72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc569c87-4175-41d3-8cbf-c5368b87e7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccccb81-0004-45ff-9d73-9fc00d9f12b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "379b82f4-5a54-44c9-8afb-20b5550dba18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2db7cce-e461-4ba5-9465-da14741993be",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92d6f4-3916-4042-9d07-5e3b9d7c7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd36ac8-6ec7-40c1-ae56-2688091c2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1236c6d2-bf10-4596-9b2b-158e47a204bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b574dc0-593e-471a-b4b6-89e6f03212b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634eb11e-761c-4d06-86ba-bd099e8218bb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bb1b7d-a400-41fa-a989-68a31ddba994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2366ce-bb23-4967-ba4f-898dc92cc608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bebe53-1898-4fb4-bf9b-f87800670f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d280c383-36fa-4ed0-8887-ce1dae033698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc072791-e0e6-4b8b-85ea-ae62e9f7c916",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef99a7b-9412-448a-8867-e9ab0e3d706c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e667f50a-08a4-4992-8e37-ad0df91c3363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef263e67-c0e5-4ea8-8112-1204914301f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c2a319-7b6b-4d36-88b0-bb834ece7303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de66496d-fcfb-4b2d-8c99-e781f57fb79d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a4201-ecbc-4648-b2cc-ac78ed5a5602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb817bb-acf0-4c01-bfba-b536d3350f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01979539-3033-4fec-99d7-1535267bce9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad4e325c-8fd2-4ecc-bd39-80ffbcf3c4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126667a0-2278-4d04-a81d-7b12c21bc359",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a2d6b1-48d7-4374-9ba4-47e69d19e0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa8e015-8acc-4e5b-a5ef-fb46db8e041d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b78efd-a594-453a-b7f5-2f44fed7beca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9775c609-599e-4444-b004-3dc5941316ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ddb5ac-f5b2-4f67-bdcf-859c4c863bb5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d12ab4-7bf1-4d55-a07c-f5a813b779a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41415841-b989-4c8f-a651-ee364630059a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2daf8aa-ab37-413c-82c0-5e586df6015f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4dc1c9-bd1b-4022-bb7c-bd0dc2bd6297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4218d7c-fa54-4132-a1b4-f8309b02597c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59737f96-8b4b-4524-a0f3-e95cef8e9069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87191cbc-92a9-44a3-8a02-8515e39e794f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ae48c8-2c47-49a4-a2c3-6b8cd22b922b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b09155-3dc1-41f9-b9f4-c55d3cd4e2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2dddb4-ef8a-457a-8c9e-c838aed12b5b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e329a2-bd80-49f2-a3a5-2dc260bc36f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f560cac5-62d7-40e8-b26d-d66bb8c5ae0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2095703-534d-48cc-8360-b5582573dd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49537269-f750-4b48-93eb-452ac1fb8e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3af7c3-f9f7-4c2e-ba8e-95ee1e60f18b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b6da62-053e-4672-852d-68deb834c23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b254503-74d2-40e7-b747-e51b8dcbba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d408afb9-5a93-4e84-8cc1-9f9052d6f1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de46557-e7ae-4fdc-b7e4-81669ea73264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7b6bac-f745-4c1d-902e-c1b3573437c0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffbf80b-17a8-4706-b7c5-ae950831513e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754f87a5-97ee-4134-8146-938284693893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da7fc47-4d37-4113-adb4-52917247d4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0181c65-83e8-4c39-a4d6-76d44444f2cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b41ed4-5ba1-48d7-8aa3-378ead0305f6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c321f-8788-4ff2-a462-281e7ef1471e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca196f15-3947-46d7-a6d8-15a367442f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea785104-6034-4f19-af11-7eb3d13aa84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6889f3dd-c24e-4f9e-b490-52342a595085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beb53db-1a78-4e95-a6fe-0e6ababf4af2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056b2748-ce4b-4476-8705-7b25ed476287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3ec091-91fc-40e7-b23e-2add4e5a3b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab462018-9ce8-4af5-a9b1-5e0f0bc726c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9084d024-ac83-4cca-a12c-242865c112e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bd55dd22-909d-4eed-b1aa-2ed6b6da3ad7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29213d08-d473-4780-ab88-06d70b76ed91",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bedd22b-6311-482e-ac9a-7f8e49e53e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "315b9cfc-f48c-479a-a645-3e5f8f95e980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b6f6f0-a472-42f0-a575-71b5d4ce6363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33a6ad09-9fdf-40c4-b8cd-e4df180131b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f478ad8-e8d3-485b-acb9-67545fd8520e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30e05e96-f112-49f1-baa3-ad3e2a7e4bf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "618e41f5-05da-4b97-bee0-ccd11c979f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d20e440e-ce0b-4f62-ad47-0957a0e89cc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08aef670-55ca-4154-a15f-d39fb54454c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3768da67-1acf-4ba6-9e1f-caad3242049f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "660dff2c-ed58-4e01-9206-078e72a48fa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e75909b-9ecc-437c-9760-6e2ecc1e43ec"
            }
          }
        ]
      },
      {
        "id": "d88eefea-632c-4a2f-b0bd-7d2d744f66eb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fe699703-d11e-4e92-9fe7-fc492b838cf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba16f775-e94c-42ff-bb9a-eeeeefc126a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f8bf2e7a-467a-469e-bc73-64401ba06617",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e557235-cc1f-4258-bd69-eb19e8c8c21a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858b587d-e3fb-4de0-95e6-9a577b46c250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da94b1-35c8-4822-b19f-871a2b0f82f0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d49750c-2c1a-4383-9c93-c42dbfdea5c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c25e3d-597e-426b-891e-232240a68357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86a47f-e3eb-409d-a2bc-16e478a94567",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ee3c13-b127-4f72-bc8a-f4af55480bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adee003-e099-4c56-9275-ca8048a63e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8995030d-09a0-4e53-8a23-a7ac156c9ed1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52112ba1-ce30-4efa-8499-4f9062b1b7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0990311-0171-42dd-b6b4-027ac5d62493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1610a22-907f-4e3c-994a-7132cb5858f6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e83507-1cd1-4fbb-aa0e-25fc78b2920c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17494763-ec7e-4296-a0f7-4b85623f2f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b468084c-8220-422a-96d5-1ca532d781f8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23875bec-47ab-4220-81b2-c2ffa8ee7c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6da676f-edc1-4af4-8be7-f1317a74e3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260c48f1-2f94-41b5-ae8e-47ecfddd74fe",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2939b691-4ec5-416a-bf50-ffa80c273778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f8f067-a073-4786-86fa-a897ebe3eb5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68df36a-3509-4716-b5b3-ccbbcbd8529b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad97eedd-d03e-429b-a6b1-f0f5e39ade54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5b5c75-f9ff-43f1-b036-42f55431744a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f41cca9-7973-4765-a5cb-fab725e965e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa3abf52-3941-4c4a-ba82-59f72f0fc7d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dddf0e1-6717-42d7-91f9-25a3f0c38d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca352b7-a47e-4ba0-a7cd-a21fbc37f0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76062e3f-9b6b-449d-8535-e0ac1c32e9ab",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322fc87e-93bb-4b22-a194-9858507f49f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953e2db2-7be5-4cdc-8ced-eed42bf3fc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66146101-979d-486d-8303-6e3a8db5f6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b1cd38-0454-4ee5-b4c1-1eb1be344eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76782c60-ceee-4e16-a2ef-4c67ac8324fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0950f08-0c34-4201-84c3-cc5d44aca5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9893d1e-56ba-47c7-ab22-a9bc3ffb23a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3376c50-9ffe-4014-a0f4-a7f538692ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3244bb92-0002-47be-be57-6f75e52ae1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c546c7-3d68-4036-b3d5-a330e0565b8a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe6a448-2c82-45e6-9cb9-decf7f0b9e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224a2c26-c1bc-4955-b5b9-1066468cba18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403a5311-b233-421a-9f2b-c4540d5a5d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0473058b-47d7-495e-98a4-ab09b28d623e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc105d6-4205-49f5-a4a3-ac0c058a698c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ff6ca6-c1a8-401d-a7b4-98ae1e47ba34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a907138-1c37-4f2f-98ab-543bfeace7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60fb6b3-a5db-422d-9272-b24608813d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2136e0d2-914a-4fe9-b4bb-24918e9d956e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca1e8ad-93c0-4730-996c-ce4f86fba72d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bb48fb-9e7e-40fe-bc19-7a91b68c7b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe466f11-a762-46ae-8e55-c3ffa2f8c26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a5377a-a83a-49f6-aea6-8cbd4c9f5558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb3961c6-2f56-4ba3-b113-78f3e48413c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04453fff-b92f-4ebb-a2f5-582717d03ee0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdcd053-fe8d-4632-a2e9-04fc4f7b2b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeab8ffd-4620-4b8b-a622-d6899f8d5c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81b6b43-ec64-490a-8fee-723f09d21d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35328395-f540-48ff-9844-266b7750ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b723449f-6155-4c1a-9e25-4f87b1b3bfb5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81e1ce6-761f-4529-bfaa-fb78961be93d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be48b99c-e9d5-4f3d-849a-670c9063b8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36b735b-898d-4b36-b647-f0754c43490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14236f1e-f52b-4955-9e5b-8fb57a9e9496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5224b66c-6c30-48f6-b439-66fb1726e2b1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecec416-3f4d-472b-ba84-67f97e494918",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fb8fc4-7d8f-4b83-b6fa-8e1420f6d7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034673c8-a201-45e5-8804-eb4a5ab31bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4487c8-7592-4de4-b9fe-03d012d177b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79866a1-6208-4c4f-8a1c-4b72fd651346",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233e8ad-7487-4fc1-8047-c6281ab3b3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59246f84-3deb-47e8-ad91-a7293ce036b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be95da02-5bfe-4b8c-b36e-876b57384518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e8b9ab-1392-4a25-9e6e-4e386659c444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e226ca3a-1784-47e6-86b0-776b89c998d8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07492fbf-bccc-4120-bc47-97d2b3e087ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17235d79-60a1-4d65-931d-5dd777438588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f8762f-899d-4d2a-a612-5be46b89b1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3173deb-8393-46af-9e0e-2446b1659282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8721a712-3ded-4bd1-8ab0-ddf54dd81f9a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601daa01-8901-448e-a468-1bb23c3db971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ff4e8a-5aa3-46a9-b9fd-bedd761453fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dae00a-4cb8-457b-ae95-4ef2b2e091b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9b5c5a-775c-4939-ac0e-3a8271154bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8d812c7-29e6-4139-a1f9-5bd70ac2c812",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ffe985-7fc7-42f2-a3d8-4dc3957daad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2da31d-e122-4412-b3da-5b8c23999093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c46e9d6-c309-49d2-9de5-3b920cf64a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec523808-7292-438f-a0a7-c70d2b79ee4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511ff1b6-dff5-4873-a571-ca283ea9d080",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c3c4ef-e106-405d-ab91-95db7a7a3642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3364fbb-b110-4dad-a454-d7dad356b779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4e946b-42b8-4001-bf9c-bd0031cfcab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f272cd-8b3c-46dd-b95c-7794d5c1674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d684b7-9474-42c7-8b50-ad94ee8d772e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99649f2-d70b-48b2-882f-a9f25d5748dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c796baa8-7af8-41fc-bab6-5c7d9b05ea07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e8830d-727a-4aa8-bcb2-b4e2182f66ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d84ddd-7cd3-4e9c-b188-0af72339be17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed299bf8-26b2-4bf5-912f-06df3404a46c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "973cbcb9-03f2-454a-a2b5-a7bf6e939942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9610b088-7acd-446e-a799-fd41e08c9aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5187f601-ed46-4a96-ad93-a5ab676a0bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb45ca2-21d9-43e2-a4a3-813e9fe9117e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6559e389-8991-40a9-8f18-785562d561e8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78881041-53ed-4f28-a3dc-39234dd83e26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf72395-1fd8-41d5-bcea-a19ab4187653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2a304d-029f-4295-aaf2-d29c7a8d73f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1794aee-aa44-42f0-a578-721013dead88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b41bf9d-0ed0-4238-8df4-9a90d3f240b4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d205a35-867a-4752-96b6-620ef6ae6444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfa064b-5cc1-4460-a475-39db1034eaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6e3e8c-5654-43ca-9cd4-3ec1fa49c5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d78f73-59b1-4084-8161-dc79f51997b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222cf592-a4f7-42b2-b9f6-1f12ab94eb25",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb376f4-61b2-4cd0-ab95-4d7183c9d2b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48fabe6-7c6c-44fa-ab1d-535b4d089097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d51eaa-5d51-4280-b088-61a7eccca7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec5a070-8d15-473f-ab78-735278f57a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa4a248-ba81-48d7-924a-9d88f9d35691",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d45ddf-ee76-4811-8fb4-b7cb26cfd4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "813ae787-e8ac-4a5a-b1c1-4a51289964c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f3768e-d193-4833-9c39-4771d412d285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6548b6bb-a78d-46d8-bec5-e2a46f8746e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b03fee-309f-41ed-9140-5fcf42f76307",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0ace66-2d70-46e4-adb3-de64013b3299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0557d071-af81-431c-b540-a6f10f5d07cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99da63c-842a-4521-9085-0850d034d3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce0795e-54aa-4c7b-8c05-1dcfdd8d2d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749f6ee4-74fb-4a2a-9188-5f8b7db4bc4c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca71c2d-2a71-49b2-8e75-d3f6d400da75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ee400fb-8edd-4634-abd9-6ac27f3d8281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0ece20-ac8f-4a6d-afb4-185eac73df1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567df8a3-d254-422b-98bb-89744d408bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286307f9-4f11-4eef-bd96-c49d2f4153e2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e17a775-bae9-4069-9d50-c245cdd9232e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "999d1240-3508-4e5c-b295-53a1d8c961fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735f9655-3327-4f42-8046-10dd610d6115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a09dfed-7fc7-4e27-acc8-9cde50cf0aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b52eb97-816b-4c65-91ad-258d4c35d761",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a709448d-c182-44a4-a794-70c9aa4630fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08eada2c-8db6-4c96-b80b-63c096082b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87140a9-7a4b-4f77-ab8a-7910e1680b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcc8cfe-73b1-4460-99b4-b951d7cef24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c490137c-f421-4661-bf58-dfb895a02762",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd019198-af25-4aeb-a364-7bb9073a906a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058ea372-4a6b-4ce2-9a96-b12111724bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea227a5c-1d3f-4981-8196-eb548fc48834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbe90c5-0daf-4f50-861d-136709db9510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e025f00c-ba5f-440f-bd24-2f963959b987",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d8587-93d1-4096-978f-457ac2c0a82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d955f29-6d68-4703-bb76-b4f01e3ccf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6827c5-db96-4f6e-9f57-49b186eae9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa3a3d7-1b16-43b2-b7a3-4937a0b29ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ab2842-286e-406d-9852-4175e8792ff4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb33ccd-c8a9-4c4f-897f-9fded684bf74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8447727-3a45-4a8e-9cea-6885bff9f8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10baa376-0d45-4734-a122-36fc976190c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca602b1-c862-480c-bbde-af2490870904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70df9a85-c80d-41d7-bfcc-67f242a05009",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be011490-2d64-472b-b57c-96236d6f8a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e2b25-4ba3-40ef-b181-ae854fa77223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43398936-db62-4875-864c-918af42f3b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8851b1a2-c703-425c-97f1-9d57cb6d66ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb86bca8-13a8-4542-abbb-b62b5bcc886c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ecd836-a54d-49b4-9f85-e317cc34717b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d794b7-7447-45e0-a192-750bdda60aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a80221f-b5d7-43e6-b7a7-053a3ce6d516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae9dd13-163b-4b0d-b680-12f467f3bbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8912a5-615d-4229-afca-9da04ae0d797",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bc5e72-e69f-48e4-8ab1-f6b8c16c7f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c75a6c3-a37c-46aa-b22c-5e7699347796"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e468f097-c2f4-4d25-9259-5b5f67529c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c352ff-3da1-4893-bd84-37730c5fb95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75033f73-7d6f-4adb-affc-2489a7fd9e3d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43914605-708c-443d-a192-059b30c6a8da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aa447f-7f7a-4356-98e0-e24822bd0437"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e6ee11-a91b-4017-be62-4c835c5d3f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df27224f-b96e-4878-bd4a-61010f24612a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaebeda-58ea-4633-8c1b-51870d96df39",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dd9737-11cc-4e0b-8eda-1848e8a25ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8ad76d-4f19-4413-9f02-e533d5cfc3a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf4f626-5a9c-4a89-8517-7353b75b88d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4a8033-6643-4df6-9cb2-20c01bf33efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15c812b-e492-4fe3-a80c-7271c7e88f94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553a4708-50a0-4b45-b006-b924f4d5f8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce2b854-9268-4fef-99d5-e6c9d1d9d4c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5958a9af-31ce-4f79-a8f1-29da2a8cca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a00b1dd-650a-4a8f-9a45-7cab945e0246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf25cb5-0922-4138-9f2e-ae425d982819",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f3aeac1-10aa-4228-bc94-1cdbd716ad98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaa2510-5a77-4f1c-b7ea-742817896a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbf3896-fe74-40e1-9d7c-bd43b7ff8825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c85ac9-6679-40ad-9b5f-cadf94cba8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0df400-e9ab-4a33-8ec6-2bdd0b5e053c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c65fde-9135-4c14-95d2-916f9e671c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240ce91-c370-4de7-9da7-4e7a5812e771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23965852-6611-4b4c-b577-30aa6e1e5c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4585c494-2bfa-447d-8bb1-60f092225669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e804e72b-659e-4935-a7d9-bbca46a1ac66",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d57882-636f-4d5c-83ac-6118f6292acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d3f143-67aa-4b3f-8c3b-2b4a5c215e12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f5e8e2-b3c6-45e7-a8e4-c1d26c8e4040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9805fe-8f76-4a8b-b6da-dd2376a7907e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953e0d75-fc3d-4a80-b583-34c0f5297a52",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4eede77-69d1-4da5-ba3d-69fe898e3495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775f00e3-2832-4518-ba4c-8ba8a76fea5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e17bd4-0b3d-4d2a-8426-c3ed696dd713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b30e9a-6185-4f24-b50f-abde6fc6932b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca389a03-a4af-4231-85c5-8f93db0cf6c1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e060f001-756a-48bb-a96e-1517ff8b23eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5aa99b-a276-4b27-a1c1-9026e13ea1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d7cf9f-b031-435b-a50f-3eb8b7cc668c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5485cf34-c716-4232-b490-24ebedb51759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f476e7d4-39bd-4d0c-b954-0934f643bcd6",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8741fd15-e45f-41b2-96ea-39637b40f2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a578a994-664d-4bac-9cd6-4416dd7862f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed9ac00-024c-486c-9fbe-fa17949cd6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7afde3-29da-4ac3-87b1-2527c8f23669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435a075a-fecc-4bea-98ac-ddc3a2b5e674",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8745364-6fee-4ac9-8a33-97e3617cc395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ca7658-7b18-46a2-b06d-505cea8bf619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aadc67e-81d9-4ff3-b5fd-f89e7b640bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82759fba-d74f-4662-b224-471977c37be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65ff1b4-6e43-4c6b-b776-68dd4da0d782",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbaa1ed8-d66b-44f3-b5b5-bfa0b43e34c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f698382a-7c11-499e-964e-9897c13080f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a3e22d-7e6a-43f9-a4c7-4a1e9edb8997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f17008-d701-4e01-894c-d40e68071433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8258fdde-84ae-44b5-bb32-899ecb860193",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c18f2b-1ec2-475d-abea-045b2dcbc6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c03686-eec5-4597-a591-252a09b0898f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab68d949-5990-4ded-b334-7856e2016fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7461ba17-5104-4287-bb14-1e4a2772b12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c7070e-c4b0-4e73-949e-95b2acf58cd6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4caeafbf-689a-4c15-bd8d-f37ee1e521de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ffb138-4395-4244-8699-8ecb5d51604d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714e3296-0ff6-49fc-9d3a-e606a97f1765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0494a03f-df64-4e1d-aef5-6b868d11c8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2fc73a-7007-4eae-88e2-0bff44f2e733",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6063f8ae-deab-4419-8922-fbbd54a96931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1871c2-83da-4d53-8236-ecdd99b39f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ec76e-66ef-436b-8687-615a4ab70d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d904fe83-a545-4f5c-87f9-8e57fe923df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf101f8-8dab-439d-bf95-13b902f969fe",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2316db-3db0-4fd6-91a5-78c6bf298eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99b6e24-6e7b-4e6d-a44a-03c13f86df04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9034654-cc2f-4f84-a450-2f22b69ac54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e807a333-d9b5-4c93-8d5d-0dfa11667cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d507ce6-a990-48af-9e2c-9827238a4d61",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012963da-eb76-4039-86b7-153cbcbad60c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84122fdd-4784-47e4-ad8c-54f9503ccc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20a0dce-fe6c-4c52-9368-0b3e40725853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cb5a68-ccfc-4bec-8aee-d55d17e366fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b03229-bc07-42aa-add9-0c8e84ff1673",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828bbb1-c172-4dd0-80e2-f3b315444d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c33a4c-155e-4de0-b0a2-8a120e537084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e7f83e-c3d1-4220-ad9a-eced66e3b40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add0e348-9c68-4a0b-a2b0-a81db4c55724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a011d42-24ff-46b5-a0fe-4dd7fe2673ae",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791ad19d-3931-44d9-b6b4-5938f0fabcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3984c76a-9d6e-4515-bb8e-d94da486714b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a800908f-f5c5-409f-b6ce-1d12aa85a8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d2612f-6d42-4d3f-8a8e-5d11228d6136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad51b54a-a70b-4b50-9e8e-f27214fb43eb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bdcde7-544b-4060-b83d-40f75e0d3aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548b52e3-f276-4777-82b5-edfbbb307ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab1217a-39e1-4c37-8ec6-2ec1d0afa6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d06226-ed71-48fc-843d-8ed6a3dd67d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f1a935-cdd0-4d1f-9c49-8ceab9d838a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f1b1ea-6ad4-4701-affd-c13dbf2b58e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1eba54-b0e3-4659-a31f-ac7126eadfc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82bd87a-61ab-445f-ac89-f2fa23d0d1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef26ce02-d96c-4b71-8581-bb32fbfa5b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ad5e44-c3b9-4dd4-98cb-8f9ab94f5d06",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24e0a4e-d03f-4750-8a63-7884d97c8622",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3c3e30-c83b-409b-8dc3-f032ee173048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cde1a3-4a21-47e1-adac-79679771ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7efbc021-8f35-49b2-9d4d-002b68b2888e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4e62af-9501-4068-83fb-6258ace37052",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf914110-530f-49dd-b9ae-ee0d27133056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dac9e2f-4c93-4c68-9f90-e5643f16f9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e6a688-78c7-47f7-ae26-554df8c3ddea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3383c50-b1c5-4bd4-9555-1e16db460ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc726bd-9e2b-400b-8bfd-42bc89899d34",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6feae7-f6d0-4903-a39f-9683f1335d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaaefde8-fc10-48ec-a395-a0ae7be2a3f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9501abc-9725-4c18-92ff-3b0d20bf4238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802926c9-9280-403f-917d-33c87684e023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b16f73-1a44-4f59-b17f-aa93a4256507",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e1ebd3-0505-4d30-915f-6bfe5448661c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a55654-9c92-4bd8-bb2c-eace8259a80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb22c93d-ed90-486b-a0f4-06aade68f74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8607643e-ed21-477b-aee7-89a2b3b7cf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b8f9b4-0e9f-4dc5-8403-e5847541cabd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ca0de7-761d-4d77-a93e-1eed70ca48c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e216842f-9ba7-48e0-914d-8cc7f75b7f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d30b7-e998-43d9-a861-b959e7094b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38f5d8f-d388-42ca-a2dd-576469a8d42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8602d691-f06e-4e7f-bed5-727886197ec6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dad5fc-4112-4f28-8be4-eb38f93eda08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d471c7-7d0f-4be0-82dc-07f581c72eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23f80ab-b53c-4ecb-ae25-173550f69e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e289e0-eac1-4534-8162-1f1ff075dd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2e33fe-d370-4d37-a27e-9f5997f824fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df834efc-7277-4489-a1aa-5f9f3d059252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1dc9c5-26f8-4bd8-8f1e-9d17b7c95197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d30b6-1a46-4654-9b32-950b91abc3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5405faa0-909d-41f2-bf30-b13b4889b8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae73d49d-bc8d-4a0e-97da-3788a311480e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdbc553-7846-46ce-a1fa-c8a264829574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8eec1be-257a-4986-a278-960df0f95afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2637dd1-b669-44f3-b40a-003da591ebdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3b5c77-4ea5-41fa-bc48-0609ed8f20b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b23cb6-3cc9-4b93-8502-90a7b4b0202c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f500495-ebe8-4b5e-81e5-6db4f971b36f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09d69d07-899c-4e86-adff-d29cc3d36520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bafc14e-2905-432d-b599-41bd43ce9326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd7b882-e4fc-4264-aa41-80b71de5a377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf42f2b-cacb-4ff6-b000-f839da9a2a33",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca3fca5-7235-4287-90db-f407bd586183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9afd313-86dc-4c0f-a768-e75787fe3456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dd2d14-a7d6-4ab2-b37e-5bb68980f3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4787f7-b215-4daa-a912-562f381c4aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b71084-d396-474c-ac74-d9465651b273",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c42327-76af-4559-8205-986cbf26bced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f96272-f107-4954-8195-d2163c8c0557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab089d7c-2021-4417-909a-043b9d6635bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e45fccb-11e6-40fb-a2e8-3309f7ca9d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbd490a-c3fb-49ae-9545-eb895b2c7fed",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c24f7d-140c-4db9-8358-707f42b5f2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f2c73e-64da-42c7-b326-5907acb5a1cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3b4ff7-b368-4f77-80c2-04bea39371ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95323887-6fe1-4956-98f3-681dcaa9ac40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d45357d-9826-4c10-9f44-3c274414ab1d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2802943-1fa6-4ebb-8ec2-4c102800caf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc60352e-5f89-496e-8ebc-4588a3a4a5b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49370c11-ac71-4471-ab8c-de32f29993c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464e11c2-d947-41f2-8fb0-4605bbdc70e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce27e552-b296-4666-889f-a0243baa48de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d71170-3619-4afe-b39c-862f0f782070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "922680ef-a781-4d43-ba54-16d2c0226681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368a0490-d2ae-4c51-9ce0-f9945ff6495e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f028144-cd6f-4ddb-994e-de9e1ea0085d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a8d58e-7260-4d8a-9093-025e412e77a8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c39670-c9cf-4a6f-b626-241f4661d57b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efcb1886-8814-48c9-be67-acc73f638989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb2ceb9-98ad-46c3-a6ca-428fee23c5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500ef6cb-681f-4acc-8641-5d4c1fb3e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a34179-e320-4d62-a9e1-f34164439558",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f2c785-dfdb-4ab7-a072-df721350f4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae230a04-893f-44bf-ae9f-9a796fb66bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbcbaca-9867-47c7-9aad-6c2218cb64a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6bb6ce8-7195-4cce-aba3-42cfc24a0e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326accfc-4e7f-42df-ad25-41019684d328",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da6e1ba-d61d-4c3f-bf79-3dd78f9f2eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d8be8b-a7fd-4ed7-8568-8f9ada3cb07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78fac8f-42fa-45d9-babd-ea1c6542c5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6450eb29-69ef-4004-9ed4-a2559d08a86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad439c67-377f-4d65-a7d0-5fead1637bf2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02864cc3-ee14-4619-aeec-c24d95fd87ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f04d3503-dfb8-4596-9b51-ccc3b1b05872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaec6bc-3f7a-4dad-ab58-c7cb8a3ddb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6595de-cb87-425a-a55d-d0bb15f632a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4688166-d219-41c9-8bdc-db15ecad39f7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f33472-8dc0-41a3-9f79-9a8fc93801ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "064befb7-0e6d-4e3f-91f2-88f33831b665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09944f76-8772-4c0d-beba-b1db8de61352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83f92c1-ea4b-45a6-9aaa-1b47df0c56bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c739ea28-6563-4859-8a87-b6f508fdbb67",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605709a6-b14b-4515-aa23-a93327146edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da76929-d841-45c2-897d-9bce2e1ce3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28db790-3e88-4dfd-acf4-78fc5878e85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b730fcc-28c4-4ba0-8071-32d44f06bc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032cb636-1dd1-4349-9f01-18d0682563b3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5483a5-3ea3-434a-bb68-13b608d1f0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6df4cb5-e87d-4838-acc7-09f36e80e264"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f97970-dd44-42bb-8cc6-8089cee1633f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7166b01e-67f5-40e0-b777-5636e4f0dbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6dcd4a-1b31-48a7-86f4-946de99c08f9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a5f293-a6c7-4c45-9ac2-edf7aaf48360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3334f531-07da-43b7-9f61-5d5009cc4a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4bd0ed5-065f-4182-a55b-ec0f32181945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54dc6a8-2ba0-4bd2-940a-5d0eac676f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327c2324-982a-4fb4-9024-620f069736ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e006f94b-4ecd-448e-8270-78307d3822ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c42035c-0697-4a69-a3e2-2cbc8d753408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d85e97-8db2-4bf9-ba48-0c78b0fef688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d46d2cb-e5c5-4f19-b200-fc54e8242f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d36da9f-5d98-443e-8f18-6ab9932480b2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2625f8-ba5e-4adf-bb1e-64ef20a5bfd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2322096-2bf7-4148-9aca-ff9dbffaaca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7ec7be-252f-4613-920d-28a97ea7fc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e177f8-04a8-416d-8d09-64c0f311cfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcc4372-eed1-47e1-b370-2bbf407239d0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c27c48e-a75f-481e-ab92-07bd0958bb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f55a4ab-3ac0-4758-8fb9-3f9eecd6cc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e39774f-dfd6-4cb8-90b6-44ba11fa7f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f673e93-0978-4440-8cf6-466897476738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e9ca75-d305-4a81-9e28-5fe5764c9c84",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0763b8cd-bbdf-448b-b55d-7728b241c6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885be4dc-c8fc-4e12-acf7-ddeb0c173403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dce7c3-efdc-498b-924a-870906244e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65294268-b5b1-4d52-8abd-6d74290d9f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a92c31-763a-43fa-b3ca-231f7a5fbe31",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2bb21d-36b9-447e-a096-34f2d66c34c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a0d983-b7ac-40d0-8969-4b829a0bbbe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef08ef5-a771-47d0-8deb-745e95202ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e44ed5-670c-4eb9-bc64-ad1bf6720d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8bb4948-5d56-433f-a735-ddd6191f8085",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb22e1c4-034a-44bc-aebf-40c8d972b488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eef0e88-3752-4a41-ade2-d358a2841248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e152b57-d7ae-4857-8009-fa5a902329d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a448befd-a647-42b7-836a-6d1517d6a459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab87640-2006-497b-9ac1-5460dbdaf41b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca1e043-08c2-45da-80d2-e8a2f9a3b193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69bfeac7-24fd-4021-83cf-cef2712d57fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eccb494-15b3-45b7-a506-3482e5ed794f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba402cf-d745-475d-b49c-8c4156b12838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55350494-49f6-4968-bfa7-6fb26429fff9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7ac1bd-74f5-48f0-b0e2-d3ca2d18afde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3609ed3-6f00-4dba-ab2e-0d4a3a2608ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c3cb8e-178d-45cc-add1-b5fc23552e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a606345f-d724-427a-a935-b2e59751f24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b78d63f-e674-4ecb-ba2e-55f7bbaaec5c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1496bd-b95b-4f68-a410-13b5afd46ac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88c35b99-e759-4a71-ba08-2ec0ec7a2ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59089bdc-d199-4a12-a348-a3a0f6a86f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb01e4dd-d0d3-4e48-a236-bd05f61f7b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bdc3ad-6455-48c6-a11d-a06bddd9f48b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c49b1250-574b-479b-a236-e54410136a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8eff46fc-94c9-4180-831e-a01d691d9e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a34ed8f-3d48-4152-a8ac-eea91566fc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23979ea9-8d16-4a4b-9a3a-8e627a6d0da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b56cf9e-ac83-44ef-8fbc-86d446ee7100",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3404394-c214-43ce-af44-7c7923387072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abbf71da-a4a8-41d1-b770-8982a33555d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab90c9b-2a15-4942-8882-64275dbe4e72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a5be54-4d34-439d-b4d8-f62fe4675f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8410733-dbf1-49be-8d94-dd2714e64c9e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8498d7-9575-495c-bbc9-b6e6930e659e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058e4ae7-634d-4019-ba07-56c702e1429d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc053d2e-1a6f-461d-b844-f6cd7e9b25ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf47a85-5ce6-4df8-9c28-b1ed3392410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70305b3-c938-4b29-9914-4cc1ce4c091c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90dffd52-6b7c-4ba9-95f4-086997aec858",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1a5f54-e319-4ec0-be8f-25d4a85c6dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5b2954-4160-4107-868a-75d420a53338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3ce22c-c671-4d07-ba19-583105e243c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cfd928-0a85-42e0-a4d5-a2668b0e4cac",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0aed5e3-cd25-4faf-a981-675e8539d0c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a810f3e-2aa9-4bb3-910c-751699ebd8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d10fe28-10dc-4069-96de-09207c2ba1cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de766457-9cf1-4c02-abec-4021fa757707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd1805a-ce11-4edf-9211-a22f24006714",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f41a16e-c915-4fd2-a059-59a672098467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa00eada-aae5-4a49-86be-642b77f05558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d383138-e443-4474-b377-c1b05d2c72ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b145d2f6-2d7a-40d5-899c-fec5c5fa97b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a06718-9f41-437a-b6fa-0d933b87dcc8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cbce30-dce4-473d-a1c0-c920d69d40ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a77b9108-b1d0-4cbd-8719-e8a58a98c22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bacbadd-33b9-4f3b-a9b8-981ba7c66289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337ebb1-98ac-4d32-87d5-dbbacf55273c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0fc3d6-565d-48d0-b45f-8130edbc8148",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1216d5-1efb-420c-968f-8ded3a4a4e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf841c3b-5148-4382-8f7a-02d3f96aeeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15eda01-1864-451c-822d-46a6d5aac1a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086cfd15-c164-43ec-b9fa-2beea43e55b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa77a20-6d44-4e41-aa26-063def0ff6d1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0bd3a1-b35e-4c93-ba01-3cc5feffe83a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c267fdc-089f-476d-8482-aee8a81f75d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6202117e-c78b-4718-8e53-0cb18b274368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5532f7c2-763a-4a9c-8690-866093514c3c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "614872fe-2d01-4a87-a337-4ca151c2926e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919ab6ae-70a1-4f26-82d3-a9fbbc2713c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "858ca1ef-3b21-4daa-a5a9-beea3064ce79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bab7fbcb-c552-4160-864e-cb9da560ffb1"
                    }
                  }
                ]
              },
              {
                "id": "b6cce1fc-1c53-445e-bcba-7116a8a7f22a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3beb3247-4617-4026-bbfd-5d90675e8525",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0f4363-bfc3-4a13-92f8-b67fedb5597d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59cb16fa-0067-44b1-b7de-3f96f9103708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53231057-27a6-4209-836a-18cdb9ccf98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c257e77e-5738-476c-916d-43e6e3001014"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da8295e2-8d34-4392-a02c-7a3a81914a85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cebf5796-402d-4724-ad2e-ed35d1ae9afd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db12ff19-889d-4397-8f04-c802ae01efaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d0e83bb-799a-44be-9258-2cd846c49d77"
                    }
                  }
                ]
              },
              {
                "id": "7534d441-23d4-4c6a-885c-33c006107400",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0bceef27-b6ae-400c-bc48-bebe01d92563",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dc5043-c521-43ad-b44a-a13188264da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b1e49130-aa9e-43f3-a25c-f5afc3b846d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12397ec7-5347-4af2-9c09-56f3db164aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf92f3f-25fc-41f2-be5d-b7ebc91f0e87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d0e30d78-bc3c-4f15-8c7c-3b2b8f1a6229",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10cdc067-8273-4555-be57-8f3db8dd0ac2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7e698ec-1992-4c05-b7a4-a8b43ff7682d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70224be4-f31c-45f5-b5a3-3b33f7b6a53e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0abfd16-7d4d-4f7c-bb5a-ca8d1149a5c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdc257f6-a751-4b18-9cd5-0d0d7d734a2b"
                    }
                  }
                ]
              },
              {
                "id": "ba0a323a-18de-4ff7-b840-a17af8a519d6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71c95a35-c4a8-4818-8149-83d30ff514dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d39a4ce4-7f28-45b9-99bd-cd407e58d7bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a9dab38-c7d0-49ca-8df1-7c04388aa5e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a442118-6cf0-4a28-9b44-2c0aea797f56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdbcc071-002c-446d-bc3e-e9b56e7aeccf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e7fc73c7-8752-49af-a107-15b3c4d86807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b464c9ed-3764-4cb1-8a56-29105b729c5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f394f88-b770-481f-865f-89cf722a071f"
            }
          }
        ]
      },
      {
        "id": "4daa9d34-4eca-41f0-9eab-d0140996d55c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bb418141-87cf-4555-a551-3d90d6fa2b04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49cf1695-fb2c-4902-8297-4b5aa7763f87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb28c411-c41e-4aa9-a331-9ac5fdf3e213",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cb7aec-7eaa-4ca1-81bf-d0bf80041052",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bbaad841-daa8-4f69-9f2c-c1178d43ba57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0186696-2c58-478c-a56e-5789aa8f64d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e98e838a-1add-43c2-b883-3e5fb7e2a758"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59d1eec7-ca31-4d8f-b783-043a60a924bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0682f4a2-0858-4724-915c-02a4087af191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1d56d50-c528-4308-9170-a374b948eb84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c17cf6a0-b133-439e-8e86-6c2aef568e8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ede3f95-9b7a-41f5-b11e-36ac3dd0feba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57ccf064-eeae-4ba7-887b-75e289b39d3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08a17669-19a4-4074-8a71-88ecd9de3ccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6b275d8-7e19-48cb-9806-e5e3dc44af0e"
            }
          }
        ]
      },
      {
        "id": "fcf25ade-9091-4d29-9839-731557cc3558",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "663b88f0-7c5b-4338-a5c2-5b3b00d8fb19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7841c54b-86d5-46fe-b072-78e269794835",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c4bc53d-e2f8-49b1-b708-daa826ecd09e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394501f6-7257-43fb-82d4-00bc5e735522",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "074c7b85-a057-4276-b4dc-60d9781a5bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e72a79-cafe-4191-bff8-d53f34e3d033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2d2fbb7-c47f-4794-90f4-9743c6fb4c9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94910b1d-7aa2-43a1-b529-3df014b371b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2274a193-71b5-41c2-be65-20955650a2a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96389b52-fa09-4e82-bb89-01d0de69022d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfcb47a4-fd57-49bb-9d9f-0d4d7ac7423c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19ff8358-525e-415e-9f1a-fc8bc2890b61",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2e82ff6-d2ca-4039-80a0-694851c2fd93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb59f04f-cfc6-4b57-83a7-791789961043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8d47dee-7fcc-410d-b6b0-751732eab119"
            }
          }
        ]
      },
      {
        "id": "4ef6c6b0-1ef2-4258-9ede-40a4ec89b027",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "12e2a3fe-c4dc-40db-bb6c-3a5fe3231734",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e255e22-d20e-4f37-9ae9-dc6caecd339d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "189f6242-f41a-4cb9-b999-a760d30e8a8b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62479a3a-6a0d-48e6-ab73-9ad95b02e32c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f7603c3-1a53-4fd8-a762-eb0cacec41c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e238485-84fd-4053-b479-f5511d440827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc4c1aa1-8c7b-4823-a862-c20491290cfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52d680da-a1bd-46c2-b135-bc4db7bdbbe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2e9dd4e-d78e-45ae-8be6-9d71a8e5ab59"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd416477-bafb-4070-942b-ce7e24c883ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c06f7cbd-c7b1-440a-9d2a-94ee18fff446"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ff7be26-7bad-4d46-a543-c50efa9e0178",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9da6b21d-d95b-43d9-b859-74127629524d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72f6aa30-dedd-4a7e-bfbb-48a55cd0c0b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59d476c0-141b-46eb-86b4-df0348d63145"
            }
          }
        ]
      },
      {
        "id": "bdc15c27-df51-466a-85bd-b09300be5ef4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "347a170b-d204-4def-a043-a29bb3148a9c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "843dc1be-c489-4ee9-82df-22a98712f7af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "950aae57-2b6f-4234-870f-1b09d7d8d18e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70611e34-dda6-4c22-b85d-79908295b8e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e2412b0-becb-48c3-b8c0-57f37a8397ad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.87323943661972,
      "responseMin": 3,
      "responseMax": 253,
      "responseSd": 20.22822569723215,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692145879050,
      "completed": 1692145892312
    },
    "executions": [
      {
        "id": "0b0c3ed7-fd8b-42a6-aaba-d7ced1d9e3d6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d601074a-5fd6-46cb-a694-eec90054a474",
          "httpRequestId": "40c9d5f4-4771-4c59-b3c9-9aa56706ffc5"
        },
        "item": {
          "id": "0b0c3ed7-fd8b-42a6-aaba-d7ced1d9e3d6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0de21714-7cf5-4c1c-ad7a-cc262c63e88d",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "8b2b8785-acdc-4d96-b6b0-b500b636998e",
        "cursor": {
          "ref": "2877a60b-ad77-45be-b905-83e915e3f6a8",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "93a91a76-9f88-4510-90bb-7fa7477fa083"
        },
        "item": {
          "id": "8b2b8785-acdc-4d96-b6b0-b500b636998e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9c44dba3-7d6f-49d1-9545-d99ae277bc3c",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "8d1df065-f8b8-4448-908e-2897311f57a0",
        "cursor": {
          "ref": "d4627f27-2f88-4129-8665-609cefc851f6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "622b3873-cc9a-41d6-89cc-b71ae218e7b9"
        },
        "item": {
          "id": "8d1df065-f8b8-4448-908e-2897311f57a0",
          "name": "did_json"
        },
        "response": {
          "id": "f63a2d35-b250-48e6-8966-7627f481902c",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4904c-dbd2-4acc-a051-ef0eaba2adb0",
        "cursor": {
          "ref": "fc5f10cc-ee7c-4f3d-a12f-ff6ad01b3fab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "44040171-e158-4670-96d6-988175e55daa"
        },
        "item": {
          "id": "5dc4904c-dbd2-4acc-a051-ef0eaba2adb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "50d192e2-6853-41b1-9e42-0ef2dcc1b11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc4904c-dbd2-4acc-a051-ef0eaba2adb0",
        "cursor": {
          "ref": "fc5f10cc-ee7c-4f3d-a12f-ff6ad01b3fab",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "44040171-e158-4670-96d6-988175e55daa"
        },
        "item": {
          "id": "5dc4904c-dbd2-4acc-a051-ef0eaba2adb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "50d192e2-6853-41b1-9e42-0ef2dcc1b11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9998dc4-2b1e-4e2b-95d5-1a32100dc411",
        "cursor": {
          "ref": "d9c0a3c2-097d-43e1-afdc-4e9088ce068c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "72680663-9f20-4942-9074-c28203604c00"
        },
        "item": {
          "id": "e9998dc4-2b1e-4e2b-95d5-1a32100dc411",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b1069389-1215-49de-8eb6-88fafac52460",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2457eaaa-3a89-4994-8f55-a2be33653fae",
        "cursor": {
          "ref": "d18d37ff-fd5f-4a90-8588-d977b4851002",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1e135717-7b16-4223-ab25-d11f5aad170e"
        },
        "item": {
          "id": "2457eaaa-3a89-4994-8f55-a2be33653fae",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4690bcbb-0c52-4422-ba3d-a2949dd0d0ab",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f6e0c5-1262-413e-94f3-fac718c270ff",
        "cursor": {
          "ref": "8db318f4-50b2-41fe-97fe-81d738e5c92f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "af4d7070-5852-40ca-8771-46abe700d022"
        },
        "item": {
          "id": "35f6e0c5-1262-413e-94f3-fac718c270ff",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7e1e641a-1a0f-4ff7-ad69-92c087fd0bbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd6adbe-98f7-4bb1-87f5-65489bf74edf",
        "cursor": {
          "ref": "8a4d43c5-6baf-4f48-a38b-5957973a5bd1",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "445bbacc-d29f-4856-829d-161e98573465"
        },
        "item": {
          "id": "edd6adbe-98f7-4bb1-87f5-65489bf74edf",
          "name": "identifiers"
        },
        "response": {
          "id": "d299e0c2-6c54-42a5-9254-8729d8b8eece",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e456efd-ad2a-4f66-b27e-3649597d8416",
        "cursor": {
          "ref": "7be8561a-3afc-4a73-924f-beaae0dc293d",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3e7f45a7-0ca9-4dfc-9152-7e7df8553737"
        },
        "item": {
          "id": "2e456efd-ad2a-4f66-b27e-3649597d8416",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dadafb62-1299-440e-a5ec-990ae8f921b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d73d57-465d-492a-b923-7c285561730b",
        "cursor": {
          "ref": "782e5c6b-4303-4b77-b283-2058903682cc",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fc1e3124-6a76-4b57-b0e6-1d621034b87b"
        },
        "item": {
          "id": "61d73d57-465d-492a-b923-7c285561730b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ebd675fe-ebae-4856-8cba-968a367eeb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337dd175-0c11-42d5-9f44-87c67e2cef4f",
        "cursor": {
          "ref": "02214d00-5bd0-42f7-a258-fecdbf19e104",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8bbf419a-9f5c-471e-82cb-44f3fa9376a7"
        },
        "item": {
          "id": "337dd175-0c11-42d5-9f44-87c67e2cef4f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b6730dd4-317a-4d98-aa70-30728e53702f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7378d835-08c2-42e6-9b9c-ee7970cd0bf8",
        "cursor": {
          "ref": "844ccb14-5e5e-4ba3-825c-6ee61cd80587",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1dfde498-6c53-4c66-ac0d-f2e2ba2f15e7"
        },
        "item": {
          "id": "7378d835-08c2-42e6-9b9c-ee7970cd0bf8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "902086eb-6189-4a3e-a537-a4930f5d02b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b77981-4656-4a57-a113-6c394d7ba555",
        "cursor": {
          "ref": "a5e582ca-8a45-470c-aa94-52d05963456b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cf791631-9448-4dbe-b569-06f6d51fa37d"
        },
        "item": {
          "id": "85b77981-4656-4a57-a113-6c394d7ba555",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "97e18cfa-603d-41fb-b958-397feef87b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc50e5f5-5548-47f3-b509-d7fb68faa155",
        "cursor": {
          "ref": "ce4b58e2-3458-4c1c-8be9-0d30d35b1ec5",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aae8b0b0-f8c5-450d-89b4-914a36553a72"
        },
        "item": {
          "id": "bc50e5f5-5548-47f3-b509-d7fb68faa155",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a25a6b2e-6909-48d1-becb-d068ee65cd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e19f1b-b663-4980-843a-e69e97ebe213",
        "cursor": {
          "ref": "d8742bc4-761f-43ff-8667-d74094e4b948",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ffb539ce-2a7e-4d0b-9daf-8eadd8043ea8"
        },
        "item": {
          "id": "67e19f1b-b663-4980-843a-e69e97ebe213",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2b850a2c-4e1d-440b-909d-746db445e54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995bb272-f837-45f0-90f8-1c5690cdc660",
        "cursor": {
          "ref": "ad55a4dd-5670-4979-a0ec-fa1eb281496c",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "221183a8-ff2a-4f63-8ac8-d3ff72cc6280"
        },
        "item": {
          "id": "995bb272-f837-45f0-90f8-1c5690cdc660",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "07f7dd18-6565-4064-8cec-c8508224ffcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44783831-9624-43a1-84a4-f2bda53d462e",
        "cursor": {
          "ref": "d00c5d9e-dbfd-4135-9f8b-a393a301e762",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2c0737fe-d1e8-4cef-a1d5-44f1eac9f6b1"
        },
        "item": {
          "id": "44783831-9624-43a1-84a4-f2bda53d462e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "19ec9cb8-3129-435d-8de7-96c4827834e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fe39ae-4a3a-4166-b3a1-f19b1d0c43a0",
        "cursor": {
          "ref": "fde2d082-189d-4337-85a2-b7bb9dd556f9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7ffbf7d1-f638-4930-83f2-a6b1770e22d0"
        },
        "item": {
          "id": "06fe39ae-4a3a-4166-b3a1-f19b1d0c43a0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "542e0325-c3fa-4f1f-9c8a-de2cf5ca4659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04649f7d-62e4-404d-9912-6d3ab173569d",
        "cursor": {
          "ref": "f0d3e2d4-8839-4614-804f-7c92309c69b2",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "06d6b92d-55ee-49dd-ae4f-d342d81dbad0"
        },
        "item": {
          "id": "04649f7d-62e4-404d-9912-6d3ab173569d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6244a8b0-8255-4f52-8d2d-b5c38d669ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33b9aa7-1818-4b17-9e8b-745a420183c1",
        "cursor": {
          "ref": "150cfcc6-1ffb-4d32-a308-d6447cd56e18",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2350b91d-06be-48da-8754-a781f93cfc5c"
        },
        "item": {
          "id": "e33b9aa7-1818-4b17-9e8b-745a420183c1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "57b2dc98-370d-4a81-afa7-6cf074476c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b29f2-5af6-4d59-8f33-2f5f05c86a41",
        "cursor": {
          "ref": "e5af2355-0fdf-4d47-9c12-d3292ca084a1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0141b6f6-24f4-4b15-b5de-2dbfbe296927"
        },
        "item": {
          "id": "e31b29f2-5af6-4d59-8f33-2f5f05c86a41",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb8d35c0-fc0d-4f09-bd9f-1c8b7fcc4ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ebc48b-ca3c-442c-aa30-463d7820c943",
        "cursor": {
          "ref": "e822f958-24d4-4b71-973f-cf032eacdb75",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce11e2f9-33a0-4616-8a4f-b74f723dabf1"
        },
        "item": {
          "id": "d0ebc48b-ca3c-442c-aa30-463d7820c943",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0cbb6e39-7d28-4044-897e-6a4cc3b99569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc794aa-6ad1-4a82-9f98-403f5bdcdf11",
        "cursor": {
          "ref": "0901db5f-3762-4cbd-a810-19774697ca38",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2305c1d2-967b-4423-8427-a13db1fae486"
        },
        "item": {
          "id": "1cc794aa-6ad1-4a82-9f98-403f5bdcdf11",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "048f11af-be9b-49c2-96d1-e2e72278ec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6822b447-d529-400c-949e-5c62e7ceeb68",
        "cursor": {
          "ref": "78a401cf-cdaf-4e5d-9ba8-422d05773e48",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dfe1e928-a891-40c6-8580-dea759a81861"
        },
        "item": {
          "id": "6822b447-d529-400c-949e-5c62e7ceeb68",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9f27e1e-5946-4c51-abf9-3260ed4484d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe149475-c36d-407a-80f9-04d764b4dd06",
        "cursor": {
          "ref": "ed8ac924-b8a2-4c2d-b1dd-6482a9611e04",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "877463bc-628e-4b68-b962-7ec03cb5d35f"
        },
        "item": {
          "id": "fe149475-c36d-407a-80f9-04d764b4dd06",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "37c88c3a-b587-4ad6-ac56-38a06ec81007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b064f7ea-87c8-4d43-a044-43590891a5ed",
        "cursor": {
          "ref": "cb500455-d3fe-4809-83a8-722e27ef4200",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b2d64981-3200-47ab-acca-5e57e5b2c03a"
        },
        "item": {
          "id": "b064f7ea-87c8-4d43-a044-43590891a5ed",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "15905220-637e-4f43-a25c-5b415a121cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a802cef2-9072-4f17-b1ec-c57fdccaeac1",
        "cursor": {
          "ref": "576ec675-b5b9-4725-bd1f-9b6f4151bc5e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d4bb20fa-1cdf-4653-b9d2-0b3c83274631"
        },
        "item": {
          "id": "a802cef2-9072-4f17-b1ec-c57fdccaeac1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fe92c7e0-ad28-4d17-bd8c-0f450e584f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d927c3-0d07-45ab-a282-01c0a42a32d7",
        "cursor": {
          "ref": "98ae430c-1281-4844-ae8e-1b4a905fad16",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f82cff4b-d710-4963-a534-8b6417df74d1"
        },
        "item": {
          "id": "a6d927c3-0d07-45ab-a282-01c0a42a32d7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a4e7334a-6dca-473e-8afe-0157e7d488e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8804c9f-1200-44a1-b79f-e524a52afcb2",
        "cursor": {
          "ref": "9d6c1f45-bc4b-4b25-a1bf-fb1878363e6b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4e8c4be7-7bbc-4c96-9cb5-c8ffc8574c97"
        },
        "item": {
          "id": "c8804c9f-1200-44a1-b79f-e524a52afcb2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e36349bc-0d0d-48ae-8e56-9bafa7340151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b58d52e-be5f-4f26-9eaf-1217e00c0c9a",
        "cursor": {
          "ref": "8f156a80-cf2b-4f9c-94c8-6fb9581676ab",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b9559cc0-6d95-48d4-9947-a536e29a32bc"
        },
        "item": {
          "id": "7b58d52e-be5f-4f26-9eaf-1217e00c0c9a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a469f2d-4562-450e-a0b3-5dd05d81e54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c59947-36ff-4f19-8273-ebf71805c6e2",
        "cursor": {
          "ref": "b29375d7-808c-4320-b313-c97b7b21c6ad",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3ca82346-7c6c-4b75-b102-72309da869dc"
        },
        "item": {
          "id": "b0c59947-36ff-4f19-8273-ebf71805c6e2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2d664a65-13c3-4e04-8168-8480ac8837f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdac55d-6efa-47e2-9c7a-bcedc7404c65",
        "cursor": {
          "ref": "8a66b816-3152-4d0d-ae9e-02804c122c32",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5e21b7f5-fc2d-41ed-a4d9-194eff896dd7"
        },
        "item": {
          "id": "2cdac55d-6efa-47e2-9c7a-bcedc7404c65",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d395eb34-651d-46a7-bc76-8985bbf7d7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45d8cbf-64a4-4561-b378-316c310ca02e",
        "cursor": {
          "ref": "c6c0657e-4970-4d7e-bd99-ef29921fa53a",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6b6e6239-6052-478c-b3e8-66a12742570f"
        },
        "item": {
          "id": "d45d8cbf-64a4-4561-b378-316c310ca02e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8f613a1a-67a7-4926-9487-9cd4444c5441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b66865-4199-4323-a020-c63f067bfbdf",
        "cursor": {
          "ref": "a26fb28a-4e45-4a82-973b-c9e77e488a77",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "36387ed3-9f97-4ac9-99e0-cc009565d704"
        },
        "item": {
          "id": "24b66865-4199-4323-a020-c63f067bfbdf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "749856c4-6fc0-433a-9086-da15126224d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da8473-c593-4c4a-8319-5027e60589eb",
        "cursor": {
          "ref": "804e58b7-9a06-4473-9476-e2523a3083b2",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "11bd1308-1943-49c0-9f37-774c47c81715"
        },
        "item": {
          "id": "04da8473-c593-4c4a-8319-5027e60589eb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30bb5241-790b-45b8-aff1-8cbab6b0260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25942fe7-2ee1-4cbb-8e70-830a5050b296",
        "cursor": {
          "ref": "3226ccad-66f1-4de2-b7a4-eb4fa542a4ad",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5ee7973e-b20f-4261-af35-b2541e68d5c3"
        },
        "item": {
          "id": "25942fe7-2ee1-4cbb-8e70-830a5050b296",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8a6e92e8-cedc-44fa-a2bf-82289138eac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e50d712-ad91-4938-b722-3c567429e96a",
        "cursor": {
          "ref": "1f727785-918a-46eb-86bb-83debd7b0a97",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "995d98b0-38f9-4705-921c-60e427cdecb4"
        },
        "item": {
          "id": "8e50d712-ad91-4938-b722-3c567429e96a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "844d0ded-6b3d-40aa-8433-c7b8ec1f4f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438f2950-d804-4128-8cc0-ba346c41b8d2",
        "cursor": {
          "ref": "ffd77272-63bc-42a5-89e8-6ffcde503131",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "988bf667-6e36-47a0-ac36-26b63f913691"
        },
        "item": {
          "id": "438f2950-d804-4128-8cc0-ba346c41b8d2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "186c4207-7d8f-41d3-ab17-11bb893940a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c23e480-c777-4583-809d-775fb226ba17",
        "cursor": {
          "ref": "12fd5dac-5d47-444f-ac55-f91220b02eef",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "20739d18-d978-455c-ad68-6d1680abe872"
        },
        "item": {
          "id": "1c23e480-c777-4583-809d-775fb226ba17",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "53f83bfe-cd09-4747-beb5-9e9546d3f1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da6a76-87f0-4d58-bc17-056338cb65a5",
        "cursor": {
          "ref": "07339c1b-bda1-409e-a973-4099a0b535fa",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "60b90b3f-fff9-4d73-a696-81bae9699b1e"
        },
        "item": {
          "id": "50da6a76-87f0-4d58-bc17-056338cb65a5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f5efde9c-e1b6-4db0-8e81-a2ee8f14a9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1496bb5-27ab-40cb-a763-db8db38d5587",
        "cursor": {
          "ref": "8cf60a21-3a76-4340-a404-756e00754a7e",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6da3c457-e231-484c-8dc7-483ba3c7b840"
        },
        "item": {
          "id": "c1496bb5-27ab-40cb-a763-db8db38d5587",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd60fcd2-8ed9-44a6-a120-9027bd19bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06384ac3-977d-4cbb-97ee-b4e5e74dcb92",
        "cursor": {
          "ref": "a364d3b1-6203-48a9-8869-86741faa8926",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f51050a5-beaa-4cff-8288-bd167f02d0e5"
        },
        "item": {
          "id": "06384ac3-977d-4cbb-97ee-b4e5e74dcb92",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c70cbf19-0101-41e5-ad6f-c0c33e1aeedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b8f30-7366-4dbd-a519-479a5282bb8d",
        "cursor": {
          "ref": "2e1e0fa7-d352-43e0-b8b9-8bb5dd8d05b6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d16933b0-75cb-4a5a-9808-05471d0b0957"
        },
        "item": {
          "id": "595b8f30-7366-4dbd-a519-479a5282bb8d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "16d36836-cbcb-40e6-93cf-836a090e42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0495140b-6521-45e9-bbc4-6a41fe941e28",
        "cursor": {
          "ref": "78a4eac7-78a8-4d5e-ad09-89cc3adb44af",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1699b970-5767-497b-bee6-22484aa89fa5"
        },
        "item": {
          "id": "0495140b-6521-45e9-bbc4-6a41fe941e28",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6f63b618-66e6-4180-9151-3bb7fffa1099",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72129f-eefd-4928-966c-907ec53ba98b",
        "cursor": {
          "ref": "b8d5eb49-6455-48e1-a3fd-c3f36643618c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "890505da-4bb8-4867-b3ba-2f26e5f39d8c"
        },
        "item": {
          "id": "be72129f-eefd-4928-966c-907ec53ba98b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "19315a57-5991-4431-acbd-ac216640c26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db33ee30-d01e-4aa4-a676-2735d230b953",
        "cursor": {
          "ref": "8968b110-d4a0-40c0-8af1-31e20fc9ff73",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "78ab50b6-41b9-47fe-93ae-09115445e726"
        },
        "item": {
          "id": "db33ee30-d01e-4aa4-a676-2735d230b953",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6da4125a-2c45-44da-a149-5213c24d3128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ed86bb-4cc7-481d-88ae-8e3a307e8887",
        "cursor": {
          "ref": "2a52602c-2360-4509-84b6-f9e37a47d547",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "89f03036-916a-4168-84d4-65f5183cdc68"
        },
        "item": {
          "id": "a5ed86bb-4cc7-481d-88ae-8e3a307e8887",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "569d00c2-76ef-4645-b987-739d95e4b733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526dd477-21a1-4464-b204-a71c9c109ae0",
        "cursor": {
          "ref": "48941935-3a5c-48f3-ab3d-b9c00d71c1ba",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b918d8b9-d574-47d7-904d-32e80adef90c"
        },
        "item": {
          "id": "526dd477-21a1-4464-b204-a71c9c109ae0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "12bd27dd-c295-49f8-b831-eb514b47c5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6b6664-4115-4d12-b0c3-ab482eeb866c",
        "cursor": {
          "ref": "b09676ab-f038-4556-82bb-ecc52815466e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "51ffc1c9-8611-4ffb-9d37-25e750a72a35"
        },
        "item": {
          "id": "3d6b6664-4115-4d12-b0c3-ab482eeb866c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "87e60cab-80c3-495f-881c-81add84f3baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17cb2f3-e4e6-4680-bff6-886ce7dbb589",
        "cursor": {
          "ref": "fc9bd48f-04af-48ff-b03f-e0b1f5e01bed",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "42ed00e7-f4d3-4d16-8e3d-0a604133543b"
        },
        "item": {
          "id": "c17cb2f3-e4e6-4680-bff6-886ce7dbb589",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "dd1ee374-7c1b-4ab7-ac92-133b2ec60d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381191e5-ec53-474b-9061-09604304d865",
        "cursor": {
          "ref": "2e89d890-3b78-4b4d-98be-ae1b3fcb0a78",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "752760d8-72f0-4fc9-9b95-a4f346fe083e"
        },
        "item": {
          "id": "381191e5-ec53-474b-9061-09604304d865",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b909da3b-0804-49b2-8c10-910208ef2c83",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b063a650-23de-4db5-b656-9921cdf6dd2d",
        "cursor": {
          "ref": "5683d167-b647-4b8c-8763-c342ed588b9c",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e2f5218c-25c4-4240-9da5-76c2818e3fba"
        },
        "item": {
          "id": "b063a650-23de-4db5-b656-9921cdf6dd2d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0444b0db-14ca-4d38-a18f-9f25a4f75173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfb8776-9109-4e5b-a209-b23cf470d125",
        "cursor": {
          "ref": "3e97ca72-976d-4092-815b-a1ff59f1ab6b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "39414760-a9a7-4d8f-bea6-ff5b3f525142"
        },
        "item": {
          "id": "dbfb8776-9109-4e5b-a209-b23cf470d125",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7f08d558-4ab7-4e8a-9c1c-e802b6ffe38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5399b90c-9465-42e4-a2ce-e4dae69a1adf",
        "cursor": {
          "ref": "bf4b76ac-030e-4d1c-8c9d-cbc2eab2f706",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "91dc2863-5320-4d00-91bf-e5efd5757579"
        },
        "item": {
          "id": "5399b90c-9465-42e4-a2ce-e4dae69a1adf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "512ee849-e2a2-49ec-91e2-0d351898f487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631dde26-52dd-4e7d-a339-bd7f97cda194",
        "cursor": {
          "ref": "5c995e57-1ed8-4a97-92fc-598b6771a1da",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "15ade95b-6546-4044-8972-260c25dfde61"
        },
        "item": {
          "id": "631dde26-52dd-4e7d-a339-bd7f97cda194",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7cb33582-fcd5-4343-b08b-b0d3180337e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d79865-0ee5-476e-91dc-18f46727c980",
        "cursor": {
          "ref": "017c30fe-aa30-41b2-96cf-c03662fb1626",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c8df05e1-c1f5-401e-8864-bd6ee799da8a"
        },
        "item": {
          "id": "d6d79865-0ee5-476e-91dc-18f46727c980",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "15a534e3-5599-485c-8a31-46134c2ec263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e4ab3a-6e8c-4f86-8fd1-2296ced6f5ae",
        "cursor": {
          "ref": "11355a71-cb88-4242-8bb9-9e79204d2a73",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0bf98c29-dd83-4c9b-8e8c-4716aea80b57"
        },
        "item": {
          "id": "02e4ab3a-6e8c-4f86-8fd1-2296ced6f5ae",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b024636d-d71f-46c3-92d6-e2bae47c2df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193a910b-9e30-43c8-9bed-7602663e6646",
        "cursor": {
          "ref": "9a8389bb-acc5-460a-a00f-f6dc7fa9f005",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8fba93fd-7b9a-4665-8e88-332221190390"
        },
        "item": {
          "id": "193a910b-9e30-43c8-9bed-7602663e6646",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d3cea191-9a1f-4402-a871-89218bd57969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a714f4d-1b6c-4435-8343-d9cb317e69e4",
        "cursor": {
          "ref": "9e638969-1d06-4f7a-8c24-88c9827c7c99",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ab9116ce-45f3-448f-827f-c44d82acada9"
        },
        "item": {
          "id": "4a714f4d-1b6c-4435-8343-d9cb317e69e4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "06eb1458-6820-4782-917a-393ffcba063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc214cd0-eb30-4b3c-83a3-12f08f2a2146",
        "cursor": {
          "ref": "1c1e5e68-6684-47e2-98c0-44d73474b03e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9d77d700-50c9-4c38-a085-de7ab215aa85"
        },
        "item": {
          "id": "fc214cd0-eb30-4b3c-83a3-12f08f2a2146",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46d98635-680f-4056-ab40-d8ad43f0d8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83962ec5-4b98-4a46-93ee-6a681411794f",
        "cursor": {
          "ref": "2dffdb4d-19e1-423d-af7e-868726c4ef36",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fd5a2f2d-a0bd-4cb5-a0bc-ecc7ce3ceb4b"
        },
        "item": {
          "id": "83962ec5-4b98-4a46-93ee-6a681411794f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0632ba5f-a137-4b8c-a539-b2c1cb58ec24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1f7a51-609b-4625-80fd-a7c343b55543",
        "cursor": {
          "ref": "df6a44e0-32cf-4ece-9900-516ab6225756",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f3775d26-8fe6-4343-a64c-863b510c896d"
        },
        "item": {
          "id": "2e1f7a51-609b-4625-80fd-a7c343b55543",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f12eab12-5dd1-4e22-87fa-0c6b8e73e9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7152b4d0-ce37-4a71-9ce1-08eb7e2fc4d5",
        "cursor": {
          "ref": "283ae215-04e0-448d-9c65-51dca503267e",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d8268471-877b-44f6-99be-7a7aa44be7b5"
        },
        "item": {
          "id": "7152b4d0-ce37-4a71-9ce1-08eb7e2fc4d5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c95ff49a-2d41-44de-a7b1-5f655b534af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2682046-78c6-4caf-9bff-c07f84bcddd0",
        "cursor": {
          "ref": "dcb26aae-e97f-443d-ab7f-cfb7fa02b29e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f1bd9ff4-bfbd-48dd-a526-934d7186c5e1"
        },
        "item": {
          "id": "a2682046-78c6-4caf-9bff-c07f84bcddd0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "eefbcaeb-d8e8-4590-865a-4e9f284fa296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b6b40c-95cd-4585-aa3e-c7a711276764",
        "cursor": {
          "ref": "b40960d7-2b85-4867-b4b3-2de7136efcd8",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "49dad76a-e82c-4e6e-9a5a-979fe0c491da"
        },
        "item": {
          "id": "80b6b40c-95cd-4585-aa3e-c7a711276764",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e739ce98-e821-4799-b5d4-3ab65282df9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee4c4e1-166e-4de4-8db6-bdd689060530",
        "cursor": {
          "ref": "d3a15c34-a1ef-4244-9bac-86c82b24c984",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ac2ae8ef-6a55-4a69-81d1-6df96a94e04f"
        },
        "item": {
          "id": "dee4c4e1-166e-4de4-8db6-bdd689060530",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6dc4889d-12f8-4298-94dd-4138e14eb314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46af8bec-30ff-4f03-a35f-689bff38a067",
        "cursor": {
          "ref": "27a2ec3d-9ea1-4a86-928f-323d1474691e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "16a6ab3c-6bb1-4d83-9dda-897e0c31e470"
        },
        "item": {
          "id": "46af8bec-30ff-4f03-a35f-689bff38a067",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4b7adca2-cbb0-419e-a821-77cb0451b75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9124b965-8de1-462d-b1bb-31466fd6948a",
        "cursor": {
          "ref": "cef6d082-ba35-4cf5-956c-2bcbce7257cc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e280f23c-a569-4f64-b804-e2ffa40ba8cb"
        },
        "item": {
          "id": "9124b965-8de1-462d-b1bb-31466fd6948a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bff25fd7-375a-48ab-9fa8-cfc7547fa144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c67a23b-25a2-489a-bdc1-bcf943bf4270",
        "cursor": {
          "ref": "bd2fba26-44d3-4d58-a8d0-3c3ae7c7e1bc",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1fb64e14-8ce2-4909-92d1-70f1e9ba89ae"
        },
        "item": {
          "id": "6c67a23b-25a2-489a-bdc1-bcf943bf4270",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "27fec4ef-9978-4b7b-9e9f-a69462da8165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5335bb31-096e-4cb5-a9a6-75cd5e5e02bc",
        "cursor": {
          "ref": "29f70236-ac27-4ece-8b47-9470f6f997e7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7088aedc-f2c5-4117-8f8f-e2005e6ea35a"
        },
        "item": {
          "id": "5335bb31-096e-4cb5-a9a6-75cd5e5e02bc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "971f2ecb-c493-4ef8-9459-42a952fbd884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b279c8-5723-4a12-8bb7-ea8d13c1afa3",
        "cursor": {
          "ref": "46ecbde6-3c82-478e-a994-9e6f2f0e6b16",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "65069c1b-49a7-4c6a-83ad-34ffe4112aaa"
        },
        "item": {
          "id": "48b279c8-5723-4a12-8bb7-ea8d13c1afa3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "23a0b178-1eea-4a20-9ff8-d8f42fd2fd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbe0fdb-b3a5-4fad-af18-6384c93b0144",
        "cursor": {
          "ref": "3243ab90-2e72-4de1-80ce-1f8525bf28f2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f79b2f1-948b-4fa5-892c-957aa351f2a3"
        },
        "item": {
          "id": "efbe0fdb-b3a5-4fad-af18-6384c93b0144",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f9adbd67-ebd7-46cc-b48d-77f17f9dc907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f249005-7140-4574-99ed-14fd316fe642",
        "cursor": {
          "ref": "061fc9aa-4dbe-4995-a4d5-a53ae7838f4e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a9630bf5-40d2-409f-a916-e18f63138099"
        },
        "item": {
          "id": "4f249005-7140-4574-99ed-14fd316fe642",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d200b37c-7f2e-439b-acad-1442fde448c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204f9760-c89b-407a-a9d3-3dd774b25b6b",
        "cursor": {
          "ref": "ac95b93e-265d-4a72-b768-49167d26e3f1",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c86f56f1-0f2e-43e2-905b-720731430674"
        },
        "item": {
          "id": "204f9760-c89b-407a-a9d3-3dd774b25b6b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "66e5b5ad-8e22-4deb-847c-625c489c59e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea44fc3e-5a81-49a0-b261-a41965f173da",
        "cursor": {
          "ref": "89ad4e18-bc5b-41a4-b5c7-f443212d91c0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dd840afa-87c7-4d01-a51b-49154be7ca67"
        },
        "item": {
          "id": "ea44fc3e-5a81-49a0-b261-a41965f173da",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "06d14691-9348-4016-b867-86c7d4acd74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b8c7e9-b4e4-46a4-b2d0-69aab689a9d1",
        "cursor": {
          "ref": "16124bbb-f3f0-4d4f-bc5f-0fc2e4055e67",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ddbb59b3-9c17-4700-9910-e3ef72990531"
        },
        "item": {
          "id": "84b8c7e9-b4e4-46a4-b2d0-69aab689a9d1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ff357a18-e329-4e6b-8273-9046983eb49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267a2d0c-1caf-4242-9548-ae7839ea7046",
        "cursor": {
          "ref": "b5931e37-03f3-48b1-aaed-cc1124c1d75b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f194ef3d-4641-4de3-bc3b-f185d166fdc0"
        },
        "item": {
          "id": "267a2d0c-1caf-4242-9548-ae7839ea7046",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "06527fa5-a36c-49e8-9243-82dba794ba1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97493048-5b51-4005-a859-341ec961d30c",
        "cursor": {
          "ref": "0e8a9668-237d-4e83-8a39-c9c2a6fb0904",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "803f3422-8868-4ed3-ae23-45195304597c"
        },
        "item": {
          "id": "97493048-5b51-4005-a859-341ec961d30c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4e899e33-7cdb-4108-8807-b04e3c4fe0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e6425-f9d1-4344-b572-2f065c35a52b",
        "cursor": {
          "ref": "f0a147ae-56e6-43fa-8355-2a903cb0f231",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a6aef057-6c34-4d45-9a69-b2ccd0f8d645"
        },
        "item": {
          "id": "602e6425-f9d1-4344-b572-2f065c35a52b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c2c4af53-3d0a-4cba-891d-01387faa9612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c39f06-5fd7-49e4-bb51-0d53ccfabfb7",
        "cursor": {
          "ref": "b529066b-1c5c-4a4f-b3fe-d6b5dd08246c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "33ed8488-d325-4e49-a147-4aab1f7dd4e9"
        },
        "item": {
          "id": "38c39f06-5fd7-49e4-bb51-0d53ccfabfb7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a93cc107-7ff8-4628-b9a8-4133a6f3c30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc51f7-f54a-47ff-8ecc-ab26cc9783d5",
        "cursor": {
          "ref": "38d7e505-3f31-46eb-b7ac-d09fb714d283",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bdb06b35-1573-4cd0-a9c9-dcf5136bb370"
        },
        "item": {
          "id": "02bc51f7-f54a-47ff-8ecc-ab26cc9783d5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4355f2c7-2ab0-4a1f-af2d-265e48c4260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1459a723-4970-481b-a045-18a909d032f3",
        "cursor": {
          "ref": "f85ff691-5392-405d-93b5-e0b7152a196a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f77e71a5-055b-485b-bcb6-166f1469f7de"
        },
        "item": {
          "id": "1459a723-4970-481b-a045-18a909d032f3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "987f6c1d-393a-4f8e-9e65-7f9a733deed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23a9c9d-29b4-4675-a124-1e4a5fccd525",
        "cursor": {
          "ref": "42ac0562-ce6b-4d5d-8756-b23c57960199",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "db0b3c08-62d3-4a17-8dcf-e11d8bc71ea3"
        },
        "item": {
          "id": "f23a9c9d-29b4-4675-a124-1e4a5fccd525",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6d15bd6e-7066-460e-8329-a0ddd14831ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5f49d1-6766-4475-99e8-c8e144f9c6e6",
        "cursor": {
          "ref": "d0eea064-8139-4ec7-ab19-cd2452154163",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f1882790-5d2b-4a71-993a-15fe16fed264"
        },
        "item": {
          "id": "fa5f49d1-6766-4475-99e8-c8e144f9c6e6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7b74342-4aea-4e36-91eb-e43890032362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1b9b1b-7ae6-4200-bc9f-b22f35c680d3",
        "cursor": {
          "ref": "0bc7f594-3d25-41c6-904f-d953360e3c74",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9230780d-3e32-485c-b5d1-7f8d97eba49c"
        },
        "item": {
          "id": "ac1b9b1b-7ae6-4200-bc9f-b22f35c680d3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e1dfe0b6-8b9b-4529-af5f-3be226a9a75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86350ebd-090d-440a-b019-20b0084a6a43",
        "cursor": {
          "ref": "124b979f-8727-4dad-a9bc-ae5dcbd206d1",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "259a8603-3984-4799-ba65-db55e737494c"
        },
        "item": {
          "id": "86350ebd-090d-440a-b019-20b0084a6a43",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c7b4ac0c-fb5b-4534-88db-2803cc72d930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc67a9cf-7c6f-48db-8534-2cd1bbf576d5",
        "cursor": {
          "ref": "2069c2cd-720d-4d61-b597-58838f501619",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "85c22400-611f-47be-84f7-e4597fac5d3a"
        },
        "item": {
          "id": "cc67a9cf-7c6f-48db-8534-2cd1bbf576d5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "394d4d4b-06cb-423b-8b10-ed5818afdc5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38dd59c-7ac8-4ae6-a775-2c8d9e417c93",
        "cursor": {
          "ref": "95ff53fe-a397-4da9-a0fb-e6a7c3ad168e",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cb36bb46-c66e-4000-a439-bf40ce374f51"
        },
        "item": {
          "id": "a38dd59c-7ac8-4ae6-a775-2c8d9e417c93",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "482356d7-70bd-4191-b3ad-bcfef8abab0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce15a092-3697-4b14-be42-9d0f2059649c",
        "cursor": {
          "ref": "128b87d0-1984-40cd-8542-96d66d8272e9",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1cfb121b-2353-4904-842d-a9d3a3160888"
        },
        "item": {
          "id": "ce15a092-3697-4b14-be42-9d0f2059649c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "67625316-26b0-4424-b3cb-7f77c1c8c017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4a131c-3638-4d89-8123-300ea64a4d79",
        "cursor": {
          "ref": "4345ecb2-48b8-41a8-8182-e9a7700ff118",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "371b36e6-a7e6-45b0-bdd0-eec77fb760b0"
        },
        "item": {
          "id": "1d4a131c-3638-4d89-8123-300ea64a4d79",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7b584b3e-4249-4125-879d-9e75df1dcd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e96f968-7b5a-4507-8e4c-ad503234d3df",
        "cursor": {
          "ref": "265c20e7-0cbc-4206-a59d-51f3b367f7cc",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5f733e00-6ef9-4c21-a224-8b488c344cbe"
        },
        "item": {
          "id": "4e96f968-7b5a-4507-8e4c-ad503234d3df",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "18d9cab8-7fb5-4c16-b162-b1c043f0d461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb0fa7-b71b-416a-b500-a5df101f9c29",
        "cursor": {
          "ref": "f69626a9-7e2f-421d-b670-d8e60751b176",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5fdfdd03-f080-427b-9071-18185b254fed"
        },
        "item": {
          "id": "55cb0fa7-b71b-416a-b500-a5df101f9c29",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6f881970-8ca1-477e-ace6-0f0a312b2c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51cb3b0-dc52-443d-9e7c-a46dec253e64",
        "cursor": {
          "ref": "4eb7d886-99e1-442b-8504-21085ded9a95",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5dd94aaa-a846-41de-932d-c90005749ea0"
        },
        "item": {
          "id": "f51cb3b0-dc52-443d-9e7c-a46dec253e64",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "28e926db-db0d-4b3e-884c-b0f521f644d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374731a4-6aa3-4110-8f46-a70a89d38f14",
        "cursor": {
          "ref": "fa64823d-6222-4ccd-a301-02500daf3342",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "51495873-312f-4833-8d43-044f843b78d6"
        },
        "item": {
          "id": "374731a4-6aa3-4110-8f46-a70a89d38f14",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7965ec2d-3208-4a28-8f5f-6c954603862b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6385b052-e1b8-4238-9b95-13af984a4d01",
        "cursor": {
          "ref": "101df75c-e7a6-42b5-8e97-48e237a03e85",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c716b9a0-e34e-4647-a577-2d5a068c80c4"
        },
        "item": {
          "id": "6385b052-e1b8-4238-9b95-13af984a4d01",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8d7748a4-81f3-4a5e-9924-ec1a71b3ad3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7d3d6e-42c8-4ced-9d32-05f44ba4f042",
        "cursor": {
          "ref": "aa209a0a-410d-4da9-bb6b-c828e75b34f2",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4303087d-2509-446c-91b5-1efe2460f6c5"
        },
        "item": {
          "id": "6e7d3d6e-42c8-4ced-9d32-05f44ba4f042",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c8a02aec-8b70-4abd-9ce9-13708293d23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8150c46-c3c6-4c10-a18e-297e86d78e6d",
        "cursor": {
          "ref": "9a7a341b-c2f0-4aee-b5a6-0816b831986e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c256fa0a-4a20-4f6d-988a-8953f0c1881d"
        },
        "item": {
          "id": "f8150c46-c3c6-4c10-a18e-297e86d78e6d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "544da101-3861-4a89-ae8f-3dec119691c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a663d13-064a-4ec7-b325-6499df65cf10",
        "cursor": {
          "ref": "9f7b4bbb-6d9a-4e5c-9591-457e931d4dcd",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d9567d70-54a5-41fe-9a6d-b62d04453b3d"
        },
        "item": {
          "id": "5a663d13-064a-4ec7-b325-6499df65cf10",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4828ec2f-31e8-42c6-b433-9429a6d6dfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa0f98f-b205-416e-9a09-239c97276388",
        "cursor": {
          "ref": "ab4b072e-ab22-4b97-b10c-afe8b7d8c2d1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8588c682-8f4c-40cb-bc6c-cec8904c9a04"
        },
        "item": {
          "id": "8aa0f98f-b205-416e-9a09-239c97276388",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "945050c5-4e52-4503-90b2-c9ed2bd040bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f967f6-5e79-414a-9c8f-7fd1a407ba9b",
        "cursor": {
          "ref": "7d71ea99-0fd9-4b01-8514-cd65e72f6f13",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "af4b1f00-025c-4ca0-8c06-39513070782f"
        },
        "item": {
          "id": "37f967f6-5e79-414a-9c8f-7fd1a407ba9b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "08ea54a9-7c33-4d7f-beb4-c8a5853a924b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b4c9e2-0970-435b-8e8d-f30b4e241e0d",
        "cursor": {
          "ref": "3142365e-abe8-4627-a99d-c8aaaa8a9a6e",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "182f1e66-c91d-4ffe-a63e-61809c7fe9b6"
        },
        "item": {
          "id": "77b4c9e2-0970-435b-8e8d-f30b4e241e0d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "317af8cb-05cc-4959-972e-faec41daa442",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde63410-a483-4303-93a5-c3beba8c1cde",
        "cursor": {
          "ref": "a0e4864d-8201-4883-b791-6de204e7beaa",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "88f13e55-a500-45e3-83cc-b72a25135e06"
        },
        "item": {
          "id": "bde63410-a483-4303-93a5-c3beba8c1cde",
          "name": "credentials_issue"
        },
        "response": {
          "id": "65d81171-bd08-4fff-af7f-1f1be1c7ad1e",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e73f3b-2920-440b-b082-996c37bebe06",
        "cursor": {
          "ref": "0f4b069b-4da6-4c2a-805e-8fd79ebf39d0",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "21d609b4-38cb-4039-b844-c0e7b34b8155"
        },
        "item": {
          "id": "58e73f3b-2920-440b-b082-996c37bebe06",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9c81bafd-e4e3-4b5b-876c-3f3d85709b4d",
          "status": "Created",
          "code": 201,
          "responseTime": 74,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8991d18-20d8-4fd8-8727-6c20c9834c65",
        "cursor": {
          "ref": "42c597dc-b8b5-4a75-8695-95c3e0fc1154",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d2b7831a-ae65-4f5b-b98b-4d056c16c4fc"
        },
        "item": {
          "id": "f8991d18-20d8-4fd8-8727-6c20c9834c65",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b80ba4aa-5b7e-4517-860b-916bf0c6ab3e",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "270dda24-143c-481c-b6b3-4fe348b7c99b",
        "cursor": {
          "ref": "aabf849f-36f4-4c5d-976d-72579622018c",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f778113f-8524-4e7d-af45-2358924f078f"
        },
        "item": {
          "id": "270dda24-143c-481c-b6b3-4fe348b7c99b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3d24b7db-94d8-4656-94e6-ef4859612813",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf55d9-a8ce-43af-8879-135a728fa0da",
        "cursor": {
          "ref": "9c8119ac-7757-4b3b-bc8e-c4115d536c1f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "efd3a2f9-3eca-4307-abde-4e1a373b70d6"
        },
        "item": {
          "id": "55cf55d9-a8ce-43af-8879-135a728fa0da",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "63d0f894-6be9-451e-a90e-d11612dd5f46",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "067f2478-8781-4b9a-afbb-d270ae1117bb",
        "cursor": {
          "ref": "52d87270-839a-4561-9e5d-07e8f0f0a4cf",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fa3c56c7-d171-416b-b309-7d9c56d04480"
        },
        "item": {
          "id": "067f2478-8781-4b9a-afbb-d270ae1117bb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cf1041ce-42c1-4b4b-ac9a-338483979e12",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279556b3-11cc-43f2-aa85-891a975aa446",
        "cursor": {
          "ref": "e7c11149-048f-4b3a-84ff-d40c47ac43b9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f59b4ca2-eb5d-4fc0-a35a-95796a93f817"
        },
        "item": {
          "id": "279556b3-11cc-43f2-aa85-891a975aa446",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4d4bb70c-9732-448f-a3c9-113c80f27ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba570e8-bfc0-456f-86ea-e298b9aab684",
        "cursor": {
          "ref": "d17db374-c223-40c7-ba11-c02ce75c9b14",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e799d246-6054-4955-9e83-5615f6db79b6"
        },
        "item": {
          "id": "8ba570e8-bfc0-456f-86ea-e298b9aab684",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fdb589fb-e4eb-45e8-a2a0-6cc34a337d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6aae05f-dd5f-43fa-9889-88aa40abb48f",
        "cursor": {
          "ref": "534bc0e3-9a59-45a1-9884-d0d4a9e0aeae",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "73b9d7f7-fb82-4fbd-b0aa-2f8b21243fbc"
        },
        "item": {
          "id": "f6aae05f-dd5f-43fa-9889-88aa40abb48f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3461c795-fa31-4b8d-a12a-0defa5d6915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5effc30-a830-478c-b554-932412b42838",
        "cursor": {
          "ref": "a09ecbca-3b2f-4b28-a1de-4493308d292d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "899cde9d-4835-4ed9-b3c0-85b1811aefad"
        },
        "item": {
          "id": "d5effc30-a830-478c-b554-932412b42838",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b9344d2-9b57-4572-b5c7-d662f652d1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e137a53-919c-4d84-93c0-af6ec4c5df32",
        "cursor": {
          "ref": "0ec0172e-8596-401f-bd3f-cad9cf9de2f5",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "df0eff4e-31f0-4608-b85b-69d1cd9623aa"
        },
        "item": {
          "id": "4e137a53-919c-4d84-93c0-af6ec4c5df32",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b739b855-000f-4c8f-8bc9-1b25cd8dc38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5094363e-ee09-4d97-90e8-d87471bb027c",
        "cursor": {
          "ref": "1907c146-d548-485b-9411-06899592748b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6cdd0a0f-cdb3-4554-a9f2-aa539f923699"
        },
        "item": {
          "id": "5094363e-ee09-4d97-90e8-d87471bb027c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa1a094e-ee6a-4a96-9df1-f4cb7a477282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d05d1cc-69d2-46b0-a6ab-1de9272c47ad",
        "cursor": {
          "ref": "39c5f4f9-c4d0-4db1-a7de-25f97201dc2d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "efa1f9fb-e620-4658-bbe9-94a48cf34825"
        },
        "item": {
          "id": "4d05d1cc-69d2-46b0-a6ab-1de9272c47ad",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af6122f0-971e-4a70-972b-64babc6b3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb78c49e-e8db-4f19-b3e7-9f0cde53dc9d",
        "cursor": {
          "ref": "41f3ee05-a513-4c4d-96eb-5bf3489804c6",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f47cbd6-6249-4118-be5c-5a4a1e84306a"
        },
        "item": {
          "id": "cb78c49e-e8db-4f19-b3e7-9f0cde53dc9d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f2c0f6c8-9d8f-455b-a954-b075e16b089b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d544caab-f72e-4d91-a160-f89e7341c803",
        "cursor": {
          "ref": "8276827f-ede5-45f2-b801-291e8c4ebde7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca2af78a-2427-4c85-a14b-992ac79ab025"
        },
        "item": {
          "id": "d544caab-f72e-4d91-a160-f89e7341c803",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e8cdcaa7-86a6-480c-be53-4a81046492d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd1bfa3-3fb8-4393-b0a7-dec5d075ca20",
        "cursor": {
          "ref": "3b391ecc-e4eb-460c-b886-3d352d1adedd",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9c17b3db-40d6-4708-bcb4-4059cf35f17c"
        },
        "item": {
          "id": "ffd1bfa3-3fb8-4393-b0a7-dec5d075ca20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0e429936-6703-4d62-b82e-9393b60b5d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fe4858-270f-4872-a8a0-dff6c0871e4c",
        "cursor": {
          "ref": "8925b9f3-e6de-4b37-a388-df402f823642",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "36f5a14a-f672-49ed-9132-bd1a5f8aeb46"
        },
        "item": {
          "id": "75fe4858-270f-4872-a8a0-dff6c0871e4c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "7de26794-8e32-43d7-ab6d-88cb40d5c639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a307c-ee5a-4641-9bc8-acf4dc9b4f65",
        "cursor": {
          "ref": "3c7f1b32-adee-47da-a1b3-1707e4d6556f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "99fc974d-6bb8-478f-9043-ed74d1852b32"
        },
        "item": {
          "id": "462a307c-ee5a-4641-9bc8-acf4dc9b4f65",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "75a6eb31-8477-4505-b9a5-e0d68dc03432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b816b7fb-b672-4aa7-94d0-158dcdd17b20",
        "cursor": {
          "ref": "6cd6ca16-628d-4b39-9ce2-f78d800f6c15",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b888a4f5-14c9-4fdf-8217-684fc1294091"
        },
        "item": {
          "id": "b816b7fb-b672-4aa7-94d0-158dcdd17b20",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "986238c6-6d39-4d20-a485-6642a90e1e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d09d0b0-9c88-40d4-b3ee-cd275af36e13",
        "cursor": {
          "ref": "76256c8f-3bf9-4010-8528-69d0c234fa45",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fa03d316-4168-4d9c-89ad-2fd0b359103c"
        },
        "item": {
          "id": "4d09d0b0-9c88-40d4-b3ee-cd275af36e13",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f45903b7-0b73-4fe2-bfce-1e001e68219a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d02522-aba3-4f71-8298-8f52b6aab7db",
        "cursor": {
          "ref": "2138a1c6-c88f-4ea7-ae05-ba4c9c0dc78b",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "883e8722-161a-4dd2-ad72-25f33bf886ef"
        },
        "item": {
          "id": "14d02522-aba3-4f71-8298-8f52b6aab7db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0d36b208-9879-464e-bb33-f3d6eff41501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618f5bc8-a017-4eaa-81ce-7b575cf5b1d7",
        "cursor": {
          "ref": "326a19a1-fc33-458b-9740-f1b271d6687d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "07e4b08d-eb26-4bb8-a48e-85bebd135c3e"
        },
        "item": {
          "id": "618f5bc8-a017-4eaa-81ce-7b575cf5b1d7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c7fc4cc-0a74-427a-b397-b06700219b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9f79d8-b731-40f0-9588-ebd9222a1d22",
        "cursor": {
          "ref": "866b4fe1-0dbb-4a6b-b9ec-dbe2acc66830",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "476e0925-26fd-4a09-8c78-0405bdba82aa"
        },
        "item": {
          "id": "5d9f79d8-b731-40f0-9588-ebd9222a1d22",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "45e7b8ae-0952-4533-9bdf-4ba790098c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec898be5-cdb7-47b3-aa3f-699c5d9313c5",
        "cursor": {
          "ref": "acf298ba-fb1e-400a-88b0-f6dc01e98973",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ad79be13-c48e-4378-a7c0-13a2900b51a0"
        },
        "item": {
          "id": "ec898be5-cdb7-47b3-aa3f-699c5d9313c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6a93234e-bcd8-44e0-a4dd-998c4a6ee8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d082f18-c9d2-425d-a064-3d3a6e233e70",
        "cursor": {
          "ref": "932181a9-79b1-4b01-9d9f-57b6bb2a3c09",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0a5b3dd4-9574-4d87-bd1e-376293412239"
        },
        "item": {
          "id": "3d082f18-c9d2-425d-a064-3d3a6e233e70",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7ab8701-eef4-4bea-98cb-4f0fcf9cf954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c63c42b-b6c9-4c37-8338-c45ae1f50b5e",
        "cursor": {
          "ref": "f2a901a2-5d1c-4941-90dd-014762f71bbf",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "67a7750c-8da5-4592-8c25-42434127b221"
        },
        "item": {
          "id": "7c63c42b-b6c9-4c37-8338-c45ae1f50b5e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "135eb12b-1e43-40b0-adda-fb28efb472be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0779f26e-2c3e-447c-88ba-d0b7129d9d82",
        "cursor": {
          "ref": "e339a884-0572-4876-9b39-e6ba081fd8cb",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86496d17-a30f-43d8-aab3-371826389355"
        },
        "item": {
          "id": "0779f26e-2c3e-447c-88ba-d0b7129d9d82",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c39c091e-625b-4ad5-b412-cf503b0c6350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256e07d0-93a3-4303-b1e4-6c3803779393",
        "cursor": {
          "ref": "ccbc5d22-b0f7-4f49-90f8-faca513049aa",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "442374a3-1bf8-4486-8aaa-70c3accce8b2"
        },
        "item": {
          "id": "256e07d0-93a3-4303-b1e4-6c3803779393",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cdff3e02-2457-43a0-9d0d-76591d7a3b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf516ef-ad29-4531-92ee-cd7fba52dfc5",
        "cursor": {
          "ref": "3bcd212d-76e9-4613-8fb2-4f683afbfbd8",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "61e46bdc-31bf-4152-a670-e864d66f0245"
        },
        "item": {
          "id": "0cf516ef-ad29-4531-92ee-cd7fba52dfc5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c674e22-a211-4906-b59a-c2fb0647080e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95264d73-1e34-48c3-9260-a8a85e05b985",
        "cursor": {
          "ref": "67f36d81-198e-4cad-a060-f014c1328cd2",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a0e03746-578c-4264-bb0c-6a3d1f6590c1"
        },
        "item": {
          "id": "95264d73-1e34-48c3-9260-a8a85e05b985",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5ec3e59d-15ae-478f-adf5-f2ad27dc2841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afae829d-7f5c-4adb-aaaa-ad6895cb02a3",
        "cursor": {
          "ref": "a5eef914-61ea-45e0-abae-bef900eae9b0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5d7f1b5f-773e-4426-b035-8e2e8491eddd"
        },
        "item": {
          "id": "afae829d-7f5c-4adb-aaaa-ad6895cb02a3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "51d4fd7b-91eb-4769-97e5-4100d2f7b327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693801c8-80f0-46d2-8000-ed6f916d7cfb",
        "cursor": {
          "ref": "85aeef39-3c81-4baf-88a6-6a57bbc26fee",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0a448ced-9233-4936-b596-cc2365012e3d"
        },
        "item": {
          "id": "693801c8-80f0-46d2-8000-ed6f916d7cfb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd3ee99c-34fb-4f69-bcc8-872b6260951e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8c6f4b-766e-436e-a20a-3bb29a06e867",
        "cursor": {
          "ref": "2e92bd05-6f24-4e01-b5a2-d979839a67af",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7012d242-5a7a-44a7-b1e1-347570fb26b3"
        },
        "item": {
          "id": "5e8c6f4b-766e-436e-a20a-3bb29a06e867",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "31e82c6c-93f3-4687-8892-af2effeffea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07656a80-3825-4193-a064-8f34e5787fbc",
        "cursor": {
          "ref": "01af7f7d-af7d-469f-8ec2-198d3feff883",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0f7c71d4-f55d-4791-ab1d-d03fca4600df"
        },
        "item": {
          "id": "07656a80-3825-4193-a064-8f34e5787fbc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7110d496-9a48-4f72-a119-579f0fd087c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b61613-24f0-48fd-9cae-daf5dc20e253",
        "cursor": {
          "ref": "0aa685e4-3cea-4e14-bca3-099626a48a1b",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "70eff660-2e1f-47d1-bac3-439c4b857347"
        },
        "item": {
          "id": "f1b61613-24f0-48fd-9cae-daf5dc20e253",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0a2466d5-5a95-4536-91e1-f7ab580c067b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446b0f64-5022-4b04-af08-8ff83fecb876",
        "cursor": {
          "ref": "6e9a6f6b-53bf-4129-bf0a-9ca68c39edab",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d3f0a938-9a92-4f40-afaf-4e5b5dfcf2f4"
        },
        "item": {
          "id": "446b0f64-5022-4b04-af08-8ff83fecb876",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d259ebb8-dca1-4093-a233-c767ff47ff19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1062e-d175-40f0-9b63-3ea523bcbb8a",
        "cursor": {
          "ref": "afaaf5e5-6441-41ea-b895-11c88fadb1cb",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1097e6bb-206c-4cde-bf06-6a943d86984d"
        },
        "item": {
          "id": "f0f1062e-d175-40f0-9b63-3ea523bcbb8a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9405c793-db3c-486a-9420-0dda875268a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488637ea-bf97-4a5a-a2e1-b3388e653c4b",
        "cursor": {
          "ref": "a84151ee-f5a9-4192-9e04-e8494e6f4501",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "29faafcf-604d-4168-87bb-4e8688b14b14"
        },
        "item": {
          "id": "488637ea-bf97-4a5a-a2e1-b3388e653c4b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cff7e3c6-512a-4761-8549-526316f9e5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57df062-2fc3-46db-b785-ab572a9d6b7c",
        "cursor": {
          "ref": "538d55b3-2275-4ced-ba03-3c23fa78795f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0f7c3700-1890-4b07-9c4f-05a321a58d3b"
        },
        "item": {
          "id": "b57df062-2fc3-46db-b785-ab572a9d6b7c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7b38fe5c-3f8c-4f9f-8fc2-9e33eda0f391",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f693cb-380d-4921-944e-5bd992efefcc",
        "cursor": {
          "ref": "7f6f073f-a2c8-479c-9c94-d60ce6182190",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "792f4ab2-56ea-4196-979e-4be866f613c9"
        },
        "item": {
          "id": "13f693cb-380d-4921-944e-5bd992efefcc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8041f557-e2e1-4905-81cd-f9f5bb58b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b75b20-875c-41f7-9a65-472ce9753680",
        "cursor": {
          "ref": "2dd55029-d7f2-4fa0-86db-b307c8ef68c6",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0e094e50-0734-4e1a-bfbc-6d73ac2db9e8"
        },
        "item": {
          "id": "77b75b20-875c-41f7-9a65-472ce9753680",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a89c06f4-de70-41db-bce4-4fcb4ffc80e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69967297-7486-4c28-a46c-bae138f5bf5d",
        "cursor": {
          "ref": "fe46b85e-ff19-4eb6-8b5d-6c804f80409c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3b99a3d8-2a9a-4ae2-971c-4e63c99583f6"
        },
        "item": {
          "id": "69967297-7486-4c28-a46c-bae138f5bf5d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d79a574-55a7-48e7-8422-e01fca4de9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84573cb-f1a8-42d1-9b9e-c53f3d124299",
        "cursor": {
          "ref": "389e7759-0df0-457f-8c0d-89ce5d54850d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "927ceb01-cf84-426e-a2b7-fd43804c2196"
        },
        "item": {
          "id": "b84573cb-f1a8-42d1-9b9e-c53f3d124299",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e77e401a-17f2-4246-9e2b-7652b2e8ed5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc294361-8f77-4666-ba87-5341a9b0f7ee",
        "cursor": {
          "ref": "c81458f1-aa41-44c3-a9d8-ce95be138f5a",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3292ab17-b86b-4633-ab68-a4a97ec79b46"
        },
        "item": {
          "id": "dc294361-8f77-4666-ba87-5341a9b0f7ee",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5348c51f-1c65-491f-a88d-811726bb0c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf01dbf-bed4-4e54-b17a-8e23df810e83",
        "cursor": {
          "ref": "b6b690f7-d74b-425c-9760-e05936014d4b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "54de757c-2e4e-44ab-a951-a7a3f7a726b2"
        },
        "item": {
          "id": "5bf01dbf-bed4-4e54-b17a-8e23df810e83",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c2b00b7a-46b1-4506-b6ed-f4438fbac4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9d1d29-58b9-48fb-a571-eda5dbfe311e",
        "cursor": {
          "ref": "e25680ff-ab0d-49bd-88d1-4550a32a671d",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aaf9cd90-41a2-42a4-9668-1ffcd192c98b"
        },
        "item": {
          "id": "bd9d1d29-58b9-48fb-a571-eda5dbfe311e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7664d5e-7a24-4d50-9aa0-4e8edd9a69dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01407557-6ac4-4b7f-9352-04c50b9751f9",
        "cursor": {
          "ref": "4ad357ed-65ee-4459-bef7-2aebf6953bce",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de5d7966-56b8-4ab2-af90-66239ad0c335"
        },
        "item": {
          "id": "01407557-6ac4-4b7f-9352-04c50b9751f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6a733996-2a81-4992-96b2-d80b80988145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42593bde-61f4-44de-9b8a-0875cf09df9a",
        "cursor": {
          "ref": "7cbdfbd1-78bc-4dc3-a606-c4329c88fb5d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "55a8ac99-f0f2-4868-9aff-a772bc2ad031"
        },
        "item": {
          "id": "42593bde-61f4-44de-9b8a-0875cf09df9a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b6d600e2-d484-4929-992f-e1a8d1903450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c1da78-6472-4a2f-994c-2b63aad34e09",
        "cursor": {
          "ref": "af7e9f43-a8e3-48fb-b667-c36b339c874c",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5496ee59-a936-4dd1-90df-40f60b40d58c"
        },
        "item": {
          "id": "c6c1da78-6472-4a2f-994c-2b63aad34e09",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0ee79e49-7369-4583-8e2e-8368c7cbe204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f951ab9-f2c2-4d72-99da-8799f4fbda9d",
        "cursor": {
          "ref": "0e996502-3839-4651-ae18-e40c11910ffd",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "795e41df-248d-4f5a-904a-4ebedea4f1e6"
        },
        "item": {
          "id": "0f951ab9-f2c2-4d72-99da-8799f4fbda9d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ae3c551e-4001-4590-8c44-a5fb6c0b4a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19705e85-7357-461e-90cb-0e9f70fce0da",
        "cursor": {
          "ref": "3c356871-2e5c-4d9d-bd15-e82722fbc946",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "aac8a27c-a05b-4601-ad68-5fbb08e4df27"
        },
        "item": {
          "id": "19705e85-7357-461e-90cb-0e9f70fce0da",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ed04bb65-c957-45c1-84ab-b73a6f9e6c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd95bbb0-a41c-461d-a836-9272f39163ad",
        "cursor": {
          "ref": "90687e74-b631-4f8d-b200-673db3583bec",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c6a8128d-175c-4163-82fa-b9182812d5ae"
        },
        "item": {
          "id": "cd95bbb0-a41c-461d-a836-9272f39163ad",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ad41df5a-b864-40d0-91f7-ab4516de4d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de53c4b7-9e6a-48fc-91b8-9759e07fde8d",
        "cursor": {
          "ref": "a253fe66-cd49-4158-93e1-2b5482b31e26",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7245d4ea-3478-45c2-bc8c-a1cd46a8531d"
        },
        "item": {
          "id": "de53c4b7-9e6a-48fc-91b8-9759e07fde8d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3d859c10-a80a-4fe2-8595-77cfb6f0cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd13e8a5-1a87-4d9a-83b7-24be90656872",
        "cursor": {
          "ref": "093ce56e-b6cd-42e8-9291-0561edac1f37",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "255edc00-a980-4658-8edf-2f15ecf4275b"
        },
        "item": {
          "id": "cd13e8a5-1a87-4d9a-83b7-24be90656872",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1f10a324-0416-4a70-b7bf-2236b2bb8f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7398d5-444e-4ff4-b2c1-12a3439980ad",
        "cursor": {
          "ref": "a82354e1-dab6-4ff5-a06f-db2139260836",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a113aca4-b9f0-4062-8b53-1d36f308c27c"
        },
        "item": {
          "id": "8d7398d5-444e-4ff4-b2c1-12a3439980ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d5a8482-d646-42da-9bcc-997ccca58fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64d4d8f-d096-49ef-8de0-3bb1e82dc98f",
        "cursor": {
          "ref": "c22c1cd5-29e3-409c-a81e-7f46b43ac3fc",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e6ae4b15-2062-4e6c-9ac0-f54e983bc7eb"
        },
        "item": {
          "id": "b64d4d8f-d096-49ef-8de0-3bb1e82dc98f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b77ed7a9-f1f0-4433-8483-7b00e63f0f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26ac89e-17e2-4cb1-9ba8-3b3192393ed7",
        "cursor": {
          "ref": "3f88b828-2ef9-46fc-9f34-61985b2bae06",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2e77bd28-52ed-4d68-b9e4-ad31a891face"
        },
        "item": {
          "id": "c26ac89e-17e2-4cb1-9ba8-3b3192393ed7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "84641cc1-ea3b-490d-9387-7f51c4d92b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b57519d-1b14-4b7e-9812-c1914f632ce2",
        "cursor": {
          "ref": "4d10bb36-3f84-43bc-a613-926073716138",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e6750c60-1815-4d35-abf6-8a1d3a4b539c"
        },
        "item": {
          "id": "3b57519d-1b14-4b7e-9812-c1914f632ce2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3de6a6dc-0d6c-4eef-95cb-c629cc6a8c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f20b46d-e16b-4161-8982-b2ad636231ba",
        "cursor": {
          "ref": "598fdaed-0d97-435d-8550-57afa7d12f2c",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ffcd0e7a-83a0-4497-b20f-ac663cda0db0"
        },
        "item": {
          "id": "3f20b46d-e16b-4161-8982-b2ad636231ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ea3f041c-9b9d-4721-b807-f71cfcc6609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f57c5e5-d499-4bc6-85e9-77e64db30d71",
        "cursor": {
          "ref": "3a613391-b984-474e-9119-ff36b6a62e4d",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f543b71b-b2bb-47a3-841b-64aa40eb04c8"
        },
        "item": {
          "id": "7f57c5e5-d499-4bc6-85e9-77e64db30d71",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c2c1b18-4714-4609-aa0a-0178468a989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ae4231-d05c-48c9-acea-8aa18ac14819",
        "cursor": {
          "ref": "db45586d-a559-4ef1-89a6-867235629f7f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2f5ef303-7b1e-4ce0-8a50-160361236154"
        },
        "item": {
          "id": "d3ae4231-d05c-48c9-acea-8aa18ac14819",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12043edb-b156-471f-85a2-49de3f6ee849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad44e08-29d2-46dd-9d20-ca42e9ebb474",
        "cursor": {
          "ref": "fedcb9d4-bdb2-40d3-beee-6bbc317d7773",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b989c3a7-5fb5-40f9-84cc-bc6a9fe42652"
        },
        "item": {
          "id": "9ad44e08-29d2-46dd-9d20-ca42e9ebb474",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2cf8309d-06b0-413c-9436-7101f65c087c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b408b4a6-8982-4f77-8a02-991ded7146a7",
        "cursor": {
          "ref": "632dc69e-3f94-4e7d-9c51-5e4d0fd6613f",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "35baafe1-f75e-4bbf-b44b-ae1c48045080"
        },
        "item": {
          "id": "b408b4a6-8982-4f77-8a02-991ded7146a7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b1e61a29-ad77-4457-94ab-b32ad70d4d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cd7110-0b2e-485a-b932-f940088736dc",
        "cursor": {
          "ref": "1c5b458e-712b-4d32-a9b1-727cb8399368",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5692735-4637-4fcc-8278-1805961b6db1"
        },
        "item": {
          "id": "35cd7110-0b2e-485a-b932-f940088736dc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f8486807-f941-4c39-bbb7-aefc01dea0e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2db7cce-e461-4ba5-9465-da14741993be",
        "cursor": {
          "ref": "0baddb24-fd9e-4c12-be8f-44d55fdcb986",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "23fa162f-0c9c-4d70-91ca-a108efc4550d"
        },
        "item": {
          "id": "a2db7cce-e461-4ba5-9465-da14741993be",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2c9a34aa-7e0c-4df8-841a-c94502ce5c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634eb11e-761c-4d06-86ba-bd099e8218bb",
        "cursor": {
          "ref": "9faba375-0eab-4f44-9325-baceb55647c2",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b14b6a09-6a24-4a1b-80a0-2e75fe92448e"
        },
        "item": {
          "id": "634eb11e-761c-4d06-86ba-bd099e8218bb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "20394642-482c-4a85-b8e4-e39bb3ce5c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc072791-e0e6-4b8b-85ea-ae62e9f7c916",
        "cursor": {
          "ref": "937eaa20-69c7-4e7a-9188-66d5357775f9",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "50919e40-33ff-4b84-8388-96b7b35a9934"
        },
        "item": {
          "id": "fc072791-e0e6-4b8b-85ea-ae62e9f7c916",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9925b64b-c042-423c-ab59-ed32fca42ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de66496d-fcfb-4b2d-8c99-e781f57fb79d",
        "cursor": {
          "ref": "d2d287a4-2bd4-40e1-96cc-9eabe9cb4232",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7313a10a-d1b2-473d-81ed-61d8db3d3df1"
        },
        "item": {
          "id": "de66496d-fcfb-4b2d-8c99-e781f57fb79d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff2d105e-7801-4457-aa1d-935b18a21120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126667a0-2278-4d04-a81d-7b12c21bc359",
        "cursor": {
          "ref": "fc2685f5-f8b7-4c82-a397-169b8b5874e0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9671bcea-a4c4-46ff-8723-c7a42f95ee5c"
        },
        "item": {
          "id": "126667a0-2278-4d04-a81d-7b12c21bc359",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fd6ba7d2-ef30-4265-ac49-6a96b37428f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ddb5ac-f5b2-4f67-bdcf-859c4c863bb5",
        "cursor": {
          "ref": "de73fd4b-a92a-4618-bc49-5c490649d47e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3574170b-7167-4522-84a2-5cd72338deef"
        },
        "item": {
          "id": "b8ddb5ac-f5b2-4f67-bdcf-859c4c863bb5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c1ff24c4-831f-4e0b-b050-6656a1d25d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4218d7c-fa54-4132-a1b4-f8309b02597c",
        "cursor": {
          "ref": "e75a84fb-5883-4f6b-93df-a8e4773cc05f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d23b5180-34ce-43c9-9052-83521d5a5a2b"
        },
        "item": {
          "id": "a4218d7c-fa54-4132-a1b4-f8309b02597c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "be952901-bc04-4aa7-9768-6ea224d618e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2dddb4-ef8a-457a-8c9e-c838aed12b5b",
        "cursor": {
          "ref": "fe772a4a-8f52-485f-9237-1900c8837f9a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0c11ef64-df4c-42a7-9359-94a019a02d27"
        },
        "item": {
          "id": "fd2dddb4-ef8a-457a-8c9e-c838aed12b5b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "99632659-e6c8-4ce0-b4bf-0ae6984d41ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3af7c3-f9f7-4c2e-ba8e-95ee1e60f18b",
        "cursor": {
          "ref": "18b5381b-33c6-4ebc-b62c-2e957f691ecd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "80c75cd6-a7b8-4be0-92d5-695f805400fa"
        },
        "item": {
          "id": "ac3af7c3-f9f7-4c2e-ba8e-95ee1e60f18b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "356c69c9-857d-4fd1-995b-9c9f449def10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7b6bac-f745-4c1d-902e-c1b3573437c0",
        "cursor": {
          "ref": "ff9ee787-5c0d-4da1-a674-0e85cfb8b1a8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "08687b71-82f3-4522-834c-b4cdb42b124f"
        },
        "item": {
          "id": "df7b6bac-f745-4c1d-902e-c1b3573437c0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d591aa83-8ebc-4181-a95c-ab579dcc29fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b41ed4-5ba1-48d7-8aa3-378ead0305f6",
        "cursor": {
          "ref": "c1dfd6b8-fb36-4a6f-883f-203e35df4798",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dd94c900-dd01-49c7-8a9f-8a9c36d31228"
        },
        "item": {
          "id": "62b41ed4-5ba1-48d7-8aa3-378ead0305f6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4dc6a5b4-921c-4f0c-b53b-18a8ad24a4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beb53db-1a78-4e95-a6fe-0e6ababf4af2",
        "cursor": {
          "ref": "ad10174c-6a20-4a44-ae07-ed6f315f51b3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "08e0cfd5-9fea-428d-a502-3d0f759671cf"
        },
        "item": {
          "id": "8beb53db-1a78-4e95-a6fe-0e6ababf4af2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8581e6e7-d2ce-418a-ae55-4f96ed3f7556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29213d08-d473-4780-ab88-06d70b76ed91",
        "cursor": {
          "ref": "6d29cb00-d69a-47b5-921f-7d40c38fc485",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7e6ae531-6266-4af9-bfaa-743de43cf724"
        },
        "item": {
          "id": "29213d08-d473-4780-ab88-06d70b76ed91",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d1325b18-8083-4213-9294-15399e398183",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf2e7a-467a-469e-bc73-64401ba06617",
        "cursor": {
          "ref": "1b03e60d-7f32-48aa-851a-16f217f82c80",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1e78cfc-e5ee-46ac-b7f4-d174a4f258cb"
        },
        "item": {
          "id": "f8bf2e7a-467a-469e-bc73-64401ba06617",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e1849c6a-043f-4784-bd50-aecef9901ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da94b1-35c8-4822-b19f-871a2b0f82f0",
        "cursor": {
          "ref": "9132544f-73dc-4a52-941d-666e2118bde1",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c34cf579-069d-46c0-9813-5c25293410c1"
        },
        "item": {
          "id": "50da94b1-35c8-4822-b19f-871a2b0f82f0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "cd62b965-950f-4e73-880b-c713c041dd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86a47f-e3eb-409d-a2bc-16e478a94567",
        "cursor": {
          "ref": "c0ee4347-7775-4788-bf19-28c72a76ee5e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3f7b8c65-6a83-45ae-98f2-234cbfdffd8b"
        },
        "item": {
          "id": "5d86a47f-e3eb-409d-a2bc-16e478a94567",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e89fc111-e44b-4323-84ab-b101db6745a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8995030d-09a0-4e53-8a23-a7ac156c9ed1",
        "cursor": {
          "ref": "9e2a6068-77fa-490a-9872-3147eaea13e8",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4ced9189-dd8f-4fc0-9c62-7028aed42c04"
        },
        "item": {
          "id": "8995030d-09a0-4e53-8a23-a7ac156c9ed1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "df5e133b-c973-44fc-abde-3bda214d14b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1610a22-907f-4e3c-994a-7132cb5858f6",
        "cursor": {
          "ref": "8d016e01-1194-4d1f-9c0b-c87ee7dff68b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7303513a-a3ad-44f0-bc3f-95ef49983a9e"
        },
        "item": {
          "id": "d1610a22-907f-4e3c-994a-7132cb5858f6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "68b71b21-56bc-4a91-965f-ee5f46544d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b468084c-8220-422a-96d5-1ca532d781f8",
        "cursor": {
          "ref": "023a4a03-4871-47a6-929a-87f46cc5ef6b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "28839daf-0952-4001-93e0-28b31bc8b404"
        },
        "item": {
          "id": "b468084c-8220-422a-96d5-1ca532d781f8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "71bd4993-8fa6-4d87-87d5-2ff4a4f906ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260c48f1-2f94-41b5-ae8e-47ecfddd74fe",
        "cursor": {
          "ref": "9e356a36-9f3c-4890-97ab-2a3b763e9e54",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "746789e8-0b29-49e9-8b1f-7051ac05d4e0"
        },
        "item": {
          "id": "260c48f1-2f94-41b5-ae8e-47ecfddd74fe",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c921c578-b232-4cc1-9407-693516c7459d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5b5c75-f9ff-43f1-b036-42f55431744a",
        "cursor": {
          "ref": "7812f4aa-1fd2-4e06-9d95-05b024177098",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5fecfca6-d4f4-41ef-b1c7-c1e8697c9da3"
        },
        "item": {
          "id": "7a5b5c75-f9ff-43f1-b036-42f55431744a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "24c44417-05ec-45d0-8f95-565e526d6cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76062e3f-9b6b-449d-8535-e0ac1c32e9ab",
        "cursor": {
          "ref": "b3b5f786-5c95-45d8-b6a3-e743ae6f63a5",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "089ce785-a2a4-4e82-ac15-6f65a2af6847"
        },
        "item": {
          "id": "76062e3f-9b6b-449d-8535-e0ac1c32e9ab",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dd634803-3a4b-4c71-9339-4372b5b1a0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76782c60-ceee-4e16-a2ef-4c67ac8324fa",
        "cursor": {
          "ref": "76a40dfd-a19d-499d-8e40-f6a34f27b217",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1d640f5e-8fbc-43b8-a570-6eff690ca8c2"
        },
        "item": {
          "id": "76782c60-ceee-4e16-a2ef-4c67ac8324fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3c723183-30e5-4fba-889d-dcd27dc50a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c546c7-3d68-4036-b3d5-a330e0565b8a",
        "cursor": {
          "ref": "095707ff-ef92-479c-bdbb-1f8e3be62a18",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "76da990f-376f-40bd-a892-db2c1e86e1ea"
        },
        "item": {
          "id": "49c546c7-3d68-4036-b3d5-a330e0565b8a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c506b2d9-239d-44f3-807e-f3b30eec6a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc105d6-4205-49f5-a4a3-ac0c058a698c",
        "cursor": {
          "ref": "a1c2ccc7-1867-4dbc-a3d3-7bb7d251c17e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d55a6d39-fe6d-4d0f-9e40-552c0faf6947"
        },
        "item": {
          "id": "2dc105d6-4205-49f5-a4a3-ac0c058a698c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "72bbb7fb-cc58-4ac1-9b89-0024472d4f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca1e8ad-93c0-4730-996c-ce4f86fba72d",
        "cursor": {
          "ref": "c4290218-a3e9-42e9-ad8f-d343fce791e4",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b39da24f-1cab-48af-990a-66094a85a525"
        },
        "item": {
          "id": "8ca1e8ad-93c0-4730-996c-ce4f86fba72d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2ed00ab9-db4f-4129-80dc-01644f4ae203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04453fff-b92f-4ebb-a2f5-582717d03ee0",
        "cursor": {
          "ref": "a335efa3-f3b9-4b02-999d-bc8055c24737",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fe56b805-7041-467b-9fbb-5524d3060ff4"
        },
        "item": {
          "id": "04453fff-b92f-4ebb-a2f5-582717d03ee0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "576d0737-2036-417f-9571-3abc2176f9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b723449f-6155-4c1a-9e25-4f87b1b3bfb5",
        "cursor": {
          "ref": "f13d256c-e6ff-4243-b518-4d5e391b15e7",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4e278345-fc03-4593-8e9c-c9872a2430e1"
        },
        "item": {
          "id": "b723449f-6155-4c1a-9e25-4f87b1b3bfb5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b2208215-2952-4a8f-9099-52584ca04895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5224b66c-6c30-48f6-b439-66fb1726e2b1",
        "cursor": {
          "ref": "87cef4d5-c78a-4516-a667-14e8a26ed47e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cef9ced5-94f0-4e24-af09-a71d1cec255a"
        },
        "item": {
          "id": "5224b66c-6c30-48f6-b439-66fb1726e2b1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f78ab092-92ba-4fca-8ea7-8a44f0c410fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79866a1-6208-4c4f-8a1c-4b72fd651346",
        "cursor": {
          "ref": "4690f936-988a-4e91-a7a9-a3a49f152de9",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "411ee58c-43cb-45c1-a4a0-1ba45ea00fe0"
        },
        "item": {
          "id": "a79866a1-6208-4c4f-8a1c-4b72fd651346",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5ea21df7-91ec-4fe5-b7f7-2958a4a7163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e226ca3a-1784-47e6-86b0-776b89c998d8",
        "cursor": {
          "ref": "b29325f5-2d4b-4df1-8037-91139d22a293",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "548dcf13-5e08-49f0-92ed-cf7784d4a9d3"
        },
        "item": {
          "id": "e226ca3a-1784-47e6-86b0-776b89c998d8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a5a50609-ef63-4f95-88bf-4a454f799e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8721a712-3ded-4bd1-8ab0-ddf54dd81f9a",
        "cursor": {
          "ref": "356c1594-bdd9-4f5f-849c-132cd4889d08",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f485c9ac-46d7-44fe-b5be-0d8f531cbc75"
        },
        "item": {
          "id": "8721a712-3ded-4bd1-8ab0-ddf54dd81f9a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0f8e3767-01bb-49f3-9051-925878c899dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8d812c7-29e6-4139-a1f9-5bd70ac2c812",
        "cursor": {
          "ref": "9ee76f04-c094-4943-b419-5d1ff27c7d7c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c43f9dd7-8bc0-4736-9114-61ca6f5bfce3"
        },
        "item": {
          "id": "a8d812c7-29e6-4139-a1f9-5bd70ac2c812",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c02a2837-3ae9-43bb-bf89-84155e864977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511ff1b6-dff5-4873-a571-ca283ea9d080",
        "cursor": {
          "ref": "4c585d1e-34a6-4968-a3e3-541f6b0c8168",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2cf7a7b2-fd03-46dc-ad76-c6aba7df81d6"
        },
        "item": {
          "id": "511ff1b6-dff5-4873-a571-ca283ea9d080",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6faa2b1d-cd1f-40a5-924d-622becfded83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d684b7-9474-42c7-8b50-ad94ee8d772e",
        "cursor": {
          "ref": "71120d2c-7452-44f4-b407-37b5268f815f",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "14220477-5da1-415d-8e13-fd38a05a9f97"
        },
        "item": {
          "id": "d2d684b7-9474-42c7-8b50-ad94ee8d772e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "04fff563-4a59-459f-a223-5e1411aad73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed299bf8-26b2-4bf5-912f-06df3404a46c",
        "cursor": {
          "ref": "28591e3b-f71b-4cc4-bf26-e314ae235ae0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2aff2155-b16d-4d72-b6f7-abc01c5685f4"
        },
        "item": {
          "id": "ed299bf8-26b2-4bf5-912f-06df3404a46c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6cdc5e04-74ab-4c8b-88a9-feb302f20c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6559e389-8991-40a9-8f18-785562d561e8",
        "cursor": {
          "ref": "d628a55e-30e2-4f15-8753-931e6c64afb0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cb2d45df-8f8a-4d1d-9801-1e70f53fd22f"
        },
        "item": {
          "id": "6559e389-8991-40a9-8f18-785562d561e8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0813c1a9-2883-4cbe-ac33-81e27cef8dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b41bf9d-0ed0-4238-8df4-9a90d3f240b4",
        "cursor": {
          "ref": "25cf41fd-bb62-42c5-8b43-d2b23ef95b7f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "66dc896b-db15-4ce6-b4a4-12d5393dec15"
        },
        "item": {
          "id": "4b41bf9d-0ed0-4238-8df4-9a90d3f240b4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d63e5cd3-0ed1-4885-97f5-fd8f5f4b091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222cf592-a4f7-42b2-b9f6-1f12ab94eb25",
        "cursor": {
          "ref": "9355fc01-c626-4169-8a0e-177f44c9f211",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "fca335b5-90a3-4cc9-929e-71211dd1b4bd"
        },
        "item": {
          "id": "222cf592-a4f7-42b2-b9f6-1f12ab94eb25",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "768e9fe5-903d-41d7-9374-35f7f5d46bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa4a248-ba81-48d7-924a-9d88f9d35691",
        "cursor": {
          "ref": "436b456b-037a-4cff-9bc5-c74601eb4def",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a5f239a3-f317-45ca-8d5a-ed793620138f"
        },
        "item": {
          "id": "7fa4a248-ba81-48d7-924a-9d88f9d35691",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0cda3f56-b0b0-4f37-87a6-4768b67f8f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b03fee-309f-41ed-9140-5fcf42f76307",
        "cursor": {
          "ref": "202f376b-1d49-4e83-9109-914916d29dcf",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9d42b1ab-fe6a-4ac7-a5f2-5a70e28a4059"
        },
        "item": {
          "id": "b1b03fee-309f-41ed-9140-5fcf42f76307",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b25d8ca7-27cf-4600-815e-49010d61228e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749f6ee4-74fb-4a2a-9188-5f8b7db4bc4c",
        "cursor": {
          "ref": "91440b94-5b5d-473a-aa12-20c4da5209c8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cb5e9fc4-0fe7-4c0a-945f-b420b0512999"
        },
        "item": {
          "id": "749f6ee4-74fb-4a2a-9188-5f8b7db4bc4c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cf5cab08-8468-4904-83be-292f69498a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286307f9-4f11-4eef-bd96-c49d2f4153e2",
        "cursor": {
          "ref": "a4909b9e-b3d5-4984-9c6f-38c53ed37cd9",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "49c6fa5b-740d-4128-a735-13afbee0dd61"
        },
        "item": {
          "id": "286307f9-4f11-4eef-bd96-c49d2f4153e2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "43a19ae2-b462-4c91-bcae-8ce633215022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b52eb97-816b-4c65-91ad-258d4c35d761",
        "cursor": {
          "ref": "a95632d8-169c-44d2-ac59-7d3dda290b7c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7453acae-a709-477b-b2d1-68b386433a31"
        },
        "item": {
          "id": "6b52eb97-816b-4c65-91ad-258d4c35d761",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d1ef56b1-70f9-49e5-aca2-46dd3f1ac415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c490137c-f421-4661-bf58-dfb895a02762",
        "cursor": {
          "ref": "9fa17214-68c8-42c7-8110-4cc63fc7f1aa",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b7c880ae-c80a-4c7e-88f5-93c7f2608f94"
        },
        "item": {
          "id": "c490137c-f421-4661-bf58-dfb895a02762",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "24f99514-af95-4f62-b8e0-ab95e233a142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e025f00c-ba5f-440f-bd24-2f963959b987",
        "cursor": {
          "ref": "93f03f18-8e6d-4c67-8e4d-374943285cc5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "aeef492d-c1d0-4292-9e77-a557d6a79ed1"
        },
        "item": {
          "id": "e025f00c-ba5f-440f-bd24-2f963959b987",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f8a1b177-2c06-47d5-9b99-c375a0edf8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ab2842-286e-406d-9852-4175e8792ff4",
        "cursor": {
          "ref": "fe45a7a3-92fe-44ef-a903-df499b3b7de9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a643eda-3d73-490c-b87c-8b8051d9e928"
        },
        "item": {
          "id": "c9ab2842-286e-406d-9852-4175e8792ff4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "734720bd-7ddc-43a4-ab26-146ea7c4062e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70df9a85-c80d-41d7-bfcc-67f242a05009",
        "cursor": {
          "ref": "594d7091-2586-4913-8b13-e85ad636724d",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3d315df5-ac7a-4cce-9dc3-5940ee2d88c5"
        },
        "item": {
          "id": "70df9a85-c80d-41d7-bfcc-67f242a05009",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "36b67503-e7cd-4fed-8c32-df6a81e40d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb86bca8-13a8-4542-abbb-b62b5bcc886c",
        "cursor": {
          "ref": "eb662678-3099-4ed3-8962-f0b614908b2d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "61dee456-e8e5-4d57-9e03-2f82f8128cc4"
        },
        "item": {
          "id": "bb86bca8-13a8-4542-abbb-b62b5bcc886c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "46315be5-5471-4f15-94b7-b3d41e96c378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8912a5-615d-4229-afca-9da04ae0d797",
        "cursor": {
          "ref": "9d527876-a928-4ee6-9757-5482087d977d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a548e835-23cd-4f92-844c-6a4cf828a5d9"
        },
        "item": {
          "id": "fc8912a5-615d-4229-afca-9da04ae0d797",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "294abad0-df12-4e7c-83bb-6188bc89619a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75033f73-7d6f-4adb-affc-2489a7fd9e3d",
        "cursor": {
          "ref": "80675054-a74f-4012-8f2a-59da2a8e9642",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ce65eaba-5921-40ac-91b3-d24f7d2b7fc2"
        },
        "item": {
          "id": "75033f73-7d6f-4adb-affc-2489a7fd9e3d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1fecc36e-0cd2-4717-8870-36d7fb603378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaebeda-58ea-4633-8c1b-51870d96df39",
        "cursor": {
          "ref": "3d3781a9-bf4d-44d0-9151-5353b93198fa",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "75ab0f01-7296-4b7c-818e-a4933be29feb"
        },
        "item": {
          "id": "9aaebeda-58ea-4633-8c1b-51870d96df39",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6d53bf55-4e75-4d87-8e90-610a2eb6ff6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15c812b-e492-4fe3-a80c-7271c7e88f94",
        "cursor": {
          "ref": "6308efbf-1832-4570-9991-c3eb29fc0d2a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f1276db5-95fd-4b53-b74f-3df72289729e"
        },
        "item": {
          "id": "b15c812b-e492-4fe3-a80c-7271c7e88f94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "897fb41e-22cd-43cb-8f84-933d8749559e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf25cb5-0922-4138-9f2e-ae425d982819",
        "cursor": {
          "ref": "8929ff5f-a948-45e6-803d-79f7c5dc7c68",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5e4ec0d-cc48-413f-947d-b5b1028cd497"
        },
        "item": {
          "id": "5cf25cb5-0922-4138-9f2e-ae425d982819",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "24baa81f-f60e-4115-8ed7-ac359a32b7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0df400-e9ab-4a33-8ec6-2bdd0b5e053c",
        "cursor": {
          "ref": "7f48312a-7d2a-439c-b734-d440ff73b187",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "65a9cb3a-e84e-4f61-b098-8a59e586063b"
        },
        "item": {
          "id": "de0df400-e9ab-4a33-8ec6-2bdd0b5e053c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c10d201c-55de-4551-a667-ecb23ae9f653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e804e72b-659e-4935-a7d9-bbca46a1ac66",
        "cursor": {
          "ref": "d05923cd-a7d3-485d-abef-7283712afe9a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "388d60d8-22ff-45bc-b25e-9d38cec5394e"
        },
        "item": {
          "id": "e804e72b-659e-4935-a7d9-bbca46a1ac66",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b537b74b-9209-4489-af1d-6f0815bb7e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953e0d75-fc3d-4a80-b583-34c0f5297a52",
        "cursor": {
          "ref": "ff8a86c1-0d96-4f4a-8505-5e1c146e5279",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "41df4429-1d2f-4723-9e51-4c38bc6737f1"
        },
        "item": {
          "id": "953e0d75-fc3d-4a80-b583-34c0f5297a52",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a62e982f-d167-4a36-b924-5e886281edc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca389a03-a4af-4231-85c5-8f93db0cf6c1",
        "cursor": {
          "ref": "ca9d2b70-2ebf-4972-8e43-c01e1ac8454f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6a195279-c194-4521-af0c-3eaeab8c4c6d"
        },
        "item": {
          "id": "ca389a03-a4af-4231-85c5-8f93db0cf6c1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bcd5e355-b864-4d1f-bbfe-f6548cbd0b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f476e7d4-39bd-4d0c-b954-0934f643bcd6",
        "cursor": {
          "ref": "7814dd0f-9059-417d-b7db-a930dd1b5491",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1a52bd99-e2d3-4d4b-a78b-d03ec1a148bb"
        },
        "item": {
          "id": "f476e7d4-39bd-4d0c-b954-0934f643bcd6",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0f877d23-9cdc-4f58-a80f-d285cc625f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435a075a-fecc-4bea-98ac-ddc3a2b5e674",
        "cursor": {
          "ref": "c1021033-9669-4cb5-9f77-674637919234",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9fd4030f-3463-4064-a9af-c255a007ab4d"
        },
        "item": {
          "id": "435a075a-fecc-4bea-98ac-ddc3a2b5e674",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f0fd924d-f1fd-40df-8a07-136e30698233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65ff1b4-6e43-4c6b-b776-68dd4da0d782",
        "cursor": {
          "ref": "a0024e32-a839-472e-8b6c-7c6f1ee6268b",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dcd48062-910d-4f9b-aa6f-e8caa3d5e830"
        },
        "item": {
          "id": "e65ff1b4-6e43-4c6b-b776-68dd4da0d782",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "912f5b57-adf8-4595-952d-7c5bf2f5ee53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8258fdde-84ae-44b5-bb32-899ecb860193",
        "cursor": {
          "ref": "c3c28432-e876-497a-9c9e-2563df2eab4f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bb08f8bf-ef6f-4df8-9163-3e70660d9b0c"
        },
        "item": {
          "id": "8258fdde-84ae-44b5-bb32-899ecb860193",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9dd0b13f-4cc1-4355-b7ad-88cbfb6498dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c7070e-c4b0-4e73-949e-95b2acf58cd6",
        "cursor": {
          "ref": "df4f73a0-f24d-4bc9-8301-17a8e6bb8c53",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e2cc39ef-f00d-4341-8567-081c4f6fbb7f"
        },
        "item": {
          "id": "30c7070e-c4b0-4e73-949e-95b2acf58cd6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2be64460-af17-4b8d-8a17-f8fbfc32fab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2fc73a-7007-4eae-88e2-0bff44f2e733",
        "cursor": {
          "ref": "002f41cf-7421-4401-b363-f83d9fb7ce08",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c601ad15-e54f-4a1d-9057-493fc3ba3784"
        },
        "item": {
          "id": "1e2fc73a-7007-4eae-88e2-0bff44f2e733",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1a0e38c7-ee5c-4899-bd5d-f05cf4190a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf101f8-8dab-439d-bf95-13b902f969fe",
        "cursor": {
          "ref": "b3e68a6d-cb9e-4c87-b7fc-b35e58c482fc",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3620587e-ed43-405f-b259-9a2761ab3356"
        },
        "item": {
          "id": "7bf101f8-8dab-439d-bf95-13b902f969fe",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "659035b6-857b-4986-ba3e-dbed852ee3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d507ce6-a990-48af-9e2c-9827238a4d61",
        "cursor": {
          "ref": "837d63f6-da18-4c38-8bc5-f6b4292a2389",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3d2adae6-15e0-492c-8e88-4c9b741c81d6"
        },
        "item": {
          "id": "5d507ce6-a990-48af-9e2c-9827238a4d61",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "abba582d-c092-49a3-a809-36e1bec22eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b03229-bc07-42aa-add9-0c8e84ff1673",
        "cursor": {
          "ref": "5d583c56-3bda-4ab5-845d-15efdb26ef6e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "081fc09e-174d-4069-9b88-89795c999231"
        },
        "item": {
          "id": "52b03229-bc07-42aa-add9-0c8e84ff1673",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "80f79680-d3e6-4c20-91d7-b6c9497cf8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a011d42-24ff-46b5-a0fe-4dd7fe2673ae",
        "cursor": {
          "ref": "24c4d718-5ee8-4e54-b70e-b2efd6eb4d02",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4cf4d26c-97bb-4750-9c55-ab6ab286a9a5"
        },
        "item": {
          "id": "5a011d42-24ff-46b5-a0fe-4dd7fe2673ae",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "42cd37fd-d307-4afb-85cb-ede954e4164b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad51b54a-a70b-4b50-9e8e-f27214fb43eb",
        "cursor": {
          "ref": "f285fdfe-b086-4ff7-a286-3d0352eb7db0",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1717923-0ba2-4fbf-b034-8829252e7244"
        },
        "item": {
          "id": "ad51b54a-a70b-4b50-9e8e-f27214fb43eb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ddb75f50-c842-4487-99b6-32712c9f81da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f1a935-cdd0-4d1f-9c49-8ceab9d838a9",
        "cursor": {
          "ref": "1403c310-4ee8-46ea-b831-9945b31af635",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ff5bc1ca-bd0b-47c9-9b68-699c56d365dc"
        },
        "item": {
          "id": "b0f1a935-cdd0-4d1f-9c49-8ceab9d838a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f93c3281-b8a3-4c5c-bebf-2592da7dd2d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ad5e44-c3b9-4dd4-98cb-8f9ab94f5d06",
        "cursor": {
          "ref": "47130d65-c793-4ae1-893b-de33499b4a17",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4ab76306-063e-41c2-9509-fb057b9c4617"
        },
        "item": {
          "id": "b1ad5e44-c3b9-4dd4-98cb-8f9ab94f5d06",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32e030a9-cecb-47cf-ab64-1c1705751917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4e62af-9501-4068-83fb-6258ace37052",
        "cursor": {
          "ref": "3bfc5080-6640-4768-9d04-2145484b85fc",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4bd9c88c-7430-42a6-90af-a19676f9fd36"
        },
        "item": {
          "id": "cc4e62af-9501-4068-83fb-6258ace37052",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4e0cec7a-9258-4475-81b1-40a9e7a3ed61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc726bd-9e2b-400b-8bfd-42bc89899d34",
        "cursor": {
          "ref": "b1351d3b-f1cc-4bb9-a072-7d2ba6058934",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "dd754780-ef03-4823-8c32-1f046cb33982"
        },
        "item": {
          "id": "5cc726bd-9e2b-400b-8bfd-42bc89899d34",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0a2fa0c8-d336-4994-8acc-960adbc60151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b16f73-1a44-4f59-b17f-aa93a4256507",
        "cursor": {
          "ref": "f1864cc0-38fb-4d15-a1c6-7d3163c3c13b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "292ee9e0-a114-4e23-87d0-242ce42dd645"
        },
        "item": {
          "id": "06b16f73-1a44-4f59-b17f-aa93a4256507",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "40af835f-41a4-4813-b803-3484e9972a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b8f9b4-0e9f-4dc5-8403-e5847541cabd",
        "cursor": {
          "ref": "582a118c-1649-4bc4-8e5e-64f34d7caa1c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78433069-b2ea-4ee0-bd9d-982aaf4d6474"
        },
        "item": {
          "id": "a6b8f9b4-0e9f-4dc5-8403-e5847541cabd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb2b5a62-4198-4b62-a40d-b0ff33e56c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8602d691-f06e-4e7f-bed5-727886197ec6",
        "cursor": {
          "ref": "77ae0467-b268-48fc-908e-9f54934a69bc",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ae2db3ca-1ea8-4080-b4c6-1055b641bf2d"
        },
        "item": {
          "id": "8602d691-f06e-4e7f-bed5-727886197ec6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c60883c7-f621-451b-9f21-a1c14f74cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2e33fe-d370-4d37-a27e-9f5997f824fc",
        "cursor": {
          "ref": "b8bc77f5-1619-44c6-853b-921499de3cd6",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "433dd0f6-84b9-4385-8454-2d0a6a193be1"
        },
        "item": {
          "id": "8e2e33fe-d370-4d37-a27e-9f5997f824fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4bba9861-c3d2-4f34-983d-f7e4a79339c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae73d49d-bc8d-4a0e-97da-3788a311480e",
        "cursor": {
          "ref": "c7fa7b62-5562-4be8-b67a-21c1c85f2fa8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8e650ec6-b76c-4cdc-a277-dad422f1f589"
        },
        "item": {
          "id": "ae73d49d-bc8d-4a0e-97da-3788a311480e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2e20d4f3-bb6a-4c94-9f31-f8b05ee9c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b23cb6-3cc9-4b93-8502-90a7b4b0202c",
        "cursor": {
          "ref": "b39f4848-e1c1-4c1e-97aa-5bc7c4638280",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7cc7ad1a-1e49-4bbf-aadc-98788ba1195e"
        },
        "item": {
          "id": "40b23cb6-3cc9-4b93-8502-90a7b4b0202c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c4cb62c3-a39d-457f-8f84-107d371354ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf42f2b-cacb-4ff6-b000-f839da9a2a33",
        "cursor": {
          "ref": "416c270b-3e0d-43fb-b213-d5bbbae21459",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "491280b6-64b8-45ee-b5d8-fa4f4bdc6aaf"
        },
        "item": {
          "id": "0cf42f2b-cacb-4ff6-b000-f839da9a2a33",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "244e1089-5fb6-4f2e-ba0d-085453c21841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b71084-d396-474c-ac74-d9465651b273",
        "cursor": {
          "ref": "2244ca70-80d3-4134-8383-26d1e5e63c3f",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2d517a68-8a00-4c55-a4b6-a049f72975e3"
        },
        "item": {
          "id": "56b71084-d396-474c-ac74-d9465651b273",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e7bcd63a-034a-404e-a8de-78765c92aa46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbd490a-c3fb-49ae-9545-eb895b2c7fed",
        "cursor": {
          "ref": "09709a60-cf5a-4495-b7ab-5946f44e2e17",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "279a8382-3ba5-4e36-b85b-bc8cd27facf1"
        },
        "item": {
          "id": "adbd490a-c3fb-49ae-9545-eb895b2c7fed",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "782e7f93-348b-47d4-a589-7bd716897178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d45357d-9826-4c10-9f44-3c274414ab1d",
        "cursor": {
          "ref": "9fde366e-9889-4a3b-8a22-c2112473e2ab",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "30dd57da-8967-4466-9399-ce60183f09dc"
        },
        "item": {
          "id": "6d45357d-9826-4c10-9f44-3c274414ab1d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "da689137-bc10-4c52-924c-183339028877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce27e552-b296-4666-889f-a0243baa48de",
        "cursor": {
          "ref": "edabb4b7-86b6-4d65-8add-880ba01cb5ce",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bc0d72ef-fb84-4dc0-ae39-c4d9bc2e6d8a"
        },
        "item": {
          "id": "ce27e552-b296-4666-889f-a0243baa48de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "cce7190c-a257-4ac6-a689-f269c7a18b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a8d58e-7260-4d8a-9093-025e412e77a8",
        "cursor": {
          "ref": "98207b2b-5a4d-4887-99cb-33c3a198b74d",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b9d646cd-c271-4d10-8b88-f530311af26a"
        },
        "item": {
          "id": "56a8d58e-7260-4d8a-9093-025e412e77a8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4f33e941-7227-414b-937f-32bbe854da9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a34179-e320-4d62-a9e1-f34164439558",
        "cursor": {
          "ref": "e88fd94a-c61f-4bd8-b04c-5160004b6675",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "089fa454-bb44-4fa6-b971-fe7747760418"
        },
        "item": {
          "id": "f9a34179-e320-4d62-a9e1-f34164439558",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a72250d9-5872-4ec0-afea-7eccbc458125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326accfc-4e7f-42df-ad25-41019684d328",
        "cursor": {
          "ref": "da1ab922-9bc4-458c-94e7-633a690bff33",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "aa88ae78-36a5-46dc-9e1d-f4b66291da26"
        },
        "item": {
          "id": "326accfc-4e7f-42df-ad25-41019684d328",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b5eac409-f598-44f6-978b-592c63c73202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad439c67-377f-4d65-a7d0-5fead1637bf2",
        "cursor": {
          "ref": "5d7e3803-d3ec-4209-8ccd-6861cf818c8d",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1b91ed3f-b6dd-40c6-a7be-25c535a4c4b6"
        },
        "item": {
          "id": "ad439c67-377f-4d65-a7d0-5fead1637bf2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e4c8b131-3d5a-4ad9-b2e6-92d0a423dd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4688166-d219-41c9-8bdc-db15ecad39f7",
        "cursor": {
          "ref": "5294c10f-0283-4387-837a-2f6fa245ac0d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2a53ea0a-dd86-44cb-8904-aa48641b2cf6"
        },
        "item": {
          "id": "a4688166-d219-41c9-8bdc-db15ecad39f7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6909896c-6c19-43ae-b104-0e4394969b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c739ea28-6563-4859-8a87-b6f508fdbb67",
        "cursor": {
          "ref": "ebfb4d18-5b07-41bc-a6ac-eb97865a8901",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "31727d32-c1ba-4b96-8fe9-2b94f2eb1ebd"
        },
        "item": {
          "id": "c739ea28-6563-4859-8a87-b6f508fdbb67",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e2d526e9-a2c2-4241-a182-b74e17ea19c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032cb636-1dd1-4349-9f01-18d0682563b3",
        "cursor": {
          "ref": "461518ef-dcd0-45eb-bbe4-45cbdf72fd28",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4901c1c9-f679-4b82-a146-6b3c0592e5a5"
        },
        "item": {
          "id": "032cb636-1dd1-4349-9f01-18d0682563b3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fbd7d02f-a7df-4c31-8ba7-8a44e0f3414f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6dcd4a-1b31-48a7-86f4-946de99c08f9",
        "cursor": {
          "ref": "dfc29a0a-902f-4145-b264-556e151ae89d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "86cd2428-034a-473e-85e6-629ba4799716"
        },
        "item": {
          "id": "2a6dcd4a-1b31-48a7-86f4-946de99c08f9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "67346606-b5f4-414f-b285-0fcff40a619e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327c2324-982a-4fb4-9024-620f069736ae",
        "cursor": {
          "ref": "881b884e-a631-4e5a-9f09-9351c0ee03ca",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ab01dba4-6025-456e-86ed-1ffaaef01df6"
        },
        "item": {
          "id": "327c2324-982a-4fb4-9024-620f069736ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "01792dfb-9f9c-4c18-850f-2a8b7b35adad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d36da9f-5d98-443e-8f18-6ab9932480b2",
        "cursor": {
          "ref": "d2d66fb3-e525-44f7-bec4-e0c430c03ab7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a07efa13-09be-4486-b6c6-a094840b398c"
        },
        "item": {
          "id": "5d36da9f-5d98-443e-8f18-6ab9932480b2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c8347167-bf04-4861-9267-a02b68e0cced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcc4372-eed1-47e1-b370-2bbf407239d0",
        "cursor": {
          "ref": "50f8b914-6278-4a7a-ae44-c269a0216857",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d5ea6c8f-1269-4a1b-86ae-b5c75bed67ca"
        },
        "item": {
          "id": "efcc4372-eed1-47e1-b370-2bbf407239d0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8498bad7-db12-4cdb-a3e2-f6d63de5774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e9ca75-d305-4a81-9e28-5fe5764c9c84",
        "cursor": {
          "ref": "a6a76497-2fbd-482d-84e1-03fd5dafafb1",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d98bfb29-1165-41e3-9672-c7765a4842e4"
        },
        "item": {
          "id": "67e9ca75-d305-4a81-9e28-5fe5764c9c84",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "14240236-e77e-41ea-bb17-7de7c4504d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a92c31-763a-43fa-b3ca-231f7a5fbe31",
        "cursor": {
          "ref": "5751d95a-44dc-4149-9498-ac19c816916c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3b06cb92-3c9e-4fc3-a629-795386d32b0a"
        },
        "item": {
          "id": "42a92c31-763a-43fa-b3ca-231f7a5fbe31",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4f4d7963-727d-40ef-ad97-c9aa34133452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8bb4948-5d56-433f-a735-ddd6191f8085",
        "cursor": {
          "ref": "8c73de77-2c6d-4a69-9146-11d9b2d166a0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e4cba341-c0f4-4b3d-9448-aee5520de6cf"
        },
        "item": {
          "id": "a8bb4948-5d56-433f-a735-ddd6191f8085",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "444ddb23-8579-4b53-959f-fa7aa5fd1b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab87640-2006-497b-9ac1-5460dbdaf41b",
        "cursor": {
          "ref": "e925737b-3c4d-4240-b3cc-17a7bd59dd53",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "4d4f8d93-65c7-4922-b2b7-0b2ef1a3a4d2"
        },
        "item": {
          "id": "dab87640-2006-497b-9ac1-5460dbdaf41b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "384cb0df-96eb-4cf9-95e6-6a037f1213ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55350494-49f6-4968-bfa7-6fb26429fff9",
        "cursor": {
          "ref": "0bcdbe2d-ac6b-4bda-b081-d6307a4f459f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7a0355b4-0e03-4525-9658-c3818eb80b38"
        },
        "item": {
          "id": "55350494-49f6-4968-bfa7-6fb26429fff9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5e834bff-f211-46ae-a1b5-9a0d0194839e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b78d63f-e674-4ecb-ba2e-55f7bbaaec5c",
        "cursor": {
          "ref": "4c32f15d-72da-468f-9d59-27e80c9b1642",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "250a4c28-3675-4f1d-a7ef-4dbc6add4331"
        },
        "item": {
          "id": "7b78d63f-e674-4ecb-ba2e-55f7bbaaec5c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "270033e6-bd20-4246-abe2-867c310cbf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bdc3ad-6455-48c6-a11d-a06bddd9f48b",
        "cursor": {
          "ref": "a62a025c-87ca-4cfa-b62c-1b07419d768a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "0950c31a-6968-4cd7-abfa-6e85d63940b5"
        },
        "item": {
          "id": "d1bdc3ad-6455-48c6-a11d-a06bddd9f48b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0b95ea90-b5a1-485e-9be7-3bad0fe89224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56cf9e-ac83-44ef-8fbc-86d446ee7100",
        "cursor": {
          "ref": "5201e72d-9cc1-4f90-8c42-dc6ed1a44063",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "7cc53e1f-a05c-4930-a346-f8bd8a9fc26a"
        },
        "item": {
          "id": "4b56cf9e-ac83-44ef-8fbc-86d446ee7100",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3302f96e-ee36-407a-8fb2-37e6101c43fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8410733-dbf1-49be-8d94-dd2714e64c9e",
        "cursor": {
          "ref": "6d5e2cab-1580-43d5-88d4-37ca47c57e11",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5f2df127-60ef-4182-85eb-98f7cbcd575b"
        },
        "item": {
          "id": "f8410733-dbf1-49be-8d94-dd2714e64c9e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "41e90866-e91e-48ab-96a0-e291295ea6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70305b3-c938-4b29-9914-4cc1ce4c091c",
        "cursor": {
          "ref": "840d3850-ffb6-4788-90bf-59791ca40620",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "79339fb9-d272-423f-8fca-5f2684110164"
        },
        "item": {
          "id": "a70305b3-c938-4b29-9914-4cc1ce4c091c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "10bdedef-0577-4eda-914d-49bfdbbaf5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfd928-0a85-42e0-a4d5-a2668b0e4cac",
        "cursor": {
          "ref": "dbe6d5c9-bd47-4d3f-aecb-aa17a17807d3",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1bbf4359-a256-4463-ab3c-69e8d2b82392"
        },
        "item": {
          "id": "c1cfd928-0a85-42e0-a4d5-a2668b0e4cac",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1dd0936f-32fb-4fc9-a530-f4fe831c7f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd1805a-ce11-4edf-9211-a22f24006714",
        "cursor": {
          "ref": "f20032ff-bfe5-4c2e-9ce4-bf3e3cc13463",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b11e5889-fe65-402a-848e-c786bc7eb583"
        },
        "item": {
          "id": "3fd1805a-ce11-4edf-9211-a22f24006714",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "43ae354c-3586-4a86-a18f-8b361c3297f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a06718-9f41-437a-b6fa-0d933b87dcc8",
        "cursor": {
          "ref": "453dc5cd-412b-44f3-b127-7e9ab43dae8a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "660f543a-c3df-4687-8ba6-3b251e944ce5"
        },
        "item": {
          "id": "d4a06718-9f41-437a-b6fa-0d933b87dcc8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a95d07f-f586-4f51-829f-b993683958d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0fc3d6-565d-48d0-b45f-8130edbc8148",
        "cursor": {
          "ref": "54976256-2003-4d4d-9339-52be99d3363a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f1e4f695-6730-44dc-8e70-38298fd61fce"
        },
        "item": {
          "id": "1a0fc3d6-565d-48d0-b45f-8130edbc8148",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "34ec6e8f-1c90-4c4b-a60d-e4c7d056e207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa77a20-6d44-4e41-aa26-063def0ff6d1",
        "cursor": {
          "ref": "5e55b4b7-76b7-468d-a216-cb13e37cc4c1",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5071a2e9-19bc-4999-996a-b435f9c73f87"
        },
        "item": {
          "id": "afa77a20-6d44-4e41-aa26-063def0ff6d1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "97711837-e78e-473f-a69a-7fbaf583b65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beb3247-4617-4026-bbfd-5d90675e8525",
        "cursor": {
          "ref": "d8ecc867-b3c3-402f-b9f7-d8df4fb2d183",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "1418d821-eaa4-4e59-8188-eab5f6853c5d"
        },
        "item": {
          "id": "3beb3247-4617-4026-bbfd-5d90675e8525",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8fdacd77-237c-4991-9094-01d76a942426",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bceef27-b6ae-400c-bc48-bebe01d92563",
        "cursor": {
          "ref": "84ede75a-c58a-404f-a2d6-3f93abe70114",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "41878e76-ed3a-464c-990c-c877f91b5b6a"
        },
        "item": {
          "id": "0bceef27-b6ae-400c-bc48-bebe01d92563",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e1e63ac6-f67b-44eb-aaf7-8c40ce6d79ee",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cdc067-8273-4555-be57-8f3db8dd0ac2",
        "cursor": {
          "ref": "1bcf4550-8c97-4fb5-a980-479f711d041d",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ea4b04a0-934c-48f3-a4c4-892c05e5ee75"
        },
        "item": {
          "id": "10cdc067-8273-4555-be57-8f3db8dd0ac2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e758f617-ff59-4f5c-b14c-b8f1e3ba466c",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0a323a-18de-4ff7-b840-a17af8a519d6",
        "cursor": {
          "ref": "56f385d7-a999-467d-844b-462f3890b796",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "88198925-1e5e-479d-89fa-45dfd9d449a2"
        },
        "item": {
          "id": "ba0a323a-18de-4ff7-b840-a17af8a519d6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0bc830c6-9fd6-4d34-a0e0-c50c71da670f",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28c411-c41e-4aa9-a331-9ac5fdf3e213",
        "cursor": {
          "ref": "309c3ea6-f6c0-4b69-aae1-ee6c565223a5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "24d6e321-de80-4bed-bd3f-528d83f3fd99"
        },
        "item": {
          "id": "fb28c411-c41e-4aa9-a331-9ac5fdf3e213",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff85655e-dabb-44f6-8947-af7c33fde2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28c411-c41e-4aa9-a331-9ac5fdf3e213",
        "cursor": {
          "ref": "309c3ea6-f6c0-4b69-aae1-ee6c565223a5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "24d6e321-de80-4bed-bd3f-528d83f3fd99"
        },
        "item": {
          "id": "fb28c411-c41e-4aa9-a331-9ac5fdf3e213",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff85655e-dabb-44f6-8947-af7c33fde2e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4bc53d-e2f8-49b1-b708-daa826ecd09e",
        "cursor": {
          "ref": "63ed8073-65ba-4851-8995-1689332b8171",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b1141a88-f92e-4fa7-9974-35c8bbcaeebd"
        },
        "item": {
          "id": "7c4bc53d-e2f8-49b1-b708-daa826ecd09e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a73ce82f-0d42-4783-962a-0833d5f059a7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189f6242-f41a-4cb9-b999-a760d30e8a8b",
        "cursor": {
          "ref": "3c8ef3b1-b2ad-4fff-a492-db4fd884679f",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "11cfba42-3b03-480d-a632-86dd04a439b7"
        },
        "item": {
          "id": "189f6242-f41a-4cb9-b999-a760d30e8a8b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2fb427b4-f350-4ad1-8b2b-89cc46eb51d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}