{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "935ff097-8ef9-45e7-beb7-adbb7d890675",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bcc26b2a-b173-4a21-a539-7f5971750f49",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6675fb9-198a-4252-96ad-b7bb10ed77d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "498bb032-2069-4fe7-8874-41a27b8ecee6"
                }
              }
            ]
          },
          {
            "id": "c283c9e9-79d5-48d8-9a57-eb20f4ab2603",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "519cecf8-7210-4a24-8b54-b225d694d763",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cf70600e-f9a4-4d5b-bbf9-a2d8a6c9d8b7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "834f439b-826f-4080-9c6f-811a38fd209b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7e320bc3-3e58-4b81-ab3f-ad84e406100b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bf16ef1-6a89-4533-9d74-b204f187535f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48bfb220-df14-450b-9e78-1c810c827e15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db6c9642-7472-43fc-bf54-278db0d9c8be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2cce099a-955d-4fdd-949d-eb0e84bf067c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d46511f-f4a8-4ad8-b10b-dd8f79816c02"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ea8febb-06e9-4c28-b699-0ec7f96175a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aaecfc7-8067-4880-966f-8c4880150158"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d27c8098-1388-46a8-becc-7d71553bad76",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f34fbcde-a4fd-4db4-926c-9326adedd92f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e732558-04d9-4f72-afc7-beb132af0c04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90354f41-27b4-4f0d-9195-d1eee3a336aa"
            }
          }
        ]
      },
      {
        "id": "03d9db55-9993-4f02-b4fb-1c354c387118",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bccc0398-9d1d-4509-b2cb-1b02b1cbb3a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e764dfd-8a2c-4407-8510-46de1757a580",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ff7efa2-15d5-4744-acdc-df23f21e7ba8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eead4e35-d437-44bf-8a02-e17d47c313d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a716e57a-3934-4988-a1ff-f329adc8668b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2e41f0-f9f1-4a22-b49a-b91e539d171f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06580200-0a32-4187-a59b-3c87a2db3264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abcacc06-a01b-4c25-ad72-b63153cc3102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f0cfeb-7b0e-44a6-9e88-887bf5349996",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d0816a-9de7-4fc6-9e8f-5c53c1e4ad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10632b21-e239-4e7a-ba04-f5d7f06d6e2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eb5f1691-91dd-4999-bef1-b9a63fb31f67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6deff9a-673e-4c41-a33a-772d7aa985e7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8bad53-ec13-4165-9865-604c6cd2728b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b173f4c-1a1a-4515-8e6f-b07fa8b2e145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d868505-fdce-4d21-8be9-ab7859b13c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7bfac2-4300-4f0b-baa2-3fd9a5701860"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fde3acfd-cd74-4a6a-b649-72df434c9b89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5025c463-e1ff-4b9a-947c-5614d4f2f073",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c793061-51af-4c0c-8d78-ffa70fae2f5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1ea79e9e-215f-4a03-9e1b-9cefc0211e92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0dc19caf-d0d8-427d-944e-5b04c3274ac5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "636f9d7c-a647-465c-83b1-d9a154415141"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed956d88-7238-413c-a023-87ddda980d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e23ff93-2834-455f-a72a-25d834353fe1"
            }
          }
        ]
      },
      {
        "id": "208f56c7-0cea-4ce4-8bad-f28c1b897bc9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d1a2662c-76ac-446d-bdaf-990a487dcd54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d8f5368-259a-4de6-90e0-861487cecd00",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0070644c-a410-4a7a-86c0-66c49e6d984e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6e5ae2-a898-4827-8a91-c31f6785a193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dea6cdf-e242-4d8b-9ad9-6956b4283c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f743c-ceb4-466e-9f5b-ffd3aecabb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1737a851-aed3-410d-a32b-f7c3e0d1af00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957743c9-6899-4eed-8f04-751303d74c18",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ddcb73-fab3-464a-96c6-08e148d90623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d38a21-5ec3-43bf-ae22-66103995d3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a625b9b-2f02-4bc2-809b-3778cd935534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3d2dbc6-6992-46d2-8fa7-39952e5c59a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e3207e-e95a-4e69-8f72-e13d8410c1fc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3edeaa-5c68-4a16-a6b5-ef615d44fe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c2d274-2a5d-44c1-8258-45322ef86c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31f3521-ee08-4bc0-8f1e-4b54ee240c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a4a940-94db-458c-a1b9-8415efa99209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb95599c-1530-44f7-9eee-45bbd86eb1aa",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687146ad-3ba5-4ec6-8641-37be4aeecbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d59930-2e13-4f0b-b163-b7bf6dc96589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207eddb3-0400-420e-bcc2-8c3a09a71b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "807a6dd8-9a46-4052-8e54-b5f51376cb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52043a8-d910-400b-ad6c-5f4f7a5e10f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7de80e2-4184-4cf1-ab74-d81c0b3cda7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de63de0-30d7-400a-b2a2-2d91afdb6e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8454c72-96e2-4e54-99ac-9ad5f824fe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9793699a-775d-4eae-be62-b8f316888a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da04173c-4e61-44dd-a2bd-6d23c0b57ef4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aede89-726b-434c-8bfd-8b4d3577fe86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83dcb8b6-ec3c-492f-94c1-bc7e301e77ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b437d5db-3d09-4b9c-bb8b-61b78d600637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cb48464-53d3-46f0-8dc2-3d250fc37d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7933f4-6898-405c-9850-0a7b33130d43",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33669a21-6234-4bbd-838b-0ccc102c9345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3828aebe-23ad-472b-a495-4d75fbcb4f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4a1494-ac94-49d0-8984-0f25a7af345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f31ba409-a790-4809-b464-c32782153432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ccd434c-a99c-4d38-8900-f928ab5dd79b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f8c7e-fdab-4d47-95dd-7169aeba20f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4e9d25-9b09-4dd7-bce7-d340be9fae2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6804a0b6-66b9-4b5e-b591-7f35e8438375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d7b3816-2498-4abc-bdf5-329e4d3da68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b600abdb-d4f4-41c0-b4fe-6e08343f359a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88413fa4-f657-43ba-b1c7-80a012642abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65569d3-a8e1-4c1c-a691-2db779ff3377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd73eb8-ee23-4a51-be9f-206aa970a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba584d1c-8352-46a6-b75e-7b47fe549a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a492b06-73e3-47fd-ae9e-45b3c05e464f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9edcb9-8120-4238-9466-4c0163b80810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e43484-8f30-44b6-8383-48ecb53d8894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549be8ce-0e1c-4da6-9182-85fd96530bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc3c3bb3-7a85-410d-aec5-aa13eabc6e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc862f5-cac3-41ec-a370-71a5fc536a40",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ba770-6567-4212-8c03-94448302c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348401b9-2398-49af-b2df-12bf4438579f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514fa6ba-c30a-4585-94c4-bc50f2264765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "948279dd-31ab-4de7-b723-359fb24db96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d812a356-4005-4952-925e-1c2c13fd474d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6ea3b2-f8e3-4aa7-86dd-2a2767ecb155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c889026a-4dc6-4b8e-8792-118058876eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dc10e0-def4-47e1-b9ed-43aa04d8d20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "233352f2-ca40-47f6-9d85-0565cee2a140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fc7127-5750-4968-b95d-6200379bd638",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c344f9dc-7b48-42a1-8f65-42b5757096dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabc0a8e-7af5-427f-ac65-29ee260dfcf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931cbe20-3b6b-4e43-99ef-676ccd36c14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe10aa0e-33ac-4c7a-a692-feb1cbe710fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935b40e3-18c5-4b2b-897e-bc9f8f18e6bc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a16027b-2eb0-4559-909e-010966b6548c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53a2ecf-0a77-4f45-b410-2d06be1962a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c96c09-7a58-4fea-a897-8afa896cff04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b7ed170-cb84-41d6-9029-fcef6bc426f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978efb22-3499-4f9b-82bb-c23624bb6f0a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8f6d3b-ceee-40e7-8ac2-adc2284a9df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec05f25c-98d4-4ed7-b798-efea16077e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c74beda-6189-467f-8d59-f74aa98c32ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6e2cf62-5440-4756-ac34-bd9fe70c2c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21010f48-e05c-4ff6-a5bc-58bd4c153885",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798289c8-3190-4a43-8d63-ff0e7f32ad3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ef7563-9ffc-4d91-87c0-42dc41bdb3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd07aa29-5175-4f64-b3a8-256810da8a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "494d2768-7d4a-4495-b8f6-64a6dc1b194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e0001c-746c-4f31-aaec-898268ae5def",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3012f40-b6e6-4641-8d53-ec4b644a7692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47513db5-e56a-4fdf-8b46-493756ffd09f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4882098-ea1f-4585-92b7-1b9dd142b3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02433ee8-5381-48d0-be00-5dade73711d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f58c234-5ab3-4617-88ba-c50ca615ce0f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0765f642-80cf-405b-9f7a-069eec61e71e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbb62be-8afa-42b2-8ce6-f9a1e7d961aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992a8818-4607-4a1b-a6d3-18bb93941b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9537451a-0cec-4867-a63a-f25347fcb962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbedc098-ba21-4b99-ac49-3b38f6c6000a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc69fbf-1b65-47f6-98af-2c02b2a9e25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54108624-1d96-4beb-970e-d7777001793d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648c844d-2864-4c75-8a5b-e9ea624f89cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce0a4fb-9684-47f9-ad1a-2fd2c0859b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcbd31ee-7cb0-4f2d-9121-8a7f9d3b0def",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405efab7-878a-4d23-9afe-ce9d89323964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d34181d-951c-4cbe-92e2-587d3ac3ed83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf7a10a-f1d0-4ab2-8d72-ec8c5db3e21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f000294-3e46-4c19-92f3-5424400c3894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d205ba4-7d18-432f-a94d-f03bdb602c03",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da10533-5855-416d-84a9-81c404ec9a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acb2762-f9e8-4795-afe3-6e5aa19a7736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb8e388-8d8f-4ed4-9833-f7f8df69dd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e143f9-9ae9-4cc0-a70e-aa913aca5c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00dbfd5-d3a3-4935-bb05-258710e76f23",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5006af3f-0c08-4f26-bc6e-a37307676b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa697ea-e5a9-4a44-ab44-6190ff6791c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3fadc9-7af7-4156-ab0a-485a994dc24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e596bca4-0562-4e11-9f27-716683b4d322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6dc0f0-c50c-4574-82d3-383f37d97fb4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "071522d2-b99f-4677-a6bc-00dbdccf6faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4f14cd-a832-4da5-8a6e-c0417727c849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7a5ac4-65ba-44a9-b012-ba2446183080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a596d7c-7a0b-4982-a158-c012850bbb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca75f562-33b1-48ab-b541-0de12f31945e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcccb27-d2d6-4ce9-91c0-868768f077b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351faef8-3819-41b2-9ed0-271faa1d63f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ba74dc-136c-4326-894a-d9cecc8d405d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab034a78-a2e5-4839-806c-2c70143dd8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc81cce-5c9e-446b-bef5-2c85848e3807",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e27329-3761-41ba-bc2d-136291d431be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888079d5-8f7a-44a6-96fc-c8280c7621ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49426c3c-035c-4f46-b937-505c0bf07c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf47d42-99ed-4439-92df-677d6365e4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8ae5cc-12d9-45d2-acd2-f634342f6699",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3340a5-6c81-44fe-84ad-ac43d574e044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc189c49-0d23-468d-8073-bf338b67540d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433882e6-75ec-4caf-bea7-b0b992595023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "243f9c5a-674e-45fe-abb5-60cfa9e7ae25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924a16d9-51de-4d7d-a31c-030015d29adc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb49aa3-53a8-4776-a83d-aea357929baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c39a00-42ff-41c1-a669-dbc77d27f51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245fdea8-d302-45f5-9180-cef9b86c571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a50b3bea-0753-4e51-a8b4-a61eee5ba7f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e25420b-5049-4b83-8933-868f9a81c6db",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19816d1b-262f-45b1-b8e2-66b712810f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f4b52d-a549-4cf9-b8d4-2dea38881983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bcf06a-e9c3-4606-a5e6-7cf531caf82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "576e8f77-1d38-4cc4-b210-4cca1512ee6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41933d68-4314-4441-b583-24bf3540378b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181cee7-5e3e-4ecf-a311-142fbfcc0914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68e3756-c432-4ede-8ff4-8848c6c289d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1745b6d6-6979-402f-8a7e-c9e0a620bdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb28bd4e-43c8-42e4-96bf-e418612656a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998a3fac-18f8-4e3b-99c8-ad8c16bfcf19",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590beb7c-136c-43ef-8d28-f03f15872f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b01c86-dd97-4eca-bb7e-c6880faf9a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e14ffa-7d61-4450-b59b-3039f0229f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a70006c-eaae-42fd-92d1-f7feec97cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1155c72b-5d99-4354-919b-c118b4a52213",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52675ea-2ba1-45be-b23a-8506412a223d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e95f725-ed20-4b40-8a7a-b16519af2d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246f55b2-4eb1-482b-bf22-a41ddd6d216b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5367d42-6fa3-4eb2-91ee-ca0a574df588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bf1b5a-dd50-4c34-a401-20c213a2eaf7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542d5d69-1f56-4548-a868-53b329dfefa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d05cd3-b15a-4486-83e4-9fe1f12a599e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab53591f-7fa3-4e35-9c8e-c29515decb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0951d48-06fa-471e-8463-088a2f9c2ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc868f81-5d29-40fb-bc2f-dde9049a8445",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fad5b1-c123-4a23-b102-10b18777f929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fd91b3-a40b-48af-aa5c-df0f3c37761c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee5c908-52b8-4f17-b644-e75d905b4946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9140cc3-36e1-4dbb-90b9-9e3883d4c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc7b0fc-aedc-4738-81ab-e3d79a0bcc9c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c548eb52-3801-48ca-9600-908f1adfbc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06981d5b-e190-4a30-abc1-3c05bc288988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782fbbbe-af9c-4ba5-b0e1-9d0448be100f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b238d5ce-6d66-4c17-97d0-035fdc20aac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b91cefa-639f-4d6c-a990-9abde7a30eb6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef08bbc8-5fe3-4b2f-a730-3b260c16ea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1238443c-83f5-454d-b8fd-d31c80cc1fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92817ac6-cb9d-4443-a415-9974157b5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "21ac03b1-52c0-4fa8-9e51-ed35d34297d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b4a17e-9bea-43fd-9b09-ea7a10f555db",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aebe60-102a-4f97-8329-6daba4c680de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c5de1a76-3739-45fa-bf1b-51d83cd12c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc05091-f3ee-4f0d-9a47-d75a5b2e2135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c73906-9a6c-41f5-84b9-8eccc27843be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4914ff65-2b21-4aee-915e-2d5fb76db165",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e607ce-e1f5-4190-bd29-39c5d2338475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cf8cf8-7853-4503-a430-f16f96f64632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2beff1d-cf02-46c4-a81f-1b41d61f6f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e285ccfe-719d-4db5-9714-389d6a57bb81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d08fc9-fb3b-4d67-9aa1-11cf58b6ba69",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c8da4-a000-4a0d-a2ac-b5dbb1d140f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff2acfcc-5c6a-492d-9da4-3fb45cf9dee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3606bce8-a3b1-4847-a0b2-5f8579a3b57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd23c177-749d-4dc7-8881-9d2b44987cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21911778-1c6e-45fc-a7a5-de186768f34b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25a1f7b-fd91-42cf-adab-069abe1f7a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8a49b9-4208-40bf-a3a0-746b5f4fad13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c31ee35-0eaa-49b1-8c7f-add46227e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92600c45-419b-4603-a66b-d9ccffed0049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e07405-aa2c-49b0-a51b-003afd1322b5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f19298-9438-49b4-85d4-fa30d8b074dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba33074d-56d3-4a49-879d-bcc7ba936021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4204898-e268-4319-a7d3-0352fd267777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7771bd74-6839-42e3-8315-bed4805ea99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603ed744-11d8-4a36-9720-38e1155fa81b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623b78b1-50af-497f-981a-0740c4a848dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef119ec-36f7-4eda-8b54-597b41f0910d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8190f2c1-c845-434d-af6a-bc0b1f944b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7736df77-d8c2-4dbd-bdab-8aa75490f259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9864795-5559-44c9-8a5c-dc83829e2453",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee85136a-3cee-4b2e-a358-1c5f664e335f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569688f9-039b-4adf-969e-3bb8ba8e0ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8beaa8-556c-42a4-b2cc-c42fa8f24057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8846f82b-b3f8-41a2-886b-f57b731b1bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ded594-a5ef-495e-b137-484595f1eee1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9217fade-a52d-4f39-a9c8-b9da52b54a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb7412d-2118-4d18-ae47-7719a84f0ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42485c61-b16c-4927-8f0d-31fd34d24b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "319ce6c9-2b06-470e-a39c-47eedf041d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c8a050-94b0-4cd7-8a2f-f8df5bb76dbd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09367d74-443c-4826-93d1-47ed292d3282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5347104-3640-486f-a57c-f64e4dae0fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5523cb-ccbc-436c-babb-4dcf00a0950b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "15c721d5-45c1-4702-9346-2804d0011461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822b4f03-664f-40c1-981a-3070476be545",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9310e70-af45-4626-9ca4-122ba0be2c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12b2fc0-7675-4217-833a-764efe5080d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cb45d4-ec9b-4d05-a199-8250f39c2745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d959e251-f083-4d10-8a09-729da7a0fb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c6dda1-2cec-40d4-a5e3-139e656a9831",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d3e2c1-f4dc-4f91-80b6-28b0a2d7d936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54f9dc1-cb9e-4e9c-8720-fc481615883c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7a26a5-cebe-4429-a127-6b1fb32c56a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ea679e-670d-43bc-867b-9061ec839971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b528ff53-4444-4125-9340-8aeb2cc2c646",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead71d60-95c3-4222-a334-c23ee697730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa0a234-e9c1-4cc7-a7aa-bf88d811dde3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e10fa4b-6c47-4be6-93e6-fb11db1ca590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "679b95bf-6296-4750-b518-9a778f166e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d25b9b-49f3-4b5d-ac55-c510797133e1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008a78ae-574f-40db-b388-89f4b37f2565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4aaab7-174d-40e4-aa78-366c6393b37e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af464ed-67ac-4f68-8ca6-5318b3225f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7736924-286d-439a-94cf-d757a677c7e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fd8669-d007-43c2-ab63-3ad690b04980",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed285cc-8825-4a4a-ad32-db3e321b7e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaba0e3-5549-4823-9183-c1d045cac8a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c848a584-5a74-47d2-9aaa-6cab6a37ff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec348b8-1065-4506-8ac1-d620b505bad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f03b5fe-c4c3-4386-9ede-c8949f445548",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e7faf1-4b9f-4c4b-b8bd-713d54220d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f67e8b5-8cec-4300-acb5-f83981de1aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61357968-efad-4b80-90c4-3f5714bed75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22ddbc2b-b1ab-47ea-a460-d56770275e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91a8bc2-4451-4a06-8547-f997a9133a22",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6943df8-ad5a-4dfc-9d64-43ef872b71d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d58df6-89e1-4b57-bfad-3d38f2514f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62f4b2e-c68e-4443-9e4a-b2d373fdf917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae129a6-7ee4-48f2-837a-251f376fbd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab974a3-e7b7-454c-9782-cf8ba42338e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a84fd8-cc72-4ba6-804a-e983fbc640fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8afef2-94fb-42a5-abc8-117f32b81487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6643409b-4712-495a-bd94-264a4083b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb1f8a7-f195-4a62-a3cf-48cb52a00a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f76c71-b956-4b5e-a24b-2059c0ceb33e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02db4daa-bc50-49b1-8a8a-a4a5af9d112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923d58a9-d79c-4fcb-bcb6-f8c9b66f3783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d10d61d-0330-43a9-b4be-34a2bbeb2dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db0a7225-8f06-4ad8-a489-f5d87aca034f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7de87ad-e852-42d0-9bff-0f41d0289713",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9603c0-195b-4ad1-bac1-747adbff1a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e2b9b-1b06-4e73-a181-1c61cbdd2ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d837c707-b32f-459c-b65e-53c814b2275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aaeb6f-d7d7-4365-8708-7564f1210715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0188375-1f6a-44b1-84fd-df6133ee46e1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7498dd4c-9de6-4cd8-bb23-df1a92ba5133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407e9297-7ad7-4be9-a694-bf6b01b726f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ceb39f-3032-4d2d-a902-86022e1b3e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a64d2b0-13f6-4344-86c7-a2121f8c3541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb75323-153b-490c-beea-4bb39cf6ce26",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc0384e-c65c-482c-96a4-e1ce6236e31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e610ec-3058-4922-a104-e4fad7b75c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b940ba51-a8fa-4569-8fc4-8ce1e4d13548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "26739d70-c137-4aaa-9351-515b304d621a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82dda166-abad-48f4-aecd-1b60030f3b31",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28956bb6-79ba-4e9f-964b-331ca8e0c484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836e2cbb-d913-475d-ab72-1213347c1466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d186f101-3186-4141-baf3-c695b6490a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d69f2344-8aa4-4d05-b062-976d7d13c575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad78e517-f510-4155-977b-e0ae901f0fdf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0300a708-e7e5-4539-84c1-c91323d6447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f539b12f-108b-44a9-adcb-a0842d4ab81b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce092aaf-3d1b-4bab-abb4-d36e1fa7cfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "12e147e5-0218-4bfe-bdf6-fa4ee7f65744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485023f-cbd3-4dfb-a226-8b1efec73e43",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae7179c-b8bf-4c8d-9e72-eac8114c25c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33265da-e200-4150-9c2e-19139a67abe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73baec1a-2960-445c-9a34-5d57a37c879b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "306f1ffd-8fe2-4b71-b210-93450001fefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f96a20f-5166-46ae-9560-516d7fae13ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac372eb5-ccdb-4da1-9565-67e5c9228bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d6d608-c84e-49d6-bf2a-0932cf733e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35fc2487-2063-48e4-8683-f5da85a68883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06d678b-e47c-4d64-a004-d8e45ec9ac46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6d5a3f-3108-4eb9-93aa-c28ec975132a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75eb948-cfed-4a95-86ac-88ca7b18a473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efcbbaa-8d2d-45aa-86f1-d94f6c871183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaf047a-f39e-46af-bdef-c87a03cb9cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "726c79e6-3678-4c6c-b38c-a1572bc098a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa16f3c-e615-41d2-9a2a-6d477cbab636",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7662e-5957-4ff7-8a06-7fd85e139ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01c9f92-99c5-4708-a66a-349528c1459b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6c16cc-ad31-47f1-aedc-940aa7af914d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e862f346-cef6-4ce7-8284-31647c7056b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b017d9d3-bae4-431e-8e2d-48ee090995ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e6a9a1-b700-4b0a-b154-bf1722f4b4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d74d9fa-f266-4e2d-a74f-6f342ecf3a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4ac9b7-6958-48b5-9939-41e8052f66c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "976802cc-dd0a-4d3a-98ef-2b23305d5b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e44b35a-bedf-44bd-8dfb-c01a4de04df3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2facd5-238d-453b-8f30-c7a8341e12b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e42e4d4-6918-4863-bfcf-8af95a225ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bb45d1-753c-4645-acfa-f5538e18b3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ab030f-90f0-46ad-b891-3e1f83a03b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ebedab0-7bdc-49ab-8102-f737cda099a8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c310c92-9789-4ca7-8497-9f690ad6b4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c152d87-d347-47bf-a726-4765f1007e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e362759b-64dd-4083-8b94-8030f163d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4abbeb83-a37d-4438-8877-f424d2552597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217274d-14e7-4ee1-b51a-5a4ef6e7d3ee",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dfa7d8-ec79-42a4-b19d-6a9f4bb5d8fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa25dfe-424c-4221-a1cb-228974cf3827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691fd433-ffec-4f1a-b593-dff337c634c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac29a10e-c96c-44a4-8a0a-4eec30cf3a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee992ad-78aa-4c80-b075-0fccb9b2bd9f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc8eda0-e950-45a2-934d-352a94a3b793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2e3322-50f6-4a7b-854a-7b7ff99edbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da8c97d-1b8d-467e-91c3-786234bd249f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c44273f1-5b10-4002-a5a4-227f8604accd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd5c48f-0856-4e18-88c8-af0529fa5ba2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a707ecf6-bdda-4130-af69-c339a8dd93ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca90a5a6-9987-47ea-afd3-aaffed5665dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad34e67-7f64-4584-bad4-cd2865391cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c51a09-3152-4342-93c2-6676ecc04068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43d4247-b020-43a5-a9a2-dd0521714844",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5aaa66-1989-4985-a0a3-f546ac7ffd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa59a654-8e7e-4f9a-9b22-9c4d5e242597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a7d5b0-6452-4b20-baa9-7b17c6724590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "96d5c2fe-61b4-434a-877b-fac76826feec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02458e0-52a9-4f35-a317-bb8152894b3c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7031c582-a669-459c-8891-544b2c52898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d5ab965-c906-42a2-a099-f2f0adab0956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c3813-4229-47d0-988d-d5ec1aafd545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95415214-087b-4274-80c5-2dbb4dbaea8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983daa5-597f-4e44-891e-3c00101e650d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646058d7-1fd9-4bf5-8b48-a4a3e43c20c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e57fe84-61ea-4c70-9414-4aafc947c6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b9c5b1-9286-4f7f-b395-636d78fa0f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a8e971-e704-4d8c-b69a-0ee8cb07bf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2464a30c-65d0-4952-a15f-9a342dee0c1f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc94dbbf-15fb-4e02-9278-635ced4f401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5b0756-ab19-4a67-b9e7-bfe5038ddd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d421303a-c22d-4edd-8c16-1645b5ba5651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b45285fe-bada-41fd-816b-b41c0e6281af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7284e0e-8495-468d-86dc-4eca1a7ef916",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1d91bf-c94d-45b2-b6a2-5b3a7023e860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e816f95-0e95-4be2-a8f5-04aa2464fe8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375692d3-708b-4877-a62a-776a8078f8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b4ee05-95a7-4d1d-9e07-02be01f19c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f2cf80-24f1-4cf4-880e-660537dcfd6d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89405c23-7c47-4102-9116-17c222ba8a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becd7fff-e9f4-4e41-87f1-a1b205dba549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32ca44b-04ad-4d33-a562-11ec62ba3cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f116d385-e968-48de-821c-1e6ca59478c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a72566-e4a4-4372-8d7f-114e00d6372f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559f1773-d37d-4e53-9e9c-b558122ba727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27e56d4-ecfd-4002-92f2-7448ef0afb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dce5a0-67ec-4a5d-972e-98efc4b02f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d43f4ea-1fcf-4c9d-99cd-c346d3ce22f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff442bc-eed2-453f-853c-26ff78f6ceee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e252f5-5890-4b77-b1a2-85e7f471e22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776eea87-f8c5-42c8-bb7a-aa5555cf3fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9385c39-1d2c-478c-9e1b-fb82317d843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea315043-7fb9-4178-852d-7cf069549f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc94721-9232-4e6e-8fee-ec6093176e20",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f391dc5-6327-4b2e-bc6c-445d7c76e3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899c827c-adce-4dc9-8e3a-87e7952f4ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8e532-6c75-4d46-ab07-48dbf5903987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61d20ae5-746c-4562-9745-3d0878a12702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cdd9b6-9787-4e8d-8eb0-9162acda1148",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b2d16a-c09c-4d6a-b09a-9bce539b6121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b4b20a-02d0-4750-900c-6c1afd187286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d5234a-4b65-41b2-9cbc-3c7506aff9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf75a55f-0e19-4e23-9add-893c5eecb5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d418bf-d409-4d58-acbd-44546c592ce2",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532da6aa-c965-4665-8920-873fe61ca1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6239c364-4d2d-4b31-9ec6-ae4bc0aabed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17115ed-4f67-4c86-90f7-5b59706b01d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "607df56a-9294-4fcb-a48f-df84b9409cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca6761f-df3a-44f5-a8fe-5106f349894c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6acc4f-0504-4d65-b3b8-607ec62951f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95185fe1-8e34-4989-8575-80591f760f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee976f7-3e60-4423-8660-4bbd816f8376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5055f8a-49b6-46a8-b4c5-e2a230d558f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cd7c69d-b02a-4ca6-9cb4-35fa506a9eb2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0217bcb8-b95f-44f0-a8f3-67cac5363e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c1516e-1096-4fa1-aa91-b271a83bb55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd9bf48-e8d1-4a56-9631-bbc478dbf74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "42fce9a1-348a-42f8-a308-b6bdc3331a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ff33ab-d535-4529-85b2-9992cdb91220",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644440fb-5203-4253-9876-7a16a3e296dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bd2a02-b699-4ecb-a729-924d280e2ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720dc8e7-4722-4e30-a8fe-a31b7e1eca78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d87e6c-46a1-4cc0-84a0-012ff1570e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f6cfbe-e4c6-4a9a-a1c2-20cab3044b32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc835334-b34d-4d4e-92ce-1eb12e6db898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c97151-e5fe-45f2-bf49-0461b3073c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace99c9a-43b0-4456-b517-18e56eac0e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bd04e0-0e9e-43b1-872f-4ac5fcfa67db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f8e7dc-f454-4ced-964a-471bedbd8a02",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c2a7e1-cdd9-4410-81a4-e1424d4a1061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f3babe-4f06-4421-b74d-fd8af2c872bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ce13f5-6aae-4b67-819e-fa6578a8949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2342cefd-e272-4aeb-afe0-fff9af9c33de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0cc1e4-f1d0-4e4d-8bb0-0934560c3e33",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b5a757-a68e-4992-a79e-128cbb07c1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ffa748-ba4e-4b73-8a72-48dce4348348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b18e1e-0a0f-4171-b011-e43ce4aa7ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2695b0ca-2183-4dbe-827a-14276585a786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c30a94-e429-4748-a836-df3934ae1bda",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d4cb19-9dc1-4a66-ba38-4e0b3591b8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c059dcdf-6851-4812-af8d-5b489515f791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176e41b3-0f30-4ac4-bf12-57a50f7ea946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08e5ccbd-de09-4c69-bbda-cfb15b883d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c373348-a386-4cc3-bed4-a7a046b27219",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b928a5-8b89-41fd-912e-d284389bda85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de84394-9d7a-4022-ac55-3ba32fdbb3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0099b7cc-5145-4c93-8958-12950ed32ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "203dd5dd-2094-41d8-b831-b8dffd48b8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7814d3dd-2a9f-4e7a-9301-d679958e2cff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df740e0b-39bb-46be-8813-8733dbaa3eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22aa86e3-282d-4d8e-9571-a519733e457c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7450625b-b2fa-4dbc-8e0f-48aa514c252a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b20983c9-1752-4692-8c09-31f81882b0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3628e02e-e179-4c39-921b-873552ba606f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59acecd8-05e9-4db5-9017-b0a9612ca673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6483ec-5da4-4202-8212-603f6e05b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b7b249-3643-4ed1-95a3-622fcbd661fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79306211-eb2a-4054-b38a-957e85f7fd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba066b0-6a8d-4343-85ab-6977b0db1d08",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd3f3d-cbb4-483b-b81a-62651ce5b1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49bbcaf8-9c63-4d64-8328-e1099a8c1a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa59ecc6-93ce-4366-8895-ba64181220e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51c6c4fb-7769-4f18-981e-cf75d8090174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2231bf1b-fa17-41b7-b293-aa9fe83007b1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f0c29-0cde-4893-b859-b3b182760bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee80549a-feb5-45fd-8416-cd9bd82b17cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7ec43a-4bc7-41ab-84a2-c7e824cac534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "346f69ac-5154-43ea-914e-98b901dc9b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b5e609-94f5-41ce-97d2-75f9cf6ad707",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e54bc3-79f9-4474-b7bb-41f775d50eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b75c0da-28af-4061-9f02-ff663e41d1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaf0050-525b-470e-8153-a6297366c42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c5fa6f4-cf05-4832-b663-3583be76c3d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3adbb077-0fcb-455e-8b33-57d4a069aa00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88fc73e8-a22a-4a98-b777-94adef4eeb7c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02373bc-55d0-44a0-8947-10782bf79cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c01b04-8876-4b04-a735-969adeff0168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e3aaf9-317e-4870-8b4a-47000d1c09cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f62caff9-08c8-43b1-956f-64cddfc23560"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "865b096b-ad0c-4b16-86be-360b61d5b3c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74ac2a7c-053b-4cbb-9661-594a403bd3f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "beca45fd-4412-48f8-8ea2-0342b5f50800",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ead1a955-a807-436e-a33a-280ddc1b6329"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e6f509e-bf7e-484d-9b77-328b6c590f4a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ad439fa-3fcc-4dd7-8492-27534d3bf620"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bac05de8-edfe-4fb9-8095-8c7e72e6e8ca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b7f291f-6450-4ea8-b0d9-da3baa53cb3b"
                }
              }
            ]
          },
          {
            "id": "26c1f77b-24e0-4076-ae9d-0802906a5cf5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9b8176f-0793-45a8-8b27-bec3c47e3140",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "532b63b3-b500-4de3-9603-254f847f0ac8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3c6ce7-a289-48f1-af3f-345e1b75b773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cd5bb8d8-7132-452b-b676-95f819f1d224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0137ce33-ad01-45c2-be40-b5a458666ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782d5de7-8f45-49f1-ae08-229ff6476ccf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c07c9de8-97ab-45f1-b290-790c8a0d03bf",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc28f8f-3e40-40ae-a89a-02141fdab659",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d3461c4-1a00-45b8-a380-19b57a503a03"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d4a2210-50ed-4591-a814-595d2982f85f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c235ed52-cb6f-4c51-a181-c911cad44f39"
                    }
                  }
                ]
              },
              {
                "id": "1c4f6adc-5784-4760-af4e-528051569cce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65ad03bd-fcbe-4908-9f65-5b4b8e841cd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e1e61b8-ef1d-451b-8870-54b2d7ac928b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52e6f76d-aa23-476a-a5dc-6bcccfbb832a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3bb5474-95b0-4a95-82c7-205238d75717"
                    }
                  }
                ]
              },
              {
                "id": "5bedc8e6-3510-4ceb-8cc0-8b3d02985ae2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02404614-5512-4ea4-a176-c06fccfc7ad8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32b88f02-c5ea-4767-9b4d-2cdd9c1d8b7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53ecf2be-ce73-4a15-bd4e-ef1fddacb4dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f7714cb1-cdf7-484e-97c4-f6e3d50b8914"
                    }
                  }
                ]
              },
              {
                "id": "55028af6-35d0-4fcd-b27d-42eead63dfbb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34cbaf56-5a9c-4c0a-9d21-39246a3919a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a457e6d-b21a-4c33-86fc-b09b173741a7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67bbef07-c549-4880-8759-a1a2294ecde8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe2b7ad0-d899-4c58-b4da-92d851f92387"
                    }
                  }
                ]
              },
              {
                "id": "57b9a66d-7966-4454-a606-09874d9e941f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a302d567-2350-4d9e-aa9d-e278bb2d1a56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "062f6a25-a662-4d48-870c-444391e34c28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb73f8ba-7b69-428c-b64c-24b45cbe6576",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "def97b36-fd0b-4424-a659-00de70a63142"
                    }
                  }
                ]
              },
              {
                "id": "248e638e-4575-4836-b1a2-739512a0e22a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b61564-6f02-49ed-a49d-6c91c332f1d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8b518fe-d937-4d0f-9007-678d441ef393"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6708dd9-e159-49b4-9a6e-d0d8d9f28fcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9778e62-fc1b-4023-807f-2b70a1a2c7a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b660e7c4-fb36-4394-9b56-0b712a09d859",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07e9a2ed-9013-438e-bac1-3116ed014b2a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "98de5d74-7c73-42e3-8a41-0524c4141b74",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4423e8b-ca4d-4893-9493-2fe2c2011de5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed7374c4-9eb0-4330-b2ab-11470f6cadb3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "afcba844-0277-47b4-9abc-c80b5087cf15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "39babf39-f26d-43ac-9286-7f03b8bcbf1e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7c71d14-2f6a-4694-9baa-c3bd73954da4"
            }
          }
        ]
      },
      {
        "id": "97c62687-c3a5-4483-b220-c5ad9dde9765",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d217d830-0db0-4157-a00a-1cc75698b29a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54211780-b747-4c28-8df0-60963cfca6d9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "751c767a-df97-4411-8558-bd6f52167a48",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb7c278-9394-40ba-95f7-42ad2e7e2ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5953c140-ddb5-46d2-9757-799492374863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74dcb1b-1f53-4d55-ae0b-99640a381dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f98de4-5df9-435c-92c9-c174c34d01fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17064227-6a57-45f9-9e40-4be29e71b8dc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f481efb6-2416-402e-beed-a4cf21a2cd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23523e06-3931-486f-8d6e-b3c95f408403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa146ad-d83a-46a5-956b-a2a0872a8565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2de51c31-80f5-4b9f-bcc5-65dea844b976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd350e2-f8b9-481b-b170-c6bb9d75551e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd18c03-b173-4d41-9c21-6e1326be3e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf82c9d-f5a4-4c9d-9a0c-8d98c84bc7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97482f17-bf87-4213-8bd9-cdd80b0aaa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3236e689-a00b-4551-bde0-5f9daad64bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56706e0b-b639-49e3-a316-05feae26a1c4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930a3946-60d0-4de7-a603-9bf175631aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e401567-0d33-4423-a7f5-5aad5f5728c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc30f6bb-71b5-438d-ab54-c3f8250b27ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3c78aa-9c87-48da-9b8c-519319c3ca5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53166ddc-f487-4a18-af55-417a928dc1a4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975eec9b-ffa6-4228-9c45-cd97ed560130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd89db4e-f556-4e39-9430-67f3513d0f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b44635-5149-4169-baa9-302d6fc34aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e5424f-c35e-40ea-abb8-dab4e4c50285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25deaf87-2fb8-48d2-8e2f-dd28df130041",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e6c953-a929-4599-babe-2dd3c9db359c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c855dcf-f8f7-4206-ab94-a6ee691bd4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43964aa-fba0-4dd4-8ae5-f0f5faa3e9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4734a592-2d68-404f-b59c-d28e51189036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d46bd0c-55ab-491e-a773-addc005e9598",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabc296c-6511-4ed7-8713-b8d5858508cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66650d35-2858-4a5b-a9e6-8c49f5431082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b69e84d-dfd5-41b4-a596-fb0d779031ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b19ef6b-c67c-496a-ba3c-72afd2a89c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9adcb4b4-3c19-4f9c-9e1f-3a67e88d69a9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ceeaafb-fd77-4acf-a468-b10a0e1b92ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d584181-6161-4840-b5e8-c5ca3df27b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568e313b-7893-4610-b744-181503e1c862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd820a94-681d-4c60-965e-ce48a1ca7fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73399426-40d4-4527-9327-312f4b7d76ed",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9716b8d-aa64-442c-8a2b-5c1c05f93214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559bc5e7-eb24-4c57-86ee-cc4e44c80751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df326f7-5056-45f9-befc-5deb7ba54e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5943d7ff-d7d4-4fe8-b119-78a3bc6c0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2ce7c5-ba2b-4b96-b1ca-f1bd8c1e06d4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9295a264-5da5-4667-a4df-245a467cafe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c16e13b-f7e8-4abe-96d1-7097b64f89bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08525da4-3628-4ae9-bc18-d878487f3370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ea5f3b-3a3e-444e-9686-420190bcc1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19dca018-ce5b-42f2-bd0b-3e8ccd637beb",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e80b11c-f80c-4696-8502-b02ae692edf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d01527-c3b6-4ac3-82a4-d3683390f413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c8b194-e1b6-41d1-b94a-4a134b9e419a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fc1cf777-1257-4a07-844d-e33173862c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366c1889-63f7-4548-a0ac-c56343e3b713",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813ab21b-383f-4788-9c5c-3095aaaf6868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e15cc6-f5b8-4cc5-8937-e613c03eb69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029160f2-d45d-4c24-a9b9-28fc6a2b3c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc23a84-36c0-4670-874a-51574589c9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07971f5-94a0-4fe8-b597-fe0711623cbd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b6efd2-7abf-4ed4-a5cf-644ab0ef6b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e09286f-555f-4cb0-8338-1b2c84c54cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2637bc-cbe8-4006-9ee2-156f3b8f4843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a83af6-8149-4ba2-8300-b8626111e462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92fca53-b134-43ca-bc21-1cab3fa6993a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f4e309-81df-4f39-b147-e76f92092208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c09cf17-0818-4605-8522-f48a1b81285c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff2908d-c1c7-483d-82dc-3153ecb1587f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "27ec3bfe-ee34-40a1-9ed8-f1a2f55f800b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75387fe8-93ee-45cb-95aa-862f50cd5c97",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e23fc9-dc34-4e83-92d5-84d78fc42e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d86e9c-bfce-4736-a2e3-dfb00c1a167f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4804f550-fbe1-4335-85fc-e794d7272a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7f9180-9037-4a5c-b26f-2e9a1df83289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ae6a4f-a475-4d4e-a0fa-a6ba77b53017",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a32b926-f2d9-4ce1-8991-79d60a9d2491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6856fe-4b9b-41b8-afc2-c4c7e32ae8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c91433e-1734-4b9d-9068-069dfb6ebb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "72905f40-a0d1-4eed-aac0-f5286194bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587a7969-4f1b-49ab-b436-bed7971a6bcc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f7a7c6-ffcb-44af-bd34-3da8201b63f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9a0b91-9479-4f25-af0e-9adf1171aaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3c4c29-a5ed-4d36-b17c-1a1558cc164e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4c6c5a-d3fe-49fb-bc82-08a392f965ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721bb8ea-1e2a-4b97-b365-bb7fd5292994",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bca50cc-4ca7-465a-ab23-a1e588eca94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ecb43e1-4afe-4f00-9f0b-2c96684c7f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f79fa5-8b04-49d1-904c-c18b4f2c23f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7586389-1414-44c6-bec1-355fe36e9985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a83863-9443-414f-93a9-26783a3cf381",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258adc27-4e73-46ac-b309-faf88a42e494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186e708b-e06b-4c82-a460-9b492c33f498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4258b64-894e-465b-be93-6538f807edff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41b589e9-ff88-452c-b1a2-10eb68691520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17ac0c2-5207-40a7-8fa7-cf661d7739f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba635b80-51a4-44e6-b001-ad281f75760a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6804da1a-7831-4f94-a3f4-a025c5b771cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc16366-19a6-4e70-8cec-1ef4416a305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "301951f3-dd3b-4318-9ad9-f6cae563a52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66d5eb9e-2f61-4459-8d2f-99aa63700240",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0046a2d-47b2-4f82-8dc1-3b78091cb0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa5e2dd-acf0-4760-a9eb-85ab38047c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d85950-160d-49cd-8c9e-a4ebd031ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdce7a4-e808-4cb3-af5f-e48a21a12239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1174622b-73ca-4746-a22c-a22c9603379a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e9a26-5264-4fdb-89df-2e0459e59007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1155c623-b22d-4ae8-a474-c53faa5b359d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0baaca-35eb-432a-8f86-a441637ad77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7629e827-b27d-490a-b6a9-ec424f8316c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88186c34-f701-4b42-b680-f523706194ef",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab68a8ba-4a6e-4efe-b122-5afef6ab1d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca928800-a2d1-4a87-b867-27fddb65ff3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f11195a-d5a5-462a-9b70-ed89e2d3c13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55bd4484-e1ca-4751-bb71-49e5b3f56712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a44bdb-4d31-4314-bd94-e9bcd87c5320",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d122a853-8a60-4021-ac04-e7c41a793514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcb521e-115f-4d2d-baf9-6a971a390362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137c41e7-91cd-4943-bf94-67f8b61d5a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6699fee5-fd49-4340-a96c-e4cae26e97d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fcf117-dc3e-4036-b25a-88ec4c84dfb2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09ff18b-8464-4164-ab8b-0c17f0d34673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59141ae7-0329-40f7-b436-3a5bbba70907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a009d1e6-db41-4200-b412-8c8ff581a6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6a290e5-cb5f-4031-9583-b271c8163e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b301a93c-c071-4693-9a59-2b2abff76897",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c5fc5f-2ebb-4133-9b25-ecbe1c6765b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2fe924-6bd8-44de-864b-a63256da6855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf05ed9-6c4f-4349-b3b9-0db02622917a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d05cf752-631f-4fdd-92f9-6dbd6c5f1a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb931348-c936-4a3c-a49b-2cae50f6af73",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb8cf81-d68e-4b41-be9e-142fdb9cf10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98370d8a-5271-4453-8ca4-7bf8f57456f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846bfe64-bad6-481c-99eb-db9d82bcdfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987fb849-7998-4d81-9226-5d98c76fc72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e522a01-fff7-4bd0-8502-400aba44c158",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23def8d-776f-4451-b58d-14e75d8a3218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f025a393-ebf1-4620-b38d-fd6ce6bfbf90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca824f82-cd2f-42a1-831f-b546f665da5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ab7fac-4a35-45a5-891b-0f6c436bfd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd0b609-4040-466e-99dd-aab528deded4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e5ff3d-f7b9-476c-8014-9b5cd564fa4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38cc7dde-6e30-4cb1-9e5e-63bd200bf730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcea7ed-921b-4cf5-a60f-b2cc978614d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d577581b-23cc-4ccf-9002-dfa5ef1818aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839752a0-f2b2-4aa4-baab-55de570385e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b1390b-22bb-4816-ad75-091925f800c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44cbf8b-dacd-4d7e-b523-e1796849d765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2782b0-b1e0-46ca-8654-f5733eb5286d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "388a078b-6311-4ab7-8d3c-24969f6191d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ee4443-4ab1-4f63-a1be-b3278e71f47a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5b9792-6a8a-4b5d-827c-3baf47ca633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac69e5c1-7f82-449b-8109-f494d8fcddcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59414d1-7fca-4a8d-9461-2794e2d946df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e9d9ad-a405-48cd-ada9-2182a8a8d92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b05529b-1939-4b33-b8e4-77f655ead6df",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22a5340-36fb-4f57-9b05-daae36e80277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6819c2-1532-4bf3-81ec-4b149a73ac25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15dc1edc-1632-40b1-8330-f8d54714d066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4529fc-e1f1-4362-8cb6-95f2b5a8dfbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70289ce3-76d8-4086-9d90-c3947269e5e8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63af1946-e983-4b90-bae3-5cd724daa1cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2a04e4-e0b1-41d8-b9ce-1b58dbf00822",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3def5fcf-e72a-4ad4-be1d-5eff7b51d5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d65e17ea-bf1e-4a21-863c-442dc93489e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "756d4d5d-70c7-4ff5-86e6-e31c489f0cbe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0699af1-15c1-4dae-a0a5-d7077c4eef1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c26c13c-ecf9-4977-b1b3-eb68fb9e897f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9db9bdd4-ac7d-4b3c-a286-09eab50fe481",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac148b8-5c8e-4bfa-b0b9-41b16552611a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e796166f-209a-410d-ab86-6182492e6927",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4adf7dc0-9ebf-4c72-86e2-67e0c2ecfd02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "430a7e74-db87-4c82-8bc6-ca3b6e21524a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06ddf127-765f-4f87-b831-9c3637e0c079"
            }
          }
        ]
      },
      {
        "id": "ac6c7fd0-b0eb-4083-846d-414a5a129e01",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9651d516-929d-45e9-9672-f24fd69ce35b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "44ff00b2-bb69-457e-a50e-c96e8aa9dda3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bb6e3a6-56e9-4b9b-bc81-3314d23d355e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "598ff6e0-123a-4248-b765-a8497b4a83b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fccd7e2-95dc-4c34-b723-1d67a39653dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29e890f-e8c1-4835-bbed-ff2db611349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e409cb-daab-43ef-b95a-0867cdd03d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a440495-18ca-410c-be7d-b6a04894c9b4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed65c1b-6ece-471d-bac9-a204c84e488c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9a686a-808a-4df4-a047-93b0379ea232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936fc050-1ce7-47a9-92d6-2dda79ef908f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b065eb-821b-45d1-8689-dcd377c7f1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f061850-5e32-4837-8b24-cd385460ac06",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1bbf2e-25ca-4862-ba22-32c328eb24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff87d30-2327-491a-aa06-09f09bf3de2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c28914-8fd2-422c-9456-037fb25f7dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b186d83-4576-4193-a721-59bf595cdf18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca27c47c-b4f1-4772-9d6e-e8a3b8f364d9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474950d0-9dc3-493b-b64e-913569de5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ce2443-7c26-4814-97d3-2140d070963e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f083cc-1bc5-4aa9-a430-166fe1cf5a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81090da-b507-4876-90aa-9bd903b6d9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367f00cd-4990-4017-bfad-ba151b1646e9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd23faae-2da1-4725-87e0-200db5b9b459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10abc609-5a37-46ad-8bc3-846206f53dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c833a6-d6a1-4892-8e3f-7b82a6605579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82fb48f5-aec1-4b7f-829b-1137bdeaa342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c87527c-8cdb-44c0-83a9-54f04af6755e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0600d116-2181-4a91-88c7-f92f51da80ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b04e8de-93a6-4798-9f06-a6ad059e75c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ea3796-bfaf-4677-9414-7bf85a283010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6ac39b-011b-4aa3-bf22-1cb753466d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e701692-d007-4020-9a8a-477ea9df2894",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574a57a2-5a5b-43d1-aec8-69ab3053c137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "768d23a5-69a2-497c-8780-a5040e7b72f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41627868-b0e0-4323-8a0e-05990197d13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2968dfb-ee63-41d8-b14c-4a4ad4e3b065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30257cab-5f81-4c80-87da-8067579ea6ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6d1ca5-5434-41fc-a650-c58c4083b9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88e1749-f904-4c67-aaf7-99d16afc220b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e949c6-2dd1-4050-a929-fae1a287a597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbc1f98-54b7-4a4f-b52b-1940504d2d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67bf7e8-677e-4aa2-ba3e-db5b693c3817",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8e1ad1-4949-48c1-9f49-eff404c6e6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38f1bea1-0f9f-4da0-a0ca-76d1c509da1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b125fb75-2cd0-4dd5-8ef5-31869fca03ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0173214-8173-4dfb-bce4-cc6cd945b5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1502d1-2648-49c1-804e-8f971d794388",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c538a8-d697-4fde-b8b9-89f517108015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b8f5d2-581d-49ea-b1d1-68f8a247a1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7e3347-046c-4264-bc9a-16767e9bba68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc10a5c-9d61-4c79-80b1-a24765ef2dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f29c048-8c7d-48e3-b491-4f2cdb007b04",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfbb55c-e143-4b6c-b64c-e29683bb8859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a05dd7d-dfe0-4dfa-bad2-4021611412bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac1460b-5491-423e-b515-4a9408233f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9006a7a9-49e5-4499-9fad-2e8aa9a902b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855599cd-578b-4070-9aa7-6735a80bdd0c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf62f93-d86e-477e-9dd6-c247450a204a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfaf8c1-139b-43d5-a557-f5d1c0f194db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a491e53d-016b-4d5b-ad83-ced0f757f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6705a209-455c-451e-9021-02d42bb1b08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae036ff8-e2c3-4b01-a6e4-57d078a42d2e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d554f7-7304-434e-80b1-00a194332df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d845f388-d2f5-4bb9-b23c-ef4d327cf64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d3038-ba63-49b0-8632-65ed83b68106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0572106-876e-4103-9f3b-42df64174c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac8dc8a-2dbb-44b7-a154-187be9f7833d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8913c88-5187-4bb1-b2e4-4c1dc8e532ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2d2413f-3aa8-4300-98b7-74d6158ddb15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342fc7cd-bd2a-4e7a-abe9-e7d724cfddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fc6e3a-a18b-4694-813e-31c163535799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00b1f08-949f-4eaf-a274-9c96ff0c4b0b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee0f152-1ffa-42d9-a30f-a0f0f49d2f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f226dfe1-6178-42da-88b3-58ac33390ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301ab0d1-5a37-40e4-a46d-90c1261f9e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c01290-744b-49b7-9b62-6f182fee42a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa3fbb7-197c-4e7c-823f-df7ea2c7ca58",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6cb75e-ef45-40b4-8778-e758f89b89f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e967ebb3-173b-4474-b585-d602e660b321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddb2324-2202-4459-b22d-1cd3ac4e952f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "514a6bae-8f50-48f6-aeab-7986f8b53c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d6226a-0005-4ca7-96f6-e72438937df5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1353d5b-06aa-40da-acf5-06de576fef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b1fc7a6-34cf-4b38-8a42-b25ebad8cd26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d56892-1682-48ba-8933-2ce7be2254ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e4a970-0d35-4a66-9246-5e28a625ed2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a42793-2bdc-4b6e-8327-d7cbf6a7ccbb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162c925b-873d-4dcc-83c2-1f86ae585875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc92a912-308c-4631-bd77-03686f367323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8d8e7e-ffec-414b-beba-ecea8d9a7b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "868eba61-d949-40f2-94b9-c5fd64bafc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256f86fc-798b-42c9-998f-747b396d4387",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778ab751-9cdd-4c22-bf56-7ba5eb8fc181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf086fa-bebc-4cc2-9626-d31f1fe41ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13f1d06-e5e1-40b9-a24c-ce29198d7610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320886db-29e3-4705-96d6-c2cce63ec047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a70c8b-3f0b-4303-ab0f-7ab49d280a57",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaeb6c13-199e-4abb-8653-66d7ece6fec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d435c5-9860-4dbb-b599-4ea128a6cb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e51a2b9-795f-495d-9324-51c3b58e1a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc2512b-8ce4-40fc-b539-2d2972929f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae338f9-7bae-4406-a2f5-6008d63a3549",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bafecb-f8fe-40f4-9e39-833838b03a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa202aa-cd4c-4f6b-94c5-09210d51343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1498f5-e8a6-4ac6-9116-8617737a3e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85bc6a7e-cb0b-41d3-a063-857ad0b57fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559b87ab-5180-488a-a9a8-66552c9b2f9d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12f5e7-ac6e-459f-98d3-d978e8fe757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a4402f-a2b7-421d-abe0-144f78f89be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1634cd-3f91-4c89-94b5-7fb6c3f37dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9de922d-5074-4807-ba54-92e6828ad663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de8a190-56e4-4067-b392-6f8529882524",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617032a2-5b49-4863-8392-b94dedd170ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b59e36-139e-4c8f-91f0-6e0b703dcfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5222f0ed-6842-4263-ab57-0e1a60da1661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e82bcc7-ad99-484d-ba18-3a8d5afdc4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace551d5-a89c-485e-aae8-39881fca71ba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52b5b2f-6ab3-49fe-b24b-2155990ef5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1f2d09-9b40-4dbf-b3f6-4392d9a34500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acb0bcf-9b06-42ba-b9a7-06e6481575fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82cfa29d-8cad-4069-9fd8-c4c4af133d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e352a623-cd57-43fb-a731-eb5d240d2bfe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1cafa8-e4ef-4d8e-b337-c7a6dfc54bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4a3ffc-7b6a-40d8-a208-6b9f87f8d51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4e90de-386c-4347-9426-64bc6c778011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "659e3bd4-f6f9-43fb-83ba-7029a52d8463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9227df75-e118-46f9-a2b1-8c65b4ec54df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5a26b9-ccd1-4e92-8909-99a973d9dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f1f4b0-270e-4461-ba62-89ad0f551b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d2f4d6-a05e-48ac-9ae0-1b8c60263ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0353c8-e56e-4d13-b252-3f490d00ad4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62077508-3d94-46b6-a051-a9ab8b9c5c8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6a5716-fa24-4d98-a824-c97db4b5abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b32ed4e-c59b-4220-87f6-7139c8737df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e163211-1e33-413c-92ac-3230caf0eb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69d7be04-8d9a-44df-a503-294399e3d917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc66bc2-faf0-4cd6-83c4-ed19cc8cea83",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e333d0-71d9-40d5-b239-1bc33b6b36b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d524410-24b0-46fb-9d20-a60d9baeca6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2cf4a8-aeca-4126-badb-390d93f49624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "741e61ce-ece2-4faa-8bd5-c5177ee77d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87410494-e565-48e7-94c5-0cda0bf1d655",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c34d4c6-5109-4959-a0d4-80d1cb24274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4a9234-9f12-4bb4-836f-7cd2e66e1180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b52cac5-fc94-48c4-ba58-8b84294ed8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71155c6a-88c4-4ee5-8d5a-770ca177bbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3b7489-2757-4bcf-a752-3ccb8fd15889",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be5596d-86a3-4753-bf96-c3a4b0637b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a40a45e-ae34-4db1-b049-d60750482d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dae74cc-a461-4347-84ac-1145f4634769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfdb7192-e8a5-47b6-828d-1c3294b078f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e88dc-fe43-4007-83b2-32bc7d6f8504",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb63a903-5208-4dfd-8181-d9cfe79785be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf2064d-68f9-49c8-a307-61e7d86f0f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130bf9ee-d4c9-430a-adaf-6eb138f3102e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f27bdc-1488-45f4-9bed-17c3561a06f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60b358-2d0f-46a4-a4dc-89002b0902ab",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6430ce-79cf-4f25-b3e4-38290973f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63871dc-c1e6-4f47-b46e-2fbaf4d68581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd998075-3c55-43f5-b85f-8cc2d1c78429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a8f6c00-fc15-4cb3-a838-5050ece7a823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a9384b-2c6a-4245-bb3a-39d489c5e94e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec312e8-7d90-4107-aea4-a6e07ef2dedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c8cdb4-afb3-4eff-b2b4-4194957452e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119d6c95-55ee-4808-8596-81f723227bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64863f2e-6891-442b-be1e-393953ff1b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b17dfde-8634-4de4-877a-aa7bb2f2e733",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4402fc21-7619-4a66-b14d-c4ad0b642cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b8aecae-683b-4679-add6-51e30dbed03c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4e46f3-1673-429f-aca7-0302d2149672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71acb91b-e1a5-4b84-95cf-3e4c469aac9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f99ee5-96ff-489d-8651-8daa19e6c2e5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2559b0-efa7-453d-b23d-1af7a14ac3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b4e444-9470-4fe7-bac3-730741f24c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99f26e8-6d12-4ead-a24a-39d0265cf610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa335a9a-c278-4786-a09b-5a22138d016a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a46383-1b50-4237-b938-feab25a3c43d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb814462-0b02-4ab0-955c-7f417e8dcb37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb44a1f-dd90-4fe4-9ad0-b05bc975cf8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8191d5d-0912-4a78-84ac-0e1b2bee5a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0064d36-da7d-42c7-b9c0-807d14b7ada4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbb4e22-90f7-4e88-9e07-81032a6fc389",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aa0b84-0dfe-4078-8663-2a4b4b940547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495a78dd-508a-4ae6-bde7-c40a9a896b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73bb02a-f266-4beb-b9f2-83ca038652db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aac03219-ae72-4a4a-9f18-b763451ad674"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80919dcf-50ad-42fc-904e-7c8b55808233",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "668dd2ec-537a-4c31-8e71-b3b5105f6f21",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473d86e4-dcd0-421e-b290-b39d34ce1d0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0cef4a56-f3cd-4491-ad64-2e8ff01cde4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a9b2bf-84ff-472c-a7c0-2435f70d9aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9017b58b-1a12-4422-b773-bbe507911d05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "942f4b67-b30e-4075-a5c0-626ddab233e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a56a48d-6e06-40d9-a3b0-93ab2cf52d9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83db2792-e3b0-4f51-869f-b33bb43ff164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "454c8bb2-cb66-48f0-bfc7-40bd1e5b40fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e70f2f24-1dae-412c-8024-f178123cc442",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "999d2289-7afa-4cc7-a688-46b148128841"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9853d423-f5b9-4ec4-91eb-c774b455c982",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90296fdf-e4a6-4962-a5c6-3ff38fdb99d5"
            }
          }
        ]
      },
      {
        "id": "8862ef55-8820-4eb1-af45-0e60b03fcc09",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1e3cf3f9-9fad-4037-81d2-06914df7c1d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43817233-ee89-4333-a9c8-db6be0136ffa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bf567496-0067-446e-80cd-9adc40ef170a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b42e2b-5606-435e-aece-05cd0aebff8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7509e8fe-7164-46a4-aa20-a840a7d9b436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468a4990-04ef-4a21-98d2-c65bff756a17",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ed953a-c377-4fa6-865c-fe49e237a76b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f366dcdd-a3dd-45fc-b295-11cceeac50d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eeed70-e3f4-4423-a531-6d15c8eacfdb",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd9ffac-2366-49c8-a693-09bb4a8d4f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54c24a6-df7c-4cbc-87d1-8ead9aee1c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea8f82b-5fa8-42c6-a4f9-73418bcd6d2a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18bb689-0cf6-49ac-aab9-0f93aba4e951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdaa361-f55f-4193-9910-68a21605d66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de72a195-c0ea-4f23-b8ed-415cdf06f2a0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b20829-f2dd-4241-873e-02f6dabd321a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74b7772-5928-4d7d-8256-5d554a1cf1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbb0da9-05b4-4021-b987-dcde575d7452",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e75513e-4dc9-4805-8a69-c1a07e4ae953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369a716c-8eb4-4f7b-9921-d1d7a163255b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bebe31b-e303-4677-ac41-ed3b1554aeb5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1d3386-65dc-4b11-a67a-ff03d4c30a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db72d4f3-9d53-4695-b65d-295849dedefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77d550a-7d63-4c98-94c3-6eae9cf5323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fc9dfb-af8d-451c-8a7a-f3abdc8f6f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118dbd22-0cdc-4997-96f8-f7d6f2049028",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f474543b-c9ee-4a49-851f-42b6b017200c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4559e84e-d499-46cb-a7d3-baccf73465aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36cfa39-6508-482f-a60d-9bab89f88871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb51779b-9ac4-4bd5-b748-72702e8b7594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77864ecc-ab8f-47f8-87a9-75608a97bd70",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63916348-c429-43b2-88aa-b1ddf8bf6f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c359bd12-7d44-4053-9f35-a9913c6f34d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ea9db3-d95e-4855-8fac-058a547e2857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382cc03c-dabc-4f79-8a2c-0dd5cdabfd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138ecd91-0973-4bc8-b020-3a3a4ec4fc1e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf8589b-fa8e-41cf-98c9-5580f1aea071",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b20c3b02-b81b-4769-b26d-d84fc5ee9d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cc0d88-0562-440d-ab0c-95ff50246e61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9e02d0-c2ac-4aca-81d2-f20d5e11cee9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc542700-7c94-44c9-a9ca-970f0db56d0e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f3ab36-33d6-4ed4-b7bc-252914f7678f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92db10e-dadd-491f-ac20-62537fc430dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738610d-a452-4c62-854f-32b0d571a6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642521c7-119c-4a3f-8b30-957c3cb19122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7be0f8-82f7-4335-b7a7-24b8b1258a5d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f220efd-c23f-410e-b445-3c6351970546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5426b303-8bff-4a73-bdf6-7ba9a4454490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33cdbb5-d4d2-496a-b333-13d0858d21ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2872e602-7ec1-460a-aba7-b6ef27092a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc685fee-2768-4fcb-b1f1-9bcef50edc4c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5409d372-f008-4dd5-92b7-a89e3235830a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "864afe14-7833-472e-9279-200f32c88d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad248fc-6a08-4a0e-b067-37bcb5e3b728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76edc084-d041-4581-9787-53562881d943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631c39dc-a111-41af-9448-20efc780e299",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448a9c27-3f8a-4394-a001-1adef9beb040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3546bd56-4323-4ad1-9de4-bdc03fcc9f46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf54ca8-46a2-4bbe-b452-aaccf8fa77e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bb0efa-b136-481f-b207-115c30835058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d5cd1-7177-416b-9a87-890389ac7059",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62410af-1ef3-4035-869d-5f29cf393d7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a1cdbb-7af1-4661-9200-9d8323f0b276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa38f16c-1bf1-4379-bddc-a5ce0824c305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b11f18-923b-4dea-a46a-52226e8198e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9125515-44c1-4d51-bc37-2da232c9230f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9abe7291-cf3d-48c0-a524-ce5c577edb30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca44a476-259f-4244-a99d-f0be6ed752d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56169abd-f019-48de-86cb-630734431562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6294165e-4d61-4628-8d3b-8b7dbc9eb580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fdf8a79-6152-4b40-ae65-780ea13558bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ada09fd-a871-4088-8e6f-2c9d4964b08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b3213b-2bca-4571-9090-0a25dcb89bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b020534-6ddf-4562-b6f0-648282b1d87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6134477-add1-44a3-b233-be85fa771116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d123c-f55c-4a15-a9bd-12d03b0a8f6a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fac393-2c8b-45aa-881f-7104c92fcce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "558b987c-5845-4d37-b27c-5da4a557c7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b774c5-2f4a-420b-b2f6-c3b783bbdcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e5d5be-4d14-4ab0-aa91-08b8df0b962f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd88a05-3079-4ba5-805d-37995c528514",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60273521-72cf-47ef-b357-c9d3b43e5aae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12094969-2655-4d65-9140-5d500a6052c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e070759c-58a7-4445-a675-b7d65bd8fead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fdfaa6-b483-4787-98bd-b50e70ae8a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e384437-6249-4b4c-b9df-30a0107ca7e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfe1538-30ee-4406-b460-5cdc5fcfd1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4649cdd9-bf06-4bf7-8a7f-2941d6aee488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46cd71f-b514-47d8-832f-d0ba40518d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb57594d-19ed-42e8-a121-8181b8043708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3fc099-97e9-4827-adea-76cf54313f01",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9e3bb6-0e60-4115-89f6-a289fb660e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd39b99-b376-44d6-a6c5-7282e130826b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787c2107-bf96-4ca9-9854-fee1841dd8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7324e85-623f-4461-b682-7c5c728cb6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d16a863-5d49-47d3-843f-538192210f24",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b24089-90a9-4c34-93e7-97b8fcd7350b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcc1be7-a0ca-44b8-93b7-50af487b912e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c6e151-b7d7-4fb9-895e-e1c6194eea2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b770f35-b8e5-4e31-bfc7-711324d85cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a065c8c-56e9-4832-a42d-548955bde1fb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165598d-15a6-4a33-92d5-c7d206e19433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a8d829-4fbe-425c-b7df-8b61d6732883"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7283c4a3-63a0-4ea5-8405-61bc1610864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d8fef5-6014-4932-b035-7fd794f1cc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d258ed-30ff-4825-8549-df03c4db1a13",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a6e957-81e5-451b-9b2b-4f0f91a709cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf274668-bde9-409b-9503-c69e93732a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ac758-df02-418a-be4b-dcb130544a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a567097e-4ca7-48f5-bf91-eca620017a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c571380-5018-43a7-8837-9287f5e2c902",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfccd3e-b39d-4685-8403-2dec43d9c453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f97d1042-fbbf-4200-898a-49e6b9b98579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edef9162-2680-469c-9178-ce065d0fca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aacdd69b-9135-4f00-907f-5c6d8ffc210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c926c0f-9281-4522-8d36-83b45da460cc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9155639-5cd1-410b-975a-ad9455eb8fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4e94ca-47f8-4927-b7cf-52f37c2661e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b64eb1-01a0-43ea-93d7-bcf8ae2bcf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddf96a8-0fe1-4618-8c2f-d39cf4a3e22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eaa408e-7101-45bd-985e-b5d145e7cf48",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d706826-f76f-48f7-960a-7727ba1d388c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1023d0-db3f-43f9-bc78-ea4f9d8d38de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c529dd8f-8dc4-4b58-b038-e0c9e4649e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74bdc6dd-22c7-4149-9f92-2aeaa8dbefca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d37027e-6240-498d-bbb8-ecc498c1202d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af0fa03-0ac8-4ccc-a4e1-4475949890a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61ea74e-89de-4d1d-b164-30e008e46873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9d91a8-cf28-4834-b572-13989c2de5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e507094a-f531-4e30-88be-ec09210002a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ec7e62-ea77-464b-83f0-a6e4a0623c93",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ef557d-268c-4106-9163-b5f8d82bf947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b02e3b-f99a-4e70-9a2e-b19454a4d38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8777db-a1e3-4f2e-a06b-3d7dc04dccf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c828e1-b9fc-4460-bd25-a285c41261ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e69153-7e69-4287-9f5e-62d36afe1c80",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2964c8-3308-46da-a9d2-ed3e4f76c817",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d5e859d-dee2-4f71-89c6-48176de6e2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56e67be4-501f-4a84-a90d-e938404df873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab90ce45-c883-474c-9558-308d932f57ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695a7f4f-2289-46ed-b9cf-c3758188b40a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9ee003-f13d-497c-8813-1f56fdf25ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdae5e71-3674-4a7d-b650-3f8cb023b00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8a012-de70-4c17-a26b-3cc14ec71bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e160b5-bb86-43f4-b8c9-4a001e7e4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd33234d-65ae-4e55-90b3-bf13d23f9929",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897e4460-f4f9-4463-89d9-9a4913a4b1df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94f4261f-19b8-4e39-8254-87d137a74c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6412b00-d5d8-4a76-bdeb-af3ab6be4568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964b4601-224d-46b4-aa5f-b1bab8d8fc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81c3b18-bc62-4e32-b33e-af814bf4ee14",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738be1a4-4366-419e-8539-73bbb040fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03901a25-9a97-4710-94cf-bd94efcbd3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b46626-9bf1-4f95-b855-16a3ca21c5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a2c838a-4d96-453c-8bbd-e31ed9383d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d0c01e-0ebe-415d-a90a-ac800260eb3d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22d3f6-a6e5-4b3c-ba8d-9559a01febc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86596818-36c9-4a61-ad3c-52741722edab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdaee92-2385-4e56-8438-77cba982a9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1d44bf-7092-4537-bc28-f991c9142c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8988753d-47e4-4ab0-bcc0-c1bd6d920243",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c77b6c-569a-4531-b3f4-e0888c643b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4218ce67-68c6-4daa-864e-461f322cc4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b6a610-d5b7-4c6f-b2d7-5d17b99df16b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff8ddf7-d016-48aa-9e72-776a09d54097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde3d8b7-1edb-4d31-b4b9-d8070bfdc1c0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e6a163-545b-41fb-b33b-994934b09ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49e3e851-08b1-4e3d-8ee8-fbeda4f3d1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6426e1-2cfe-4580-9059-e8259aa5c60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f576480-d959-4a82-8208-d48e0913fcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b0fd4-1e6d-45fd-88c8-32497126aeef",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1335cfd0-f16f-4918-8708-034d5c69c97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f8f268-3cd7-4343-92d7-fa168f783f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b284a98-ae3e-45b3-88f3-58dc133268b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b696e44-fdb6-4e7e-accf-33935b73babc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b53ae4-b33b-4289-aaeb-62b3bb64a3be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6f5463-9412-4854-8385-647463b2c464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1303cb59-ca20-4b73-8865-32a251d81737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f27bc54-163b-4886-8f96-63234ffd729a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51f04ab0-40c0-4073-9485-290c842fc885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6253702-4e6e-4157-b468-e61dbfb4f7d4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2787b240-3522-4fe6-a0e2-3e8c8bb316cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d35dc4-b8ef-4f76-9164-c6f80ef6c321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e3841-c86a-42b5-b8c6-3c25d1c72c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c063bf-e711-4e26-a75e-489aaf90c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5367b6-2410-425c-bb81-7f6265a949da",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55103efb-11b8-429d-b16d-04e5c367e984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0088e4d-7f33-4b5b-bc99-5509db728ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd54a0-c740-4528-a794-2218d95c062a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77968c3d-8e55-4fe5-a556-2f50f0c9a24b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f621ef1-59d1-46fb-80e6-019351950085",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a01e2d-6100-487d-9587-49556977e32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4303d9a6-837b-4ab8-ab1f-b848c135c752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900b24c9-a860-4a9a-84aa-fdabdbfaeec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc7b7cd-9d6d-4f27-9f3d-d6a3ea97ec9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb133a7-e585-426d-afdb-2aaf738ea569",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674b687b-7e5b-434c-b1bd-1e679e3069a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe042bb-b503-4a63-a454-72f2f7174d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f91f61a-17f8-43d1-a6a9-c19d932c69fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba93a30d-d650-4606-b261-9d1cbea78078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6af587f-c9ac-43a8-a06f-cbb6640f6d38",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555107dc-742d-4674-999b-3688ba312268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849e462d-5232-4548-99c8-a92aae7972de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8cad4-2099-4a08-b599-f7fccdb9dc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f637a1-46a8-4b90-8305-4345cff29778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bfc502-969b-49b9-b900-e40ccd568462",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4066c780-d61c-43d2-ba94-2c76de68bcdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc72bd2-821d-4a64-b6a3-a61d7f2162cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a149d49-8bc5-4f2a-973a-74470845d37a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db34281-7d42-4537-9d65-419d3650d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9277fb-7de7-4b0d-892c-23f436448a4f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6332e937-7150-4416-978d-71db80458d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea3bb7e-e679-4064-9157-8d5f8a8ec27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb30dd7-9490-4496-9be5-d7003c141f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c0ef63-021a-4fc0-9cee-b30c22c4d88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c27cdf-1e52-4288-8511-51ee5b4ecd40",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e2e440-6bea-48ad-89c9-b332bdd20ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79761fa-6c77-4846-a68f-d6ee855f0e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7d558a-1447-4027-b02f-26b1333cc84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04c66301-39f7-48d9-9088-4e9f1d424252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54a6011-ee9a-47c8-9c00-bae0a40b6f9c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76be20d-e713-4718-be1a-18dcbfdb8dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3113f7f-cc0d-4f06-ac86-7f25a6a51230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb66d46-7a60-48e4-851c-4457413c71f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58341c19-7e4b-454e-8d6c-7b3b61f1da08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110b7ac5-bf3b-433a-82a6-606794aa68fd",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234caf3d-f97d-4a75-bcd1-502ccd243cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0975fdd-b014-42fd-b230-d2664eac2b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5594a5-570c-4247-bdaa-6bd9b980f679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e507d-6184-464f-a630-131067e0ce13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e837ff4-1f08-4630-adbc-97c5c07a5e2c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9ce55e-4f51-4380-95c2-4a1bfef5cb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5424483-dc7e-4b8c-9694-6c0e7666d312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602a5499-bda1-41a4-8a35-987ef733565c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a95e8d9-1148-4016-b231-bb27bb708fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709183a2-4e20-4ad7-992c-fb6313394942",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a55bb2-60ed-4d62-89eb-8a158dfc8e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce8bb8f-28c0-4b0d-8cf9-ddcee7bc8be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ddeea2-1d2e-41b2-a3bc-24c44d1ab34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fb160e-610b-4264-b266-433f25a2ea83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60508c6-49a9-4d71-bff5-2a3e9083e2ab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be29f1a7-4e54-43e2-8b9e-15ae8b1e5aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260f670-e7fb-46db-890a-0d3f316b2a60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de826e3-76f2-4974-b0db-ac20d7718064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5b5e88-2593-41ba-a30b-7b666caf3e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846d9c1-b07f-45ce-af1e-49511440c05e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cfe380-8121-4c35-b9da-b6e5fb8d3e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a809292-463f-4ed5-a29e-518ea8d7720f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f3a85c-2446-4871-9520-0233e0df0629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7a4377-59fd-489d-ad09-7ac9114f04cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f21a377-ced1-42b3-8e29-69712c74f537",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c4a19-074e-493c-b417-75275e559cdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f415a16f-fde8-41c1-a40c-d83740883f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadfb31e-ef32-4774-9976-b30c4ae31928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92338ad6-c5e4-493f-a9a9-09ee51af470e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba17a30-a4ab-4555-b12f-4666e11f10c1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68296ab-689e-4b4f-abf5-a69d10fbb83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611c041e-ee24-4619-8f96-459094ff4a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece8f86e-622e-44d4-9367-758eaa46bbb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08a2341-86b6-4482-9f1a-c3afa80dc312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846a3fd7-17d9-4c51-aa8c-d98658a2532f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1298921b-b05d-45ab-9c76-7fce7c047b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6461f878-f31b-4c3a-b306-ea46ffb9dd4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06b5ec6-a2c9-4ce4-9481-6994d494b243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0189e224-ea3b-4dc2-b2a7-2114c8106f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135e5522-576f-496f-9742-365833587d93",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeeb6d7-a2cb-4b97-9530-280c114dd2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bc3cb5-33cc-4969-946a-e04f61307a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ffd907-c0fc-4a6a-baea-87620fe611d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dba5fd-e3e2-4ab5-8dc0-67a1dcc64180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc1e9dd-69b0-4266-885a-89e2902caa66",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eae7292-94fc-48c9-97bb-3f8880d561da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426866eb-6557-49a7-b56f-7226f037a251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af6851a-705d-4507-949a-6e3618a0fd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321fd70d-e3e5-4f7c-89df-504f146c9973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f18159-ec1a-4f0b-bd93-20cb6471a777",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2b1194-e73c-4484-9a93-0e1daea17df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8105d6-2479-444d-871e-217eff7f6c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c5161f-ac21-4c44-9e94-e9b4facbc69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f0e072-b1f9-46e1-979c-10e27d3f90f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea129f38-b9f4-475d-a801-5a70bd7e9527",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ae1dfd-ab69-448c-b43e-306a82e441c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a81179f-04f2-4e45-a952-a8b34f65a3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "220e2012-fc17-469b-850f-ac172d422298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa670e93-e33e-4e0f-ab5c-3e88a83e7db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bcddd6-7335-432b-b783-f61784ecb556",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031c0af5-0ccc-485c-955e-b1f930ff1591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9f2a85-d545-464a-8bbf-3c606ac82896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d2ca41-24b4-4780-9b64-2026ace196a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df866f4-1f23-429b-b4f6-763b62c643d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c6d2d5-8ba9-4bd3-9485-6e40789eeba0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293bf01e-be34-4948-9526-faf67b08d1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cee906-df45-4c3f-a9eb-c82e330288fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee5e539-b79f-4d10-8672-9ccfaeb54d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed107891-2c9f-46a0-89d4-23fc5c0a5c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f726398-e95c-46b1-9749-413b7fd7722c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3129c3-2706-4cf9-94e6-1187f33297ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad75df5-1804-4759-b008-e4fea8d29a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126c2cb-09c0-46aa-a391-4f95d1c41ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86537aa1-f306-4172-9746-3de953aa2fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b45861-9155-490f-a588-1c546796f5b8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de1d0ac-428e-4195-8a86-31319d4a0df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97876650-2792-4773-bf73-5657b9857603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b3368b-bde1-4019-8930-6488a8935692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781b6301-38bd-4777-8c9d-a945abbeebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422c69f8-e2a0-4664-9196-3e9ace8bf50e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c62b48c-0feb-4e64-95e2-662fa5d0f771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2280a7c-f374-4792-b3d2-a736990f882a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e08f681-2ba1-4c6c-ac67-eb042131c6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cecdf4c-718e-4324-bdf8-0627cf09161d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54008d4e-d928-4b90-a5e9-a413ded2aa8e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02828ba2-e324-4780-bdca-e4f01186a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73387432-e35c-480e-a3da-57756dabc089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536a5552-190a-4694-a988-5526033e0d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580d40dd-850f-4981-a9d7-d57f4ef953be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01d3198-42be-4a05-85f3-760b8d416ae2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4a740d-4a0f-4d75-ae01-aa379f0ac3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "063807fc-e647-49dc-94f8-0a5d76a9dabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed82965b-f9d1-426f-8ef1-a242c6780cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1fe634-e86f-4010-8757-bdc1333504d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdc27f2-46c8-442e-b593-624c8e56a409",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b8423b-de26-492e-b641-96403216c1eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189cf132-c052-473f-ab1f-870445ef6299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758bb764-d001-4eb2-b12c-a5364db53167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8311575a-5ab1-4651-8811-5d03899afcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91860714-7486-477e-8ce8-472dfc7dd9e4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fb695b-6c19-4021-b3a8-60838b1f81d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e048e89a-f656-4563-a4f7-9ad30dda2183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238d36b2-daa4-47ec-bc62-a17d11d358dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2b1b04-7469-4fe4-ba47-0ee2b33a3a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c6d26-bf6c-439d-889e-af1a6638a2dd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b32ee98-a573-4f0a-9cf8-c8a3e28f57c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b93f9c8-72ac-4907-8865-fec59629fcfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7fcf59-8d06-4d53-9d96-eddb518c774f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a5ee17-7e7a-43ad-a88a-21c96b307fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02af9542-a7fc-4c69-b6a9-f974df2c8a34",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d6eae2-de6e-4583-b883-aeeb0e4cd680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ffc143-df80-4985-8224-c31edf5c0468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c1d8c6-1578-4f8a-935d-6ae7c426432d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8c0847-caf4-4d8f-89b5-903592dca03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84dd4c2-ad6b-4bdb-9109-71b7d22c6dc7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e446cc-5774-499a-b520-96d7eb8ef730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e48f234-1b09-4efc-a1ed-b34a2cd6f3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eb15ec-c7a5-415f-87d6-eae9eb79e264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15b4810-235a-41fe-b666-f14fcef18b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440639d1-348d-495a-9df2-b89b5c48c174",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e12042-6b74-4823-92a5-e4589c978c36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "604641f3-39e5-4fb9-8c78-7a433b8c1f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e32a13e-1a00-4982-87fa-ba3fabfea0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac0fb37-8b77-44f5-9683-de60f7ce811d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e52fb84-a84f-411d-8f8d-dc7ea0abc923",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed3955e-f7b2-4182-a1b8-21825af371db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "158b8aed-17be-4734-b281-7548dd5e1a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a20fc02-eb16-4595-9a34-722a989ea748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8453c2ee-4019-4425-8703-49069f6f925b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed78bc5-f50d-4732-9210-1819633b5d10",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5843281c-3b3b-4dc1-973b-2197d2059eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8ae70bc-d2c4-4470-a72e-3b170542a59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03362e7-047d-4bc0-b40c-c26b138b323b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486684f7-e061-4781-a272-e00ee17c1a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83be3a65-eb36-4c60-9f46-abda14ccd698",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92168ce7-d3fd-4d13-a659-376a4f0385f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df90b878-ffa7-486b-ba62-a4789f654930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e9b9bd-eaa8-4cde-a908-6742b0ccb228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae1bad4-9a67-43cb-800c-696338944762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1d3434-6f91-4643-9594-e5d7f7b0a158",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a52d00-841e-4eef-8540-156c41caae4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dee3846-8688-41a2-b2e8-e0eac523f0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d989895-3ca5-4532-8c46-540f2b93860b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e76d9b5-98eb-4a82-b919-b475ddac2d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd7cef3-4834-4630-b752-b90341e76972",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26031630-f312-41b5-ba21-7f98b109c4dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89ebb5f-2d40-4325-bcea-358ced615b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ba100-3662-4262-b79a-3b826fd75b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163c88a4-d72e-4c32-9b72-86d0348a5730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed792e6-fa34-4ce8-94b2-96e57d0130c1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779f738c-8a23-405f-b0cd-29823b45c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a03e04fc-3320-4151-b786-d37a7bc49a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ae537a-6a1c-4742-8cdd-55a49f0b419c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e844dbc3-ed5e-4e9a-9d72-f47cd94a2ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2c5b5f-97e6-4e42-8c29-617674044171",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c207272-e649-42f1-a068-a9798c8820cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2873de5-77e9-4e97-b2c9-5ec41840643f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac1ed37-431c-46b8-9386-cf8ceb868d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b1c8cf-2288-4ecd-846d-7fef898468e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d659193b-c26c-4fef-ae75-abba4753b5a9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f53e27-009f-4851-8aee-22ffc99ec001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58b79a7a-5105-4f92-9855-a723be1cb28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a62bf-2d1f-4b89-8624-05d5572c7f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8cbdc3-6a86-44e6-b9c5-94aba825aaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ce1fc7-c623-4ac7-934f-d47e1cfe988b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056e3e5f-46a0-444e-8e19-27587a4a17bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322915bb-d500-4c79-a2ca-cbfefa830f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311ec360-77ff-4da8-b510-510e7158a858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11711461-f963-4268-bb33-2f65c99f428a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11009320-9e95-4677-9927-90e363af1c63",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5508c0e8-9116-4fbc-a906-886725a14993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee981356-3edf-45df-a75e-4869012aa51f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac33e03-aa0a-4a67-bac9-1eb5d47f6014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be89d01-daaa-4887-8614-1b3b0a9ca637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0488a9e-219b-4c38-966a-ded6d623f346",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff42371-4dca-46af-81b4-13c4101525e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c63b6e3-debd-410e-b154-d33eafcdc85d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7881759f-e22c-4d6b-9690-6478472da137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b28b0fc-1468-4c60-9239-8443f9ae486c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b788492b-5674-402b-b3c9-078b79cf52a3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a61ec7-cbc2-41ee-b7eb-8b972b125eeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa909bd9-cb7f-4a2e-beea-43b52996fb11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02dac68-3592-406e-9833-98885e20c7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe017b35-1672-4276-8f70-d36f8d023559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d0d0e3-60ac-4059-be9c-809f24642ac3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a11e37-38dc-4de6-ba8a-590b02ab73e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a690f5b-23b0-40d0-8303-17a49dacba7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc44ce-2184-4b27-82a1-c2c1e7f77c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e9e3c6-44e2-4930-b264-adadf03890e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d92b300-740f-4a4d-abd9-560fecfedde9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30343089-5da6-45f1-87ce-d45134ae86f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49495b2c-75ed-4174-90ba-44fb5a28326a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2a5eea-9010-4cd5-b82c-1403d17e7ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7219ef-f186-4c51-ad57-67ec9795ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66073953-74f9-492b-8499-0d27dbf8d18a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1373db28-b432-4d61-9991-c7ced30817d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a5ff50-ee21-4fae-b9cf-e02dff961067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcf9f0f-2f20-46b9-ad10-76f219d0d6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7364ee62-8d82-436a-bad1-fc6b50796c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdab99a-e8e4-4b9d-b63a-ccc110cc9a13",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a518c8-5711-4708-8d2e-924dd7a59634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec6975e6-f3e4-4ddb-a5d2-d1b5949a4e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19290775-42cc-4ba2-b988-4bba10be6ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ef4369-85bd-457e-bc02-97e5cb6b4937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe3d42b-9b7f-43b5-b9ba-c7f910f726ec",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c864d1-8145-4ce7-967d-446182c19d71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0194fc4-9343-4455-8504-619e5501da92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75cbe4e-d6e1-44d7-a41b-d2d15c71d963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8451e4b4-993f-4e52-82a1-4e97ade2c447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739e470e-a94f-4f08-8212-468267747260",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691a7d44-d11a-4cc6-9133-0f25005163ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad54e5b-6a66-4320-bc19-7e9ee5a8e996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b55da2e-1d32-4741-9038-026909e5c955",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fff90c-27d6-4b05-92ce-0ff9c8bee2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7ff04b-bb9a-4f32-add3-90e2628e831a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9c78f2-267b-4da1-95f8-515ba9129b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d1adaed-ccc9-4895-bff8-0c259d799ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df936486-7bb5-4647-b3ff-bb3ee2247645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390f4cb8-690f-43e1-8d61-5ad5f8bd0503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232274ac-9213-4320-a303-19ceb4300470",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04727b10-4ec2-4627-977a-ce3e58e1467e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf7c4e0-2ee0-408a-93fd-6805ff0e0c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c791cc33-cbe0-4283-b4eb-531f7b1661b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813721bf-b6bb-4bd7-99af-ae204fbffc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05d509e-e6e7-498b-b427-9666e18d7b63",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1696d7c-be8c-423b-838f-297615d4ab6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be5dc52-9154-4228-b51b-626fe84d51a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf7be40-43ef-43aa-addb-99d6eb446633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49afb8d6-1e8c-4a8d-853c-55c6d53a0a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b82855-486e-4cb6-a5d6-31642050d9d5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb428d8f-349e-40cd-a726-95ecf7f85c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ebee8ba-674a-4803-b783-ba68e262a7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7631c2-a31c-47a5-8c33-3935e7b26b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58deaca-c4f8-49f8-8b33-86979813466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5051694-afc7-410a-bc51-aab0c490cb23",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e08eb5-5bd7-4f23-afa1-be6401f7ed06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d618c267-234d-4d8b-89e2-5c2caa5e4536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef938d2-6f7d-4505-9fc0-4365a3635b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342e015f-c231-4cea-8ff1-967c4bc9ba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b66a6a-4efb-4bc3-800c-fb510ced9ba9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3737c5d4-d9f1-403b-9e4a-af0f1d7ca663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481ba1c6-9a9b-4301-b5b3-ae361a30bce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa72b28a-a169-40a1-8f85-dbb903137aaa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a92f40-c731-410c-b087-5b6a88407632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c854544e-dfc8-44c0-8d60-766574044bd2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d210fc30-ea83-4877-8d17-8053a2df4647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a8f260a-6535-4b35-99d3-62ba9da3d5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03015c2-1adb-47be-af33-1e5c427d8a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf2db72-a05d-47ce-a410-60f3a8e521d8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dec94ec-67d6-49f0-9856-a8ffa00e0b45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43e15229-14f8-42ec-8722-49c9586097de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6478f0f4-f4cc-4b05-bcd9-f675117e33ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7be83e52-81b6-49f4-9748-6a397706bb65"
                    }
                  }
                ]
              },
              {
                "id": "8a88cbff-03c0-45c3-9647-5f86ee649652",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74cb3c20-65f2-441b-916d-b9c271314968",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf696cf-9253-4df9-8584-22edb0cd8bbc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7492d3bd-c796-4d4f-b521-fb5be2ebdb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c1eb92-fe14-47f7-bc80-4065e6485340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63c42103-db08-49f3-9134-6bbed0f0a004"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a650df-215c-401e-965e-70ef57e035dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebfb56ca-7a9d-4498-874d-13aaffe6d355"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6de67a06-3cfe-4cdc-866f-b03f65f3425e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11d791d9-0e2c-41a5-a1e1-68ee6c3ee170"
                    }
                  }
                ]
              },
              {
                "id": "c3fabea2-401f-44b0-adc4-0778e3b3cbac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "09250ce3-9c05-40be-bb8e-960d7ba3aca5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44c0b0e-54bc-46f6-bbd1-e518a6bcd0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "23b5530c-9453-454f-9406-26db5c352af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7861de-f2c6-498e-9e83-4425b07937c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9e80bc-c610-4815-89f6-52e6badbfa65"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef3c22a8-5f42-4e1e-ae51-dfce3bf0a73e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf08e9d0-3955-48b2-9033-026690814b62",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "462b338e-542c-4377-8b69-0dfdee5908c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2a5f293d-80e3-4032-b967-5df80ce51c65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f9503fd-1b3a-4cd9-817c-f0b6960d8611",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "709daead-aa66-40ef-b054-ec4eb3bf288f"
                    }
                  }
                ]
              },
              {
                "id": "80806f57-d881-4987-8363-40c8dae92c21",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35758a33-9025-4c36-a9cb-e425efdc5398",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "59b3dc00-7a00-4e84-bada-dab9566b412e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f20c76e9-10c8-498b-950d-70e75e662446",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af46f20-90b2-4b83-8ff5-07c5c09c9c39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bdf9bd7-fc42-4fe6-9021-92dea4204124",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "36b9cb57-d468-4fff-b762-484e41f98989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97149ecf-7828-4f91-8657-e8ab1f5d8811",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df98754b-fbc6-47d3-83fd-ab4f75e26278"
            }
          }
        ]
      },
      {
        "id": "1d2c2ade-269d-43d7-9aa1-63e5970b9ef5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b30c333b-2790-4108-86e0-c6a42551c278",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96f052a4-a952-4534-b64b-500246e70195",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43d908c2-e350-46e6-a32b-5df8b51e8402",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237538e3-0f52-4005-bc60-d336cba9e213",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d8cd63a-c0f3-462b-bfcc-d556b7228337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6be74-e4ff-414d-84bf-7c9307c8be00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e50900c7-bfae-4487-9360-b834b02feead"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f18d28b-66b3-4fe3-a61f-d16d3f240983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c58115f5-6401-41e6-9d5a-393ab98f954b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16966077-41e5-44a1-8283-8ce12b648871",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce0cb17f-7de5-4f57-a809-dd59ed47fa4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5c66417-a69c-4d63-933b-bc9f88544857",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a67e8f0f-09f4-45be-8959-1531be696c4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3560704f-90b0-44e4-b534-f62134d75d56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c796257c-515d-4a49-ae51-55c0f44d217c"
            }
          }
        ]
      },
      {
        "id": "23e7277a-d733-433b-b2ff-6475c0c1165b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "296cf29c-052b-42bb-a4c6-e3511f9a8e5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f266937-3030-4a97-ba40-cdc1c87404ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2121e80-2af3-49c2-897d-63c63fb7a6b8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d777fde-8c53-487a-b1dc-0f2e49f26ab7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e10082e-b31c-42fc-8627-e9eed499c069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b0a27-ac84-4a1b-8206-b75ec7f47ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8f95154-eaca-4c43-a130-fca21ab6c22e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f35606ff-589d-463d-9bed-d4af8f540c39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "487809e2-5dbe-41c9-8797-7845fe37f109"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6443ce78-ebc0-430b-95ce-ee86280b6077",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0088af4a-a0ea-4186-93f9-7d306e3678c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33ca77d4-649a-4cfc-8283-64c98d359c22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "414d7ae1-8d30-4749-99e6-fe2680b165ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07e456dc-2d48-410a-9623-5e784ad2db93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94274b2d-a8c7-4d22-afc8-35703571c964"
            }
          }
        ]
      },
      {
        "id": "d1c57582-b731-4631-8ba7-7c899f8bed04",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1fb232a8-3954-4298-a394-3a6b6c3559da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc365390-e3ce-4567-85d5-6670604851cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e16b604a-603d-4737-a5f4-c8ef5d7e7108",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42818015-fb0d-4cda-9b91-ce92c06e8f29",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b50ae4eb-a60e-464b-b75f-8e50d7926df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445013ef-c541-4fc1-b2c0-a434c1f58a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00a8d085-38ea-4660-8907-51f585dd8404"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "858b36b5-5f7e-46a2-8832-083704b5f584",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ac9ff15-c661-4435-a303-f3fba8638b50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3b1637-d284-484e-b027-af7573014738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "942bbbf3-a83d-48cc-b47e-f04a761c976d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36edd366-6197-463e-8226-fce5f59e5d6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a68db31-1184-4999-842c-b2c7561a9f54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5487354c-f7a2-484a-bc83-37639b8d9133",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02fc782c-e50d-4fc9-849c-eb6f494aab8c"
            }
          }
        ]
      },
      {
        "id": "fe644b53-5c24-4578-bb85-effb39634812",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c0c994b-d863-496d-873b-375e32147d80",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0eb745fb-6370-41e1-9f9f-b4dff3756062",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "76bdb3aa-60f1-41b7-acbb-c0b58ad1955d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea8ae0db-a033-458f-89ec-72fc9a70a5a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a04179e3-1232-48df-861e-012367c80d79",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 119.87368421052629,
      "responseMin": 4,
      "responseMax": 12178,
      "responseSd": 815.362305547343,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710635808579,
      "completed": 1710635852003
    },
    "executions": [
      {
        "id": "bcc26b2a-b173-4a21-a539-7f5971750f49",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c94142d7-378a-445b-ab5a-8d6d9d5b7277",
          "httpRequestId": "6828fe9f-a40f-47eb-b92e-d5beae55e668"
        },
        "item": {
          "id": "bcc26b2a-b173-4a21-a539-7f5971750f49",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dd9f3f50-39c8-4554-b904-9336001bc2ac",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "c283c9e9-79d5-48d8-9a57-eb20f4ab2603",
        "cursor": {
          "ref": "52e7cd45-2134-4c3a-8149-91b48ffb0a3c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "17fab721-735a-4da3-9e6e-7aab1bd67497"
        },
        "item": {
          "id": "c283c9e9-79d5-48d8-9a57-eb20f4ab2603",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5c98d321-6b77-4352-b239-37242e1ea226",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "6bf16ef1-6a89-4533-9d74-b204f187535f",
        "cursor": {
          "ref": "4e91a2ba-d4c0-4e08-a2d0-5939916b3805",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "747c172f-58e1-4f86-a984-b5f6873fcf1f"
        },
        "item": {
          "id": "6bf16ef1-6a89-4533-9d74-b204f187535f",
          "name": "did_json"
        },
        "response": {
          "id": "ce93d2b4-44f8-4ac4-9159-e4f3a21c3423",
          "status": "OK",
          "code": 200,
          "responseTime": 254,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff7efa2-15d5-4744-acdc-df23f21e7ba8",
        "cursor": {
          "ref": "cc975586-b2c8-4181-8243-5d75193abad0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18fcf5f8-6a4f-4fe8-80d5-4f54318ff965"
        },
        "item": {
          "id": "1ff7efa2-15d5-4744-acdc-df23f21e7ba8",
          "name": "did:invalid"
        },
        "response": {
          "id": "5883bd4c-af98-47f1-9099-57abc3968cb4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1208,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff7efa2-15d5-4744-acdc-df23f21e7ba8",
        "cursor": {
          "ref": "cc975586-b2c8-4181-8243-5d75193abad0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "18fcf5f8-6a4f-4fe8-80d5-4f54318ff965"
        },
        "item": {
          "id": "1ff7efa2-15d5-4744-acdc-df23f21e7ba8",
          "name": "did:invalid"
        },
        "response": {
          "id": "5883bd4c-af98-47f1-9099-57abc3968cb4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1208,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2e41f0-f9f1-4a22-b49a-b91e539d171f",
        "cursor": {
          "ref": "d505c7ff-365f-4f53-8945-5e7463960fb1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c3b20966-fcfa-45ab-b0eb-b80cd06ad691"
        },
        "item": {
          "id": "9e2e41f0-f9f1-4a22-b49a-b91e539d171f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ae4845dd-9008-4ab7-8deb-e4868cc466a4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 21,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f0cfeb-7b0e-44a6-9e88-887bf5349996",
        "cursor": {
          "ref": "dbef6f05-dbee-4dac-a2b1-c3a7dd4f92b7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec671b31-d8d0-4fd8-bdb6-e576cdbff0b1"
        },
        "item": {
          "id": "82f0cfeb-7b0e-44a6-9e88-887bf5349996",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ff12796e-f8e8-4243-ae20-ad364545da58",
          "status": "Not Found",
          "code": 404,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6deff9a-673e-4c41-a33a-772d7aa985e7",
        "cursor": {
          "ref": "a6406a50-a9e6-442f-a5e2-d259401fcca4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f3fe7529-3d9b-4318-8335-2b2bfdcd18cb"
        },
        "item": {
          "id": "b6deff9a-673e-4c41-a33a-772d7aa985e7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7ba8b3f2-98c1-4b53-a44a-600de8a2f0e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5025c463-e1ff-4b9a-947c-5614d4f2f073",
        "cursor": {
          "ref": "267a6f18-f043-43b6-88fe-3dd32b88f8de",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b684b433-86f0-418b-a82c-cbc30a01597b"
        },
        "item": {
          "id": "5025c463-e1ff-4b9a-947c-5614d4f2f073",
          "name": "identifiers"
        },
        "response": {
          "id": "e7bc7e84-af60-4bc8-962d-0ee3fbdf2007",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0070644c-a410-4a7a-86c0-66c49e6d984e",
        "cursor": {
          "ref": "255c758c-0b6e-4804-974c-d9b44541ca6f",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f7ed6866-07b8-4d89-9d47-a48b4ab9c7fd"
        },
        "item": {
          "id": "0070644c-a410-4a7a-86c0-66c49e6d984e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3d972d69-d698-4245-9e34-e42f4cef5c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957743c9-6899-4eed-8f04-751303d74c18",
        "cursor": {
          "ref": "934803cd-df46-40cf-832f-920d77b3fbbb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "20babff3-51fa-439e-b225-8b1bf576c31b"
        },
        "item": {
          "id": "957743c9-6899-4eed-8f04-751303d74c18",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4994c105-5873-4569-a051-ffabbc4d0196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e3207e-e95a-4e69-8f72-e13d8410c1fc",
        "cursor": {
          "ref": "fc1a1002-2441-4e6e-85c3-419d7d98e40b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8c6c4aee-f272-4d2a-84d9-bc77f95c1f5c"
        },
        "item": {
          "id": "e3e3207e-e95a-4e69-8f72-e13d8410c1fc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ec38c6b2-f9ca-4e08-a05f-791a6187a673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb95599c-1530-44f7-9eee-45bbd86eb1aa",
        "cursor": {
          "ref": "8c968d12-1ea5-48cb-aa56-ba52d88b5eac",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "37d4c089-12f1-400c-8995-75092ec13a80"
        },
        "item": {
          "id": "eb95599c-1530-44f7-9eee-45bbd86eb1aa",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bea80263-f865-4337-b55a-9437e576038e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52043a8-d910-400b-ad6c-5f4f7a5e10f2",
        "cursor": {
          "ref": "78300c2a-c08b-4983-8fc1-e7ae847ef5f5",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9b378081-89f3-498e-8fde-fd2fc2b12363"
        },
        "item": {
          "id": "f52043a8-d910-400b-ad6c-5f4f7a5e10f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "839f1b00-e802-4fae-a8ea-f8b623412e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da04173c-4e61-44dd-a2bd-6d23c0b57ef4",
        "cursor": {
          "ref": "eb183641-5e58-4854-9871-7c1a7640bda3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6f5f24ad-9dc4-4dbb-8547-f36e2d3ca8e6"
        },
        "item": {
          "id": "da04173c-4e61-44dd-a2bd-6d23c0b57ef4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fe38152a-cbd0-49c3-b536-2e6e9c5640db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7933f4-6898-405c-9850-0a7b33130d43",
        "cursor": {
          "ref": "161e2d75-0201-44db-b70c-82e6e45c0f31",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e66ce08a-70b1-4295-a1be-082600a797e8"
        },
        "item": {
          "id": "0f7933f4-6898-405c-9850-0a7b33130d43",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "42d2c8dc-4f6d-4357-b292-664f31ac45fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd434c-a99c-4d38-8900-f928ab5dd79b",
        "cursor": {
          "ref": "d920517f-1a7e-4dfa-be1c-8af8212cf0dc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "05da6bfd-e6cb-48f4-bd96-739538d4eec0"
        },
        "item": {
          "id": "7ccd434c-a99c-4d38-8900-f928ab5dd79b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "32f40be8-4575-4656-8fdf-cc7699e98bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b600abdb-d4f4-41c0-b4fe-6e08343f359a",
        "cursor": {
          "ref": "003c8461-f041-46ff-b69e-6242d5d78b3a",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f2a7cb13-1a2c-46ce-b366-2035ca1e3dfa"
        },
        "item": {
          "id": "b600abdb-d4f4-41c0-b4fe-6e08343f359a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e63346ce-2386-4c20-8d4c-bbb57437e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a492b06-73e3-47fd-ae9e-45b3c05e464f",
        "cursor": {
          "ref": "86747681-0199-4fd1-8c61-8005b8854666",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6c3a7bed-59fd-4796-b419-cce5b82585b2"
        },
        "item": {
          "id": "9a492b06-73e3-47fd-ae9e-45b3c05e464f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f9e74f82-f8d1-4796-a21c-49e702116304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc862f5-cac3-41ec-a370-71a5fc536a40",
        "cursor": {
          "ref": "67cf59b3-626e-4dba-ab92-ce40a0409c93",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b439f63-c924-444c-bbed-89548392929a"
        },
        "item": {
          "id": "4fc862f5-cac3-41ec-a370-71a5fc536a40",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a37431ac-3be9-4a2b-ae79-0aee1d61569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d812a356-4005-4952-925e-1c2c13fd474d",
        "cursor": {
          "ref": "b551baa6-aaa7-43bf-9d78-b9ba6a1abc08",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b13a6d45-a028-4d0f-8a4d-1ca793cc4e11"
        },
        "item": {
          "id": "d812a356-4005-4952-925e-1c2c13fd474d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "724550bc-542d-4561-ada2-1e219ff4c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fc7127-5750-4968-b95d-6200379bd638",
        "cursor": {
          "ref": "c16472cb-5575-4aa2-b59d-72d8a3917520",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af3d3029-9d82-46a7-a13f-ce41f744bf3f"
        },
        "item": {
          "id": "09fc7127-5750-4968-b95d-6200379bd638",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4cfbbfec-c080-4ca6-8387-fd73c076035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935b40e3-18c5-4b2b-897e-bc9f8f18e6bc",
        "cursor": {
          "ref": "80e61c7f-1edc-44c9-8b50-42a9a42fd065",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0ebcac35-f2c1-405a-8db5-ef6ab813b652"
        },
        "item": {
          "id": "935b40e3-18c5-4b2b-897e-bc9f8f18e6bc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "248d263c-1136-4158-b414-2c02e1413a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978efb22-3499-4f9b-82bb-c23624bb6f0a",
        "cursor": {
          "ref": "8bb866bd-1ba0-42fe-80d9-73fa9e014132",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "04b84d28-d983-4932-aee7-c90593d6430c"
        },
        "item": {
          "id": "978efb22-3499-4f9b-82bb-c23624bb6f0a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6073d440-309d-4a02-a978-55f2e32e17b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21010f48-e05c-4ff6-a5bc-58bd4c153885",
        "cursor": {
          "ref": "b2cdc454-91f7-4c30-aa4e-f4e569de9f50",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a8029ab0-c201-462a-9a29-58e37a9d7878"
        },
        "item": {
          "id": "21010f48-e05c-4ff6-a5bc-58bd4c153885",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1fa30e46-edf1-48f0-8751-f8ef8de72b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e0001c-746c-4f31-aaec-898268ae5def",
        "cursor": {
          "ref": "6ce75fbb-4f03-4a5d-9fdf-261d32c3f592",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "99e9dde5-3ce4-4df5-a70e-0caf9a557851"
        },
        "item": {
          "id": "37e0001c-746c-4f31-aaec-898268ae5def",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6a65e6d7-66ef-47ac-8892-bfd2eadb6f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f58c234-5ab3-4617-88ba-c50ca615ce0f",
        "cursor": {
          "ref": "e5720564-3e4b-4c5b-b579-3c48d7629d39",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a9ef2036-b682-4679-acb8-f066b6149be3"
        },
        "item": {
          "id": "7f58c234-5ab3-4617-88ba-c50ca615ce0f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c64474f8-23fd-4859-a44d-2f5612282336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbedc098-ba21-4b99-ac49-3b38f6c6000a",
        "cursor": {
          "ref": "954ca6f2-6ff6-4e70-a77c-46b506c58b48",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a242ac04-8c48-459a-9fc6-47b93adccbe6"
        },
        "item": {
          "id": "cbedc098-ba21-4b99-ac49-3b38f6c6000a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a65893f9-ec4b-497a-a8bf-cfb1f21b5dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcbd31ee-7cb0-4f2d-9121-8a7f9d3b0def",
        "cursor": {
          "ref": "1e80251a-e2d3-4f13-9d46-3a81e0d6c35f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2db4d9e4-d54a-48ab-96c3-4cb89df17936"
        },
        "item": {
          "id": "bcbd31ee-7cb0-4f2d-9121-8a7f9d3b0def",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "74c962ee-e6b2-4b73-a2c4-228180225d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d205ba4-7d18-432f-a94d-f03bdb602c03",
        "cursor": {
          "ref": "cf0240a2-c703-421c-86ff-8a7b52e9988c",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7d41b487-f992-4826-873a-0892a4a47e87"
        },
        "item": {
          "id": "7d205ba4-7d18-432f-a94d-f03bdb602c03",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d5d9d4c7-fafa-4570-9fc4-1ab853717c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00dbfd5-d3a3-4935-bb05-258710e76f23",
        "cursor": {
          "ref": "7abeadb1-d9f7-470d-8bb2-8ed2d76ba9c3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "446128ea-3cf7-4895-b2c4-a058126f333d"
        },
        "item": {
          "id": "b00dbfd5-d3a3-4935-bb05-258710e76f23",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "59a99569-bb63-41b2-9cb0-4022904d9a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6dc0f0-c50c-4574-82d3-383f37d97fb4",
        "cursor": {
          "ref": "1c5c7c61-7051-4e00-a54f-7f02c967578d",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c109a96a-cdbe-4107-baa1-00e4d9cd32ab"
        },
        "item": {
          "id": "4e6dc0f0-c50c-4574-82d3-383f37d97fb4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "28df6f23-9dd6-4f62-95f9-d893c5e35ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca75f562-33b1-48ab-b541-0de12f31945e",
        "cursor": {
          "ref": "8f7818a3-4521-4cb2-a103-071f5541a78b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "876c4b61-6505-4ed2-9b34-9e6625000a41"
        },
        "item": {
          "id": "ca75f562-33b1-48ab-b541-0de12f31945e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b25ed89-ad8a-4c76-8fb2-fa9d1da3c142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc81cce-5c9e-446b-bef5-2c85848e3807",
        "cursor": {
          "ref": "a79ebb56-6713-4e37-8448-eecc8e735a7c",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c40b7c49-67f1-47af-861f-cbd4e9026d08"
        },
        "item": {
          "id": "7bc81cce-5c9e-446b-bef5-2c85848e3807",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "45f399ee-f6b2-4b20-9e41-dda2eb475cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8ae5cc-12d9-45d2-acd2-f634342f6699",
        "cursor": {
          "ref": "e0d4eced-de7b-49a9-b8fa-2b7b564a5a9f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "08ebd415-6f10-48e3-881b-5ea4a9f120b2"
        },
        "item": {
          "id": "8e8ae5cc-12d9-45d2-acd2-f634342f6699",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "534e3cc3-681f-4ff8-a557-259d5c167d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924a16d9-51de-4d7d-a31c-030015d29adc",
        "cursor": {
          "ref": "285da989-3818-41cc-a8b3-b2fbaba823e0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d64534ee-6232-49f4-be4f-15d70a663407"
        },
        "item": {
          "id": "924a16d9-51de-4d7d-a31c-030015d29adc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "881e5321-518a-4eb6-81c8-2f966a7c3bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e25420b-5049-4b83-8933-868f9a81c6db",
        "cursor": {
          "ref": "15639223-6ddb-4e47-8f8a-f7cdcec83db8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f3a8c55-941a-4489-9058-8ed28135de21"
        },
        "item": {
          "id": "1e25420b-5049-4b83-8933-868f9a81c6db",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "aababcbc-1493-4de2-b9d0-c95732bd3d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41933d68-4314-4441-b583-24bf3540378b",
        "cursor": {
          "ref": "37bee17f-a53e-4cda-9eec-564a8bf1a751",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5db057ae-fd3e-4de8-9335-6f0711f5ba82"
        },
        "item": {
          "id": "41933d68-4314-4441-b583-24bf3540378b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8ce7bf25-a6aa-4ab2-9c91-a852bd305833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998a3fac-18f8-4e3b-99c8-ad8c16bfcf19",
        "cursor": {
          "ref": "614359e4-10f6-468d-82c6-d15b7c750cbe",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6951f53d-2ac3-4b42-b86c-215aa1333070"
        },
        "item": {
          "id": "998a3fac-18f8-4e3b-99c8-ad8c16bfcf19",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c8ff6407-a156-412a-84b2-a817f962b3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1155c72b-5d99-4354-919b-c118b4a52213",
        "cursor": {
          "ref": "23669b62-0535-4754-8c4c-90b0929a284c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b916fe0b-a059-4897-9560-aca7d9bc7349"
        },
        "item": {
          "id": "1155c72b-5d99-4354-919b-c118b4a52213",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e41cd9f5-fccd-4883-9682-b91ab4503e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bf1b5a-dd50-4c34-a401-20c213a2eaf7",
        "cursor": {
          "ref": "0a173525-2e31-4afe-9dad-320125010843",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "206d2c84-86fd-43b9-9d90-0164fbef3e84"
        },
        "item": {
          "id": "76bf1b5a-dd50-4c34-a401-20c213a2eaf7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7d139f3f-8369-4fff-a5d1-c4610c1f36ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc868f81-5d29-40fb-bc2f-dde9049a8445",
        "cursor": {
          "ref": "42596b94-0a76-478f-ade9-683ae1ca96b6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "548bb5eb-5479-4edd-b609-f45744231ac9"
        },
        "item": {
          "id": "dc868f81-5d29-40fb-bc2f-dde9049a8445",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ec37173b-5232-4a81-93c3-f7f9b45ad4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc7b0fc-aedc-4738-81ab-e3d79a0bcc9c",
        "cursor": {
          "ref": "19af8b53-a0c5-41ac-a341-aae4e4fa2253",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e843fbaa-5a1a-4292-98c7-99c622d588bb"
        },
        "item": {
          "id": "0fc7b0fc-aedc-4738-81ab-e3d79a0bcc9c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7281064d-0ac8-4716-82d5-7dca918a76b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b91cefa-639f-4d6c-a990-9abde7a30eb6",
        "cursor": {
          "ref": "a0cbed78-47c2-43b6-bb59-6c3660d01cc7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e639734d-c75b-4386-8b0f-eda854494822"
        },
        "item": {
          "id": "3b91cefa-639f-4d6c-a990-9abde7a30eb6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fcff913b-2e99-4940-8435-b4c94c48c8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b4a17e-9bea-43fd-9b09-ea7a10f555db",
        "cursor": {
          "ref": "9b842e80-9e90-4696-be66-340dfa7852f9",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1186fbde-f4dc-46c6-bed8-ad1c9ee2a8f7"
        },
        "item": {
          "id": "21b4a17e-9bea-43fd-9b09-ea7a10f555db",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fd9c309e-957d-4545-b897-38acd6f62dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4914ff65-2b21-4aee-915e-2d5fb76db165",
        "cursor": {
          "ref": "96b6ad00-3213-401e-9613-193a4796c55d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8293e9e2-02ea-4641-b407-e2380ab89802"
        },
        "item": {
          "id": "4914ff65-2b21-4aee-915e-2d5fb76db165",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b1535e4-aa0b-4c09-afab-78d3e6750a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d08fc9-fb3b-4d67-9aa1-11cf58b6ba69",
        "cursor": {
          "ref": "80c7d106-76d7-4a7b-9ae3-75db70131275",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0cddcdc-86d4-4dc8-a6c2-d39238c36204"
        },
        "item": {
          "id": "f7d08fc9-fb3b-4d67-9aa1-11cf58b6ba69",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c17713bc-6a2d-4377-bea7-cacfdd85256d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21911778-1c6e-45fc-a7a5-de186768f34b",
        "cursor": {
          "ref": "ad8620b2-a302-4fa3-980b-4c0bdb477cfc",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "22f3bf3d-9b3c-4364-9075-0d1b662bc760"
        },
        "item": {
          "id": "21911778-1c6e-45fc-a7a5-de186768f34b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "12daa1cd-8690-4f45-8094-b29cef19c888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e07405-aa2c-49b0-a51b-003afd1322b5",
        "cursor": {
          "ref": "54373772-4f66-4f70-875b-7ba91fcef239",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "de910709-150e-4704-bdd6-75b5413e5830"
        },
        "item": {
          "id": "b0e07405-aa2c-49b0-a51b-003afd1322b5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6ed6a582-cce5-4231-9c99-3ccfde90c6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603ed744-11d8-4a36-9720-38e1155fa81b",
        "cursor": {
          "ref": "e206b649-3253-4c84-9eb6-b80b5fdd891a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f141d3f8-e3ac-482b-a676-4f23bd0f9047"
        },
        "item": {
          "id": "603ed744-11d8-4a36-9720-38e1155fa81b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fb4a33c1-5682-417e-9d8c-07d80e015374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9864795-5559-44c9-8a5c-dc83829e2453",
        "cursor": {
          "ref": "78151b99-ad4d-44a0-9950-a8649e36b40a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a01bac01-65be-47fb-ba05-a2d30e3385e5"
        },
        "item": {
          "id": "b9864795-5559-44c9-8a5c-dc83829e2453",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ce6a68c3-8c64-4e7c-9d56-4944e8ce80d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ded594-a5ef-495e-b137-484595f1eee1",
        "cursor": {
          "ref": "5429f762-714c-42a3-99b1-07b9445ab72d",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "66634537-57a6-41b1-90ed-e5b22cbfefce"
        },
        "item": {
          "id": "78ded594-a5ef-495e-b137-484595f1eee1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5058c404-181b-4c30-a2ff-aeadc3c02235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c8a050-94b0-4cd7-8a2f-f8df5bb76dbd",
        "cursor": {
          "ref": "5d5c0aab-7305-40ad-8d43-f5d00e0cb6ca",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "75dfab43-3a04-4956-85b6-6774572cab14"
        },
        "item": {
          "id": "b0c8a050-94b0-4cd7-8a2f-f8df5bb76dbd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1b9de5b3-7054-44ed-bee7-c0653cb9e2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822b4f03-664f-40c1-981a-3070476be545",
        "cursor": {
          "ref": "72c8c098-1da4-4a95-b093-4d04507b24fd",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e007c8f6-8f2f-4af3-9fef-0268f468d616"
        },
        "item": {
          "id": "822b4f03-664f-40c1-981a-3070476be545",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f18b8756-7e5e-4986-bff6-d2f426079b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c6dda1-2cec-40d4-a5e3-139e656a9831",
        "cursor": {
          "ref": "60aa1bfb-9c62-4998-b9bd-8155b23ee0e0",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6dc22e96-08be-479f-b829-c5b9fea22d11"
        },
        "item": {
          "id": "58c6dda1-2cec-40d4-a5e3-139e656a9831",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "09fc8595-2108-4f2f-b576-3b24a2501d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b528ff53-4444-4125-9340-8aeb2cc2c646",
        "cursor": {
          "ref": "f8f4285d-950c-4927-83ca-939d8659da93",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4680a422-0951-472a-ba95-3551527631a3"
        },
        "item": {
          "id": "b528ff53-4444-4125-9340-8aeb2cc2c646",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "207757f7-9b80-4724-b3fa-0a518917529e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d25b9b-49f3-4b5d-ac55-c510797133e1",
        "cursor": {
          "ref": "652560e2-34eb-4380-880c-8458a8214836",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "09a263f7-b2d3-43e2-9e6c-d8a1d4f2dc39"
        },
        "item": {
          "id": "b4d25b9b-49f3-4b5d-ac55-c510797133e1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5e428ea2-d068-4581-86ad-daaf30687628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fd8669-d007-43c2-ab63-3ad690b04980",
        "cursor": {
          "ref": "fa4b4b9a-7edf-4519-bc75-fd1305dbfecb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ddfdf043-3e99-4f00-953f-b65a0011c205"
        },
        "item": {
          "id": "84fd8669-d007-43c2-ab63-3ad690b04980",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eea4f528-c13e-4c1f-b88b-b858f4c2a804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f03b5fe-c4c3-4386-9ede-c8949f445548",
        "cursor": {
          "ref": "fc4122aa-f2c6-486f-9949-608d0ae26e7d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bd495165-cc1d-4d35-a36a-73bfa4a2c596"
        },
        "item": {
          "id": "9f03b5fe-c4c3-4386-9ede-c8949f445548",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e9957c7e-1d58-4aa4-bfd6-d4570e88e9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91a8bc2-4451-4a06-8547-f997a9133a22",
        "cursor": {
          "ref": "c3af1508-91b6-4e03-8b97-d5b3b5488610",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4814caba-a602-4bf6-91e1-2a137fb0dd75"
        },
        "item": {
          "id": "a91a8bc2-4451-4a06-8547-f997a9133a22",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c32c46bd-a400-4f1c-ad9c-d458ba8594de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab974a3-e7b7-454c-9782-cf8ba42338e9",
        "cursor": {
          "ref": "42cf3974-577c-4938-8359-b93bc20f9efc",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6446f8dc-ff9e-4dc8-a93c-a80b2c8a4163"
        },
        "item": {
          "id": "5ab974a3-e7b7-454c-9782-cf8ba42338e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2cc97e6-4fb3-4e6c-ad37-cbe0c54afca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f76c71-b956-4b5e-a24b-2059c0ceb33e",
        "cursor": {
          "ref": "30e5f97e-07b2-4a76-9fb0-a1a55cb7555b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1a3b6398-bf8d-461f-a08c-1e79411cd643"
        },
        "item": {
          "id": "04f76c71-b956-4b5e-a24b-2059c0ceb33e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "10e23330-9355-4bc4-806a-4803e5fe6564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7de87ad-e852-42d0-9bff-0f41d0289713",
        "cursor": {
          "ref": "088fd832-f21a-4a41-940f-37085ee3a197",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bfb85491-430e-4de3-86e6-121509891cb9"
        },
        "item": {
          "id": "c7de87ad-e852-42d0-9bff-0f41d0289713",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0dcc75bb-7e72-4060-b79e-f004ac286937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0188375-1f6a-44b1-84fd-df6133ee46e1",
        "cursor": {
          "ref": "a289c340-0a58-4fc1-8ffd-d94d495bc902",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cf016643-bca2-44e0-8a6e-73c75d747287"
        },
        "item": {
          "id": "a0188375-1f6a-44b1-84fd-df6133ee46e1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3903fddf-3d3a-4ade-9757-fb9f35bb7062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb75323-153b-490c-beea-4bb39cf6ce26",
        "cursor": {
          "ref": "4cdf4467-0a73-48a0-a47e-dd00d30c096b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6035eec-10c4-4d32-81e4-a8a2537aa72c"
        },
        "item": {
          "id": "beb75323-153b-490c-beea-4bb39cf6ce26",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a3e4de12-23bd-44f1-9284-2376c653a5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82dda166-abad-48f4-aecd-1b60030f3b31",
        "cursor": {
          "ref": "e9c0c1bc-f734-4937-b67f-a2d5e95456d6",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8aea5360-bb7c-4eab-9c7f-9df15484161b"
        },
        "item": {
          "id": "82dda166-abad-48f4-aecd-1b60030f3b31",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7c16f5c1-8af4-412f-99bc-81b21f4d125c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad78e517-f510-4155-977b-e0ae901f0fdf",
        "cursor": {
          "ref": "fa3c62bc-4b72-4d80-b52b-e9f6a94c3b92",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ac2faacc-18bb-4e4e-af8f-2e71d4367c41"
        },
        "item": {
          "id": "ad78e517-f510-4155-977b-e0ae901f0fdf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "98ac0990-dfd3-4478-a3aa-20cfdf08ef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485023f-cbd3-4dfb-a226-8b1efec73e43",
        "cursor": {
          "ref": "0f54a780-cdbf-4eb2-b71a-f88532b282f6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "14617d05-a504-411b-bd29-c219a58578a6"
        },
        "item": {
          "id": "5485023f-cbd3-4dfb-a226-8b1efec73e43",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0d38d5ff-59f2-477f-b80a-8a0627fc03e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f96a20f-5166-46ae-9560-516d7fae13ec",
        "cursor": {
          "ref": "86c9e49d-0609-4db0-abae-55b9d6f6730a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "df0adc53-4e96-4be3-9669-35df565d1520"
        },
        "item": {
          "id": "5f96a20f-5166-46ae-9560-516d7fae13ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f2a34a2a-fe94-419d-bcb3-4d91371ef033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6d5a3f-3108-4eb9-93aa-c28ec975132a",
        "cursor": {
          "ref": "a0ef157d-a00d-42ea-9087-c2cfc499a3ed",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "78fc4e53-3816-416a-b975-39d6eeba2a1d"
        },
        "item": {
          "id": "3f6d5a3f-3108-4eb9-93aa-c28ec975132a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aeccff0e-3b8e-40fd-8a88-1c895a858d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa16f3c-e615-41d2-9a2a-6d477cbab636",
        "cursor": {
          "ref": "11d9ace1-f86c-4160-83ed-1c7245044e12",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "73a6bdf9-7cf8-4361-9c3a-d2b032ba00e9"
        },
        "item": {
          "id": "caa16f3c-e615-41d2-9a2a-6d477cbab636",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8762cc27-00fc-4c4c-a668-d67dd23c0b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b017d9d3-bae4-431e-8e2d-48ee090995ad",
        "cursor": {
          "ref": "51f13560-426c-4831-8e05-847740b43ab3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0eec63e7-5fe7-4da4-bd3d-77a7bb2b94a7"
        },
        "item": {
          "id": "b017d9d3-bae4-431e-8e2d-48ee090995ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7c434180-3d43-4ee7-a955-0dd3e43ac8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e44b35a-bedf-44bd-8dfb-c01a4de04df3",
        "cursor": {
          "ref": "abe2c8ab-faba-4eaa-b8f8-2f73d2d07d56",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cbabc2c5-653c-461f-8150-1c7c69e78753"
        },
        "item": {
          "id": "5e44b35a-bedf-44bd-8dfb-c01a4de04df3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "19976d6a-74f1-46e7-b188-a725c726f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ebedab0-7bdc-49ab-8102-f737cda099a8",
        "cursor": {
          "ref": "0784948b-40e6-497d-8a2d-ba7c40ee0012",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "90d56a90-3357-47d6-8ed0-9d78fe2aa46c"
        },
        "item": {
          "id": "7ebedab0-7bdc-49ab-8102-f737cda099a8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "29fb2bb7-a2b7-4d71-a6b0-9005b04bf17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217274d-14e7-4ee1-b51a-5a4ef6e7d3ee",
        "cursor": {
          "ref": "0fcf1047-052f-4072-978c-f578cb62154f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "01aa262d-0ad9-4391-a62e-662a0b8cc7be"
        },
        "item": {
          "id": "e217274d-14e7-4ee1-b51a-5a4ef6e7d3ee",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f06e8a2d-1aa4-4ba3-84f9-8264451e0916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee992ad-78aa-4c80-b075-0fccb9b2bd9f",
        "cursor": {
          "ref": "c683c3a2-1dc1-41b0-a285-818403585ff1",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b30195b-e0ed-424d-a493-386dc8b3482d"
        },
        "item": {
          "id": "8ee992ad-78aa-4c80-b075-0fccb9b2bd9f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e9d1c31d-b7de-4ea0-97b9-d7d67c2b4227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd5c48f-0856-4e18-88c8-af0529fa5ba2",
        "cursor": {
          "ref": "18e7e641-884a-4591-aa00-6fd91bd912c9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "63836e22-10bf-42e6-85de-998a95246498"
        },
        "item": {
          "id": "acd5c48f-0856-4e18-88c8-af0529fa5ba2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f87b099d-a8a4-4510-b9ab-48f462fcbe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43d4247-b020-43a5-a9a2-dd0521714844",
        "cursor": {
          "ref": "f8897df6-50a5-4caf-83fb-4b75b479c553",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "be0df93c-aa4e-4c9a-b533-b55ca5409847"
        },
        "item": {
          "id": "f43d4247-b020-43a5-a9a2-dd0521714844",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c577941e-4226-480a-bfb4-83ef2d5070ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02458e0-52a9-4f35-a317-bb8152894b3c",
        "cursor": {
          "ref": "87945047-ba7e-4e86-a61d-00564e2e70dd",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1ca391af-8827-4ceb-b745-6eb609f79155"
        },
        "item": {
          "id": "a02458e0-52a9-4f35-a317-bb8152894b3c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "544e36f7-a95b-4246-8887-361b87c1b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983daa5-597f-4e44-891e-3c00101e650d",
        "cursor": {
          "ref": "046b1b8d-debf-4b72-b47c-7966058b9742",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "73f7d129-4ba3-4556-9b9f-72ac0968fa28"
        },
        "item": {
          "id": "6983daa5-597f-4e44-891e-3c00101e650d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5534c663-79f1-4770-b8a8-a97ba2fc830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2464a30c-65d0-4952-a15f-9a342dee0c1f",
        "cursor": {
          "ref": "844e37a7-a03b-4948-90f6-0bd6329abad5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8570c7a-6639-427b-9cf5-d0facb57031c"
        },
        "item": {
          "id": "2464a30c-65d0-4952-a15f-9a342dee0c1f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eafb5ef1-351a-4ae4-86c8-04aa3c073495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7284e0e-8495-468d-86dc-4eca1a7ef916",
        "cursor": {
          "ref": "74cde8e1-eac8-489f-afa6-b8d2b5ae9101",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a73abc45-c4e6-4b0a-a483-897ba69a0a03"
        },
        "item": {
          "id": "f7284e0e-8495-468d-86dc-4eca1a7ef916",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5eb02b4b-f7f1-4148-b8e3-4eae65803cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f2cf80-24f1-4cf4-880e-660537dcfd6d",
        "cursor": {
          "ref": "ad971c6b-818e-4307-96fa-441de3b5b1be",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31cdd8a4-436a-49d4-868b-f6e9c41a5b0d"
        },
        "item": {
          "id": "c4f2cf80-24f1-4cf4-880e-660537dcfd6d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f85fdc22-4045-46d0-87ce-304b25e3809c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a72566-e4a4-4372-8d7f-114e00d6372f",
        "cursor": {
          "ref": "c8bdaef2-d015-4b5d-8cb1-63965e5c7b81",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "10259fa3-2c07-449c-9b45-a248c1df5d18"
        },
        "item": {
          "id": "41a72566-e4a4-4372-8d7f-114e00d6372f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "32f6c87f-f37e-4035-9d2e-2fc3436fd628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff442bc-eed2-453f-853c-26ff78f6ceee",
        "cursor": {
          "ref": "e54896fb-abd0-4563-9b9f-b888ad7a6349",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "08de3bd2-018d-4f6e-a411-992232e490dd"
        },
        "item": {
          "id": "cff442bc-eed2-453f-853c-26ff78f6ceee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1bb70bd4-d57d-4b50-9c15-461cb3e24846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc94721-9232-4e6e-8fee-ec6093176e20",
        "cursor": {
          "ref": "347d24f3-af6a-46f6-bc78-6c48903250c3",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "73c8627f-2fdd-47f9-8f3d-3125d26c7793"
        },
        "item": {
          "id": "ccc94721-9232-4e6e-8fee-ec6093176e20",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0ae95025-9c44-4deb-8e77-ce4d4c2bda42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cdd9b6-9787-4e8d-8eb0-9162acda1148",
        "cursor": {
          "ref": "decf5515-fda6-4f00-8057-b30dcd65cdf7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d453391e-df9a-4d63-b827-ed2ecf9185b9"
        },
        "item": {
          "id": "34cdd9b6-9787-4e8d-8eb0-9162acda1148",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7c0403b0-f819-4c0d-8509-0c96175c9f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d418bf-d409-4d58-acbd-44546c592ce2",
        "cursor": {
          "ref": "3211bbac-5e70-4ab0-b158-d600b48a8e28",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "25bc8150-5ae9-498d-9153-8d74c7a75d1d"
        },
        "item": {
          "id": "28d418bf-d409-4d58-acbd-44546c592ce2",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22ee37c5-a0fb-48ef-8103-573004b551b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca6761f-df3a-44f5-a8fe-5106f349894c",
        "cursor": {
          "ref": "c0e48074-81d1-4bdc-8589-494fc5dcf2bf",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "709ef678-1002-4d31-8b0a-143e74445333"
        },
        "item": {
          "id": "bca6761f-df3a-44f5-a8fe-5106f349894c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "33f25363-88c2-4146-84af-7b63e4ce96a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd7c69d-b02a-4ca6-9cb4-35fa506a9eb2",
        "cursor": {
          "ref": "d364921b-8b3d-4fce-82ad-dfda0d05df41",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d9f87013-c7ac-4be0-9029-9f71a02b312d"
        },
        "item": {
          "id": "7cd7c69d-b02a-4ca6-9cb4-35fa506a9eb2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0b5bec53-9936-434c-b285-db1c59d00c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ff33ab-d535-4529-85b2-9992cdb91220",
        "cursor": {
          "ref": "5f1d1392-fbdc-4eaa-8ddf-1f881d9da08e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3a02d474-9689-4273-8dc6-46b81896e53a"
        },
        "item": {
          "id": "81ff33ab-d535-4529-85b2-9992cdb91220",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "00a72815-58c0-4f17-a42c-7e6930879835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f6cfbe-e4c6-4a9a-a1c2-20cab3044b32",
        "cursor": {
          "ref": "49e9a07f-8cd2-481d-9a78-9934e6dd5208",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f8d6e1ea-323d-436b-be71-6184a50ca7b2"
        },
        "item": {
          "id": "51f6cfbe-e4c6-4a9a-a1c2-20cab3044b32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "32fa4b61-00d0-4bbf-9dd1-e431d0144707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f8e7dc-f454-4ced-964a-471bedbd8a02",
        "cursor": {
          "ref": "4b1946e5-be7a-4da0-921d-876f66a2e7de",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21fe43de-40aa-4cfe-87ad-cf7cfc22743b"
        },
        "item": {
          "id": "a7f8e7dc-f454-4ced-964a-471bedbd8a02",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3e226837-3739-404d-ba26-a4cf577e0e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0cc1e4-f1d0-4e4d-8bb0-0934560c3e33",
        "cursor": {
          "ref": "0a4afcbc-bc95-4951-9475-52c5c1911235",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "93d973cf-a428-43ed-9b49-eaaafafe74a6"
        },
        "item": {
          "id": "aa0cc1e4-f1d0-4e4d-8bb0-0934560c3e33",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "349fd131-fcd8-4134-8ce7-f58430950e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c30a94-e429-4748-a836-df3934ae1bda",
        "cursor": {
          "ref": "3e0b3ca3-fc1d-48fa-9d4d-2ad769dd7c5f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "57cf721f-c4ca-4d41-9f8e-45138562573b"
        },
        "item": {
          "id": "52c30a94-e429-4748-a836-df3934ae1bda",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bf0ad9be-890e-4f23-9dc1-0675a414416b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c373348-a386-4cc3-bed4-a7a046b27219",
        "cursor": {
          "ref": "9411b2ff-4a2e-4446-9201-fc20c16e68fd",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ef18b101-e93b-432a-87c2-e811392cac74"
        },
        "item": {
          "id": "3c373348-a386-4cc3-bed4-a7a046b27219",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "40d7d543-4915-4a36-8a83-40aafcd04234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7814d3dd-2a9f-4e7a-9301-d679958e2cff",
        "cursor": {
          "ref": "7bef9024-63ce-46a9-953c-8f6a6f203024",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8a15f6b4-b4bf-46e5-b80e-872ecd977a58"
        },
        "item": {
          "id": "7814d3dd-2a9f-4e7a-9301-d679958e2cff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a7ff6b4c-8bfc-4fef-8f3c-26e1b5ffd231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3628e02e-e179-4c39-921b-873552ba606f",
        "cursor": {
          "ref": "92d2e759-67f3-49f6-b110-bd066902855c",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "27154f18-c5dc-4f75-af78-4c71f5075eca"
        },
        "item": {
          "id": "3628e02e-e179-4c39-921b-873552ba606f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0e01bb19-fb6b-4c02-b96e-590ea3dce236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba066b0-6a8d-4343-85ab-6977b0db1d08",
        "cursor": {
          "ref": "f0dc5d26-1745-4c20-a101-7e7080c2da3e",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7b799381-3b61-407f-a6a9-19599928ffd3"
        },
        "item": {
          "id": "dba066b0-6a8d-4343-85ab-6977b0db1d08",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "58ac489c-d7e3-45f9-b900-686db9a3a3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2231bf1b-fa17-41b7-b293-aa9fe83007b1",
        "cursor": {
          "ref": "c2c4be09-f2c9-4ee2-9f29-ab24481aadd4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a095534b-5025-452f-abcd-0b5f42b5cfec"
        },
        "item": {
          "id": "2231bf1b-fa17-41b7-b293-aa9fe83007b1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "68d55173-2931-4218-9529-2d50c9ca1a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b5e609-94f5-41ce-97d2-75f9cf6ad707",
        "cursor": {
          "ref": "9c5e273f-fb39-4a09-b97d-fb883815c3e5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f2e54cb6-a658-4641-bb3a-8e0b0753dc48"
        },
        "item": {
          "id": "36b5e609-94f5-41ce-97d2-75f9cf6ad707",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3cf0f601-ddef-4e89-b267-8e5c73eea941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fc73e8-a22a-4a98-b777-94adef4eeb7c",
        "cursor": {
          "ref": "562ff43a-7777-4868-acae-10ea498fa3e5",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d21dbf35-1a8b-4979-b86f-d221034e42a6"
        },
        "item": {
          "id": "88fc73e8-a22a-4a98-b777-94adef4eeb7c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5b0cb083-d5eb-4f3d-a91a-2c8c492b05af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532b63b3-b500-4de3-9603-254f847f0ac8",
        "cursor": {
          "ref": "58da697c-bf92-4439-82ef-e2c23101b832",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5fe2d7aa-81bd-43fb-9bf3-13a0b5386be1"
        },
        "item": {
          "id": "532b63b3-b500-4de3-9603-254f847f0ac8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6027248e-17d0-4d8f-839b-57aeac28ad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c07c9de8-97ab-45f1-b290-790c8a0d03bf",
        "cursor": {
          "ref": "f18e530d-5c3d-43a3-9332-f63f96818b11",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bec13f2c-bf65-4cea-b98c-25245d1dda56"
        },
        "item": {
          "id": "c07c9de8-97ab-45f1-b290-790c8a0d03bf",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b6f30404-4410-45c2-9bbb-5f3e6f685d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "1c4f6adc-5784-4760-af4e-528051569cce",
        "cursor": {
          "ref": "55173a15-b5ab-4202-b6c6-ca533ded4d28",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1cb6190d-8187-44e9-af12-9aafb3138d4a"
        },
        "item": {
          "id": "1c4f6adc-5784-4760-af4e-528051569cce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1ca367eb-ce2c-4a84-89a6-2bb334043230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5bedc8e6-3510-4ceb-8cc0-8b3d02985ae2",
        "cursor": {
          "ref": "564b6a5b-83f9-4340-b0f7-ad20f20d6270",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "957af155-5f1e-4b0d-b5eb-4360327df23a"
        },
        "item": {
          "id": "5bedc8e6-3510-4ceb-8cc0-8b3d02985ae2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bdc79ca9-caa6-4369-9d9b-cf37e8380c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "55028af6-35d0-4fcd-b27d-42eead63dfbb",
        "cursor": {
          "ref": "5a31ffb1-9936-4e67-930f-c93fdb864979",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1beb3b27-0a92-4de3-abd6-c6af5d314bd2"
        },
        "item": {
          "id": "55028af6-35d0-4fcd-b27d-42eead63dfbb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "165b4f11-3692-463b-b86e-123238306fed",
          "status": "Created",
          "code": 201,
          "responseTime": 12178,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b9a66d-7966-4454-a606-09874d9e941f",
        "cursor": {
          "ref": "7e6c58df-193b-4744-b972-b1635390eb95",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "be320e3a-61c3-422f-954c-af11326690df"
        },
        "item": {
          "id": "57b9a66d-7966-4454-a606-09874d9e941f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b58ea9b6-408e-4c02-8e83-58aaf11db64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "248e638e-4575-4836-b1a2-739512a0e22a",
        "cursor": {
          "ref": "ba34b68e-843a-4804-bd0c-694bf034a914",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c4e6e62-f2e6-41ce-b1a0-85122e324797"
        },
        "item": {
          "id": "248e638e-4575-4836-b1a2-739512a0e22a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "11496063-55d4-426e-9320-e2757621dcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "751c767a-df97-4411-8558-bd6f52167a48",
        "cursor": {
          "ref": "b6d9c7c9-8388-4fe5-8e72-21a333decbbb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9cb0a878-0af6-4b01-8815-0b99414f369a"
        },
        "item": {
          "id": "751c767a-df97-4411-8558-bd6f52167a48",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e51ad2f7-48eb-4d9f-8ca5-776b04234ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17064227-6a57-45f9-9e40-4be29e71b8dc",
        "cursor": {
          "ref": "ad1e2501-9945-4d64-b6b4-aed3af2307bd",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bfa70d4e-5a74-44d0-9271-9109a409dacf"
        },
        "item": {
          "id": "17064227-6a57-45f9-9e40-4be29e71b8dc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "65fa88aa-49f0-49e4-8578-d12fbe94b26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd350e2-f8b9-481b-b170-c6bb9d75551e",
        "cursor": {
          "ref": "cc2cb4a8-960e-4371-8606-d2f6176eec69",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "44648d8d-8a13-4248-836e-2dc158ed331a"
        },
        "item": {
          "id": "2dd350e2-f8b9-481b-b170-c6bb9d75551e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aa71f9ba-6b82-4fd9-ae6a-cea6b3451c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56706e0b-b639-49e3-a316-05feae26a1c4",
        "cursor": {
          "ref": "63d8d519-a570-4efa-b3dd-21ae7895c377",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5a7ac432-164a-4093-8c16-94bc108179d7"
        },
        "item": {
          "id": "56706e0b-b639-49e3-a316-05feae26a1c4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c15cd442-5666-4b8c-bd98-13d9d1b265b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53166ddc-f487-4a18-af55-417a928dc1a4",
        "cursor": {
          "ref": "0d9938f1-de59-4596-8683-7019702b395c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ad9d56c-da42-44ba-a93a-6bade95aa3a4"
        },
        "item": {
          "id": "53166ddc-f487-4a18-af55-417a928dc1a4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7279d8d3-ac8a-41f8-829b-9457b8fee279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25deaf87-2fb8-48d2-8e2f-dd28df130041",
        "cursor": {
          "ref": "3f2db96f-1f35-45fc-a1d8-2948d7ef1d51",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f2f8ca55-af90-4842-9140-e3402665284c"
        },
        "item": {
          "id": "25deaf87-2fb8-48d2-8e2f-dd28df130041",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4a197181-b73e-49e3-94cb-529a72b87b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d46bd0c-55ab-491e-a773-addc005e9598",
        "cursor": {
          "ref": "c4630d57-1839-4468-8f32-6da1aa578842",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad586c01-3147-4fc9-95e0-eaae3271461d"
        },
        "item": {
          "id": "4d46bd0c-55ab-491e-a773-addc005e9598",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "263be0a6-cdea-45de-a129-786cb1e4decd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9adcb4b4-3c19-4f9c-9e1f-3a67e88d69a9",
        "cursor": {
          "ref": "929a695f-b54c-44b8-94fa-a74b84adcb4a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c468a007-685e-4401-be43-9f2558f37fa2"
        },
        "item": {
          "id": "9adcb4b4-3c19-4f9c-9e1f-3a67e88d69a9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4defb77b-2111-42c5-a96c-ccdc140ac92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73399426-40d4-4527-9327-312f4b7d76ed",
        "cursor": {
          "ref": "aa8e8c83-987f-450e-b6c5-e3ca4be2ae70",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5ffe52e7-7156-4e6e-988b-1f52fe4ec82b"
        },
        "item": {
          "id": "73399426-40d4-4527-9327-312f4b7d76ed",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "777c7bb5-5fa7-4ba1-860d-143cf116fb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2ce7c5-ba2b-4b96-b1ca-f1bd8c1e06d4",
        "cursor": {
          "ref": "9146de58-ffc6-42fd-8fbe-c767e85ea348",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "62e36448-d2ca-49e0-bad3-85c0e2ec83f0"
        },
        "item": {
          "id": "fd2ce7c5-ba2b-4b96-b1ca-f1bd8c1e06d4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "48ff1f44-bd40-4ac1-aed4-3039efe76453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19dca018-ce5b-42f2-bd0b-3e8ccd637beb",
        "cursor": {
          "ref": "71ccd3f1-47e6-4607-ada4-458a38e15b2f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "10d1eec3-c1cd-44ee-a7d5-d0f7c819a880"
        },
        "item": {
          "id": "19dca018-ce5b-42f2-bd0b-3e8ccd637beb",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "54a50662-3342-4fce-8857-dd5ce5f3b111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366c1889-63f7-4548-a0ac-c56343e3b713",
        "cursor": {
          "ref": "d54127aa-7c34-460c-86b1-d4bd70a1b003",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df348974-3df1-425c-b478-296c99b8fe8e"
        },
        "item": {
          "id": "366c1889-63f7-4548-a0ac-c56343e3b713",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e6260419-00a2-4a9b-b38a-8b2cf7468c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07971f5-94a0-4fe8-b597-fe0711623cbd",
        "cursor": {
          "ref": "c69ff189-5dfc-405d-9138-206a47104c73",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "092667fa-e352-43a3-a979-bd3c6e3ca0f0"
        },
        "item": {
          "id": "c07971f5-94a0-4fe8-b597-fe0711623cbd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "330ef391-49b4-4864-9888-d1db09a4ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92fca53-b134-43ca-bc21-1cab3fa6993a",
        "cursor": {
          "ref": "18773660-6461-4439-b433-4d5ab5f9d249",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "af652ff6-84a1-43b5-a66b-cda069635a60"
        },
        "item": {
          "id": "e92fca53-b134-43ca-bc21-1cab3fa6993a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bdfd88e6-246a-4f66-ba76-799d88f9bfb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75387fe8-93ee-45cb-95aa-862f50cd5c97",
        "cursor": {
          "ref": "4f076f0a-ef9b-4d83-b766-2ecdaa988d4e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "907d53ea-a41d-4303-85ac-925366dce379"
        },
        "item": {
          "id": "75387fe8-93ee-45cb-95aa-862f50cd5c97",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "20e6a6c8-bc02-48fd-abbe-989f921f6541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ae6a4f-a475-4d4e-a0fa-a6ba77b53017",
        "cursor": {
          "ref": "36e07114-8d36-47b1-9ec8-65b5d76c9617",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "acfca70c-cee2-4791-9942-827ae08df5c3"
        },
        "item": {
          "id": "c7ae6a4f-a475-4d4e-a0fa-a6ba77b53017",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4b1629e7-077f-421a-bd7b-9858859b5c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587a7969-4f1b-49ab-b436-bed7971a6bcc",
        "cursor": {
          "ref": "e7847a6d-f20f-4501-bb83-b091319129c3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c2c18009-822b-40d0-a7c8-e7e9ae5d77c3"
        },
        "item": {
          "id": "587a7969-4f1b-49ab-b436-bed7971a6bcc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a0e0086c-1f89-49a0-ab77-2c94a3db89a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "721bb8ea-1e2a-4b97-b365-bb7fd5292994",
        "cursor": {
          "ref": "f8d006eb-7a85-4b69-9a5f-9757293bfb1d",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b1947155-952c-4464-874d-32e526efe329"
        },
        "item": {
          "id": "721bb8ea-1e2a-4b97-b365-bb7fd5292994",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "35111ec6-7bb7-4335-a962-f4b1e57357e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a83863-9443-414f-93a9-26783a3cf381",
        "cursor": {
          "ref": "6b4fc8de-447d-4276-a3c8-b21e3088ea5e",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a6e90ec2-4b73-447a-a36a-5092c7715a55"
        },
        "item": {
          "id": "c5a83863-9443-414f-93a9-26783a3cf381",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a9bf95f9-fffd-4fbf-beea-849abb4fdce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17ac0c2-5207-40a7-8fa7-cf661d7739f8",
        "cursor": {
          "ref": "40f2200f-9cd4-439f-a484-c77744aa7a30",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f995a2f1-ea9f-4b99-baec-5240e867ba8a"
        },
        "item": {
          "id": "e17ac0c2-5207-40a7-8fa7-cf661d7739f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7292de0a-f6cd-4f0f-a3ee-1e4cb50c5f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66d5eb9e-2f61-4459-8d2f-99aa63700240",
        "cursor": {
          "ref": "1e415b98-62ba-4c62-ba47-1f91966bd96f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "943ce4bf-d895-49e1-bbdc-fff837749e4e"
        },
        "item": {
          "id": "66d5eb9e-2f61-4459-8d2f-99aa63700240",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e428a347-acb2-40d0-99dd-1b058e1821c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1174622b-73ca-4746-a22c-a22c9603379a",
        "cursor": {
          "ref": "81adfa2e-b6ca-4a75-8234-4e52927b118c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9cb41b4b-bd32-42fd-8b8e-1cfe6d6a18ef"
        },
        "item": {
          "id": "1174622b-73ca-4746-a22c-a22c9603379a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07dcba7e-de38-47c4-a8d5-76fe79bd3990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88186c34-f701-4b42-b680-f523706194ef",
        "cursor": {
          "ref": "60bcb75e-824c-4abd-a007-c5e05a2003e8",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4f504bfc-d523-4c0b-8ca9-896b513d13b5"
        },
        "item": {
          "id": "88186c34-f701-4b42-b680-f523706194ef",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d0b9f66-116f-4dc2-adc2-dd52767b64d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a44bdb-4d31-4314-bd94-e9bcd87c5320",
        "cursor": {
          "ref": "58033d99-9659-4cff-a211-6ab12002b931",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "53032316-62b7-48c3-928c-41036e5fe3b0"
        },
        "item": {
          "id": "47a44bdb-4d31-4314-bd94-e9bcd87c5320",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73b87188-b517-4bf1-9650-47e1b8e8261d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fcf117-dc3e-4036-b25a-88ec4c84dfb2",
        "cursor": {
          "ref": "c1b47695-2bf7-483b-8ce0-a403d8f1d630",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d70dd9d6-5b07-4045-be1b-be136fbc9869"
        },
        "item": {
          "id": "34fcf117-dc3e-4036-b25a-88ec4c84dfb2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f44c30f1-6a3a-4505-b4e9-6fb1b0ed9878",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "b301a93c-c071-4693-9a59-2b2abff76897",
        "cursor": {
          "ref": "d6742fac-3705-4905-bdeb-6bef46ec712c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9ef98d52-ac2f-4a29-8f29-0a8fa8267410"
        },
        "item": {
          "id": "b301a93c-c071-4693-9a59-2b2abff76897",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "407982d2-f649-49e9-8c35-892c9a638e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb931348-c936-4a3c-a49b-2cae50f6af73",
        "cursor": {
          "ref": "30328c91-5307-4b96-8d79-6df66d5b4abb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ab842e32-1866-47f0-94e5-7059520c31d1"
        },
        "item": {
          "id": "eb931348-c936-4a3c-a49b-2cae50f6af73",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "48d570ae-961d-4dc1-a244-c6fd867cb9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e522a01-fff7-4bd0-8502-400aba44c158",
        "cursor": {
          "ref": "e90b676d-5929-4557-bbca-243a9972d219",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c466e3f8-d549-431a-ba74-420252d47d03"
        },
        "item": {
          "id": "2e522a01-fff7-4bd0-8502-400aba44c158",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0ae47556-a4af-42ec-af39-867f7ab4606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd0b609-4040-466e-99dd-aab528deded4",
        "cursor": {
          "ref": "1e513027-82d8-4074-926f-362617f6ec81",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "54ee58c5-7a9d-459e-bcad-0212688101ab"
        },
        "item": {
          "id": "bbd0b609-4040-466e-99dd-aab528deded4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9ed26af6-007d-4303-9818-a67f6b5d9d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839752a0-f2b2-4aa4-baab-55de570385e6",
        "cursor": {
          "ref": "bb274ee8-aaf2-467b-ad81-31d599bd756e",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "718342cf-a942-4945-82ac-905348e5698e"
        },
        "item": {
          "id": "839752a0-f2b2-4aa4-baab-55de570385e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa217709-25f2-4f0d-9f0e-c5e7905b84f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ee4443-4ab1-4f63-a1be-b3278e71f47a",
        "cursor": {
          "ref": "352674d3-82d1-4541-a57a-a8ed5288e408",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5a96f10d-a00e-4718-b175-dada9338399c"
        },
        "item": {
          "id": "a8ee4443-4ab1-4f63-a1be-b3278e71f47a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "69523e20-2461-47c8-ba0f-1d5c54a2a77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b05529b-1939-4b33-b8e4-77f655ead6df",
        "cursor": {
          "ref": "c5143664-5998-41b8-9d70-587585df2b3f",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1ae8c0a3-cec5-44f1-b62e-fc6fe870ec7e"
        },
        "item": {
          "id": "1b05529b-1939-4b33-b8e4-77f655ead6df",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "52a07718-db66-44a0-99d3-e10a65fd211f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "63af1946-e983-4b90-bae3-5cd724daa1cc",
        "cursor": {
          "ref": "f74fb6a2-1277-426a-83b1-10414b47a5e4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "59d8ef0d-415d-43db-a489-23fa5a97be17"
        },
        "item": {
          "id": "63af1946-e983-4b90-bae3-5cd724daa1cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2e36bcef-4022-4003-a860-601e6961c5b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb6e3a6-56e9-4b9b-bc81-3314d23d355e",
        "cursor": {
          "ref": "6d86ff55-3cf2-43d6-8e6a-d3fe5298fc49",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "66103a15-01be-4460-b90f-8664e6ea1cb2"
        },
        "item": {
          "id": "1bb6e3a6-56e9-4b9b-bc81-3314d23d355e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "da69b079-729a-4d34-9585-adc81ffa6450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a440495-18ca-410c-be7d-b6a04894c9b4",
        "cursor": {
          "ref": "ccf115ce-a6bf-45ae-9a0e-55ccbd998215",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9c94f91b-9652-4b86-9b5d-f003d11a9f21"
        },
        "item": {
          "id": "5a440495-18ca-410c-be7d-b6a04894c9b4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7583e45a-a7fd-45a2-b355-4faf3750a907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f061850-5e32-4837-8b24-cd385460ac06",
        "cursor": {
          "ref": "1767de21-0f6f-4d69-ad82-b3eebcd660ae",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0a8d6690-8e90-438c-8767-ec2199b36402"
        },
        "item": {
          "id": "4f061850-5e32-4837-8b24-cd385460ac06",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7daa4b5-afda-40f7-b87f-75c5ba932607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca27c47c-b4f1-4772-9d6e-e8a3b8f364d9",
        "cursor": {
          "ref": "b1b17c60-69d2-40d8-a7f8-91921e6f8b28",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "58777356-3b99-4e6d-845c-bb052ad18c56"
        },
        "item": {
          "id": "ca27c47c-b4f1-4772-9d6e-e8a3b8f364d9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "38eff585-fb2b-4687-a200-f287685be9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367f00cd-4990-4017-bfad-ba151b1646e9",
        "cursor": {
          "ref": "aee3ba1e-1231-43c4-ad50-4136e7745094",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a0bc39c8-03a5-4ab3-900e-e5780d95a33f"
        },
        "item": {
          "id": "367f00cd-4990-4017-bfad-ba151b1646e9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "259297d6-5d27-42da-8653-d73bc1296de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c87527c-8cdb-44c0-83a9-54f04af6755e",
        "cursor": {
          "ref": "8ba19bdd-f28a-4d7e-9da7-73a2eed1a459",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "86a3b4a8-32e8-4176-8adb-af7ef4f19552"
        },
        "item": {
          "id": "6c87527c-8cdb-44c0-83a9-54f04af6755e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a80f1322-360b-483d-9aec-ea4e8edda04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e701692-d007-4020-9a8a-477ea9df2894",
        "cursor": {
          "ref": "e766e8b9-f886-4726-8152-ce8a630c5d1e",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0afa5aed-42ac-4f49-aa9c-cd4d8f846398"
        },
        "item": {
          "id": "6e701692-d007-4020-9a8a-477ea9df2894",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7395e171-75bc-4b2b-8862-9565985b038b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30257cab-5f81-4c80-87da-8067579ea6ef",
        "cursor": {
          "ref": "7f56faa7-42df-4dcd-a495-a34e62e02d65",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "591b1528-0ad1-4b61-be5d-5137714b9dca"
        },
        "item": {
          "id": "30257cab-5f81-4c80-87da-8067579ea6ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "edac0907-f0ee-4efd-8bc3-b407840386d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67bf7e8-677e-4aa2-ba3e-db5b693c3817",
        "cursor": {
          "ref": "2a76849e-5082-436c-ad9e-5579f23ce536",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a141b857-e700-441c-b16c-bc33843e4219"
        },
        "item": {
          "id": "d67bf7e8-677e-4aa2-ba3e-db5b693c3817",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "dcb47756-3b68-4f02-aeb2-ac220370d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1502d1-2648-49c1-804e-8f971d794388",
        "cursor": {
          "ref": "e583f294-c3f1-400a-a183-43cbb7ded943",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0da984be-a0bd-4339-b1c0-61428cef9156"
        },
        "item": {
          "id": "fc1502d1-2648-49c1-804e-8f971d794388",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2425b8a-e63e-44fa-aed4-4e0722ba022a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f29c048-8c7d-48e3-b491-4f2cdb007b04",
        "cursor": {
          "ref": "7797d91f-0a18-46ca-a29e-9e4b4f0f6da6",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8b63722f-bb3d-4a73-bf45-e04b2c3c0a2b"
        },
        "item": {
          "id": "3f29c048-8c7d-48e3-b491-4f2cdb007b04",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1b0f8ae2-19ab-402c-8192-e930043d1ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855599cd-578b-4070-9aa7-6735a80bdd0c",
        "cursor": {
          "ref": "0526d7b7-3425-4c97-a69f-cc846d40c3d7",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8987b6e0-fb18-4394-a6fa-63b180738d8d"
        },
        "item": {
          "id": "855599cd-578b-4070-9aa7-6735a80bdd0c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6babbf24-dd03-4a3f-afaf-8f0b04e0d8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae036ff8-e2c3-4b01-a6e4-57d078a42d2e",
        "cursor": {
          "ref": "f1a358cf-1d47-4403-9bfb-a49530494c3a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "14844b16-4d60-4ccc-9608-6c7772496758"
        },
        "item": {
          "id": "ae036ff8-e2c3-4b01-a6e4-57d078a42d2e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6cc3651b-c764-4a1c-95ad-47632b6dca79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac8dc8a-2dbb-44b7-a154-187be9f7833d",
        "cursor": {
          "ref": "b71b061c-c92b-49e9-971f-9e6cdb1dcf83",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "31e0db9f-5430-4c93-99bf-3589176c8b43"
        },
        "item": {
          "id": "8ac8dc8a-2dbb-44b7-a154-187be9f7833d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "245d604e-eb8e-4f38-b119-aa674cf68096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00b1f08-949f-4eaf-a274-9c96ff0c4b0b",
        "cursor": {
          "ref": "5a503bcd-4b29-41a6-b41a-df8daa482fde",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ecb0796b-827c-4ca9-af4c-a8ffa46d0aa0"
        },
        "item": {
          "id": "c00b1f08-949f-4eaf-a274-9c96ff0c4b0b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ac670e3-cb93-4531-bdbc-49f7089dac9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa3fbb7-197c-4e7c-823f-df7ea2c7ca58",
        "cursor": {
          "ref": "db064659-840c-4fa1-970d-8572e4cd7756",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4e84a171-8f13-4fd2-9d90-9b89ce55d59d"
        },
        "item": {
          "id": "2fa3fbb7-197c-4e7c-823f-df7ea2c7ca58",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "48d2e383-e535-494d-a828-2c266120fcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d6226a-0005-4ca7-96f6-e72438937df5",
        "cursor": {
          "ref": "26abc027-8ba9-49b4-9a04-37b3344228cb",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b920a6cb-f7c6-4549-9d0c-394835d9a909"
        },
        "item": {
          "id": "d9d6226a-0005-4ca7-96f6-e72438937df5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4a7c3eec-e404-4cbb-97f2-72eaa13d8b0b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 75,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "96a42793-2bdc-4b6e-8327-d7cbf6a7ccbb",
        "cursor": {
          "ref": "4d8973c4-82c9-4ca0-9808-5fb63166bad8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1dc620be-2e39-4d9e-9acf-049f6d1a9a85"
        },
        "item": {
          "id": "96a42793-2bdc-4b6e-8327-d7cbf6a7ccbb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dceefb30-859f-48a0-95d0-7585098546ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256f86fc-798b-42c9-998f-747b396d4387",
        "cursor": {
          "ref": "d6cf5939-4d37-4d6b-a00c-77761f882d3e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9668fc42-e765-4399-b46a-f88ff3adb70b"
        },
        "item": {
          "id": "256f86fc-798b-42c9-998f-747b396d4387",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "929ea8ae-490f-4b86-b46c-1be92953a050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a70c8b-3f0b-4303-ab0f-7ab49d280a57",
        "cursor": {
          "ref": "1e374b32-6986-4e8e-9c6f-9146f1f783ab",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "562d885e-215f-4104-b456-a4da108dc402"
        },
        "item": {
          "id": "40a70c8b-3f0b-4303-ab0f-7ab49d280a57",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c67e8b79-05f6-4677-96d5-c645f5390a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae338f9-7bae-4406-a2f5-6008d63a3549",
        "cursor": {
          "ref": "676fde92-2582-43a3-ad71-09419d8bcf7a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d018cf92-7b4c-4813-bfe7-e4fff9841f30"
        },
        "item": {
          "id": "3ae338f9-7bae-4406-a2f5-6008d63a3549",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "423cde30-fd27-46b3-9145-c4db2cc84dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559b87ab-5180-488a-a9a8-66552c9b2f9d",
        "cursor": {
          "ref": "153394a3-21c8-4967-9c3a-7d344286463a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "732a2842-7c60-46f7-b7ff-a1847b8f17ea"
        },
        "item": {
          "id": "559b87ab-5180-488a-a9a8-66552c9b2f9d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e307798e-a2d5-41f6-a4aa-1c678f9573c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8a190-56e4-4067-b392-6f8529882524",
        "cursor": {
          "ref": "257fa8c3-29ab-4476-b332-c99fa67ce724",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4a338d59-c74d-4822-b956-e41204135ba1"
        },
        "item": {
          "id": "3de8a190-56e4-4067-b392-6f8529882524",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0e4c3bd7-056f-473e-be62-69e911e32494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace551d5-a89c-485e-aae8-39881fca71ba",
        "cursor": {
          "ref": "bf9797d4-b370-42ea-a815-a2df116236fe",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a8a41d37-76e1-4978-b635-866ac4ca1ca6"
        },
        "item": {
          "id": "ace551d5-a89c-485e-aae8-39881fca71ba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e1f68b9d-a02c-4c2b-b1a3-3f13cca36070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e352a623-cd57-43fb-a731-eb5d240d2bfe",
        "cursor": {
          "ref": "4dde9c8b-1937-4045-af7e-73e58abced6f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "82cdc2bd-5d78-4947-9314-2156af1a591d"
        },
        "item": {
          "id": "e352a623-cd57-43fb-a731-eb5d240d2bfe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "de86560d-5588-44a5-ba55-f4b86bcc7865",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "9227df75-e118-46f9-a2b1-8c65b4ec54df",
        "cursor": {
          "ref": "9d68027f-705c-4012-9174-800c5c7de2f5",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "462b8147-b026-4c5d-9264-907a7b71144b"
        },
        "item": {
          "id": "9227df75-e118-46f9-a2b1-8c65b4ec54df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "801b8160-bd3c-477a-85a0-4fa0711669d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62077508-3d94-46b6-a051-a9ab8b9c5c8a",
        "cursor": {
          "ref": "e2db3550-7d78-4921-b351-f842446f9095",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6920cacb-6c23-4597-b620-b6330f2939f4"
        },
        "item": {
          "id": "62077508-3d94-46b6-a051-a9ab8b9c5c8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "73fd75a7-f127-4514-9aeb-982c1a52e5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc66bc2-faf0-4cd6-83c4-ed19cc8cea83",
        "cursor": {
          "ref": "7299a77b-69e2-4fd1-a60c-c1c0f1c782a1",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "196b31b5-283d-49f2-954e-5ab9b344d29b"
        },
        "item": {
          "id": "7bc66bc2-faf0-4cd6-83c4-ed19cc8cea83",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d227ddb-8121-46a0-af42-4ab76fab9030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87410494-e565-48e7-94c5-0cda0bf1d655",
        "cursor": {
          "ref": "f54c3990-dd7b-424e-8a6b-6a0b287263ef",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1012987e-a840-4a93-a90a-cf5cbfe84098"
        },
        "item": {
          "id": "87410494-e565-48e7-94c5-0cda0bf1d655",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "03eeb71c-4f82-4b5e-af9b-dd2e63694974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3b7489-2757-4bcf-a752-3ccb8fd15889",
        "cursor": {
          "ref": "f4cf43d8-3188-4579-a687-2f949f4e6190",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "871e34e9-d4c8-42f7-82a6-ba8d3fddf421"
        },
        "item": {
          "id": "1c3b7489-2757-4bcf-a752-3ccb8fd15889",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "30f2a41d-e846-4288-87e3-33f1a5884357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e88dc-fe43-4007-83b2-32bc7d6f8504",
        "cursor": {
          "ref": "55dc468a-2332-4161-9c60-1c12119e0df6",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "895852f0-15da-4a31-8db6-0a0b828b4e94"
        },
        "item": {
          "id": "f46e88dc-fe43-4007-83b2-32bc7d6f8504",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f50d4aad-33eb-4c64-b28a-c5e2fc23b308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60b358-2d0f-46a4-a4dc-89002b0902ab",
        "cursor": {
          "ref": "e5bcd565-d5ec-4050-afd3-7b139e63d5da",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "44da067a-2ace-4132-838e-4ef0bd65a00e"
        },
        "item": {
          "id": "9a60b358-2d0f-46a4-a4dc-89002b0902ab",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8b68d989-4ceb-4651-9b1b-49f9091671a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "c0a9384b-2c6a-4245-bb3a-39d489c5e94e",
        "cursor": {
          "ref": "e329b379-0278-4d6d-a6ec-2d246580860c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "396471fc-8149-40be-a6be-80134cb30eab"
        },
        "item": {
          "id": "c0a9384b-2c6a-4245-bb3a-39d489c5e94e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3e06c3a2-4868-40e7-a271-774ce6189aa0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "8b17dfde-8634-4de4-877a-aa7bb2f2e733",
        "cursor": {
          "ref": "39012423-44c5-45c2-8472-729cdd5e6ee3",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f6ea4665-f769-4e2f-a08d-c57fef0a2643"
        },
        "item": {
          "id": "8b17dfde-8634-4de4-877a-aa7bb2f2e733",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "16480be5-bdf2-47fc-aac2-ff220b4c93a5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "c6f99ee5-96ff-489d-8651-8daa19e6c2e5",
        "cursor": {
          "ref": "c6bf2311-090b-4c01-afa6-005564d48eda",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "79d78ac5-308f-4c0b-b244-0110e818905a"
        },
        "item": {
          "id": "c6f99ee5-96ff-489d-8651-8daa19e6c2e5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f6b88eb1-52dc-41ba-ae6e-572a4510575e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 54,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "e0a46383-1b50-4237-b938-feab25a3c43d",
        "cursor": {
          "ref": "1e0dcc27-2633-4339-986d-e534d9e164c9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "037f5d4e-426c-4019-9654-a8b7002ed361"
        },
        "item": {
          "id": "e0a46383-1b50-4237-b938-feab25a3c43d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9fe508a8-0c33-46a6-8724-45e57c8d156a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "dfbb4e22-90f7-4e88-9e07-81032a6fc389",
        "cursor": {
          "ref": "2a84fe8f-4818-415d-92f4-cfd1741f90a8",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "85c18dad-247f-45e1-b71b-73bd83a0f0c0"
        },
        "item": {
          "id": "dfbb4e22-90f7-4e88-9e07-81032a6fc389",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "366922ca-1fbe-4f2e-970c-58a6e8837d9d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "668dd2ec-537a-4c31-8e71-b3b5105f6f21",
        "cursor": {
          "ref": "b29672cd-35c3-4d1e-a1dd-c44e8fd66ddf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7f62dd18-8422-4d86-af82-825000719d0f"
        },
        "item": {
          "id": "668dd2ec-537a-4c31-8e71-b3b5105f6f21",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b975ea7e-ee35-4682-bf85-00484c7e93b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf567496-0067-446e-80cd-9adc40ef170a",
        "cursor": {
          "ref": "220026f2-3f8c-460d-baa3-f2907e2bc31b",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d6f5d318-6bf7-49c5-bdc9-beea49b84659"
        },
        "item": {
          "id": "bf567496-0067-446e-80cd-9adc40ef170a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1108d950-d97e-46ce-a429-cfc60898d603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468a4990-04ef-4a21-98d2-c65bff756a17",
        "cursor": {
          "ref": "eeec355b-41e9-4f7c-abae-02bce880af8d",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "162a43a3-9469-46ab-9d3d-b27d21fdb9e1"
        },
        "item": {
          "id": "468a4990-04ef-4a21-98d2-c65bff756a17",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d0198f0c-d0e3-4f8e-af47-b6fb1f581bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eeed70-e3f4-4423-a531-6d15c8eacfdb",
        "cursor": {
          "ref": "1695443f-98e4-4792-98be-8a86d2e9fbe4",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c3dc967a-8fbb-402d-a6c7-015997aad5a7"
        },
        "item": {
          "id": "47eeed70-e3f4-4423-a531-6d15c8eacfdb",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ad6b0612-b3e9-4dd0-8d3a-bc3fba9a3064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea8f82b-5fa8-42c6-a4f9-73418bcd6d2a",
        "cursor": {
          "ref": "57356527-5857-4c8d-b2d2-3e9fc6737756",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3cc7d457-ebef-4d63-bc34-520d2ea8fcf1"
        },
        "item": {
          "id": "4ea8f82b-5fa8-42c6-a4f9-73418bcd6d2a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d57935cc-4ab5-4ba8-bd9d-282b9089203b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de72a195-c0ea-4f23-b8ed-415cdf06f2a0",
        "cursor": {
          "ref": "e4f5a13b-297d-4fca-9f6a-cf88013d3522",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b587c3ec-90e6-4826-b9d5-229f5bee7b5e"
        },
        "item": {
          "id": "de72a195-c0ea-4f23-b8ed-415cdf06f2a0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "17330d15-9b3f-4498-8d8a-ce2c2c870ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb0da9-05b4-4021-b987-dcde575d7452",
        "cursor": {
          "ref": "cf57919a-d697-45a8-87a4-62c39b1624e3",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "20626bd0-94c5-4e42-8a16-df9a9c4504dd"
        },
        "item": {
          "id": "fdbb0da9-05b4-4021-b987-dcde575d7452",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d006b572-6d1e-4c84-bd49-e34c13431a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bebe31b-e303-4677-ac41-ed3b1554aeb5",
        "cursor": {
          "ref": "cf9686d4-e8e4-4fc3-8078-f99b30145b36",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9fbf4a6e-fb36-4cd6-b1ea-5e40a6624e2c"
        },
        "item": {
          "id": "9bebe31b-e303-4677-ac41-ed3b1554aeb5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4e4addee-79a0-4e56-80c1-c42026996960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118dbd22-0cdc-4997-96f8-f7d6f2049028",
        "cursor": {
          "ref": "f7fe3a73-8c19-476a-a39d-4b31dc726657",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "702ad5c8-1b17-4075-aad4-f838ab730b2b"
        },
        "item": {
          "id": "118dbd22-0cdc-4997-96f8-f7d6f2049028",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cda53f34-06f2-4d68-b11d-ab91307dab54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77864ecc-ab8f-47f8-87a9-75608a97bd70",
        "cursor": {
          "ref": "c749599f-3e15-47c5-b022-dd3d93055e53",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "56a3004b-63d9-4b0a-aa4b-c8d9daf5ede5"
        },
        "item": {
          "id": "77864ecc-ab8f-47f8-87a9-75608a97bd70",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2086345e-271c-469f-96d3-0aac162f0640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138ecd91-0973-4bc8-b020-3a3a4ec4fc1e",
        "cursor": {
          "ref": "7619e079-0b7d-4d51-8a6b-a6fe558532b7",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "473f560e-dc6c-43d1-b27a-074f6a55b906"
        },
        "item": {
          "id": "138ecd91-0973-4bc8-b020-3a3a4ec4fc1e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "af2440d0-ef8b-4c43-a71a-39e7f2d126d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc542700-7c94-44c9-a9ca-970f0db56d0e",
        "cursor": {
          "ref": "a14b700d-4081-4b23-9055-ca3ad8e3f55a",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fb55be63-ca7f-438a-b8de-8fc34db338f3"
        },
        "item": {
          "id": "cc542700-7c94-44c9-a9ca-970f0db56d0e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "83191a14-3bbe-4157-9333-bd5c95f77251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7be0f8-82f7-4335-b7a7-24b8b1258a5d",
        "cursor": {
          "ref": "336be463-9d05-425e-8d22-967e78620d5d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "11874150-2b20-41a8-832b-d8619eac33f9"
        },
        "item": {
          "id": "de7be0f8-82f7-4335-b7a7-24b8b1258a5d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f8670dfa-7aff-4834-b175-6d5bf7196d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc685fee-2768-4fcb-b1f1-9bcef50edc4c",
        "cursor": {
          "ref": "bbb0f418-0b78-45d3-af8a-f1630f3058bb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "06d5fea1-d94e-4601-9dd3-fb2f075b3027"
        },
        "item": {
          "id": "cc685fee-2768-4fcb-b1f1-9bcef50edc4c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9f96eacc-68ab-47b4-8f08-2313ede32b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631c39dc-a111-41af-9448-20efc780e299",
        "cursor": {
          "ref": "5c6f803a-4b74-4a09-b80a-5b0a714e1e94",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "12e7a23f-b3b6-485a-bb2a-5d3695c7f9e5"
        },
        "item": {
          "id": "631c39dc-a111-41af-9448-20efc780e299",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "46a15644-6025-4e6d-96af-c027599653ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840d5cd1-7177-416b-9a87-890389ac7059",
        "cursor": {
          "ref": "b91b35ea-1417-4068-a887-e9dd91b08259",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b7da5d13-4c9d-4c7b-955e-04097daf7e29"
        },
        "item": {
          "id": "840d5cd1-7177-416b-9a87-890389ac7059",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e8b8132c-e5ed-4f15-a748-2534dfa72812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9125515-44c1-4d51-bc37-2da232c9230f",
        "cursor": {
          "ref": "53ad5668-9ea0-4a67-91b3-b0496f359dd2",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dad14fae-1e15-4ed8-88cf-8af88517e1a2"
        },
        "item": {
          "id": "b9125515-44c1-4d51-bc37-2da232c9230f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6e0a83d8-6510-46b7-b189-87ee7d62c118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fdf8a79-6152-4b40-ae65-780ea13558bf",
        "cursor": {
          "ref": "9671099f-0092-47a9-b374-3d752a23407f",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f0f9ad76-169c-4af2-9e94-1cc3f7e94fb4"
        },
        "item": {
          "id": "4fdf8a79-6152-4b40-ae65-780ea13558bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9886e1ec-ccba-4a0a-b0c7-879c2def93e9",
          "status": "OK",
          "code": 200,
          "responseTime": 163,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "ea8d123c-f55c-4a15-a9bd-12d03b0a8f6a",
        "cursor": {
          "ref": "f6f2956b-d76d-4554-af37-153f16c0e751",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "907e1edd-15f0-401e-bc4c-cb95f756f04a"
        },
        "item": {
          "id": "ea8d123c-f55c-4a15-a9bd-12d03b0a8f6a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "15a23ee1-7c55-4a11-b7f4-129915530000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd88a05-3079-4ba5-805d-37995c528514",
        "cursor": {
          "ref": "c433b0c6-6b8d-4cc8-8fad-7a1fdfdc0162",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29155b35-2cc2-4476-9982-c82dfbdf20bb"
        },
        "item": {
          "id": "6cd88a05-3079-4ba5-805d-37995c528514",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7f0da421-3a42-4d85-bb5c-b10af8c8949a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e384437-6249-4b4c-b9df-30a0107ca7e2",
        "cursor": {
          "ref": "1dc3cf92-2693-4856-b653-e27cdc5d46e0",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "bf36a423-75c3-42b6-a540-dd5363da35b2"
        },
        "item": {
          "id": "0e384437-6249-4b4c-b9df-30a0107ca7e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "16bc9f0e-63e0-4b33-b2e3-216ffde2fa5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3fc099-97e9-4827-adea-76cf54313f01",
        "cursor": {
          "ref": "6e6d74f5-7be8-485e-817a-e588b5e3df5b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "eb77af2f-61fb-4e98-9d3f-36a647177923"
        },
        "item": {
          "id": "3a3fc099-97e9-4827-adea-76cf54313f01",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "624bfe36-4946-4ba7-980c-681a65ed489d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d16a863-5d49-47d3-843f-538192210f24",
        "cursor": {
          "ref": "ba69f400-6b15-4ec8-80fb-a1f76c37ef3c",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bf90d739-375b-4ffb-94ee-7eace75530f2"
        },
        "item": {
          "id": "2d16a863-5d49-47d3-843f-538192210f24",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "423fb9e2-8a4b-474f-b446-878604706834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a065c8c-56e9-4832-a42d-548955bde1fb",
        "cursor": {
          "ref": "e1053b1f-501d-4bfc-b123-7dd052e312a4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cbdc8d7f-b891-45cc-888f-cfed4b50e609"
        },
        "item": {
          "id": "1a065c8c-56e9-4832-a42d-548955bde1fb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a7ad9661-cd2c-4cfc-8a8d-91e2fa2de31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d258ed-30ff-4825-8549-df03c4db1a13",
        "cursor": {
          "ref": "dcfe7cf5-d645-4bec-9b9e-b5f344207f46",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f3362c3d-473b-4321-9c41-e3ae393ac83b"
        },
        "item": {
          "id": "01d258ed-30ff-4825-8549-df03c4db1a13",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6c7078cf-712b-4eb7-bfa7-1f43346ba108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c571380-5018-43a7-8837-9287f5e2c902",
        "cursor": {
          "ref": "0c2af303-04c6-4718-82ab-b59dc78f42d5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "66f49127-c007-4c4e-b8cd-e10cc2c6a68d"
        },
        "item": {
          "id": "8c571380-5018-43a7-8837-9287f5e2c902",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7d895041-258a-4a4e-b5fa-ee0b5283baea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c926c0f-9281-4522-8d36-83b45da460cc",
        "cursor": {
          "ref": "b9d9eb93-e021-41cd-9684-c12d28fd1896",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6911795a-4db7-4f1a-abee-8555733d4747"
        },
        "item": {
          "id": "3c926c0f-9281-4522-8d36-83b45da460cc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6b45450d-8b64-49a3-891a-115647065dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eaa408e-7101-45bd-985e-b5d145e7cf48",
        "cursor": {
          "ref": "848cbce9-b9bd-4b63-b8b0-0ef590fefbdb",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eaa20a72-880e-42ee-853c-c14c050f493c"
        },
        "item": {
          "id": "5eaa408e-7101-45bd-985e-b5d145e7cf48",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3116f14d-b58d-4358-8ba1-afc558ef3c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d37027e-6240-498d-bbb8-ecc498c1202d",
        "cursor": {
          "ref": "542e67bd-814f-47cb-9148-789c9fbb0a07",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5db880e3-ee35-4326-85e1-2bd282bb9879"
        },
        "item": {
          "id": "7d37027e-6240-498d-bbb8-ecc498c1202d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "eaee0a41-9099-4208-ab35-014037de272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ec7e62-ea77-464b-83f0-a6e4a0623c93",
        "cursor": {
          "ref": "f8946bbb-307a-4719-8efd-04a75d4411e5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "393cd286-25ba-4b59-a409-43fc4b22ae66"
        },
        "item": {
          "id": "28ec7e62-ea77-464b-83f0-a6e4a0623c93",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9169d2fa-45af-47e7-98f9-a16260e78f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e69153-7e69-4287-9f5e-62d36afe1c80",
        "cursor": {
          "ref": "a3fe7e8a-5f0d-4be5-9180-c74d59485383",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "18317c21-3572-481a-8243-8ad9dff7dc6a"
        },
        "item": {
          "id": "58e69153-7e69-4287-9f5e-62d36afe1c80",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5edb75e6-e7a3-4995-8ce9-114bc3026afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695a7f4f-2289-46ed-b9cf-c3758188b40a",
        "cursor": {
          "ref": "d517758c-c0ca-4a6e-8ce1-ce21440c7bb8",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bcdfa9f8-d3f7-4f11-9ff6-6da9aff04c83"
        },
        "item": {
          "id": "695a7f4f-2289-46ed-b9cf-c3758188b40a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97dd5ce3-943c-4acc-8c0a-cf3ae3bf7aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd33234d-65ae-4e55-90b3-bf13d23f9929",
        "cursor": {
          "ref": "24234681-031c-4e22-a27f-017ea1fe8810",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "dbc00e7e-af61-4cc4-8df1-523979c25af6"
        },
        "item": {
          "id": "bd33234d-65ae-4e55-90b3-bf13d23f9929",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ba85d7b1-499e-4fe5-a4fb-932ceb0d8d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81c3b18-bc62-4e32-b33e-af814bf4ee14",
        "cursor": {
          "ref": "c2986040-b922-43d6-b848-d7878193471d",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8332c3fd-f839-494a-b41f-010cad008df0"
        },
        "item": {
          "id": "a81c3b18-bc62-4e32-b33e-af814bf4ee14",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "59b99cc1-195d-4439-aefd-aa43965cfe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d0c01e-0ebe-415d-a90a-ac800260eb3d",
        "cursor": {
          "ref": "de9d5f0b-d404-4543-8068-ce5dbcaf7adf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ecbf43fa-a82f-4285-97b5-4f704bcfe532"
        },
        "item": {
          "id": "c8d0c01e-0ebe-415d-a90a-ac800260eb3d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "562c35cb-2b63-41ae-92cc-5d6dab5ba8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8988753d-47e4-4ab0-bcc0-c1bd6d920243",
        "cursor": {
          "ref": "d511fa4f-e4ee-45e7-a6b6-0522664718f0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "48287d4d-4a20-4ab6-a109-b20514b46f6c"
        },
        "item": {
          "id": "8988753d-47e4-4ab0-bcc0-c1bd6d920243",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2da56c1c-cee3-4585-8128-736b9e0e7bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde3d8b7-1edb-4d31-b4b9-d8070bfdc1c0",
        "cursor": {
          "ref": "844304db-7b9e-46a6-ac59-2408f2183a1b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ecfd8dce-d618-4cc4-9ebc-6e28fca76c10"
        },
        "item": {
          "id": "cde3d8b7-1edb-4d31-b4b9-d8070bfdc1c0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e75f8f04-26c7-4e72-a656-2b88bf32d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b0fd4-1e6d-45fd-88c8-32497126aeef",
        "cursor": {
          "ref": "dfa9710b-76b8-4e50-9753-b3bb32b3ee73",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7e9ca747-a937-48a9-afd8-ca76792d493d"
        },
        "item": {
          "id": "c80b0fd4-1e6d-45fd-88c8-32497126aeef",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "087bf848-e560-4b5b-98ad-ea8466a5ddd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b53ae4-b33b-4289-aaeb-62b3bb64a3be",
        "cursor": {
          "ref": "033998bc-d67d-4a64-baa7-509220c9c06d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f9f6f744-6a0f-4952-9ced-57cc3e9c5092"
        },
        "item": {
          "id": "f6b53ae4-b33b-4289-aaeb-62b3bb64a3be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0a13ff57-4ad7-4143-9096-47d25a6b785d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6253702-4e6e-4157-b468-e61dbfb4f7d4",
        "cursor": {
          "ref": "a198e07d-defc-429f-b973-5caa6d86d34c",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4c282458-d6bc-4d99-ac22-972cd0e47604"
        },
        "item": {
          "id": "c6253702-4e6e-4157-b468-e61dbfb4f7d4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "546b5460-a3fa-456d-9cf7-3c460ef2e5ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5367b6-2410-425c-bb81-7f6265a949da",
        "cursor": {
          "ref": "6421052a-b8f0-4056-bb7e-69a351f80f32",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ab8555fe-4a81-4050-8b86-7a3e7fdc1bd5"
        },
        "item": {
          "id": "ab5367b6-2410-425c-bb81-7f6265a949da",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "72debd95-6d78-4065-83ae-92c0af6af1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f621ef1-59d1-46fb-80e6-019351950085",
        "cursor": {
          "ref": "d06ae5c9-eabf-445f-a705-20fc318ff481",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e33ff8f2-c90c-4516-9c75-86b7affb5ef5"
        },
        "item": {
          "id": "1f621ef1-59d1-46fb-80e6-019351950085",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e08f1f57-6236-4942-bd64-955bd4ee36a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb133a7-e585-426d-afdb-2aaf738ea569",
        "cursor": {
          "ref": "506adc0b-b42a-4210-9714-e434b58dc72f",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0edc9e2e-8f32-48e4-bd3a-140cda082c69"
        },
        "item": {
          "id": "edb133a7-e585-426d-afdb-2aaf738ea569",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "fba28e3b-2451-416a-a634-c1cefee7c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6af587f-c9ac-43a8-a06f-cbb6640f6d38",
        "cursor": {
          "ref": "8d597000-1c12-4dee-9f6f-0190733a877f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7dd15b3a-da0d-421c-8d8c-af78965662b9"
        },
        "item": {
          "id": "d6af587f-c9ac-43a8-a06f-cbb6640f6d38",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c9c3bc6d-42bc-4ed8-a311-188ddb6cdfb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bfc502-969b-49b9-b900-e40ccd568462",
        "cursor": {
          "ref": "1b70e0ac-a7dd-41b4-897c-3ea4625f9ddf",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "97097898-57ec-473f-9825-a52dd919da5b"
        },
        "item": {
          "id": "b6bfc502-969b-49b9-b900-e40ccd568462",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c058ab49-7d26-4ef4-98d4-a5c252b68003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9277fb-7de7-4b0d-892c-23f436448a4f",
        "cursor": {
          "ref": "51f2b259-941c-4e28-b3b9-f8160f2ed2bd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4a7f19c5-7c17-4377-883a-df046e9fa175"
        },
        "item": {
          "id": "8d9277fb-7de7-4b0d-892c-23f436448a4f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "89781099-e598-46ab-ae8d-28bb92f4e77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c27cdf-1e52-4288-8511-51ee5b4ecd40",
        "cursor": {
          "ref": "ef784f9a-c341-42c6-8c5d-dc710479dd2e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d0281af7-0f52-4bb0-9ff3-fafa58893630"
        },
        "item": {
          "id": "26c27cdf-1e52-4288-8511-51ee5b4ecd40",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0e94daa6-94a4-4ed2-a5d5-e857444d760a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54a6011-ee9a-47c8-9c00-bae0a40b6f9c",
        "cursor": {
          "ref": "93d74d14-2a2c-4bbf-8715-2dc0481ecf52",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8cc9c66c-baa2-4a77-9a88-13a8d4f50946"
        },
        "item": {
          "id": "e54a6011-ee9a-47c8-9c00-bae0a40b6f9c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bfa33bcb-dbee-4f3d-b351-9fb7d85ec266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110b7ac5-bf3b-433a-82a6-606794aa68fd",
        "cursor": {
          "ref": "0e0cae18-9dc9-42c8-8c23-426e03dbb341",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec142e52-aa02-472e-8c77-f77fef3cd0e1"
        },
        "item": {
          "id": "110b7ac5-bf3b-433a-82a6-606794aa68fd",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e23175f6-8bf7-4ef1-a2d5-7b214b3f848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e837ff4-1f08-4630-adbc-97c5c07a5e2c",
        "cursor": {
          "ref": "7e30dd91-8871-4261-8ad2-554f3783f134",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "21f75012-ef9c-431c-a859-f6f15089d394"
        },
        "item": {
          "id": "7e837ff4-1f08-4630-adbc-97c5c07a5e2c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e8ea85b7-af25-47b5-b9b3-5cbed28dd4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709183a2-4e20-4ad7-992c-fb6313394942",
        "cursor": {
          "ref": "9fd0151b-bd0d-4b0e-abaa-5b55957d8058",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "13d457e9-28b8-491a-a1ed-866bdb43be45"
        },
        "item": {
          "id": "709183a2-4e20-4ad7-992c-fb6313394942",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fcf6c8ed-b818-4396-b8f7-c757843a2f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60508c6-49a9-4d71-bff5-2a3e9083e2ab",
        "cursor": {
          "ref": "6599e9e3-8744-4ef7-a38d-cd8cb6490254",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b2e7ff46-98d8-4dbe-b2e5-7808135ab5df"
        },
        "item": {
          "id": "b60508c6-49a9-4d71-bff5-2a3e9083e2ab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2074356d-77ce-4f99-886a-d4835da195e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d846d9c1-b07f-45ce-af1e-49511440c05e",
        "cursor": {
          "ref": "37e2f067-4bc9-451e-b771-a9d2b6516e50",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "94d6d4e0-c29c-43f8-ad55-ba43d84506ce"
        },
        "item": {
          "id": "d846d9c1-b07f-45ce-af1e-49511440c05e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "469178c9-ae19-404a-9cda-d0390e875b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f21a377-ced1-42b3-8e29-69712c74f537",
        "cursor": {
          "ref": "5fcf6112-86e4-431b-91a6-6a0f6d3ac410",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "93436271-9f7a-494f-9f89-253e8e0ec1f6"
        },
        "item": {
          "id": "7f21a377-ced1-42b3-8e29-69712c74f537",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c79e4d65-89ea-444f-98ee-01b0c31f3c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba17a30-a4ab-4555-b12f-4666e11f10c1",
        "cursor": {
          "ref": "8411499c-d863-4884-8a12-b198d55ed097",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4396be6f-9f15-4340-912f-c5f06d854453"
        },
        "item": {
          "id": "2ba17a30-a4ab-4555-b12f-4666e11f10c1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "284713d9-c510-443b-91b4-97d80fee8ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846a3fd7-17d9-4c51-aa8c-d98658a2532f",
        "cursor": {
          "ref": "0c071cbe-9320-4745-ad1d-0f38a685e9c8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ccfd177a-3d65-4da6-bb62-07212ee22030"
        },
        "item": {
          "id": "846a3fd7-17d9-4c51-aa8c-d98658a2532f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "745d9ddc-2da6-4c0c-9569-0e64c36c0b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135e5522-576f-496f-9742-365833587d93",
        "cursor": {
          "ref": "0d01808c-69f0-4917-a719-17cceb95de6b",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e30ed85b-bc93-4182-9e84-252d8da88cdf"
        },
        "item": {
          "id": "135e5522-576f-496f-9742-365833587d93",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "40b7ff64-d3ad-46c8-852f-1c1f5b027d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc1e9dd-69b0-4266-885a-89e2902caa66",
        "cursor": {
          "ref": "23185eb0-d367-42ab-90b2-87c369d1705f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f4594462-7875-4e1b-8bcf-3b02d2f72234"
        },
        "item": {
          "id": "dcc1e9dd-69b0-4266-885a-89e2902caa66",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d2d37df3-743a-49f5-ab95-bcae49358f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f18159-ec1a-4f0b-bd93-20cb6471a777",
        "cursor": {
          "ref": "a6db1324-9755-4fcf-8169-8e99ec909a28",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "10a9a8b6-8980-4191-8639-65998bf28a6d"
        },
        "item": {
          "id": "81f18159-ec1a-4f0b-bd93-20cb6471a777",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e88bb488-8387-4478-a75d-6b883ae8d2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea129f38-b9f4-475d-a801-5a70bd7e9527",
        "cursor": {
          "ref": "d5d15ff8-1dd4-47f9-87ce-032cd7099ed9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "559ed94f-3855-44d8-b2bc-315157790000"
        },
        "item": {
          "id": "ea129f38-b9f4-475d-a801-5a70bd7e9527",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bd955352-4517-46c6-acd9-905d039be1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bcddd6-7335-432b-b783-f61784ecb556",
        "cursor": {
          "ref": "1155d543-cc7d-473f-a3e6-ab9fb3492093",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "29319e0c-4ff9-44e7-b496-c29bc39db6a7"
        },
        "item": {
          "id": "07bcddd6-7335-432b-b783-f61784ecb556",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "241d906a-75d3-47a0-8a68-ce970a1b4ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c6d2d5-8ba9-4bd3-9485-6e40789eeba0",
        "cursor": {
          "ref": "a31d5778-68ec-4183-a726-ab9304aa7bdd",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0698ec75-88e6-4f13-ae9b-94794510efe1"
        },
        "item": {
          "id": "b8c6d2d5-8ba9-4bd3-9485-6e40789eeba0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "404539a4-ed77-4729-8d2f-ef5a5b404a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f726398-e95c-46b1-9749-413b7fd7722c",
        "cursor": {
          "ref": "46576864-4245-4627-917b-76e271ae8144",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5fc120e5-6131-48d6-a20a-f13d39912e09"
        },
        "item": {
          "id": "9f726398-e95c-46b1-9749-413b7fd7722c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "27e9d2c4-28c5-454c-8f36-25430da5e450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b45861-9155-490f-a588-1c546796f5b8",
        "cursor": {
          "ref": "68344102-e6ef-43a3-97f5-02f225ee57cd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb83edb2-1ab3-404d-8d9f-bbb1b3911ee8"
        },
        "item": {
          "id": "b9b45861-9155-490f-a588-1c546796f5b8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "17f14358-ff97-4b2b-a870-c3db84d6237c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422c69f8-e2a0-4664-9196-3e9ace8bf50e",
        "cursor": {
          "ref": "f2fc62a2-28a8-469f-bcf9-cbd5cb758da3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "34c0dc6e-a00b-4294-a96d-a285c0960616"
        },
        "item": {
          "id": "422c69f8-e2a0-4664-9196-3e9ace8bf50e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "23a0223f-0a8b-4e15-b72b-48b44bdf07ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54008d4e-d928-4b90-a5e9-a413ded2aa8e",
        "cursor": {
          "ref": "76b30ddb-1d9f-4ba3-b147-bbaf43e7182a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3b868a13-19f8-4ac2-957a-8b67004270ea"
        },
        "item": {
          "id": "54008d4e-d928-4b90-a5e9-a413ded2aa8e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a454b9b-c7ac-4f76-af1b-d2822128c885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01d3198-42be-4a05-85f3-760b8d416ae2",
        "cursor": {
          "ref": "ab387d4c-957c-403c-a45a-876706509abb",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fcb50d3a-2d89-4c13-b621-111aed9a6866"
        },
        "item": {
          "id": "b01d3198-42be-4a05-85f3-760b8d416ae2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e3637b1c-b70a-478d-ab94-d33427211781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdc27f2-46c8-442e-b593-624c8e56a409",
        "cursor": {
          "ref": "21c6ec01-35f5-45b0-b883-aade63948a19",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d3166ee6-3139-48e4-b0fc-9ffe2694d8f4"
        },
        "item": {
          "id": "ebdc27f2-46c8-442e-b593-624c8e56a409",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c104c8fd-4e2e-4bc4-b524-2b4e1a7852d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91860714-7486-477e-8ce8-472dfc7dd9e4",
        "cursor": {
          "ref": "4452dd17-7910-4ab5-ba25-be8c158bd0ef",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6dba9292-4be9-429c-b83f-ab10b311d59d"
        },
        "item": {
          "id": "91860714-7486-477e-8ce8-472dfc7dd9e4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "dc402836-c41a-4f6f-ac49-f44558189c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c6d26-bf6c-439d-889e-af1a6638a2dd",
        "cursor": {
          "ref": "217858dc-65c1-4703-b25d-e13cfedcb0ef",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "af07dc48-6533-4ed3-98db-fbdf2466a3c9"
        },
        "item": {
          "id": "514c6d26-bf6c-439d-889e-af1a6638a2dd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4899f9b8-3e86-4af3-a687-d294e6ed98e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02af9542-a7fc-4c69-b6a9-f974df2c8a34",
        "cursor": {
          "ref": "d8755d23-2336-4f80-9cb8-c6ddac06402f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cf1fbf70-ad3a-4425-b5a6-3e72224aac78"
        },
        "item": {
          "id": "02af9542-a7fc-4c69-b6a9-f974df2c8a34",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4ce36582-22e9-407f-bf64-bd699c4616a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84dd4c2-ad6b-4bdb-9109-71b7d22c6dc7",
        "cursor": {
          "ref": "0282a65c-34b9-4be2-a709-57c8f94d08f8",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04167946-98a4-4d40-8c04-36166ff9d7f6"
        },
        "item": {
          "id": "a84dd4c2-ad6b-4bdb-9109-71b7d22c6dc7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "089b5d61-4603-4bd2-a9bb-f141899e32fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440639d1-348d-495a-9df2-b89b5c48c174",
        "cursor": {
          "ref": "d04f4cb8-c60b-4b74-bd7b-863db87fea8e",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e7df76e0-2726-4701-9624-14cd33e69bba"
        },
        "item": {
          "id": "440639d1-348d-495a-9df2-b89b5c48c174",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "12ea5d7e-223e-4f66-abe4-004461f98027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e52fb84-a84f-411d-8f8d-dc7ea0abc923",
        "cursor": {
          "ref": "8d42c512-10a9-4336-9c21-b096e2944e02",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7f33f13c-b478-4cc2-b7c8-f3030cce53e6"
        },
        "item": {
          "id": "4e52fb84-a84f-411d-8f8d-dc7ea0abc923",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "493e8e2f-f2ca-45ae-9529-75d05facfb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed78bc5-f50d-4732-9210-1819633b5d10",
        "cursor": {
          "ref": "76ba6720-5d2d-4898-90ba-58f7c8784664",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fb273972-d5d1-4862-b7ca-55c6478d41c7"
        },
        "item": {
          "id": "eed78bc5-f50d-4732-9210-1819633b5d10",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "27eed588-dc55-4bea-afdf-ef8ba3269628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83be3a65-eb36-4c60-9f46-abda14ccd698",
        "cursor": {
          "ref": "2734a3db-fd6e-4a12-ac66-614b27ed088a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0edadae4-4aac-4fb2-9d06-549b34bcda78"
        },
        "item": {
          "id": "83be3a65-eb36-4c60-9f46-abda14ccd698",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1957d813-8900-4ea3-8643-c807fafb2138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1d3434-6f91-4643-9594-e5d7f7b0a158",
        "cursor": {
          "ref": "acce1f6c-0f58-4476-9fe7-964cb170fde3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fe84b5a0-6dbd-4f1c-8ad0-315ec37663ca"
        },
        "item": {
          "id": "ce1d3434-6f91-4643-9594-e5d7f7b0a158",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12def2de-c150-4a4c-bf4b-6d0fffdd6853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd7cef3-4834-4630-b752-b90341e76972",
        "cursor": {
          "ref": "b7f757da-4a26-4c00-89c5-34c1c1402f3e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "921c3894-c8db-46d9-99f5-209b1e8230ee"
        },
        "item": {
          "id": "ffd7cef3-4834-4630-b752-b90341e76972",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d65037aa-4957-4238-ab93-48d91762d6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed792e6-fa34-4ce8-94b2-96e57d0130c1",
        "cursor": {
          "ref": "576a96e1-a8e0-47ca-8d75-a8175ef25278",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e708377a-9478-4a3a-863e-409600f34cb9"
        },
        "item": {
          "id": "1ed792e6-fa34-4ce8-94b2-96e57d0130c1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a8584ca8-ff5b-4c3e-9f9e-b7ca3631cd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2c5b5f-97e6-4e42-8c29-617674044171",
        "cursor": {
          "ref": "7260d727-fa11-4e89-ab0f-2904fdd37f75",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c7e9cb83-0569-45ce-a23f-6948ad93bf96"
        },
        "item": {
          "id": "3b2c5b5f-97e6-4e42-8c29-617674044171",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "176c7dc9-0f84-4ccd-b744-ae2c0c24abe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d659193b-c26c-4fef-ae75-abba4753b5a9",
        "cursor": {
          "ref": "237d2b1d-322e-4d74-a9ff-a2843c743f7f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "57a8e0dc-ef00-40c0-9e4d-5ed97edf5456"
        },
        "item": {
          "id": "d659193b-c26c-4fef-ae75-abba4753b5a9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a9e44720-13c2-4450-be7e-82e4d4d83704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ce1fc7-c623-4ac7-934f-d47e1cfe988b",
        "cursor": {
          "ref": "db0b9120-0214-4e5d-8399-dd85b6b966d5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9f7a9df6-0e79-42a0-b041-1237c289aefb"
        },
        "item": {
          "id": "f7ce1fc7-c623-4ac7-934f-d47e1cfe988b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "95ca9b43-c855-431a-9931-508e67e76c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11009320-9e95-4677-9927-90e363af1c63",
        "cursor": {
          "ref": "b3ea54f6-3680-4c31-8f9c-264403e73bf0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "244ef9bb-7fd6-4ddb-a882-1d90149b4653"
        },
        "item": {
          "id": "11009320-9e95-4677-9927-90e363af1c63",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6d290975-7fc0-43f4-afb6-0021c2389824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0488a9e-219b-4c38-966a-ded6d623f346",
        "cursor": {
          "ref": "4e71ce2f-21a7-412c-9b29-c2945c114a16",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "92d9d464-197f-4354-958d-edd202b6ba67"
        },
        "item": {
          "id": "d0488a9e-219b-4c38-966a-ded6d623f346",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e83ce07e-bd83-4025-8937-638700213066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b788492b-5674-402b-b3c9-078b79cf52a3",
        "cursor": {
          "ref": "cb4f842d-d1db-46bf-8431-e061747f25ac",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "51163d77-f45c-4058-9169-da34cf951aaa"
        },
        "item": {
          "id": "b788492b-5674-402b-b3c9-078b79cf52a3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2e7954bf-1b0c-4366-b152-cca7167a1f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d0d0e3-60ac-4059-be9c-809f24642ac3",
        "cursor": {
          "ref": "00d92f30-e6e6-448c-9644-635caf0811f8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1ed5c98a-5f2f-49bb-973c-25fe211fe595"
        },
        "item": {
          "id": "28d0d0e3-60ac-4059-be9c-809f24642ac3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "201bf1e5-c133-485d-b05d-59a5e9ef142c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d92b300-740f-4a4d-abd9-560fecfedde9",
        "cursor": {
          "ref": "54d5e2f9-0325-480a-956b-81dd3507d67e",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "60db309d-d6fe-4547-9cf5-06958a0e3d50"
        },
        "item": {
          "id": "9d92b300-740f-4a4d-abd9-560fecfedde9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b47701d-47ba-4e68-a9bc-937cedbcfcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66073953-74f9-492b-8499-0d27dbf8d18a",
        "cursor": {
          "ref": "3533edae-f6bb-4df3-91ea-a44f2a2265de",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "281acfbb-d933-4f16-88be-323f8f4f216d"
        },
        "item": {
          "id": "66073953-74f9-492b-8499-0d27dbf8d18a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2655a32e-e101-4f4c-a6a8-aac2ca9f0782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdab99a-e8e4-4b9d-b63a-ccc110cc9a13",
        "cursor": {
          "ref": "a1cd8dd0-eae0-40f4-8432-3abbb2200f64",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c6f2d123-0119-4018-b6a8-a57e0e5ea804"
        },
        "item": {
          "id": "7bdab99a-e8e4-4b9d-b63a-ccc110cc9a13",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "de9694d3-245f-4430-84bb-5dfc471a8b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe3d42b-9b7f-43b5-b9ba-c7f910f726ec",
        "cursor": {
          "ref": "97168e13-c217-4748-904a-fe1219665cd7",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bb00ec89-5c08-4044-9326-e6de7f3bcf91"
        },
        "item": {
          "id": "bfe3d42b-9b7f-43b5-b9ba-c7f910f726ec",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "66d93442-4dfb-4460-9efd-f27769d82f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739e470e-a94f-4f08-8212-468267747260",
        "cursor": {
          "ref": "b1736a72-9ab6-4e12-9bb9-bfd16a3d552e",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b26c7245-ed22-42d0-b590-8385f49ff462"
        },
        "item": {
          "id": "739e470e-a94f-4f08-8212-468267747260",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f15842dd-ccca-495e-a417-0f7cc8ef2dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7ff04b-bb9a-4f32-add3-90e2628e831a",
        "cursor": {
          "ref": "8c41074f-8487-48fb-8663-17642a671fc2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfd7ecdc-876e-4120-93c1-552c4d8186d8"
        },
        "item": {
          "id": "2a7ff04b-bb9a-4f32-add3-90e2628e831a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0e68443e-ed43-4bb0-9893-6c56efb3637f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232274ac-9213-4320-a303-19ceb4300470",
        "cursor": {
          "ref": "86299467-4aa3-40e7-b28f-c5b5945b7bb5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c130dab1-3042-44fb-9d65-cce4b99e3b45"
        },
        "item": {
          "id": "232274ac-9213-4320-a303-19ceb4300470",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "837481d8-24d2-4868-b409-981781762482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05d509e-e6e7-498b-b427-9666e18d7b63",
        "cursor": {
          "ref": "b0163855-814d-4230-be86-8d685324a3f9",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "43fbcc57-d2ed-4fc5-9f7a-e78f1a9035b6"
        },
        "item": {
          "id": "d05d509e-e6e7-498b-b427-9666e18d7b63",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bc0d01db-9bd8-4517-8fb3-272331c492ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b82855-486e-4cb6-a5d6-31642050d9d5",
        "cursor": {
          "ref": "ef5a369f-c5b8-4e1f-9fb5-2d81c5d57ae6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "abe6e368-28e3-4572-8b2b-f87cf1e3a796"
        },
        "item": {
          "id": "15b82855-486e-4cb6-a5d6-31642050d9d5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9e398ea8-e855-4962-899e-066be7318937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5051694-afc7-410a-bc51-aab0c490cb23",
        "cursor": {
          "ref": "5c424d0b-91d3-4e5a-83eb-830dbfce7d04",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "876cf4e6-f530-413b-98cc-57ff6bebf180"
        },
        "item": {
          "id": "b5051694-afc7-410a-bc51-aab0c490cb23",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "863ce700-9a7d-4a6f-a53b-4467cf166689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b66a6a-4efb-4bc3-800c-fb510ced9ba9",
        "cursor": {
          "ref": "e3d780f0-6c5f-4ee8-b1b9-c0072327c3a8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "d750e7a4-b8ee-4e78-99e2-53a860557687"
        },
        "item": {
          "id": "d9b66a6a-4efb-4bc3-800c-fb510ced9ba9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bd8cd550-9d6b-480c-bbf7-949bf892a479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c854544e-dfc8-44c0-8d60-766574044bd2",
        "cursor": {
          "ref": "55d4f0ee-dc45-46fb-90d1-2d2afe8c3c9c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ec08a2c6-0f4d-4e78-84c5-ec36f5d6a496"
        },
        "item": {
          "id": "c854544e-dfc8-44c0-8d60-766574044bd2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "656e9c33-e876-41be-903a-878676be28b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cb3c20-65f2-441b-916d-b9c271314968",
        "cursor": {
          "ref": "c740aeee-04af-45e1-8008-3ba898da1561",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a2acd81c-f867-4dfa-b70e-84d84d197230"
        },
        "item": {
          "id": "74cb3c20-65f2-441b-916d-b9c271314968",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "55a54e02-0881-444f-a173-6622e4447d56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09250ce3-9c05-40be-bb8e-960d7ba3aca5",
        "cursor": {
          "ref": "1d82ecc4-c651-4f15-ad26-6b9eef54b355",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "27be0920-e83b-4d31-b78a-25a4f017f4bd"
        },
        "item": {
          "id": "09250ce3-9c05-40be-bb8e-960d7ba3aca5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "10685874-fcc1-4584-ac5e-7a9c5f224c07",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf08e9d0-3955-48b2-9033-026690814b62",
        "cursor": {
          "ref": "48ab1294-a977-43af-a08e-05b6802eae20",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "2838dbab-d69b-4180-b946-86ae5061fd19"
        },
        "item": {
          "id": "bf08e9d0-3955-48b2-9033-026690814b62",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e652057e-7715-4514-9199-e3f08fd1903b",
          "status": "OK",
          "code": 200,
          "responseTime": 4923,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "80806f57-d881-4987-8363-40c8dae92c21",
        "cursor": {
          "ref": "cef9ee73-443c-4b6f-8f2b-f30937c35412",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3f5a0419-a610-480a-bcd9-ce751ec73d08"
        },
        "item": {
          "id": "80806f57-d881-4987-8363-40c8dae92c21",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2950e588-f34f-4040-9155-0e5c73540a26",
          "status": "OK",
          "code": 200,
          "responseTime": 3370,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d908c2-e350-46e6-a32b-5df8b51e8402",
        "cursor": {
          "ref": "4691ebfa-0f6d-4296-9773-b5ecedc2790f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b21956bf-479b-4201-9ef8-7bd1c7e16a48"
        },
        "item": {
          "id": "43d908c2-e350-46e6-a32b-5df8b51e8402",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb07f22e-a743-4e24-a878-72300d29159d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d908c2-e350-46e6-a32b-5df8b51e8402",
        "cursor": {
          "ref": "4691ebfa-0f6d-4296-9773-b5ecedc2790f",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b21956bf-479b-4201-9ef8-7bd1c7e16a48"
        },
        "item": {
          "id": "43d908c2-e350-46e6-a32b-5df8b51e8402",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "bb07f22e-a743-4e24-a878-72300d29159d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2121e80-2af3-49c2-897d-63c63fb7a6b8",
        "cursor": {
          "ref": "a3f2b8c9-bed9-46f8-874f-f7caa72183c5",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "02b9dab5-4e70-43ac-b438-c61c3553c26d"
        },
        "item": {
          "id": "f2121e80-2af3-49c2-897d-63c63fb7a6b8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80b0cc1f-5ff8-41cb-900e-9c72499810c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16b604a-603d-4737-a5f4-c8ef5d7e7108",
        "cursor": {
          "ref": "b8a8b76f-01e0-4195-b8aa-37eec65cc7f9",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "13da8f9b-5db0-469a-97e9-d1ee619597f6"
        },
        "item": {
          "id": "e16b604a-603d-4737-a5f4-c8ef5d7e7108",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "434e69f2-9a06-40d5-84d0-7c8c2ed8706b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}