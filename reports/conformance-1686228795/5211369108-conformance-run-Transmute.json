{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dbacd476-c97c-4655-af51-b48295980987",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7e1eca3d-288b-430b-afc4-effbc141dd74",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a85ad972-f781-4e60-ae24-9a46ca4ab10b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c26ac21-5a2b-4569-9e2b-9bdff92899e9"
                }
              }
            ]
          },
          {
            "id": "b14cdcd8-0366-4c80-a379-d6f5640ad55e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "44afb541-ca23-4719-866b-00ff55fdb714",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c1a07b3-b3c4-4562-ac69-4923b5c39467"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9dd198e4-4e17-4ced-b33a-9bba00194c9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6172d589-3611-4276-9e20-93a6752949ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b061da8d-ef8b-415c-9102-639639080cc4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80a80906-1806-4cdc-934e-e6771e95cf05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c76641f-5a4f-46ab-9ecf-e212e71fbb7c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a06bd14-7300-4be3-8d93-5f6c0e7f8f95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "661b608c-98ae-41c2-9776-825c20d5efc8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e23014e-28e5-40a8-b314-2aa7b58ba5db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da25a552-2b5e-41cb-90bc-befa42e0854c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98a1aa74-e365-41b8-969b-f4eecd5ca44c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "de55a25b-98c0-439e-9028-120735775708"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35e855e8-6471-4367-b997-ea4e692b85a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "570abadb-ca47-46df-8640-d28c47b70828"
            }
          }
        ]
      },
      {
        "id": "904c15b6-acd6-4faf-9745-77131bfc25a7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "37f3e19a-ea39-48bf-8abe-f134cb06172b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1408faca-4312-4805-b3c7-a6f6b900047e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "db87b1ae-67cc-4eee-8251-f67025bc5bd9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546fe593-eb86-40c6-81a6-baa187acb1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96f3c705-b163-46f0-8bb4-947f32d8d73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce68da7-778d-4c7e-92dd-25fc7798252f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d3ca7a-a1e0-436e-b008-f5e2fe842d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cbbef2b-c4ba-4097-ab6a-ddc45df3ce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638d3424-ed99-43b4-8b0f-88f1e4f0c62f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca79ecfc-0774-43c1-bd85-99181bfdab1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44d88635-3dae-4b32-b339-611140fe7ac3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7b58371-2d43-4806-a2b0-ea23388f0f46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1165186-57c8-4152-b089-da0053d78317",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbe260b-89d8-4ea5-8ec0-6d949e986154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56aadd85-8cb2-48bb-8db9-35585ea4a0dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b99df60-7630-4f9d-92b7-be0dd11021b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e145cfda-b53b-4309-95c5-7a3247d3e5ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c4d046a-2e36-4d9a-967c-4f944e641a0c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63ba0477-5f53-44b4-b6d2-335b6e36bc28",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff32f3c6-2c3f-4e94-83f3-60689bd77470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ff69353e-03dd-42ee-91a8-caac7f498e82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2eb7161b-d649-40b8-897e-47982320f9da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9bd14988-5929-42df-98cc-7503f07596f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad67f9f7-cdbe-48a4-a47d-ca69cc513f88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fb155b0-562f-421c-871c-97a86052d0c9"
            }
          }
        ]
      },
      {
        "id": "847fe944-c8ad-472c-8d8b-69384c26e44d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a32740f3-23a6-4b50-9e46-7f0bef395935",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f186a70c-4b17-4c9a-b25e-5893615461e8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "790af2a2-f893-471a-abf0-d2ebf8436e94",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077827ea-46f7-4f1c-b13a-5d540ac0f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbc097b-98a4-48ad-8e9b-36ede832e1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b39a79d-3e23-4f57-834c-b7af26990610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30b997b5-bacb-42c0-9af2-944e55c7672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4571b1ea-2d02-45f4-a72f-d97fd0c72628",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7a124b-1920-4bc6-a452-1edc2bbc69f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875f5f5d-e1da-4a64-8056-6ca18bd4d8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38512282-e428-4047-aba1-07c2a3259424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc070d3-2d67-4990-a27e-49b7a8a37b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b57483-b520-4744-ac84-4462db0bb9ca",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b320d41-f185-4062-953e-f8a58b828ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73cbfd8-06fd-4869-9e64-e401bd2e0477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18093f4-e9d6-48a1-93bc-822830ff3935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15f83f3e-89a4-4e68-87b2-d72d9db095f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448add61-4392-46c6-ae69-b29ba7d23bed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8277fec8-0d27-4bbb-bd72-3a64de9fae4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4f551f-0d6d-4af6-90f6-26c7adb08c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b2b5f-f32e-4ab1-99ac-ff16dbbf7dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "499372ca-0ede-4d5e-8c01-a7f9fe03824e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e16c14b-c284-4b64-8343-a133052b20f2",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e27d2-4153-43b0-8eb7-4bd3cefbf350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cfe8e3-36eb-4b2f-b0f7-873b7dcc5eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0058384-26bc-48cf-8663-64998d3b2db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd37562-bb28-4382-bd76-697355cc5306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3d9d62-00e8-467c-903e-10c34660ab85",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692af881-c6c0-477d-b184-23aef2d3042d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdf4515-7aed-4fca-8590-825a851a9dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ba9fde-728f-4d42-87f5-ba0df34f3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85c15d77-0905-4a2b-bdaf-cce665016531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c4360f-c48f-4bb7-b60c-719cf6d33978",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf4e36e-785b-4a5d-9b75-9a37bf278154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad1dbcf-6ca9-42af-9636-fe192ecb3e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0f06cf-3f29-455f-999b-6caed487eea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc953a77-4422-4999-9407-5fa708b0887a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef5e5fc-aecd-419e-ad2f-edddbf028dcc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d74be99-5eff-43a9-b588-2670e414c1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2bd5d7-3220-4411-9029-58a2f49bfa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080a7e09-7f92-4c19-9508-194236188a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00d5f6f-b19c-4507-9bc4-e74ff0b6ac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db5d7c8-3ab3-4f5e-a670-c6c1276c4bee",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de602091-92a5-4753-b4b1-961dfdcb62e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21028be2-687f-4936-a7bc-786cfa1ac8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd501f-e8c1-4ea0-a23d-668ab0de3d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c63510-709a-4c1e-894a-8667be5d4f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2454bd0-9415-4603-9ee5-aff9ea596c60",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03bb41c-d0db-417b-9a0c-167da7fcd6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba366897-6b2b-4ea2-b7f6-74b33bf4a849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b248d79c-dca5-4cc7-be38-78a026e15f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c00a9374-91b9-4248-bcb2-37429be1c4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de62eb-363b-441b-a287-58d411098e53",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed601e63-a169-4931-858f-95a0664d06dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94ea555-08d9-400a-95dd-9a8432adfac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726940f2-a6bd-487f-97c1-0d1cb8b60076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dca863a-5b04-4e74-908d-bdf1c4a97a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9c7143-c1d5-4fac-b00b-9df67cbeb394",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669306c8-2608-4a36-9afd-a6f60e98b539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9632dd1-f7cf-4e8f-8d98-559d4609941d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e763eecc-45c9-4856-936d-c233ba6ac37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f7d8ca-66b1-465b-b9f0-7c4419c6a2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d8ef05-1f8d-4c66-bfa0-d29e78a4c432",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8751bab5-036a-40da-80ad-994940ad57c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219dc3ce-cdb4-4c47-82fd-409c748b03b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03eaf20-1105-4d70-98d7-5372ab271ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53f5505c-1e3a-4c92-a2b1-b32126fbc4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec516a2f-000f-4369-9ca4-43089dad5c6d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a201c21-159e-489c-a83f-c44a9a81e4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011b91f5-6a85-43b0-afcf-05be0ab0c4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac06eab-396e-404b-b562-4218fd05c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ee2be63-5a8b-42cc-98e8-8e40829fb435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f07b9-9048-4a3a-ac7a-7e34b54c9b52",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad400b00-a6ed-4356-a75e-298c82327004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebaab9be-43ee-459d-b4db-8921c1e737b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af1b032-1bee-4ce3-bec7-13e60e6852e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d65bf03-2fb9-4013-9714-fdd74b0b4d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5890b60-210f-4447-b459-c24825a68aa5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d8a61a-dda1-4006-ad24-28cfaff86271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de240af5-9a47-4ab0-9cbc-5d155db7d144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5006e975-e05d-4175-9b6f-faa810520499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf119026-941e-4133-849f-241d5399805b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e817f-aed4-4c03-ab68-5cd50aa01deb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f13f3f-bda5-485a-8f28-89c14969d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "769a7c32-a66e-4128-ab38-584b1b479828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376ac054-fe9f-4dc9-b682-5dcfeeb1352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "522422b6-6da2-40fa-91e2-2eb3c288a245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f494396-91b9-42bc-a1be-51c2264a5959",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f293982-87c5-408d-88eb-7a8e6aac5165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9b616c-3499-4943-a335-13afe532faca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbebaa6-08e9-4004-a39d-94bf0671b49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d31ade8c-c909-4b66-a6cb-2a4f731aa026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc2fd63-7873-422f-a164-94f1c1fd8262",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ec94e3-cdd1-459a-8267-1e14386ac0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2aaaf0-4652-4821-a3a8-4528739ee989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45bcf7b-9c8c-4335-8112-86f994b616c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "068207dd-70af-4784-ae24-947ee353d076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f12d12f-2628-4ffc-b650-d9bb0138f816",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9204e01a-4094-473d-b92a-8a069fb213b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e26f836-6ea6-4bc9-ae23-4c178067d65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a2575c-9a68-4504-af11-2e3dab3ab74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0b0d40-8022-4153-ae6c-e32670383bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf5701e-d0a2-4b67-9f53-f48a58c1bf27",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aee459-0d3b-4f3c-89c0-2d8a98636517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f857acc2-e57f-4506-a820-8a64e9c4247e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca44c39d-43e0-43a7-9367-30293f5de5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93568dd7-aef6-4a7e-827e-129489db05f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c2b28e-e329-480d-bde7-5c7162b35a3a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4610810b-c72b-4359-b9ea-2b94250bfb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cdb4bf7-b58f-4f87-8721-04e862f209dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd1c53-f382-42bf-a875-4cb8730f2354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18b21e07-d8c1-4996-ab18-fc28deacb764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414db3a6-8e93-403c-a3fc-a446ac84c26c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45bc50e-bd8d-4c9f-97ce-251453edc601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9dff6c-edca-4fdc-82d0-c6e0ef72de2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1268e64-8584-41fd-a066-32794106f0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d3b55d-a7d3-4392-908a-0e6ecc521c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4438a1eb-67ed-4214-bad9-f66080b760c7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e538b09-93bf-4144-be4f-f5fb94b1d132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf2dc88-9673-48d7-bb34-446e326367a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be46d1b-144b-43c1-8d66-9bd5668f706e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5173676-2673-4fae-a5e8-20a94e2e5d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5401f3-749e-43d1-ae28-747d165885db",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f222bf-2d5c-45a6-ac7a-7b969158c143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e80d740-2668-47e6-aeda-84acc177166c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58aa1eb-c5d0-4211-aced-c8d36b550d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31392a49-8b95-4842-bcc4-8192988df218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c3f43e-60d8-4f8d-9a9f-141bfe7ac25b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64d248e-3080-4908-bdc4-effb32885dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc03436-d599-4064-a475-9d5f32ce521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c096d47-cfb7-48ad-abf9-4f167840f50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1bea08-1003-49b7-ba8a-b541e1767e9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20d5517-2048-4817-b398-5aed42cee59e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b7cc3c-076d-472d-a0ed-f26c91208ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3a9e24-2e48-4019-9e19-250bbdf91d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ee3810-f658-40fd-a9a2-a3b680b082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be3492a2-37c0-4034-a98d-bf97da686578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ca1c1c-bbf6-4391-bfde-616140a08bcd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f837675-5a53-4dfb-989c-2da4bad90c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7a6973-6069-407e-a29e-01dbf7986c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477bce6b-6ce6-4fd9-aaa4-a89473247f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41149b27-1f6e-4d86-90a0-fa42fb4e438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0656bec-99ab-4491-8825-bf33eee5e878",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e32f54-ec75-422d-8c1b-78cb31b9e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5486e5-0f8a-4e89-87eb-15030f7719bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451a3f11-842e-44e0-bbd5-8c3acf3b49e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "76d79d07-40ab-4880-9ccb-168aaf1a7ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962c7ace-6a27-4778-869a-5664fc2f56e6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d9b6e9-fd10-4cb0-83d2-3d7b0991b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d74e07-56a5-4a38-ad61-98b8873ed821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5478bc66-fd16-4c10-ac75-3a7178bed04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac7157e-80c2-4bf0-a7f2-8a352ba95f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192228f6-687b-460d-a701-ff46bf77639f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0091bc8e-62bc-4424-b4d6-b99ddbdcd6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3014e84a-55d1-4666-ada7-cc1768e05b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a04611c-6d38-4173-bf91-2f621f1db707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42ef17a-0751-4694-af1f-98d1ac290e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b1f7c4-fa5b-4864-a6ec-3de0a24085da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebbfe53-ee9c-402f-9ebe-9c97ea4ce652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4514f2b3-59f2-4308-9f32-ff0c53899755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187f609e-e832-493f-9f6b-566ffee169d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c359f74a-ad49-49c6-8cd8-72e95fae6eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c044d7e-4222-4992-a479-b699c8c483d4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd20020b-08b1-4a05-a548-25caeda00006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86439aa4-5108-4b22-8626-9618f4579ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6128eba3-446b-460e-8d40-fe0cba274b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68740226-137b-4666-a398-7aad46d8d159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca37fb4-801c-4bcf-8d17-1ad50ca49375",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6cde7f-efca-40ec-a57c-6ca7d6505cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c4fb57-d51a-4795-8df7-e0c373cffabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a817d6a-14f8-4304-9740-e40c2a1f1a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b846fb4-1d89-44cf-ab1a-d30ed2bbca29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ce07a0-f591-416b-bdb0-f842fbf9766c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0a7b48-4d88-4652-a4d2-29436d9b9a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f696df12-5ebd-48ac-9cd6-9f3e31fbfa4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadfabd6-770d-4367-a344-7097317bfb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8ffcb815-8605-4c6c-b2a4-8fc09f545935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f68a16b-9489-4010-9481-e2e3c60c3fa9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234bdf7c-0733-47e5-af4c-4b13b632abb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96cbda2b-c2c6-41ec-a109-e026fa764ca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acc91be-6ce1-4f48-a32f-abbecd3c95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c022731-34f7-4585-91b3-ca7e8c60c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafda69b-83ae-4289-9964-940e7d854406",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95adf72-9fb4-411b-9e7e-e7eba6c1b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2b6823-977a-4cc5-9777-b027b0f8747c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d194aae-a408-454e-a0c7-a90104c2fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4171fe11-dd30-42d7-aa42-6abef7503100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704249f-4e91-45ec-b2a3-389b3cbf8753",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e91624-e6f7-4da2-b614-c4c2a991f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0eecad-38a2-45e4-af36-846a43df34db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92fd725-bd37-41a8-8ad5-afbd1a622d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ed7c10-c1cc-4191-a089-e322248c9308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2fad7c-7543-4d5e-b927-d1befe2ea619",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a72c91-273c-4dfe-874d-78ff50b673b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382c2eec-e216-40e7-a2ee-74876b50d59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02462316-2a47-4cdb-afca-be7cc557deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36286834-8259-47bf-9839-16b9d60a5a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716c1ccd-78d9-46d1-9d18-89e1a892a2f4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a25570e-e633-41f6-a204-ec9450c6ca9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5dee523-0372-452c-90a6-60e2f0297cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f1e340-0118-4145-86f5-206ee8f2c05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91dd019a-f7ce-47dd-8e01-a75ee0952435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137538bc-5fee-4591-9630-b61557162f11",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a044f46-c566-4cc7-b4b2-16517133afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e930c8-d3fb-43b1-8a28-19e74def9a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc8cfed-512b-4442-9f47-96c999672d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d975e0ff-2a9b-4d31-a596-60668357da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1580cd-1733-4321-89f7-d4639aea5cb6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6727db-897a-41a4-9541-e7d422781016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54475f6-3c86-424d-8fda-1d078a582a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671edc0d-f567-48ec-ac6c-9e02a82b2077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e62054f8-ddce-47b0-be75-9d842885b049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594f5684-caf7-4044-a097-74c14726bae3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4395539-7f32-4bbd-a7cf-a8273814159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa4d869-3046-442a-9bc1-1f7497f24a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efef9f4-f286-44f2-9e49-0527c240c936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e384cb93-d7ff-4145-a22d-618695f6f842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54db1b3-fe22-42be-a12d-6293388a1c4f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48403658-5965-48a6-86f0-c916e856ded6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057ddf55-a888-43af-bc89-8ab0d5c6ff48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763b2d33-086c-4858-a7b9-019724d914ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3faa59cf-7618-43c7-9814-8f2330a4dea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553eae1a-d55c-446b-8eca-94d9cedf29cf",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d815ec7-40a2-458a-80a2-3ddd9014bda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c7d5db-09e2-4f5c-8697-845aecb4fc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9910f3d-4892-4a67-b86d-eca547284c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a22d6b30-b7b6-441f-bb68-1662b1105bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4141b-b5c0-4a63-a2e1-959fa2fc473b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c8f0b0-4002-40cd-8b45-5ef5373a8e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253316e0-dc0d-4a8d-b56a-a4c83fb630b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dfb707-f99e-48e3-b96b-08e163df55cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67f261f0-4be6-4cf1-a5bd-268d8b84ea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef272a6-638d-46e7-ac0a-83696077e44e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a963fa5-3448-4042-877f-76d86d117945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338839f3-8de0-4533-8c29-6ad6bcc667cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3384c46e-00f1-4175-b852-f133a38d4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee08108-03f0-41f4-9a7c-f61e21611ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2080bb64-43be-4bb1-85a9-1f81ab65a67e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69657200-6aa6-4914-89a2-5cbaa1d0a082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2805b9dd-87da-4b32-b85a-aee07b59eb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3eb104-dc82-4a02-b00a-abbca53892ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "068651c7-1f11-4b7f-8709-47f37bc238fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627c1c61-b477-41eb-95ad-13d77cbf41b3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca9dcc6-2b53-481d-a5e2-1d3efbd392e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8928ed2-7ab9-4486-ba19-687a814705c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d32655-518f-4538-9e6e-05b7ef748d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "884e801b-a6db-473b-bf42-2dbc5278a117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2f1564-4de3-4016-a630-16382c68719c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7637903-ff5d-4988-915f-b722ea46e594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff09931e-8685-4ff0-ab06-56909cfde980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35395e-fab9-4221-8c35-0e469a4c7c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2a81839-7bec-447b-b07d-e43e2f280830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050aab34-2640-4285-869c-395ff46cbf7c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a96ea1-3f1b-4fbf-83fc-73fce4d1db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d153b8-e544-45f2-bf79-1a71a825c79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f3a17c-f84a-4c76-be7a-463461391ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef745cfc-d008-4a8a-865f-e8f39b9cb7e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a682cf4-5b43-454f-82f2-f0413f04edeb",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122b9b5e-3836-47eb-85fd-03c9bb642384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f068bd-945e-4864-84cb-128da20028bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a927cf3a-77c7-46b3-80a8-cee8ead893fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e25ae907-44ed-4b2e-8d96-194d8694a068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5153e71-073f-461b-bbe2-bf423f0b433e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044ff805-b758-420b-b299-7269fea46880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74c1bc5-cb81-44d4-881e-4d71f04e0436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6566be-7b5d-40c2-8c7a-bc161ae7ea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99b8a0c-6233-490c-8456-a992b6ceac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fdd4d4-d6f5-4ad2-a96f-cec5e5bcccb0",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3311408f-1ee3-4b50-bd20-cba38362e163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11590e8b-bb26-4b77-ae5c-4ca0e6f5bb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e89a40-f13f-45b9-b7c7-7f01d33a7466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2628587b-5889-4dfd-9d67-ac13d56486f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fe94e1-3fec-4ae0-a400-d60f555d8ef8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95816a36-7a95-43d5-919f-0a558344f008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75637373-8fe3-4a07-853b-9dbe2869f61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756c604c-69c1-4c7e-bf76-a002a2858e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a784baef-ed00-4f1b-8365-b490b8643469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e5bd8a-b7cc-4461-9bed-1394387c1d2c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33603079-1336-4cfb-9753-f6abd3830d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd59744-f211-462e-af31-c3cd906a9e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fef338-75df-4966-b2ec-a7fbb57cb37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0f3a1a-4a92-4330-9104-9815760177ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa48b85-fb4b-4742-9b96-70746ac0cbdc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2521f4d-d178-4fa4-8dbb-9e7f15205e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1c7cdc-e41f-4ea4-a76e-67a8edb3359e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d46dff-c136-463d-9fd2-c79de30b423e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "78d6d5fa-6381-49e7-af25-cfd9a6337733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce838b7a-67ac-4ae5-8d25-ef37a873ef29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab985a-7aa1-48d4-9cae-2624346b2729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3af4d40-75da-4826-a97e-d4d6afd1a891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea18247-b199-4423-9aa6-db1881560251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1f7469-ad7b-403d-a576-e28f9d5a596c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde19424-0bf6-4104-a71e-1afd9949d86d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4696bc-faf0-4bf5-9e09-0429094604f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262ed19e-9dd6-42cf-af29-7095294c830a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95717882-a355-4542-93bf-c946cde224c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "adcef04f-0452-456d-864c-9b818e89ff28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab1240-d4b5-461a-9a51-f37778f0608b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61cefd65-a57d-4db9-8db9-c261a44deed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45500310-73c6-4f75-9919-d2745b7cc17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f866011-407c-4040-908c-017105513c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "427d53e5-83b1-46f4-af39-50f4d6301089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23363766-8ad9-4d19-9840-b7f80774060e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7363027-e5ef-4b38-9713-81a771a62a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9750dd2-7f3e-480b-81b8-32c6a268607e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7f8afb-e9c1-43d5-acaf-ab94a5619a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "df8a3340-b0bb-4068-aeb4-1a14b83fa478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b9b7fd-6d25-4b97-9d62-1e4c8a1459ae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6128496b-59f7-4715-893e-b2f92b3b5641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a9e9f1-5e7b-4197-bf4c-20855c373ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d812b8fd-5a36-4d31-bd16-c3c1a96d1025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "059a2d38-7c19-467c-85e4-ca55e4ce6172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721b2c2a-769d-4370-a4d4-9795733bcbbd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e99e216-cc2e-4e3b-a069-90b7165bccf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efc25b8-04c4-4d68-8b33-2afee791b1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48670ab2-64f5-400a-9af8-3b45d9af13f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcac1019-39d9-4360-8145-9f86792f26b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f034aade-28ce-4fa6-87c6-2ced647f0fa0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee62b4f-7b4a-4576-af6d-f89e8e39be31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3ec697-e4ed-4c35-a16f-158e052e2fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c0085d-9ad4-4348-b9ea-295ada3d22e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "752976f5-2fc6-4e5c-9bbb-a8a952576d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dda8e8-8516-44ed-a718-1e582c172734",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f6b7e8-655c-4fe5-8f4f-c7d41859218e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c749604-d840-442b-b9c9-7246e34da808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d815165-3894-439b-a29e-c64825c11951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dea15d3-c0bd-4b20-820d-f7ab6e747693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cceeeed-5bd0-4e79-8a31-1709c88d37fd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8d7be3-6a90-4783-beaf-3fbfa2ec589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da38be86-b61b-4a72-b882-80ab584fcf42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf7aa1b-3dec-4f4c-bd27-8a2c89aad1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2415e316-5f72-43fc-9c4f-38c3dc941d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9632ccd-f558-417d-94be-2a9039f27bf9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8688251d-6ec1-4c18-995e-72a0d90a8ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4c710f-b337-45b5-8807-858f49cfecd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1709cb-154d-4978-a264-b9e87803619f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "775e3129-fb8f-49c6-916e-3e9ed4309bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287c2404-e48b-4189-b9f9-322d0cc844a6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a67829-dc4e-4ead-b6de-90e1372a1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29f5097-8737-4f1b-a69e-78182cbd7c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0ccc5d-2aba-4392-92e1-a159023eb68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "719075c2-316b-4e69-8da2-a030c3f7bba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3753a6dc-0ca4-48d0-acdb-c549d9687cf8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdcd4b7-8b27-479b-87f1-c081cdb129c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a381ea-c792-4a49-b4f4-101e0b905941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44014e20-540a-4e9d-971d-5a8d04a61c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9aa6074-3565-48cc-a1d0-848147d7899d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a09b080-d3bf-4418-9a9a-98d629ec3531",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47008d9-122e-401d-83c7-298a9711abec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abe5322-98f1-4194-b88d-efb83217498b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd9c97-5299-43b8-b311-35c15c59c5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b36f63-d9c6-44de-810d-3eb1746f9837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e51601-4053-41cb-ad84-9529fa903c0c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adcc833-f3d3-44d9-81a1-b24a43d94a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3e715b-21a4-4789-9317-bf05c292abc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258d123d-aff4-4662-b528-0a577b3e8806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1001807-ba4b-42e9-890d-53fd440c610b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308f00c9-7578-4b54-b60e-60b9e65321fc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a55e79-8435-4419-a9bc-9eaca5cf7604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27502a63-72dd-4d1e-b87e-8532d8884006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050d291a-7868-47bd-9dfa-a6f7d4f606c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06ab247-0696-4962-887f-268cb77802ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e27566-8fc2-4778-9c8c-eb7fd2013b51",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4581b212-0af6-48a7-9037-f1d9c64b42d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b1220d-c17c-4e2c-82ce-f49427d89bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1380ffc0-1c62-46fe-9464-85b54d51fc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "044bc89a-1c86-4c63-9718-805c7a511746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf891c92-9fe8-4953-ba34-8e67f7d04ff1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3e4786-b333-4b16-a04f-5ea577372d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dca2cb-257a-46b1-ae60-7ba2153bd0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0817dab-9b95-465e-a2da-92b23d5e1a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a28ef19-75d1-438c-b0c8-7b1a2552d000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fca71a-4b2c-44c9-869e-ce4c7006acbe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ed41d7-751a-4de1-9f7a-eebe55627666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d634a1-fd88-4214-82e8-a4a33094ddbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d175d8-cbe9-49e7-bf00-2dfe19bd05ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf660ce-79d5-4a06-8e65-1c3c342706ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8156e97-5158-430a-873f-511e254f0842",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b27cd97-5626-4215-8f05-4c1bd5a8c7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589f8655-24fb-4472-9c11-b99b9140fc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a587f47-f640-47ad-9891-5fdbbce44de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5943cdc-f063-481e-ae3c-d8857d0117d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46600e28-d023-4a25-b068-657d386d7624",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b35861a-e3f8-4391-a8cf-88553901bcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ab174d-9e2a-4729-b443-d8e979304152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2937d12-4a0a-4d38-aa8f-1fbeb61f5c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14071b8b-42ed-4966-944e-0440f0cbf928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75f765b-7f1d-414c-8e40-1e9bb3a90376",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20aad67f-42a7-48d7-80f8-cfbe281f6c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7a00df-1aa5-4749-aacd-a1837056b0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1407a30a-0cae-4074-9467-b5d68a4c1e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d65a157-0f78-4fe0-a243-33f9f76273df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5de17f1-c195-493c-9f08-cd095d99e0cc",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7873aa75-d081-4872-8283-7cba19beadfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb15160c-46c8-4db3-86ae-07d3b0fd6891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a65e72-c17e-4c06-965f-54186c0a894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12f4843f-719b-4e06-8304-86c472ec30a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7b3c79-9115-4cec-b656-18690e718aea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fac0b2c-94bb-4687-b791-98df32b2bfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1565f3a1-509f-429f-8cad-04c0ebaf4ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223b427a-6828-4c5d-849b-07e0fbaea3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43d21da2-1063-4d8b-b4e8-fe55c93c3950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8493c481-3fc8-4421-b6a6-54ec26fe6590",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2b54f1-1643-4bf1-b3f9-a37b62b6a319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f6ea06e-b939-4a3c-980f-6931f8848c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c287a003-7b82-4e37-bfe4-0d88676d85c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a142d45-d9e8-4aec-8884-ac853d514079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f62f139-4b59-4747-9ecd-e933084a4a5b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636baea6-e643-48c3-b67a-ea5a15381005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d64ee3b-9d95-4f58-8314-ba86c1d5fb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19864aa-fa65-4a5a-a8a4-0338f4521161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f11759ff-5e63-4b1c-82a6-5dbd72330f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a45476e-cece-47e9-9127-dc83ec67c705",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17835177-e085-4e5d-a1ed-22c11b66811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007e7438-288b-4d6e-adbb-b6444b5264e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521d42f6-55d0-4c0d-94bc-049b0a53c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d977f59c-357d-4aa5-ae36-4b30edeee791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c992637-991f-4134-8286-446c3c344554",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626935a9-9a29-45b4-b183-4c6dd4955d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639c7f5c-35b2-49bb-b768-800f2a57183d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36761a7c-7c42-4aba-bea6-1a33895ec17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b590de-efec-4f59-b559-424a9ccd0de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3174ffc1-565e-4750-a82b-35843f5a5c7d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1316995-d8a4-4c98-80f7-bf570166524f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "014cf198-d2af-418a-9c6a-e70396b5b183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718a9764-003d-4450-a219-1c8d45939841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2009098a-eaab-4a83-9d8c-b87f13a03672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c184aa-c38e-4e68-a205-844a075a7bd6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ed063d-2812-4be1-aa6d-9a000b8f8eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1b1be9-5e14-4aac-8c26-495a26b027d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c559175-5e81-4e9b-b9d9-2b72b4dd72ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e0c7d48-0654-4d9c-b57f-87b2e270d1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a7c2ae-1f72-4de4-9701-5d93c02adddd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f824cd5b-13d9-43ed-9f0c-c04a564262b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1945140-cac6-4e67-acdd-d78c97602514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc519686-9ba5-4621-bbf0-70f156ac3153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "011760f5-4a95-41bd-93be-5e7c6cdec042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab02c96-aff5-43b0-91ab-66708d1392be",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae3baed-6371-42ec-9470-042b8ebcd3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f3aa91-8440-42c5-b742-8d46c3689f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b4ce8d-21b4-42e4-a6a0-8fe04cf91aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5268474f-29c9-41f8-9530-3659c1ce3e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee4f09b-fd9f-43dd-8032-113ba3f9b0af",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842bee58-13ef-4a89-8262-f22661b7df72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d072edc9-be55-4a71-98c5-f8d63f4d5a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22842781-3b1c-43e0-aaeb-15af8abbaef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3bd9c4-d041-419b-b147-189468c13a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c9b26c-6369-4f94-8bc0-0c3bffb210db",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a4212f-5eec-47d8-a88b-b5785d99804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5dfe9a-8432-412d-8832-04c3ccae6ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f79d3b-5472-4547-9a03-6af9a9ae8a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "584b949b-8e94-4eaa-9146-1669cccb7fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddda5ed-e941-439f-9070-480ce4c45bc0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fcbeb0-c111-453e-9f8a-34948f5d3438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2701f5-97d0-42ac-87ee-c3987e7ac5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee849df-da80-4eec-bf80-5aeda8906d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5d7c1d-ace5-481e-8275-74aea6ffa0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c373890d-b7c6-418a-9d72-f7f9655b23af",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03d02f-d9a3-47e8-8b53-e1e8a7723170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "60277a03-95d3-49fb-903d-d50ce52c1bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30a98e1-ce95-4747-8b2c-83e20993b2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "457c6316-6620-4be1-a6ca-fb9ceaddb392"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2fe6cf9-7b42-4889-93c9-90748655892c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf8810a-8c70-45da-9978-2aa7737c347d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9efe39-74bd-4429-9da9-bacf43ec4fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d91aa784-3a14-4a15-a795-3d48df45bebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac88562f-e504-4fb4-a0dd-2675e1a29ddb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88cfa175-c10e-4fc9-b10b-82ba5b255c41"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4771714-1b55-4057-b5c0-4fc8809d8c67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "510d3aba-ae72-4217-b237-f690cff8a422"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "137c3ec7-202a-46bc-8db3-f68fa3190718",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c8e2094-1f89-4225-b33d-963173464056"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4e0c0a1f-af0b-4c03-bee1-1fee25bc2620",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8746ee4c-2731-4a9c-a2e9-f02d666555dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b34fa634-1286-4905-a5a2-6064d208b0df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d5cef15-5749-44ce-93b4-40266c963b9e"
                }
              }
            ]
          },
          {
            "id": "e1ac0d41-84ee-4bb8-80b6-65a2bb1c75bf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "57b9d753-45fc-4846-9add-ade4fa13df00",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4ae118d-bcfa-442b-8271-dcd013e16b1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64c1e031-d19a-4fe5-adf3-798b96afcca5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f68f2fc-7275-4fb4-84a2-be9f0d35403d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e007849b-d62e-4335-9805-48c1e97353b2"
                    }
                  }
                ]
              },
              {
                "id": "f2bdc1a2-7b35-4391-8fb2-cc87de0579a2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fe1dec6-8494-4a31-865e-538c981b1032",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d75be7f-54ac-459c-8a27-1a939c5e180a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "693711f6-9a14-4ff1-8a19-27be51529d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "019546e5-ec05-4634-8863-4d8c2522f114"
                    }
                  }
                ]
              },
              {
                "id": "482abccd-8497-4f36-a583-c3cb7974adbb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "306e5e53-fca7-4955-bbd5-75394d137208",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fe15d24-dcb6-4704-8717-c92287ce30cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0d9f638-ed82-4f13-8aac-d24bac035a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "41e7762e-2963-4982-b1d3-fe4921021247"
                    }
                  }
                ]
              },
              {
                "id": "36695948-491d-4225-9832-5bff5ac98398",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fbc4055-d932-4868-9045-fdf9b7e7c102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92a9a49f-b68f-4ca2-a373-c99c80364c18"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a72c8849-48a4-404d-86db-b72a79c49148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c372ee89-0492-41de-b86d-1bddcc601f5a"
                    }
                  }
                ]
              },
              {
                "id": "15710f5e-ff1a-478c-b864-0d8ea4ab0cbc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6c4bb14-7aa4-4d05-94e1-60bab2b5bb3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d05102c-8f78-4fb0-9f65-138816118af4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7df0b714-3ce9-4835-b7d3-556e5cf08b83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6782e597-37e6-4fa5-94c9-5617432825bf"
                    }
                  }
                ]
              },
              {
                "id": "ea875fb1-e1ca-450e-a686-70432ec9ec49",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a90e3a7-49c6-42f2-98dd-4eeb7f243c34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2aa59a1-c66a-4219-89c3-e62b5c28ae7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94244517-5a1a-43f4-90ad-14ebcc610b08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "579e48a9-9aec-4ed5-84f7-8d16866d30c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "979f7b6e-daff-4cd4-af5a-e6d63880fd1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0b136b0-e148-48e5-8ec3-d6a81bde6712"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0afe0671-46b0-4f5f-a3d2-764a21328b59",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dae48922-f972-4c77-9f97-8e0843cb6c21"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90d2a2c9-2ac6-44fb-9c1d-3c3b9e8ce424",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0e8018d2-6d9e-437d-8ef4-ef7f08a367a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e257e661-f018-4a96-b7f2-0dd3bbd4b3b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09038793-724b-48a3-8acd-c7ab05df9ed2"
            }
          }
        ]
      },
      {
        "id": "fa7577a3-4dcf-42ef-955b-f65b9fce81e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d83ae2e8-faff-4f90-ab74-fae7ea3d2b02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f215f1d3-cf69-4e9c-a96f-83d0cab05569",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4dd5ee8e-4e60-4cfb-a462-9f9f75693b50",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e7c465-fe59-4b1c-a9dc-fb66ff292f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1368067a-5fc3-4887-a7e7-af80cac621a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c52a565-7b3d-4c67-bd9b-16aa7d55e67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf60e3f-1054-484c-8d29-e5d927214f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e21e8f-a289-45ce-984e-70d2379022be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e411fdf1-668a-4ee8-88e5-78be2ad350e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbbda2a-1198-4c20-be12-673543c57b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c674f2d9-c89d-4523-b6f6-5718238caee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ffb6c3-b99d-40ae-91ad-4d807d6878de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92345565-9340-471a-8fb4-87d32202a717",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9591a928-17f4-4ba6-a9b2-2d28c47ba395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003fa78d-b5a8-47e1-a245-5e93a29098aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5387c4f-ddd0-4470-ba75-aacfa72e014e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dac33d42-fc68-4d5f-aceb-d1bb41bac67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a55142-a623-4a58-b76e-82c66d12539e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4c25fd-5721-4718-bb25-65a9484b711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c507d6-8960-4d9f-8369-ff122c7b2694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c24a7c4-5773-48a6-b287-83f8f21e295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5faa9376-d90c-48b7-a622-0d547ea78f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578cc340-8bdb-4550-ac7d-e7d36f436db7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957045f7-d34f-4147-9cad-41bb57798b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9331edcc-893c-41e2-9571-4f6617ad25be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737bf3b3-f27b-4cd2-adbf-b8de0c4c65fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ea6ab6-60e5-49b9-95aa-39f54f487011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9054310c-41a5-4a52-837f-2d92f3ea8494",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d22633-54a9-47e0-8130-9c1440af78ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db58d6c1-ce01-43ee-9511-0e8165c9971d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ad9f7-0fa8-4123-9646-37f7e8aacdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71e3c61d-174f-4397-b288-60870f447b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be032b2e-3c46-4843-a064-f3b3f5cdfbe8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406c73c2-cb8c-4d98-bcc3-7dcc8c759717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c1940c-f20f-4600-8b51-b9eec4b70b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88da7773-9e46-4921-8dbc-504bd0e17737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f11f6a71-dc5d-4c5c-9ca0-9e777e25bf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149f385-e26f-4030-9e22-67310d874f84",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbf6fd8-5bfd-4d8a-860e-36bbc6e71e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17eebaa2-84d1-4786-90b5-d9d046521763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d48a57-a670-4977-a3dc-82399e932ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7739bf3-ab1b-4c45-a628-f3cc4d9aae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8c4ef5-88df-4c38-a85e-1ecf583d7a34",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca2c148-4ea2-4da2-9e5c-6c4e84709ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13db9aa0-e44e-496d-b8c1-08ac8ff684b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba35eb4-e8fb-4110-b18c-f57f042438fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5a2a41-a76a-4c46-a95a-03da9be37ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6037e57-05f0-427a-ae43-08eb94b0e705",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba3f3a4-a12f-4236-9590-6859db238897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5961b08f-e78f-45a1-9d8a-779d1d38dd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e450d64b-90c2-4ae4-832b-009b2986efbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee35bfa-140f-4d63-83e9-c41d9399b533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458df883-6f5f-48b5-918b-5c310c653abe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "708fa364-c17f-49ef-a50e-bbbe521513d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e837508e-1ec0-4780-9f75-56be25236b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe62a91-cb04-4d24-93f3-134715504d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf856f8-39ac-4317-8f86-b45b76b1f5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474fb2f0-221c-4115-ad91-c3c9b000ba63",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5c3b88-7c24-47e9-afcb-1bb49ab2ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0564fba4-60c5-47dc-8951-409163df93f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0936841b-6226-4c35-b32b-e88558090f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3676a4-0f1a-4299-bdaa-c4e524705e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705d26ab-6b24-4e9e-ad75-51dd24d28dd1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027466a6-ee63-4f73-b74d-f1611f4d5b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2848d575-999e-49cd-a0e1-cc8ddddb92ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482edcd8-d6b2-4853-96ba-b8b7a8b5af19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c39fdfb3-cbb2-420e-9c27-48c278ca52ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811f33f7-dab0-429f-ba1a-d62418cf559f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "278e37d0-c49c-4ada-babf-503522a5e17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c41749-0b95-4fb4-99d7-1bbd4c3a4fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220e5d56-1c78-406e-b528-6f301dd15b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9231d017-6b96-4f61-a6b6-e040d502d9bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1cd8a6-de62-4116-8844-6fa9e0c85576",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29c3020-7927-4de3-a329-db1033a0d505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2232ef0-70e5-41d0-8d6f-2bb3a43df4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13aaa80-b1e8-492d-9f42-01ed9e7ca2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "717f8d32-5c95-4018-9b52-92372e7e89ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf213cce-1f72-4c7a-9d78-60f8c94a518e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7b5785-3343-42b9-92c5-6ead9b3e187f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5c29c4-88c0-4db4-96fd-b5535d3ae340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5099cd5-6d97-4e35-af68-6dec43f625d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "87c5f4e3-6258-4a87-86ac-bb40b76eeb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9138bc52-d478-4838-b976-32c9e8719d1e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aeaa08b-c6a2-485f-9787-c1d66ff2b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8194d0b-889c-43b2-940c-9152bec60036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98434dab-00f5-4510-a30c-8f57eaab1a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce19150d-a160-48a6-bf7d-ba3ac59f7594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f294597-12c1-4eb6-94f6-01a0c0e90c34",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93b3119-6bd0-466a-b54b-d71d642512bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fa3892-60c3-44d6-99c1-41dfd5f6062e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe154ef-540d-4e2a-b5df-490fb129a40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20049c63-ede8-4cdc-8f55-f60c671d85d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba8febb-6a90-4aec-9597-89d41d2ec264",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adcf26b6-f247-4a5d-aa2d-39458bb7d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d5b99ad-bf20-43fe-afdc-49750735e942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d26541-e797-4095-ac6e-d8ab0b926b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e0ccacb-415b-45aa-b37e-8e9388d0ea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134beff6-a272-4683-bf7b-d18c5a72583e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a9ad72-ff70-4096-ad0f-ba7da8d63456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e92f8a-97a6-47a2-9df6-00dbfd150344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004464d2-e1da-4958-b948-c185371592f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0863afac-e7aa-4f6a-8f8a-bc57fd510fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a84314-2d62-4afb-a43a-3e4ae3346f32",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbef73f-1385-426e-9432-21aa857948ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8893bac-1a12-4f77-a2cf-f243b63dc800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1cbc01-07ff-44a5-b3be-1a3c1e9f0661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bb666cd-15ca-49d0-9144-cfc4eccf8806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca9d8ef-8c7e-44c2-8b60-2f542fe200d5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665a4942-96e9-46e3-8e72-609759ee2a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb013739-a000-44f0-81c9-1cca6dd23076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9211c7-07a4-4989-be49-08839996fd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68ec803-f6ba-4c83-b5c8-1c85f6f97466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05aa6f9-f93f-40d6-a2b5-3a257faa9f87",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50adb1d9-0b7c-4472-b08f-5c695fdf6ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a1e0a3-1f67-4dfe-a045-aa9aac157750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6131d5fa-2df0-4894-91a0-d2a50bcc7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8fbbfe-4b38-40bb-b94e-dc1ab174d48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e863f949-3708-4151-bca3-89b205c35f99",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e68acd-1553-4d29-92f7-f0511c8504a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23b6a56-0d53-4b90-bcbc-307e38562b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e51182-c51c-4e93-b6f8-3256acbdf182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6521c22e-5aea-46b4-b1ef-c2aaaba13500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b702a0-9bb8-41c1-9758-3b59015aeb22",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3cb970-6516-43f1-915d-bf306b2fc1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b952c00-9b0d-4a9a-a3e2-acbf31e0cfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11048743-f9e6-4c62-b6f6-a2436ded1d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99aff4d-7ee1-456a-acfa-7e3abee7c2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dddeb95-6718-4d19-845b-c074cd474192",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37d2ba9-f5b0-43fe-9f62-a5a226f25a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763ad4ab-7c78-438d-be94-ed1d74dc839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ba1f1-a394-4630-b54c-e3678a785254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01671306-4498-400d-8c74-06e0d1dc8248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b496f3-c435-4fc6-9d88-ee922d308c4b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3779abc-8e97-4f59-b340-5e8cd6dd98ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5648e82-fcb2-4ad7-86d4-d97872477141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace87454-cb62-4e95-9242-abd7338ab6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73c76a4-cb15-47d7-b9b1-5bb1b4a0d4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a552b9ca-77fe-4bd8-a697-b52201b9a24c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf58bf54-4d5f-4611-bc47-a55f0df6bebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2a997a-1192-49a5-8c74-ea05349fce2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce8cebe-0c81-45d4-9369-f9067e62fd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e961b638-830b-4921-b985-af4a9a6a616d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7ee4c1-f373-4ae1-b526-9fbd94b8b0f3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d0c66e-bbc5-4169-8daa-bea42a102111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2026ea-6ed0-483f-8df1-bf866c495c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582e5491-94c1-4622-9a79-5b597abebc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a526dc-d4ed-4708-a3a8-be88433ce57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe5b0c4-a873-44e0-883b-ee6b43aa6064",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a82f76e-d2e0-4c28-ac9b-510a7bdec453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72cfc6e-70e1-43c1-9c58-6553c7b11dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb6aad6-34bc-4645-b12b-01a9827c1525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80131702-4635-4ed9-9847-c2965017e959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a73564f-8f7d-4eaf-99fa-8f91c1a61604",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e114c6a-3df5-436b-93b4-808d79d1bfa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a9abb1e-74df-48cb-ad6b-3f60785ab138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e506b6-f0a8-4f39-a7c4-9f8c3ea10dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c82829-6f7d-4f69-95b0-edcc8f519e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a914fe1-3c86-4dbe-9f7c-081aca9e35ef",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1337908c-e1af-4455-9278-0201049b4a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d08e6a-3053-4082-81f4-12bb835cac4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6df8cb5-22cf-449c-9521-18e972815b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e16c2a4-d3fe-455d-9dab-1c391b73a63f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "af8cf118-8f81-4b00-8aa7-4d9fd2c6f450",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df31ed87-a1e8-4399-9941-aee804bd8569",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2dec9f-425b-40a6-9f54-eaebd9a32ddf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "08407f58-b6f1-4b2c-a6a0-7db6bca4e4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a9cd91-a6f2-4660-a67c-96005bb2688a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31b2c984-87d7-4a1e-9342-a03ef07bfdd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adfe2cca-5c4e-4e10-b4f2-14f9ea7c56f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66db2b8b-0848-46b7-aa8a-0c8028acb47a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "296f2e89-612f-447a-86a1-5a67121f3768",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e161939-8f95-49f9-be65-a96216465aa4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "40662a7b-5867-423b-9586-5e64314b88dd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d45301a1-f90c-4554-9ac3-ec60d1eb00de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "33c4a3f5-980e-4015-8f1b-44051d5f8096",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "613dd70c-942e-44d7-ae9a-65852c239508"
            }
          }
        ]
      },
      {
        "id": "cfd421bc-a8e0-4e9d-87a1-56def2340d63",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b26f5281-db1f-4bdc-818f-948de1e3a908",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ba2a139-8a55-49ce-a5b4-ab13d65a101e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7b3982b3-1e25-43b1-bfd7-c89e88327e5b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f1035c-69ed-4eee-9c7c-ee232e6099bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f704c7-1f6d-4503-9ea3-ae7a24b7c0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd7d0b9-dd1c-4571-ab40-1a102c676d3c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cafd14c-a207-488e-ab25-7fcc6c36f4ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01fbbd5-f24f-4dd1-a04f-afe03c873ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc681ba-4d74-4b27-8844-f05ed418fd36",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1d7116-8898-48a6-8cf5-827640144fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e3b18-daa2-418f-91d5-9af877633bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8841acc-0298-4105-9cf8-9ac3f1ec325b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95bf1759-69d0-43b7-b9b3-09abd7394f52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0577db85-2a54-43e7-a807-da902c171399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c61c616-dd06-4c88-bcc1-7a76220cc6b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27abd1fa-76fa-4e35-8fcc-356e80e2b354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907abe75-8825-4b61-9cf6-691ea4e839dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331dc22-e838-4310-959c-6eda8fccd98d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfae1653-dbde-4af5-971b-deb12afbc112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be04552e-3e61-4208-981d-0e735c41f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732c01c5-0bb2-4bcc-af14-6057f052c9cf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9add9387-34d1-4503-ba8d-28e404cb58cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fea507-88cd-42dd-a7f4-7f210461b117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cf0fe2-5b26-4c26-be29-6748ef92a1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367de5a8-fd7e-4d1d-a634-7b8b9d85e2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87399717-4a2e-43b0-b9de-4f0e72c6b537",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68a37b6-b9c4-4375-9011-6b6319d90bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96408e89-0c02-4c44-99c0-a0c5997ca048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bbbeda-72ae-4871-8f5a-944df983a26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e7d6b8-e403-46bd-a32b-d924a1736140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eae2aa3-dc63-473a-a8a4-3c679cd8c8c0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73aae1d-a92c-4c03-a3da-813bda0bf03a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f93a3459-dd0d-4621-ade7-da16f0a69ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2213b679-9653-4010-9ff5-980693a483a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66224c6-31bc-4fe5-805e-1b644a4bcb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b62bff1-caf4-4eb0-9ed7-96e1ac39ab60",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f325923b-c52b-40f7-afb3-3ea6e9866ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7934ae6-f1d4-4718-8455-b24dd6ac0a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca86bee-a6d6-4245-9932-4bdddf4c3939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92eef07f-361e-4cb2-9ed6-79ced2a84c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e92c80-1df9-46b6-8450-7ac000623d52",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefb3659-f3fd-462d-bf0f-79c7ac250bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86c43e3-dca5-40e7-975c-0469d0cc10e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835506f9-16c8-450c-8188-e6bafc60435d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e8e1e6-e81b-412d-bb3d-fed7f509c008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c64f9bb-3537-4e2f-9181-37f47d3d2f53",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babe3130-39d1-4052-86f3-c37bf0a9bbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de75edf6-f01c-46b7-a463-feca3b74e7c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cc85c3-e8cc-4b6d-b402-e3aff44ab511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049b9af2-fdca-4899-9200-15ec986f7db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d685309-1f69-4b04-b14d-b968b94d73e7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0757b125-9904-44cf-93aa-3fd36c4ff406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d666a527-f36b-4341-ad99-7fb2fe1e9539"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085acdb2-4e73-4102-9978-3fb82cbf717a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ff8e65-6edc-4b9e-926c-158fbdbd0b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e50c832-a8ff-4ca7-a6a7-83b11ceb986a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0ca81-4a22-45b9-8cd1-0583c38aea93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d01d126f-8dce-446b-afd2-f04964e0ab03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8520b-f1ff-4f4b-b028-9036eef7de6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eefc57a-6f47-424d-a3b9-b40bc614b4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64502eaa-4b07-4ca0-9eec-1ece734af15e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad44ee4-aaa1-41f6-a3d0-d411f06544f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037f4c0b-56bc-4b42-af0e-d736b0241050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "995fdc80-7b74-48b0-9268-5fd31cc6f4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de42ddca-1fc2-419c-9a62-bc74baa90e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4757c81-bbf7-449c-b5e0-946c905ad601",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f167c-47d3-4199-abcd-7348d8e78f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08da67a2-b906-46ec-9fc9-a8a4afe7f562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f39126-ec5c-4242-8a34-9d26020d912e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b9ef58-8c1c-4cf5-b0b1-1b01a3c5da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4d4ebf-cc65-4c21-abcc-983dc42c78f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3283e553-9b2d-46c5-bc96-5219f6837bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4582d16-c37e-460f-bfcc-199f635f593b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c03e7ae-00aa-45dc-9885-c0df8ef51166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30591a3c-ab41-4748-b6fd-6355b1edb8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f54e3-f30c-4b44-a1fe-d0f2b90dcd02",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a0cfaf-1374-4f0f-84b6-e4de0d317084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67fa993a-fb04-4474-97ab-fdbd8064fed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae4a404-a222-46d7-aa8e-4619364812d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b674c94-6072-4783-95d3-b88c98e9b739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396be25c-3f47-4dc7-a12d-d10ef31fb4ca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925062c1-5857-4f35-ab20-c66b4e813a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4449a1e8-f4cd-477f-b3dc-c31cd2e2a7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c2ee82-0bd6-46e9-b7db-03c64ad60fff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1bee3be-dbca-42ea-9451-4f9825a948da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca712a1a-ca2f-44d7-851c-e6d27ca06377",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7747242-1587-424f-b769-ea1fd235c825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7babf5f0-838b-40a9-93b4-0f74891fa20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36631efc-d4db-493d-b0c8-b725ae76cc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bc4edf-07ac-4c38-b211-d063332bfa6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3356ddef-6bc1-403c-904c-7a36c1889b2a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ead5125-deec-4327-9e9e-fc1bf88b1e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec313ec-762c-4e0a-8772-8421ce93816c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71400d13-0659-4753-b99f-89c8628016f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91779a9-c397-41c4-8a82-dc8d8176464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dac7e0d-241d-4d97-ab57-491d5626854b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95b4967-f00b-4966-a1e6-15ff0819cd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436a40d2-213a-4e50-93e0-8260140e41af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d17a93-6ecc-4a88-aab2-cd415982a1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5119dbd-e3fe-48c6-80a0-2f1c8aa8f055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0a79d6-8dfd-4722-9415-1a2229687238",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7589e28-0d64-4dd9-ab2d-259fb588baa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae3cf62-f1eb-436c-bc9e-38b64e339cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53bc901-e96c-48b3-bd0c-3bfb47e5a1c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181b3582-8754-4986-8922-23f10196a06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09756bcd-6cf5-4b2a-aff9-f6083f5cc3cc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f20315e-f3f0-41b6-95b1-95796e120ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3641f9-750e-4be7-b1fe-eb957935ebaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89722cc8-bd73-4045-a796-eb1bc8ab6414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f655ca6-6089-40b6-aa69-9504e2ea25ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8a52cc-bde9-4b23-bd56-d44a0648d0a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32459c93-70c0-4b09-a3ee-4ef0d1f1da4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c058af1e-e8d1-405f-9441-3c5215254c38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71884585-499b-4557-a53e-8adfaae4b264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e312f6f0-68dc-494b-bb93-2824047f87f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214918fc-5040-47d3-a984-4f1299cae9f7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d74112b-655d-402a-ae49-02024eeaadd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d877e2-7b06-4aa8-bbd8-fa40ea9df1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c094a9f8-6d86-43db-9f07-bef4dc464f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe3147f-b91b-4a45-85d9-e80b1cb0de8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0860d8-9e71-46b9-a110-39a6fb46486e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a4f78b-f8dc-4d4a-9d6f-ebe8d0be907c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a5e8ce-17ee-448c-83d4-6160d99aad6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273a6a88-78cb-4383-a630-b2f08e0886ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559a2c81-4f1a-4f36-9109-e68dca4d2ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcd5bcb-eb88-4504-80a1-94b095637d35",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac76d7e-52f3-4ce0-956a-b76012698f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "070562e4-c685-4717-988e-6b23b3bf54b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ec6d2-cb22-4991-810c-5e4b1b1f226e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502c10fc-d8c6-480e-bbe2-61dff412b3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ace5ee8-114d-46cd-b26a-c8db19f75c2e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d356eca1-80df-454f-ad9e-85e7f769b092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c47d78-9339-4b1b-b4f2-cd6b9fa79c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dff5e5c-93db-4524-a5f7-54937679eebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222cc9fa-7207-4832-84c9-99e2d8eca95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb7dfed-ce31-4fcf-b717-bff35d7478e3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89148c8e-a2a4-4d30-909a-3b274c19d01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7b95fb-087d-4642-9727-e0099c008224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db04c53-8da3-48d8-8853-62ea6218f1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d179917c-3c7c-47fd-a519-c60043a7b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7b7cdc-2fec-4ab6-8fd5-d3baaa7c3bec",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca31f2c-29b0-4635-bb57-48b7806b6954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "655fa795-dc2f-4407-8f92-d73745df5199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b171ad-112c-4cec-8a66-506d1778a8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6979c8ca-2b06-42b8-a6b8-3b08a7540e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a973b9-dc25-443b-acc5-36434b3acfaf",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ee8bba-cb18-4022-8019-1c4edbbca2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e7abe2-793b-4c00-98ad-d14243cc7130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904cc4bd-4c4e-4574-8ad9-abf63e320462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "708dcdc3-0cdb-4c8a-ba68-48ad448374b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c6461e-8586-4dfe-a27e-d51f2300b620",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c502de1-8b9a-4da6-8a2b-71867145ad63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba61ebf-653c-4378-a051-ad11f98c025b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158a6ce5-540b-4715-9244-f2a066e6a5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ad8e72-8d56-4328-8dc4-295f4df18d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8635ae69-202d-4adf-8d60-ab1527bf6831",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f0cf7b-d8cb-4c9f-84f3-ad1c258baaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1e78bc2-90b8-426b-9907-f964d57fc27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2525077a-1ef5-42f4-8ae3-5e428b73cf86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb987827-46a1-4e65-b991-61393d76a6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004ba4e-c528-4f28-a930-90de6d63b8f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa8fe5e-cd7a-4394-88ad-6b0ab0d9ab87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85e9588-049a-4ad4-afa9-f276420493ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "546bcd1f-7bc3-4337-a7a7-f8b914361b4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2558ef-36ec-45f9-87d4-04920bdd2a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b354c305-d8d1-4b3c-9056-ca348392a597",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0103648b-c82c-4c18-93c4-fba77434ad07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ea514-3215-4be1-a65d-bff5c350101d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a18d44f-e354-4a52-bcf7-eeeefdc19aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f3dd080-d895-4088-b9bc-bc5bf1803ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd22f91d-096b-4175-85f8-57256adb0b77",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c7bfa4-cd86-4933-b050-116ea1dfdc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab321a09-67a5-4d29-b215-f5c77d69f356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513839ad-fbe5-428f-8207-6629c3e45999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706c9f9d-69e7-47da-999a-1b2f25645652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef36b988-4c7a-4ede-9d29-51fc915dee1a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3348eca-1e4b-4439-9cd6-2b49d1fb3726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332721b9-dfdc-4b02-8da2-41ffcd69c4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab6ce19-e9df-4d04-8228-54f6d9140e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08cc60d-35db-426f-a6fe-471088543611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2e963c-33ca-4b8d-8c36-b0060edf1d45",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef78eebe-4ec7-41f9-ba9f-ba575c824890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85cc9ef-b8c5-4e7e-a753-b450fe2a453d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5cbbdf-5ab8-48d3-8fad-d621f0f6210b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fca0b0-d419-45fc-bb48-00eebfbf3209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841e195a-797f-488e-aa1e-a31e4157cb33",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bba20f2-26c0-430e-9214-319d0dea8e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c44bdc-99db-4ae1-9916-655e30fdd298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7894241e-2ab7-4222-97be-0bee32b58e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d8ac1e-8cdd-441e-8b88-3bcc9a274c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab1c775-fe25-4230-af49-f30279eca84d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a55b874-7ca7-41ad-a6c8-136dc798c4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75daad9d-e6dd-4746-931f-cb00142e88dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b440cf4-94d8-43f6-8cd3-0026784c81f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1b2e0c-644b-4770-a692-fb7bf9877821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a1adbc-5da9-498c-b458-50c16dc79f8e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f1ad09-0af0-4eca-ad91-f472038d49c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4909504f-c321-44e5-810c-18fa2de1cb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2c9958-99c0-4ca0-867b-198015cd5cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae7ce4ee-ba0b-40a3-a676-731fbb11bc57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede925cd-bba1-4468-a314-cd2570893bcb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806ad06a-159d-4543-8da0-f3b31db08470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfe3108-e533-449b-8d84-d54d37cce16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb1e4fc-f4ec-489b-a6f8-a489545cd52e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e29ee4a-216d-4a6d-9652-9d06f0139cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14e8d72-0637-4d18-a8cf-f073c6db54ba",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76b585a-18fb-497d-ad21-1d05d354cab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177a273b-56a7-4b53-9e26-462fdb4ddbad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e026ad08-d87d-4fbb-919e-c627c1ce6abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d641af-ea56-48b0-8e85-9108a32e4ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce74eb8-0848-4d86-98bd-0ef9094a0b4a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feff6543-dfba-44ee-9c23-951942a8cc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdc4fbe-8d9b-4184-a65b-867ac33a4a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb106c0-615e-4782-bc5a-254a164a9326",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dfbd40b-6fe7-4a84-bf29-0b381561ccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18996633-38c0-4ee5-82b4-ca8083e666c3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2095aea6-bef0-4252-8f5f-2c13ec595271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845372cf-3f92-49d4-a63e-979667c9d829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c639ef-5c15-4c93-ac51-a85cc911ca80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4c23ef-27d0-40ea-9e78-432d17247b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8323e6d-b808-4173-90bf-8a40cc59594d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a1536e-4058-4b7c-b519-56c36b7e8496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1d8a2e-6ae4-4543-990a-9b04d7ffc00e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b37ca9-f91b-4d61-9d09-334e12db591c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487d3a59-dd65-40c6-8897-96acb3a58bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffa5792-eaa7-4b8b-8b01-ce2da1eea3a0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac0badb-0e34-48f7-8d4c-f0e7c16b6d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d4becc2-b18f-4c5e-ae86-b97eb8b6d167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4496423e-c124-4b23-80cf-9541ed0efa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee376a9-f5da-4cdc-956c-0f506ca0fca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657660a8-595e-4fe0-b93d-251dccb27dc5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b99e0a-c875-4f5d-ad3f-cafdb23af72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fdede65-0c70-4aa1-9bcc-8652688f3ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffbdc56-be87-4db9-a6ff-ff05ed91c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8019b34b-f3a0-4f37-af75-0edfb47ef64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ae2149-4c34-44e0-8871-0af78b17f7b4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d0a619-4651-4882-92fa-e6f3de5b5a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c08882-d58e-466e-8aec-5ee6ebe06e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850c01a9-aaa3-4fe1-b372-bd8db02ab396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f0e0d4-78ef-4db7-978c-fb8bbe9aee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41601822-6646-49e3-b7b8-a5429fb68b6e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab887ad2-6573-4311-b0f6-6a72001b08d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29300144-efee-4e04-88c5-a21b4b0dd5cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e3eedd-2028-40f1-9c2b-c99ca1b22ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e796f2e-79f4-4e8a-b745-6366c60587c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464a4c60-3c28-4d38-9eee-cdcd20f45e7a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23508b43-1e2e-4f23-8740-dbacdab05563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e1294d-bf2b-4160-b154-5f6ca7e82090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5b9b7a-94bf-4617-bb1a-24f6fc27b16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fa5367-648e-4a6d-9764-bc4f4d7aee33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1126942d-021f-4d61-bd47-b64aa9a5fd07",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f811a873-2da1-4c5e-88db-061b5dbccb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a496ba-0c1e-446d-986b-4f3d22f56eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe0a61-a2ff-486c-acec-122fe5ebb002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750ae2ef-0911-4f76-ad29-61c4aeff1f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe11310-2bba-4be2-b48b-5da28fc85a19",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4321f3be-5be6-426d-82cf-07a7657387ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1610d237-1410-490b-956d-42eb37670360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e897d4c-bcd5-488e-a208-508c38db24cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eae86b8-35c5-4979-ae03-671316f006b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685c0b7a-6885-450a-aef3-b686bdd0ea93",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807413e-f592-433a-b4e1-f3d1fae3be4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf6ced8-f1ba-46d8-99bf-cbb6ed3f6473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249ef62d-8902-4bca-a5b6-fa0a48843a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95116b15-9db0-4b70-82c0-af54547722de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0deaa0-2e79-4692-b51e-cb5949e59557",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33ef2eb-ed96-41d2-a73c-633e2d4ac05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd2ec5d-7716-4e3f-99c4-3d997f408eb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a38091c-22ff-4371-a09c-819ed278223d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef962ff7-d6b0-492d-b18d-18d5c242a6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e031aa41-c378-401d-a6b8-d9e9b34c5dc6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64a67e-378e-49c8-bc4f-393f77a71a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496b0ea6-b9ea-45a7-98c8-8fcf5323d174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35636077-95ed-4d87-b982-016c8c8ee523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461f686e-5d57-442b-9e52-0ade6ac9e1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e2a24c-6cfb-4941-9ff7-fbd6d24ed87b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85af27ab-7327-4f56-b8d4-d8b9d2bb8f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf77fe3-babd-4b8b-8f91-468b4d5c1edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189831f7-0c62-46b7-9b36-a32ab4c34167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7f3ca32-da63-438c-ae5d-a72d3940ce20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c575d08c-b512-480c-83bf-969d51a02113",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fede5446-7521-4265-8279-5c6805227d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc31ddb4-c6ad-4bd1-90b5-becaf618f2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b859d57-028c-426a-bf15-54a52f370918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ae1ec6-6d29-4884-8afb-4c3ed25d9b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3c6e2a-7d0c-432f-a811-2975b265b411",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e707d77c-937c-4c44-9d6f-fb9720f9ac88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51fe571-b1c7-47cb-beee-ca32cf4da8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524dda79-4106-496c-986c-ab2633b80e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c9c963-4134-4a91-b0d7-87f0d4bc5295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa82619b-3513-4dc3-887d-32ebba67165d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ee5cd6-d9ae-434a-a297-2f3a1f140c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73876fd5-ff07-440d-a5db-822513ca2ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47cd7ed-a76d-4911-a9de-4791c58c9374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d4cf0-36d8-4e1a-8558-69dc5a3c45c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5107a8-6bfc-4338-b851-2a696d4c3b96",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfc2a75-b7d1-4c5d-9fff-f9f5f420e39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe72d3d1-69b6-45af-901b-753e1c98ffa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3517c7cc-63f2-4ada-b601-81ac312e9b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa9d7e7a-4f42-481e-85ea-f4320349dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb44301-1c0f-403e-b9fa-819bb3d88710",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120c0628-65fb-4128-a9b0-739d4d3883b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982cf953-c459-4432-a25d-fa1f2257894a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d13b9-308e-4177-973e-4251bccbf3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703d538e-239e-45f4-a5b9-9466d30a7622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bff52e6-b0ba-436e-9897-7cec28734dba",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ce3ace-a831-4c21-a380-47445105c2eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fe9836f-e278-4a9e-a613-ad4026ed9b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ca3036-6908-473b-863c-100eedb506bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d937eb7-46af-48fd-941d-8ba808253ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1121fb94-3c6d-4e5f-9399-86b26bf76d3b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509acd8c-0b79-4ae4-8b07-6ebcef3e6fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50aeba27-a99d-43df-a529-b71027e77d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b55e788-aac7-4967-a0cb-6b4352de5c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe6e69c-f32c-4255-a920-c092976f405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4df7694-c048-48a6-a5ff-d3c63a14c253",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63d0baa-a93c-4843-b0c0-190f650ef386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fbf4622-31be-4c9e-9628-d11908cf45cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2bdf2-8827-4d75-8e7d-de2bf22b9e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d9ed1d-af1c-462e-b552-62615d8968a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66253d18-a633-4943-9d03-80742f5a2223",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ec5b4-27db-46d2-839d-3d920e448a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7bfdc5-5b94-4148-aafa-ae9cbfdfc24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93d532a0-cd9c-4c9c-8fa9-183ab508cf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8d492f-219a-4396-acc7-cb289f21383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd27a90a-a814-4393-8f01-e670adaec297",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677e063a-9074-47e6-aa33-8f7b585cf053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d654a12-8f32-4db9-beab-45b3c558b02b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f754844-c50d-4039-83be-bd3a5ef6f320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb67747-3233-454b-b4c2-75361b927807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d17e92-0557-4cb0-af9b-7d46921f6089",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb93d0b-d417-4a16-b03f-3625542bd035",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f62a1bb-d1ab-4e9c-b52f-863cbbafbb0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936ae146-8030-42e7-86c5-a774ab43a9dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29487bde-d409-4ffb-a715-142242d29f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8d7225-b11a-4655-bdb9-5399c6a17502",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c5ab49-a039-4877-88c4-305206539701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3277802f-fe35-40b1-8f1b-3b5904429a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a021fa9a-e621-4f9c-bf3b-a5be6d5f28cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4c6ea93-1066-47ae-b9d6-3976634e9342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a555794-82aa-4a1d-9af0-a904ac528f2c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d025be-511d-4a31-be2f-8cc5d369cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d71126d-2be1-433d-b460-1fed99a4f1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084b22fd-3a17-4a0c-a8bb-989addfc603a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a0f847-25d6-4a15-a72b-943066ab9f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6990f402-82b0-46b3-9380-5ed7845406fb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ee846e-1e73-49ba-813a-5af9da30a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b60753-95bf-444d-a271-f5afdc4e424a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532cc012-8428-4b41-8c36-e0931957b289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f05fc8-c639-43d7-b74d-57ecc402cb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8eb2fbf-1cda-4dbf-8b75-4d17960ea614",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84538d33-08a9-4390-82b6-8f383fc5a301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29135ba-99d2-4aa9-8e07-9ee36a1f00af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462ae637-895f-4ac9-8108-e45ebc117c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685690c4-9147-4ca1-8689-5a1d2a7c0723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8d3c88-c366-4fe8-b349-1b16080431a6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61021538-c013-4172-bc10-385928f73857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43d5ec0-2757-4ffa-bdcc-aefd22c2f78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c8e1d9-aeb2-4afb-b81e-6ddcca073a8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b4ac89-001a-46e1-8e6f-6629c4c31568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86877f29-c941-48c5-9241-0f6b5e7bae8b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c048930-472b-4197-a090-fe6f6ec46eaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998b05dd-5295-440f-812b-4408152bacd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0e6a94-733e-471e-bffd-8294ac329bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31f24c0-1f26-4eaf-8955-ea9fbadb6deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eb42f2-8090-4fa5-967f-2e0caeb881ea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ef7eb3-1b62-4363-958a-70e1f59c68b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3464e866-d0bc-4ddc-a339-101a2e590ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274f3098-0c17-4ca8-b715-9736ed3e1732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0f74dc-d674-44d6-a937-081845a859d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a638072-ae2b-4162-a99c-0de3c8beb4e9",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48332c7-d070-4c53-9c7e-21de18878e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "332ca969-24e2-496e-b08d-bfe40454763f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11122ace-96e4-43b3-b95c-9155d637df4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba273c-4f34-44e7-aec1-1e8e468ea62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485a3860-b4d9-4fc3-ba2b-42a3a99c4cd8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b219022-feb5-414f-9506-fb4675094263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edcefe1e-5f4f-4e10-939c-bb33865d5e4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b87a7d-7f6a-4028-99d9-299fbcd02604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75f4c3b-469a-490e-b562-33d3a9264cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0695a6-58a9-4949-8d08-a5afb1d5f0f4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b778ff3a-4a09-478c-93e9-1048918fc14b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8980f67-07da-403b-b1c4-af77b97e28c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4dc596-e9a0-4d3f-a246-bfc6dbc901d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5661e6c-4374-4fb8-9cad-1a16a072d499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eead0fa1-323c-4099-9d58-83c34e41754c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a39cea0-279c-431e-a71b-6601406b7e93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac67378b-3a3d-46f7-b5fa-c8f573f50ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c03b8-8d8d-40e7-af74-dcd0ad8b02a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9afe671-8714-4712-9b51-03f88313ac80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1814d149-1434-4c6e-9dba-cee9b6a9bd7c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e15b3-4abb-4e75-b888-63b7b65abed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ef41e1-2738-44f2-8800-e86fa2219881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3655ae1-f781-47ec-b925-99a651e50f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c8ef67-14ce-460c-b323-c1843021a976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52cf3c7-0cd6-4f13-80cc-61332fb5ce9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82aaf11e-d7e3-4a7e-8db6-398dfbdadaed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c950cf5-ea82-4c38-8fad-fb13c678d2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c26b61-cda1-4485-8f54-251901e6c998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0332f92-10e5-4b8f-872b-e12d5336548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809d8b82-0162-4934-8156-f0095b10c889",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30847016-4804-49c4-ba5a-6d288343310f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4fd6ed-5b79-4f66-877a-76ce40e186dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3ba25c-cad3-4693-a851-3331de63e14c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3eed13-399e-4f07-ae77-4227e45a5cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a132c3-11b7-4e9e-b07c-cc21a850e3cb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc13c4f-390b-44b0-84c6-d349f499268c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "727932e7-5753-4bce-986c-a5a13d8e7965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbbbff9-cfac-4946-9195-3de287af8214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39fbbc1-ca67-4012-b153-f7a4968095ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87815131-c4c8-45cd-ab95-97ab343522c4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90398ed4-7858-4647-8ebc-849f36fb6478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "079ab335-a8e1-4f5c-8689-5f8d21a39617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17273e42-7b6a-46fd-9518-a248c0746bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f57b74-d983-4802-b24a-04c8c13d781a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c68ed3-fc5b-4b08-8197-87ed919620be",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de98ab8e-bb36-4785-8a66-7ab3be04d740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3fd42a1-f465-44f4-9b27-d738f09e5096"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a70a184-d50f-490c-8e54-13c405f4911e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5783c792-63c0-4a5a-a675-8e6244009f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace1e1bc-7761-448a-8c04-9011d8caa36c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99676b0b-7191-4aa3-8a81-a43990cad7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f4d65e-7208-44f5-943e-ee441be28f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f80162-281c-4726-99d3-4cf03205bac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78c74d0-bcf0-49eb-9853-83881d3ea784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a306feda-a35f-4b59-8b24-d04bc956b04a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0602d9f8-721e-4915-a014-d7f4d382045d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2b6ef89-7ac4-4c40-b327-30eb9aa60076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b456a37-6aba-428b-a578-be7af697b042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d361e404-764c-4ebc-927b-19697ee79a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45726f8-e778-4eae-b634-7a6388c259ef",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32770b47-5727-4ca1-8ea0-1cda392f0b55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f4201e-0713-4756-b120-8dc8f26e2bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a43f78-a03d-4d67-b0ba-22524e1271e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd2e42a1-91fa-492d-aa96-9eece0de9a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65edcc2-871a-4bbf-a814-f8f16cf4dbbe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151580d-5fe9-4d3c-9914-8c147925d6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac617a40-8385-4e13-93a3-89d75139645d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a82e20-3a43-4b38-a271-df357c672f80",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01005012-b882-45ea-a512-c03c86d5a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f40805-750a-40dc-aa9d-90997433f1f8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923e058e-4f93-431e-a905-1cc6920c0774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a0c5c88-7b33-498c-ae1f-81cd878cb16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4eb14b-2520-4274-940a-1f46ef498e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03288a23-b1ed-49d4-8213-3404c1ce0f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f96f67-957b-4460-a38c-2bb8ab05c521",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad74424-8a92-46b2-b7d0-e038d560ad4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2cdb1ec-96ea-4df0-97b3-661061f42e28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee498a31-2d08-4ad8-bc0b-957b51a6bdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c2bfe39-2451-4869-9046-c150ba9f9bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be830129-8307-4e36-ad80-850201d43c5c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99af1aca-4a46-46cf-a154-5b6bedb26a39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d326ee7-52f3-44da-9dbf-24c585776b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662270f5-df99-47aa-8f0a-a99e701fec21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6972cc2-df24-4f1a-b753-dce234628967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f39014e-a17c-4ce8-86f8-7d4b318cb0dd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca25e84-57a3-4a26-a9a0-d5318b657f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5fa7181-542b-4132-aea4-23d9deedf2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb043d7-7b4b-4c9c-93b1-37b1bef9c74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f29d15-7d14-49ce-8c16-976e2541397e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f451066-f14e-4a35-8221-cc6c245e3539",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd632c5f-df23-4298-900a-c4adde29e619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28fff3b1-e400-446e-8de6-208814ef0ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef023e5a-ec67-4c38-99e2-20f97dd94838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285a4e5a-414b-4cd2-80dc-70c706bc00d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f152c77e-5282-4117-a482-8d28374f5e88",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23393e27-13b2-4402-b8a2-53fea51f705c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91eaba9-0aca-4333-9640-7ab8e1d146e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6367ab6-3edc-4b17-8254-8888a38cc392",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a09866-73e0-47a9-971b-d77dfdd66b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c129286-79ab-463a-a7d7-2550e2085b52",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97abc950-0b19-4217-b839-c6e91360794e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6da85f59-632b-4c13-ba13-d36a57ff0759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a644a6cf-479f-47f9-9853-b8f11dbc2b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6960cd69-dc7c-4eee-8135-5a5fa12aa42f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f92c54cb-96e9-4702-b84d-a50bfa213082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31ae7ded-d359-4cf9-80b0-3ea4bf0f188f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e54f0517-c6a7-4bb1-8882-979f5e7f3ee6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "deebba1b-e513-4db3-b66c-d3a08f33a6a2"
                    }
                  }
                ]
              },
              {
                "id": "7e4cead5-16d2-41aa-8d16-0e85e126b666",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "314164db-9b46-4d85-ac47-c6f88cd8d31f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a971fb5-01ff-4141-bbd9-5e7cd62fe8b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3551ccb5-9c5a-43e9-bd2d-8602ae8ce4bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73368c7-bc58-4afa-a3dc-8757a47fd728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "877dc7b7-133d-4df5-83a8-cfee43a20988"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5b2e2e1-2308-4b09-9446-3edac70f1326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d082af5-84b5-4f42-b1e2-4ac032baa797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24f0cb38-197d-43ed-9c7b-873e6e41f80c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4060eaa6-2e09-4cf2-b308-94ff58aac70f"
                    }
                  }
                ]
              },
              {
                "id": "5750a088-cfd7-42cd-abb9-034bf405f5a9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "14d6b25e-7025-4e9c-a8cd-6c43f57dcdd3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e3bf86-98a7-4222-843d-0b67ad14adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0426feba-e9c2-451b-adf0-698e9ae5208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247a1660-c539-4cd2-ae10-e8a19e0cc09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b004c6b3-d320-49b1-b9ae-260d47e59ce5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ef56f75b-42be-4ffc-b68f-14d30ecfd168",
            "name": "Positive Testing",
            "item": [
              {
                "id": "069f59f5-af79-43c8-bad4-08c74ba94d1d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c03ce33-5465-4218-9395-4c2fa431bc5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1b91fed-fbf5-4cf9-8f82-c73d879f8267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e8a1e68-76fe-44b9-ab3c-981448bd7a9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c85a2dfe-ffc4-49c2-a7a1-86c255fd9f77"
                    }
                  }
                ]
              },
              {
                "id": "63d89594-09c3-423b-9582-57fcf79c6e43",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebf2aca0-869d-4cc1-bef6-f7f2987317a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f90be9d-fceb-4464-8d14-332c7b1f3613"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93b180f7-3971-4770-a179-5ef4fa02902d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651e76a4-847f-4b74-8033-d126563d25d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbd32dd8-9597-4cdf-813b-535d3484a4ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4f863b69-4e11-4a48-9e56-257a0ac5da53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c548eba8-9666-4173-8938-9f612b87e700",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba095b82-e1fd-4b02-bcb6-e6a05811837f"
            }
          }
        ]
      },
      {
        "id": "b5ba5f90-15df-4f42-9e07-76c508115ec2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b186bc74-5243-4024-87d2-9681ff4feab1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e5390e7-afbc-4c0d-9673-c8bce8f94212",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8a535fa-e63e-49e4-87f4-8365443ec65b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f489df7-c65b-417e-bf8a-8bfc9997a08f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "26d9a225-e536-4493-8437-3ab918239ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f818ec0-771a-42ee-8661-7e485caea453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d377332b-e919-42cd-8c54-825d9c843b40"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1947012c-497b-4b52-a4dd-b81c2e334135",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c553d925-5972-43b3-94b0-e8a4acc52686"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b095cbc-fb74-4044-af46-41ed7bc2b880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbb5b3e3-7ece-4ca4-a7b4-5fbeac831fc2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7343848e-5fad-438a-9741-7c2ec5a74040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2039ee09-2936-4f14-9c21-fc0cb52e131c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1dc56a75-5fe6-4e64-a5c9-c9778eaf6187",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97938e1c-c9ad-4911-aaa8-43ee2912d2ea"
            }
          }
        ]
      },
      {
        "id": "6fa73f46-a212-4d49-96ac-6f3bb8ae1e23",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "77bf559e-be75-4062-92c8-ba0481fac78c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "628d0ea1-9681-4d90-a55f-dbfdb23d5440",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3c1b59e0-0e88-483b-b700-05bb05ac6dc6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1126a465-8c77-489f-ab64-bcb48e88d560",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee7d14cc-369c-47ea-88e7-1a1e910b6605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5554e56c-c7e8-475a-8d62-4b490f473666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bfafe9cb-5dfc-4938-89bd-8abba72c0cfa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "116b1c82-cf13-4a23-9bea-7241596450b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03502374-10c8-47a7-8862-b5ee966f141a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44ac068a-36fa-4b96-b3d7-67ab1dd9f1a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "847dbb9a-8896-4c08-adcc-41c0a6af5f00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca755b70-0a8d-449b-ae9b-be588dcde2e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "153cd6dd-278d-4da0-89b3-898b75ea8961"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e92781a5-4ad1-4d43-a83c-962e71da839e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00859e45-e875-4939-9f57-4dd052ae378d"
            }
          }
        ]
      },
      {
        "id": "73e6c105-e2c4-4e49-ab92-6380adc9733a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4caa4d77-c402-43b6-a664-fb3b0606762d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7bad9a7b-16b1-4e72-904c-e7b568408fc6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9084ddca-3bf4-45e1-9d3f-67d8e3cbc9e5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40aae5c-5bce-4a2a-bef9-7edad697660f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "547396eb-1716-4150-a089-e151f09858f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276c97f1-4f90-48d3-941c-d3c0f0c34e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12884eb2-3850-44ce-baf1-0f37f0518bfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8d47df-bbed-4581-b860-2cfe8d2954ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcc031fc-051a-4668-a178-ec990c95bf45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bc089c8-eb77-443a-a43e-f30bf5dd04e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca219992-a7a9-4167-8189-54b82c801219"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb6206c5-dba1-4bd6-aa3f-f5a573a3c8cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41c64cd3-e6a1-4047-96f0-e4de1b938820"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07a9c20b-18b0-448f-a456-1d4f758e3743",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b650282a-2691-430e-9a62-1d91f774695e"
            }
          }
        ]
      },
      {
        "id": "d0ea617e-faab-4d97-b8e5-c1eb03c6fbc1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af328ad9-b41e-460d-840c-ff59e96d689e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1b4e105-b959-4c81-9b35-c082543aae6e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "abcb3873-343f-4503-a903-ef95316105d1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ac146f4-212a-48f0-84bc-ace03a321e2c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc83ef09-6fd2-45c1-a64a-8b7dade482da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 802.678861788618,
      "responseMin": 21,
      "responseMax": 7284,
      "responseSd": 911.6606388604725,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686228409331,
      "completed": 1686228617609
    },
    "executions": [
      {
        "id": "7e1eca3d-288b-430b-afc4-effbc141dd74",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "54c49d28-e307-493c-b223-e3cd33fb959a",
          "httpRequestId": "459edf90-e122-48e2-ad18-cddeceac6dfc"
        },
        "item": {
          "id": "7e1eca3d-288b-430b-afc4-effbc141dd74",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3eefd265-f603-45ef-b9ac-536cbfa9704b",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "b14cdcd8-0366-4c80-a379-d6f5640ad55e",
        "cursor": {
          "ref": "8355c7ed-fc3f-4341-8245-4a43314411c6",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e402e6cc-055c-4b58-97ca-a110413ca3f9"
        },
        "item": {
          "id": "b14cdcd8-0366-4c80-a379-d6f5640ad55e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5418bea0-1a42-48b3-bbe8-720c2bff4c8a",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "b061da8d-ef8b-415c-9102-639639080cc4",
        "cursor": {
          "ref": "91cda4b2-8903-4dd7-954c-4572791ce751",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7a07631d-752c-4b51-b0c0-18adcfb8398c"
        },
        "item": {
          "id": "b061da8d-ef8b-415c-9102-639639080cc4",
          "name": "did_json"
        },
        "response": {
          "id": "ca4355c2-8bca-49c0-af89-8de074de9f35",
          "status": "OK",
          "code": 200,
          "responseTime": 1284,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db87b1ae-67cc-4eee-8251-f67025bc5bd9",
        "cursor": {
          "ref": "b44a2d2b-23c3-405e-b10e-e9f921e5a3df",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "689e0d27-205c-4390-aed2-9006c089a81b"
        },
        "item": {
          "id": "db87b1ae-67cc-4eee-8251-f67025bc5bd9",
          "name": "did:invalid"
        },
        "response": {
          "id": "aad95e18-287c-4d54-b855-fbbe3b7bd3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db87b1ae-67cc-4eee-8251-f67025bc5bd9",
        "cursor": {
          "ref": "b44a2d2b-23c3-405e-b10e-e9f921e5a3df",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "689e0d27-205c-4390-aed2-9006c089a81b"
        },
        "item": {
          "id": "db87b1ae-67cc-4eee-8251-f67025bc5bd9",
          "name": "did:invalid"
        },
        "response": {
          "id": "aad95e18-287c-4d54-b855-fbbe3b7bd3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce68da7-778d-4c7e-92dd-25fc7798252f",
        "cursor": {
          "ref": "bd3cd58f-8f28-4b10-92fe-f926d5dbef03",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "746765e3-8c43-4f9c-a81e-7e86957788d5"
        },
        "item": {
          "id": "bce68da7-778d-4c7e-92dd-25fc7798252f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7121e0b5-a52c-4c85-a2b3-0a34b1203598",
          "status": "Not Found",
          "code": 404,
          "responseTime": 891,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638d3424-ed99-43b4-8b0f-88f1e4f0c62f",
        "cursor": {
          "ref": "31f251d9-5594-4f8f-854f-c756529a903d",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f4bcdc5b-af1f-48d5-81bd-a60103f78f35"
        },
        "item": {
          "id": "638d3424-ed99-43b4-8b0f-88f1e4f0c62f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "09277dd1-6c85-4413-8d9c-b97690f1ea97",
          "status": "Not Found",
          "code": 404,
          "responseTime": 735,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1165186-57c8-4152-b089-da0053d78317",
        "cursor": {
          "ref": "52c2f8d2-0958-4bc5-8925-580f8cbeea5c",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "62bc3ebc-077d-4edb-a7b7-d569bb7558ac"
        },
        "item": {
          "id": "b1165186-57c8-4152-b089-da0053d78317",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8c0f04f8-0063-46f6-b131-b8a30da30a91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ba0477-5f53-44b4-b6d2-335b6e36bc28",
        "cursor": {
          "ref": "d6aa5300-a51b-4eda-9a8a-2eeef77fded0",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "11874c8e-388c-47cb-a919-1b7ed83c5a9d"
        },
        "item": {
          "id": "63ba0477-5f53-44b4-b6d2-335b6e36bc28",
          "name": "identifiers"
        },
        "response": {
          "id": "03356689-3f71-448f-ad27-87652be73952",
          "status": "OK",
          "code": 200,
          "responseTime": 1561,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790af2a2-f893-471a-abf0-d2ebf8436e94",
        "cursor": {
          "ref": "08cc0a54-0bc0-4d44-a416-0ff6eb567ef9",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "411d08cb-2518-442f-8f08-12896bc4d7a9"
        },
        "item": {
          "id": "790af2a2-f893-471a-abf0-d2ebf8436e94",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "793d9783-e135-4f43-ad6f-dbeb1a81b69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4571b1ea-2d02-45f4-a72f-d97fd0c72628",
        "cursor": {
          "ref": "159dea98-3ff2-4630-bef6-fe64693fce32",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b41017fb-d332-4e79-a045-c07cfbcc995a"
        },
        "item": {
          "id": "4571b1ea-2d02-45f4-a72f-d97fd0c72628",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1686104c-52c1-4142-8892-331f515a538f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b57483-b520-4744-ac84-4462db0bb9ca",
        "cursor": {
          "ref": "4081f9fc-da85-49cd-ad04-909622eee4d8",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fa03722-40e8-4fe9-ad44-dcdca22be324"
        },
        "item": {
          "id": "59b57483-b520-4744-ac84-4462db0bb9ca",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c33983b1-b51d-4f65-b40c-b89c71855070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448add61-4392-46c6-ae69-b29ba7d23bed",
        "cursor": {
          "ref": "4017526e-325b-4132-8451-8534791c631b",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fc805b8f-b626-414c-b6ef-a79122c47833"
        },
        "item": {
          "id": "448add61-4392-46c6-ae69-b29ba7d23bed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "01be24fa-8dcb-442c-a678-409bf3e6adcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e16c14b-c284-4b64-8343-a133052b20f2",
        "cursor": {
          "ref": "abea1afc-8a1a-4255-aeb1-2e7acb8384ad",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ded603c-eb71-4830-b69f-69e18a04e13d"
        },
        "item": {
          "id": "1e16c14b-c284-4b64-8343-a133052b20f2",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "52e18db6-e0f9-488a-91dd-53892d49cff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3d9d62-00e8-467c-903e-10c34660ab85",
        "cursor": {
          "ref": "e3a87141-601d-4e2a-ad5b-cfd91b517a29",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2a62b2d-eb9a-4ff3-87f3-5859ba2ca40e"
        },
        "item": {
          "id": "3d3d9d62-00e8-467c-903e-10c34660ab85",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8cb72187-5395-4a88-bee9-781ebacae85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c4360f-c48f-4bb7-b60c-719cf6d33978",
        "cursor": {
          "ref": "8a9fec4d-467f-40ad-af34-e2a52b5852f8",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e9533ae-454b-448a-886c-73dd4c318477"
        },
        "item": {
          "id": "88c4360f-c48f-4bb7-b60c-719cf6d33978",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ca463474-cc7a-45cd-82b2-b3d722e5a98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef5e5fc-aecd-419e-ad2f-edddbf028dcc",
        "cursor": {
          "ref": "be06ed6b-c41d-4888-81e2-b4fce086586b",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "96501578-08b8-413d-bf8e-468eb3760ace"
        },
        "item": {
          "id": "1ef5e5fc-aecd-419e-ad2f-edddbf028dcc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d40e7a9e-dceb-40f4-9318-e438e3fead57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db5d7c8-3ab3-4f5e-a670-c6c1276c4bee",
        "cursor": {
          "ref": "b78ff741-c49f-4d8d-9cc1-d2a11d5b68b0",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1635e8d3-5aa0-402b-88df-8b500338a9a7"
        },
        "item": {
          "id": "5db5d7c8-3ab3-4f5e-a670-c6c1276c4bee",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3bac37d9-5197-40c7-9177-9a3908857bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2454bd0-9415-4603-9ee5-aff9ea596c60",
        "cursor": {
          "ref": "f6124c29-115f-40f0-acee-24e0e45a4c14",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "705d3db6-dd91-41f7-b517-66d1dc15a809"
        },
        "item": {
          "id": "c2454bd0-9415-4603-9ee5-aff9ea596c60",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56ed91b5-fbf7-40de-a499-7c06fe6a5cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de62eb-363b-441b-a287-58d411098e53",
        "cursor": {
          "ref": "804c2079-cc0d-48f2-807e-abfa82ff5d5d",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d6cef3e6-7772-4cfb-9edf-1f0a06c74bf9"
        },
        "item": {
          "id": "c9de62eb-363b-441b-a287-58d411098e53",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "087bede5-50ea-4269-8abe-1c177322202f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9c7143-c1d5-4fac-b00b-9df67cbeb394",
        "cursor": {
          "ref": "14b3f328-2e1c-485f-be56-e42028a04a53",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f3f67504-dcf3-4916-83a3-75daa4c654c2"
        },
        "item": {
          "id": "3a9c7143-c1d5-4fac-b00b-9df67cbeb394",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "65906114-2e12-4119-ad10-63978dbecaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d8ef05-1f8d-4c66-bfa0-d29e78a4c432",
        "cursor": {
          "ref": "a1fed5e5-c1b8-4913-b56f-08faa509af64",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "998e6cae-d919-4d70-8537-ee1bed22cf39"
        },
        "item": {
          "id": "e9d8ef05-1f8d-4c66-bfa0-d29e78a4c432",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4b7e9d4c-ca5f-42dd-8c8e-d7a49071a785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec516a2f-000f-4369-9ca4-43089dad5c6d",
        "cursor": {
          "ref": "6e84dc60-b83a-4a8d-8e5b-d50a4c2947f5",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8ba02a3f-b38b-4832-b68c-aad3a99563ab"
        },
        "item": {
          "id": "ec516a2f-000f-4369-9ca4-43089dad5c6d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "88864ef5-3332-408b-b145-a263fd04ece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f07b9-9048-4a3a-ac7a-7e34b54c9b52",
        "cursor": {
          "ref": "ff7a0d4f-51e3-4863-913e-ff4ae96a1bf6",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "926404c1-fa49-4a18-a02e-2d1001928b63"
        },
        "item": {
          "id": "1e8f07b9-9048-4a3a-ac7a-7e34b54c9b52",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a13bcc16-5410-43b2-b191-5c18c9e4a957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5890b60-210f-4447-b459-c24825a68aa5",
        "cursor": {
          "ref": "98710d38-7af0-4cf8-a74d-7f2c65b35968",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8655a396-6175-4f20-830e-f38872f05bbd"
        },
        "item": {
          "id": "d5890b60-210f-4447-b459-c24825a68aa5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9360ad32-eb42-4255-b058-b6bde6bd5eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e817f-aed4-4c03-ab68-5cd50aa01deb",
        "cursor": {
          "ref": "b8d4ca45-46ef-4e00-a97a-c35ab8fc2182",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2e57cd5e-ab62-473a-83b8-66d51c490ecf"
        },
        "item": {
          "id": "630e817f-aed4-4c03-ab68-5cd50aa01deb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ff60bd76-3ce6-4ed2-a4be-32f100603a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f494396-91b9-42bc-a1be-51c2264a5959",
        "cursor": {
          "ref": "d08e9fa2-3281-4044-aa0a-a123c2612260",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf634f80-7aff-414b-bb16-28d64d9b88fc"
        },
        "item": {
          "id": "5f494396-91b9-42bc-a1be-51c2264a5959",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f7298624-d7b8-4f1c-8a52-0a0d92053b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc2fd63-7873-422f-a164-94f1c1fd8262",
        "cursor": {
          "ref": "9c34f1b7-5c10-490f-8cb1-bcd875b71b24",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "98e47b47-1d5f-46d7-bc76-2269d4a3e4fe"
        },
        "item": {
          "id": "9dc2fd63-7873-422f-a164-94f1c1fd8262",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c582ed0f-62ea-408c-8e7a-c5f36d792aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f12d12f-2628-4ffc-b650-d9bb0138f816",
        "cursor": {
          "ref": "680bed14-16bf-4d73-bbc4-0954369a7945",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "520df0d6-58f8-4d11-9708-dbc0acb1dbb9"
        },
        "item": {
          "id": "0f12d12f-2628-4ffc-b650-d9bb0138f816",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "31ccf9e1-2195-4a5c-9959-fedaa97d7234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf5701e-d0a2-4b67-9f53-f48a58c1bf27",
        "cursor": {
          "ref": "75f3f311-c91c-4cc3-827a-f7358e1d8b14",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c195a937-0aff-4cf2-a97b-59748bc39a87"
        },
        "item": {
          "id": "8cf5701e-d0a2-4b67-9f53-f48a58c1bf27",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "018f22a2-9a61-43cb-887c-641b025f55f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c2b28e-e329-480d-bde7-5c7162b35a3a",
        "cursor": {
          "ref": "078ecd74-ede5-4f94-847c-6d80b279fb54",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "81af6c0d-820f-41f7-86f3-f2397b458e02"
        },
        "item": {
          "id": "39c2b28e-e329-480d-bde7-5c7162b35a3a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1185a73d-aebd-4e9e-9eb1-9dd541d8665f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414db3a6-8e93-403c-a3fc-a446ac84c26c",
        "cursor": {
          "ref": "053e9854-2d05-46e3-8e8b-33997c9a938a",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "75b5d4d5-bf4d-4777-8b57-0037a8c32830"
        },
        "item": {
          "id": "414db3a6-8e93-403c-a3fc-a446ac84c26c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06a4c9e3-83ed-4c75-83f3-587544fa5c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4438a1eb-67ed-4214-bad9-f66080b760c7",
        "cursor": {
          "ref": "1301c770-8089-4d1a-81f0-3710401dcb51",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "818f5de9-1a2d-4e0b-a4cb-851b8257f38c"
        },
        "item": {
          "id": "4438a1eb-67ed-4214-bad9-f66080b760c7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed11f35b-c754-434f-bdb7-5ad394ae73c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5401f3-749e-43d1-ae28-747d165885db",
        "cursor": {
          "ref": "8b08a6f7-cb7d-4df6-b842-e6a4ee4d725f",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8f669e3f-0737-48df-b8e5-1ec26d9acdc4"
        },
        "item": {
          "id": "fc5401f3-749e-43d1-ae28-747d165885db",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7ae8e957-f561-4c6d-9903-f743eb2b2d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c3f43e-60d8-4f8d-9a9f-141bfe7ac25b",
        "cursor": {
          "ref": "67e4877e-83f1-47b6-aab8-4116b09dced2",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "242a1f70-5c33-4315-9d8a-e322a25937db"
        },
        "item": {
          "id": "94c3f43e-60d8-4f8d-9a9f-141bfe7ac25b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0ff65577-94f2-474e-8555-8731f333ff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20d5517-2048-4817-b398-5aed42cee59e",
        "cursor": {
          "ref": "ad4b3852-9c88-48c6-9cfd-b86bd9b533a4",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "892bae4e-6f83-4ee6-9920-97e87416da17"
        },
        "item": {
          "id": "e20d5517-2048-4817-b398-5aed42cee59e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0bfff1b7-07c3-44af-b8e0-982a8daa49da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ca1c1c-bbf6-4391-bfde-616140a08bcd",
        "cursor": {
          "ref": "531670e3-0302-44f3-8481-a0537bace0fc",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "231689b1-2f05-46de-b4c3-431435b78bf7"
        },
        "item": {
          "id": "99ca1c1c-bbf6-4391-bfde-616140a08bcd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b7c9af5c-919a-48e6-a637-4cc59ba10192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0656bec-99ab-4491-8825-bf33eee5e878",
        "cursor": {
          "ref": "cd98e9f6-b3cb-4b80-b287-8e9ab692e946",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "742370c6-ef08-44d6-88fc-a42a08975b2b"
        },
        "item": {
          "id": "a0656bec-99ab-4491-8825-bf33eee5e878",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "050f8695-f115-47b4-b4b1-ee7b46b0c28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962c7ace-6a27-4778-869a-5664fc2f56e6",
        "cursor": {
          "ref": "31bd166d-0a74-4621-88c3-c98f81d63a6e",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a1c552d9-8da1-4b85-9de9-98c463c99380"
        },
        "item": {
          "id": "962c7ace-6a27-4778-869a-5664fc2f56e6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f1e65cfd-4b5e-41bc-b7d5-36d6266d5288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192228f6-687b-460d-a701-ff46bf77639f",
        "cursor": {
          "ref": "933e5a1d-1ab9-4533-845b-ff8972070cd0",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5afda843-582a-40a4-912c-4ecc78e34020"
        },
        "item": {
          "id": "192228f6-687b-460d-a701-ff46bf77639f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "49fb4954-ee55-414a-8eda-87d542d8a04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b1f7c4-fa5b-4864-a6ec-3de0a24085da",
        "cursor": {
          "ref": "8faa62a6-b7be-4b4c-8fed-50f88491accc",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "39c668ba-104f-4385-a9bb-1e328b6581e1"
        },
        "item": {
          "id": "65b1f7c4-fa5b-4864-a6ec-3de0a24085da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1d5c701a-4122-41bd-a60a-7dba778c0b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c044d7e-4222-4992-a479-b699c8c483d4",
        "cursor": {
          "ref": "2c499e2f-54cc-4085-9db0-3a48ad99adb5",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1be5eeba-b62b-4461-9ef5-e59940b9bd72"
        },
        "item": {
          "id": "6c044d7e-4222-4992-a479-b699c8c483d4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "15c9c269-28c5-4241-84cc-8f2ddc09b9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca37fb4-801c-4bcf-8d17-1ad50ca49375",
        "cursor": {
          "ref": "a463b3b0-8fa3-4208-af69-5682ffffed20",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4454b23f-c42d-4715-912a-121c25cce6bf"
        },
        "item": {
          "id": "aca37fb4-801c-4bcf-8d17-1ad50ca49375",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9a0852b5-4ca9-42f8-9fe2-d015fbf29ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ce07a0-f591-416b-bdb0-f842fbf9766c",
        "cursor": {
          "ref": "491daa5f-51ee-466c-a247-5fd59a4c648b",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a93f3830-f0e3-4e5b-89f2-c95498e860c3"
        },
        "item": {
          "id": "35ce07a0-f591-416b-bdb0-f842fbf9766c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "37cf2d33-f708-43d3-b5b6-e777ad18e99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f68a16b-9489-4010-9481-e2e3c60c3fa9",
        "cursor": {
          "ref": "81206290-c427-48bc-93f7-faa0af78efb4",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "819f25f6-bfe3-47df-89c4-0d99b24f3c01"
        },
        "item": {
          "id": "9f68a16b-9489-4010-9481-e2e3c60c3fa9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf24c0f0-8a3a-4071-9f2b-60e7c6132813",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 921,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafda69b-83ae-4289-9964-940e7d854406",
        "cursor": {
          "ref": "ddec5fbb-fb02-49f2-8195-633d64b3eb03",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "707d02cf-1323-4797-ada4-27d7fdfb467c"
        },
        "item": {
          "id": "fafda69b-83ae-4289-9964-940e7d854406",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "08f9232c-4d8b-4718-bc5f-8a0fa95436e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704249f-4e91-45ec-b2a3-389b3cbf8753",
        "cursor": {
          "ref": "13f49b12-f838-4e14-ae66-a287a31d990a",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "952f23ff-2c4b-478e-bbed-90f816cc53eb"
        },
        "item": {
          "id": "5704249f-4e91-45ec-b2a3-389b3cbf8753",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b7749a3-ebbe-4571-94c5-79934eaf44d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2fad7c-7543-4d5e-b927-d1befe2ea619",
        "cursor": {
          "ref": "c9e9361f-956b-4d52-ab32-5e204026bafb",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "68798802-892a-4140-88f3-1246ae021e83"
        },
        "item": {
          "id": "db2fad7c-7543-4d5e-b927-d1befe2ea619",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a97bb02d-9792-453c-a67d-5eaf3a6781cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716c1ccd-78d9-46d1-9d18-89e1a892a2f4",
        "cursor": {
          "ref": "3b7392c7-82b7-46ef-ba63-b1ebca578ae0",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "521fab35-9f80-4abd-bf94-5d8e03f7e840"
        },
        "item": {
          "id": "716c1ccd-78d9-46d1-9d18-89e1a892a2f4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4343cdb1-30ae-4174-bd51-56367e0c57ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137538bc-5fee-4591-9630-b61557162f11",
        "cursor": {
          "ref": "af24b70a-210d-4762-8aaf-598cc7cb7f23",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5e84f11f-c8df-4708-96c7-c6db6b44bdbf"
        },
        "item": {
          "id": "137538bc-5fee-4591-9630-b61557162f11",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7586ff1a-13ca-4e8d-a89b-03269b62214a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1580cd-1733-4321-89f7-d4639aea5cb6",
        "cursor": {
          "ref": "dcb6d67a-91b4-4721-85c6-6887a248cf85",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6b9753de-56c6-4049-ad38-29f9aca640e7"
        },
        "item": {
          "id": "ca1580cd-1733-4321-89f7-d4639aea5cb6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "54b9fbc0-50ec-43a1-a39a-1aa0a56ab56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f5684-caf7-4044-a097-74c14726bae3",
        "cursor": {
          "ref": "d1ef0da7-9826-498b-911f-3ed5ccf6fed1",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a626f620-36db-4b28-af3a-52117f07c859"
        },
        "item": {
          "id": "594f5684-caf7-4044-a097-74c14726bae3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9f594e96-096b-4e78-8b7f-f054e7b1358e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 864,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54db1b3-fe22-42be-a12d-6293388a1c4f",
        "cursor": {
          "ref": "290dcfdd-953c-4421-9a61-effee93da751",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3b730cc4-db2a-4242-a9fb-38fd2cc34c1f"
        },
        "item": {
          "id": "e54db1b3-fe22-42be-a12d-6293388a1c4f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2f1e04c1-0b9b-4fe3-9eec-14462efc6be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553eae1a-d55c-446b-8eca-94d9cedf29cf",
        "cursor": {
          "ref": "50e59c4a-c954-4d51-87b8-b21f2502e7a2",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5338027e-50dd-4a32-99a3-966ea1f8bc88"
        },
        "item": {
          "id": "553eae1a-d55c-446b-8eca-94d9cedf29cf",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3f8f269b-fdce-4fff-934d-38efc68a1145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4141b-b5c0-4a63-a2e1-959fa2fc473b",
        "cursor": {
          "ref": "247740e8-75e6-44e9-8246-0106b1f21952",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1af1dfb2-0b34-4260-861d-4290e965e883"
        },
        "item": {
          "id": "59c4141b-b5c0-4a63-a2e1-959fa2fc473b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4b507c99-5098-4980-b8df-b4e8ac0b0c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef272a6-638d-46e7-ac0a-83696077e44e",
        "cursor": {
          "ref": "e45ccde4-11dc-4fd5-90db-70c2089dbe02",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0e11a869-477a-49ab-8e89-551a88350b17"
        },
        "item": {
          "id": "3ef272a6-638d-46e7-ac0a-83696077e44e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cda69d73-0f9d-4293-b0f3-1b5170e32875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2080bb64-43be-4bb1-85a9-1f81ab65a67e",
        "cursor": {
          "ref": "d2c7f24f-1053-4fc9-81eb-ac5471d1e5a1",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2407b492-7d36-4039-ac92-0ca57cb05784"
        },
        "item": {
          "id": "2080bb64-43be-4bb1-85a9-1f81ab65a67e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6adb9671-2f56-4f98-9843-07c5a3ce8e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627c1c61-b477-41eb-95ad-13d77cbf41b3",
        "cursor": {
          "ref": "76cf7aa5-a02c-48b0-9fcd-9fcc644b9907",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e539d502-c4c4-45e3-91c9-04199ec4b3f9"
        },
        "item": {
          "id": "627c1c61-b477-41eb-95ad-13d77cbf41b3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a9506a37-09ac-4818-ab55-2b181d0f2422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2f1564-4de3-4016-a630-16382c68719c",
        "cursor": {
          "ref": "b167bd8a-8cf7-4507-8afe-9f8d6aec5d21",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc5f2966-b88d-4402-a45f-7a48c69317be"
        },
        "item": {
          "id": "7a2f1564-4de3-4016-a630-16382c68719c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c77fd49b-bddf-47ec-8216-b01ac6f51011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050aab34-2640-4285-869c-395ff46cbf7c",
        "cursor": {
          "ref": "4be64a11-95f1-4e00-89ae-76cbe0407048",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "35f3e8b4-a42a-47be-a192-1b6bcbd99596"
        },
        "item": {
          "id": "050aab34-2640-4285-869c-395ff46cbf7c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5970e04a-e24f-4aee-8cb2-91e5bdcee05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a682cf4-5b43-454f-82f2-f0413f04edeb",
        "cursor": {
          "ref": "4aab7550-d3fa-413f-9bf4-b2ca239a7102",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a47299f3-e0a2-4de8-b44e-b17d2618cf3b"
        },
        "item": {
          "id": "7a682cf4-5b43-454f-82f2-f0413f04edeb",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ed5f0d60-afa6-4424-9670-4604d3b45910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5153e71-073f-461b-bbe2-bf423f0b433e",
        "cursor": {
          "ref": "c6f68006-3f49-435d-aa2a-c92a054ff4a2",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7f59fe82-a3d3-44e6-bd8b-e55442523911"
        },
        "item": {
          "id": "c5153e71-073f-461b-bbe2-bf423f0b433e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ffaf143c-3204-47b8-90b1-e836a974fe12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fdd4d4-d6f5-4ad2-a96f-cec5e5bcccb0",
        "cursor": {
          "ref": "fd6f8d32-87a1-4db1-9a3c-8959fcf7ce61",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ba556bfa-41c2-45d8-8070-7e00b015f1b0"
        },
        "item": {
          "id": "c7fdd4d4-d6f5-4ad2-a96f-cec5e5bcccb0",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ffca7339-a8d5-4791-897b-fd62a1b35b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fe94e1-3fec-4ae0-a400-d60f555d8ef8",
        "cursor": {
          "ref": "ce3ec5bc-9e6d-42be-a3b7-eb048d665e45",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "422e9c4b-aad0-423f-8f42-bb81b877a2e7"
        },
        "item": {
          "id": "b1fe94e1-3fec-4ae0-a400-d60f555d8ef8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9a4ae728-9ceb-43c7-9575-6fde9e9ea04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 760,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e5bd8a-b7cc-4461-9bed-1394387c1d2c",
        "cursor": {
          "ref": "67e0d1e6-eeda-4103-a979-767352e890fb",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ce79de2f-f430-48f3-99af-70633aca8086"
        },
        "item": {
          "id": "79e5bd8a-b7cc-4461-9bed-1394387c1d2c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4dfd9fc6-7853-4e49-a838-30a04cac9514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa48b85-fb4b-4742-9b96-70746ac0cbdc",
        "cursor": {
          "ref": "8d25d0ca-0c2f-48ea-b1ba-93ee4ccfeb30",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "df650106-e468-43fd-b631-d4eec42597fe"
        },
        "item": {
          "id": "dfa48b85-fb4b-4742-9b96-70746ac0cbdc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6325d994-eed0-4526-a629-be459be7d4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce838b7a-67ac-4ae5-8d25-ef37a873ef29",
        "cursor": {
          "ref": "c9dbeae4-04b9-4ff3-9c4f-d0ef2998dea0",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8b0bc518-0091-4b11-b4e5-79af82502440"
        },
        "item": {
          "id": "ce838b7a-67ac-4ae5-8d25-ef37a873ef29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "42e5db3f-0bcf-4551-9b5a-36630cdc128f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde19424-0bf6-4104-a71e-1afd9949d86d",
        "cursor": {
          "ref": "b20e94aa-69dc-41ec-93ae-136c5d63a0ac",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cfdb0204-2fac-43d7-a443-3afd80ebe23a"
        },
        "item": {
          "id": "bde19424-0bf6-4104-a71e-1afd9949d86d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8cea290b-80bd-4fe3-87b0-1264205632f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab1240-d4b5-461a-9a51-f37778f0608b",
        "cursor": {
          "ref": "b01cd9df-079a-4d60-bf10-0f95d0bfc411",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2e6377e-13e0-44b8-83ff-875cdb91b54a"
        },
        "item": {
          "id": "28ab1240-d4b5-461a-9a51-f37778f0608b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "36ce744d-440d-4adc-9c3c-f3b6cdbcac22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23363766-8ad9-4d19-9840-b7f80774060e",
        "cursor": {
          "ref": "64e8b96d-4859-4da3-b307-227577903e5b",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "462f1d46-a444-4eb6-8ceb-0b0fdc4dc1ef"
        },
        "item": {
          "id": "23363766-8ad9-4d19-9840-b7f80774060e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0a4e3039-78cc-414d-9135-f25b1d494e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b9b7fd-6d25-4b97-9d62-1e4c8a1459ae",
        "cursor": {
          "ref": "5389afcd-16dc-490b-be4e-8294c7ba43a9",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "af309822-ab99-42a3-8f09-e12c14b8ed52"
        },
        "item": {
          "id": "a9b9b7fd-6d25-4b97-9d62-1e4c8a1459ae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "80c178a9-d6dc-4fdc-8a55-8e43b6f0c453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721b2c2a-769d-4370-a4d4-9795733bcbbd",
        "cursor": {
          "ref": "2971b999-2fdd-4e9c-a8d9-cc6429eaedf5",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e56fffc0-c1ac-4642-92e7-a277e403a66b"
        },
        "item": {
          "id": "721b2c2a-769d-4370-a4d4-9795733bcbbd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "705a782a-5b0c-403c-98eb-ab028fa63771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f034aade-28ce-4fa6-87c6-2ced647f0fa0",
        "cursor": {
          "ref": "74686679-9b49-42d7-8fa6-33fafc51ff44",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "98b852bc-72bb-48c4-bcea-66346efdbb98"
        },
        "item": {
          "id": "f034aade-28ce-4fa6-87c6-2ced647f0fa0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "85606e47-1445-42ae-a458-6dfa6a49c9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dda8e8-8516-44ed-a718-1e582c172734",
        "cursor": {
          "ref": "8cb64b4c-a883-450e-9a01-d5ff8fb1d566",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "705eefc6-2c0f-49e5-b385-536143937d81"
        },
        "item": {
          "id": "98dda8e8-8516-44ed-a718-1e582c172734",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bbe05e7e-2b58-438c-8357-a085985fa3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cceeeed-5bd0-4e79-8a31-1709c88d37fd",
        "cursor": {
          "ref": "5a52441e-74a2-476c-8ae9-520ee9899724",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "29240b94-1e4e-4ea5-a986-186b1dd5254b"
        },
        "item": {
          "id": "3cceeeed-5bd0-4e79-8a31-1709c88d37fd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8ed2c87f-b5e0-48c4-b572-0178d7f6563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9632ccd-f558-417d-94be-2a9039f27bf9",
        "cursor": {
          "ref": "cfcc4fb9-64f6-4bbb-ba0b-237058f4a762",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9112c294-8084-4593-a003-9727c62fd52c"
        },
        "item": {
          "id": "e9632ccd-f558-417d-94be-2a9039f27bf9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80b071a7-81a4-4912-9ac4-1b7cde65c95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287c2404-e48b-4189-b9f9-322d0cc844a6",
        "cursor": {
          "ref": "4dcd8e3a-c188-436c-af9f-e3b61144b895",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ce39cafa-7275-45fe-9d97-9f4c616c0ecc"
        },
        "item": {
          "id": "287c2404-e48b-4189-b9f9-322d0cc844a6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5cd3ddf5-58eb-47d5-9d92-eca6844525d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3753a6dc-0ca4-48d0-acdb-c549d9687cf8",
        "cursor": {
          "ref": "376c1650-da9d-420c-a102-ee80bf45799a",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e15ff734-0820-4609-9d0b-3f18581349a4"
        },
        "item": {
          "id": "3753a6dc-0ca4-48d0-acdb-c549d9687cf8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92433961-e5be-4afa-b3a8-8fa4604a14bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a09b080-d3bf-4418-9a9a-98d629ec3531",
        "cursor": {
          "ref": "4569f8bf-63a6-4ead-8e88-fe4496c52b34",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9b54d720-596d-467f-992a-b037f3dc13f9"
        },
        "item": {
          "id": "7a09b080-d3bf-4418-9a9a-98d629ec3531",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dbef8e9e-bb72-4455-92d5-12e61f537980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e51601-4053-41cb-ad84-9529fa903c0c",
        "cursor": {
          "ref": "d3ec2786-8469-459e-919c-3ada2817d99e",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4746367b-2af6-4353-b3fa-df3fc0822d68"
        },
        "item": {
          "id": "07e51601-4053-41cb-ad84-9529fa903c0c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8a17c49c-6b08-481d-90aa-0638ceecf124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308f00c9-7578-4b54-b60e-60b9e65321fc",
        "cursor": {
          "ref": "e9f355e7-2a92-4605-a541-278894b5d020",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b7ba2da7-b11f-4451-83e5-fa72be8abcb7"
        },
        "item": {
          "id": "308f00c9-7578-4b54-b60e-60b9e65321fc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "46dc4887-7bf8-43a5-901e-459247eeaf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e27566-8fc2-4778-9c8c-eb7fd2013b51",
        "cursor": {
          "ref": "dd89568c-cef9-4aae-b2b5-3067b2b77747",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "813532f1-39b3-4566-bf82-66c13aca52d2"
        },
        "item": {
          "id": "77e27566-8fc2-4778-9c8c-eb7fd2013b51",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "edcfcaf7-d178-4cc8-9b65-297b391cc81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf891c92-9fe8-4953-ba34-8e67f7d04ff1",
        "cursor": {
          "ref": "3a3632c7-5218-48cd-b4a6-58093c6757fe",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "530db3cf-71a3-488d-9b48-7a4e8f42aca6"
        },
        "item": {
          "id": "bf891c92-9fe8-4953-ba34-8e67f7d04ff1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c38b0b84-860b-47b2-9951-58cc015e2fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fca71a-4b2c-44c9-869e-ce4c7006acbe",
        "cursor": {
          "ref": "01be87cc-8ca4-4c9c-a2ce-3236588599cb",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7bbc66fb-c68d-4631-a28c-6361e831e4d7"
        },
        "item": {
          "id": "e1fca71a-4b2c-44c9-869e-ce4c7006acbe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "911f99e0-3578-4e63-a41a-b589bdb34ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8156e97-5158-430a-873f-511e254f0842",
        "cursor": {
          "ref": "3bd18681-5370-4715-adac-5ab32194c1d2",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "315b553d-3dc1-454c-bd0b-818e83db053b"
        },
        "item": {
          "id": "e8156e97-5158-430a-873f-511e254f0842",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a15ffc4b-9986-4f7a-a1e1-4f49d4435bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46600e28-d023-4a25-b068-657d386d7624",
        "cursor": {
          "ref": "ca312215-a0a2-45e2-ae11-c7cce6b5c207",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ef132fc2-fc87-4d92-a82a-4b52d0be0977"
        },
        "item": {
          "id": "46600e28-d023-4a25-b068-657d386d7624",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3deaf6e7-8c3d-4fc4-aaac-b892871c18c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75f765b-7f1d-414c-8e40-1e9bb3a90376",
        "cursor": {
          "ref": "131a5cee-2d02-4248-ba8e-80b324d49144",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b585f5c9-de7a-4227-b230-8955e5177112"
        },
        "item": {
          "id": "a75f765b-7f1d-414c-8e40-1e9bb3a90376",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bba59a52-1fe0-4650-84cc-528308216d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5de17f1-c195-493c-9f08-cd095d99e0cc",
        "cursor": {
          "ref": "f7462813-ac68-4143-95d1-ac9537a2ddd0",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b9bbee99-1b2e-4946-a7ba-40016a802054"
        },
        "item": {
          "id": "d5de17f1-c195-493c-9f08-cd095d99e0cc",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a2f21e20-5173-46eb-880d-85c2799b0d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7b3c79-9115-4cec-b656-18690e718aea",
        "cursor": {
          "ref": "b2a846a4-5a0a-4653-aafc-907ec0152579",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6f984442-37e5-46f3-8344-80958b37de5c"
        },
        "item": {
          "id": "8d7b3c79-9115-4cec-b656-18690e718aea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c0ad16d6-3124-4358-9a01-72eb12b990dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8493c481-3fc8-4421-b6a6-54ec26fe6590",
        "cursor": {
          "ref": "914906db-495b-453f-bf7d-7663ee74dc3a",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c7aa51ff-5907-4d35-ab45-f343b193d2a4"
        },
        "item": {
          "id": "8493c481-3fc8-4421-b6a6-54ec26fe6590",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "70bd047e-2330-446e-8a58-d901ef520f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f62f139-4b59-4747-9ecd-e933084a4a5b",
        "cursor": {
          "ref": "66533ff4-f8f0-4cf8-a9e7-cceb0da6c3a3",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c8479fc8-1771-4426-bb37-c77e494d3a77"
        },
        "item": {
          "id": "2f62f139-4b59-4747-9ecd-e933084a4a5b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9be3d8ca-9ce4-4387-a5dc-82ff1c1fe402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a45476e-cece-47e9-9127-dc83ec67c705",
        "cursor": {
          "ref": "904ccd70-ce99-49d7-82f7-9ea34f077fbd",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8c5b4583-c3c7-4400-8d5c-bf89d5a3dc1f"
        },
        "item": {
          "id": "8a45476e-cece-47e9-9127-dc83ec67c705",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8d649172-7d01-4e7f-bf07-db02361263e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c992637-991f-4134-8286-446c3c344554",
        "cursor": {
          "ref": "74d6d843-524d-4380-8695-4c65556e0e6a",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "56a346cb-5e38-4542-a542-93ed5e490f1a"
        },
        "item": {
          "id": "7c992637-991f-4134-8286-446c3c344554",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "45ef798a-2dd4-42a2-b80f-2c593d231ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3174ffc1-565e-4750-a82b-35843f5a5c7d",
        "cursor": {
          "ref": "6e16c4b1-008b-4eb0-bc71-170b6229895c",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "91a43fd6-3303-48b4-9aea-015ae8faf286"
        },
        "item": {
          "id": "3174ffc1-565e-4750-a82b-35843f5a5c7d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aca3f574-7a7a-40c2-83c9-09f4f5030da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c184aa-c38e-4e68-a205-844a075a7bd6",
        "cursor": {
          "ref": "42d03c3f-263d-4386-a06a-5b3c5587a316",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c34b2740-63ee-4d80-8904-f3ddfe763926"
        },
        "item": {
          "id": "87c184aa-c38e-4e68-a205-844a075a7bd6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d8dbeaac-f55e-40c8-acf3-b47102098494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a7c2ae-1f72-4de4-9701-5d93c02adddd",
        "cursor": {
          "ref": "bdc47ddd-e980-4f9b-a7e7-9077049a0d56",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "21ba3d9d-47a1-4fe7-9767-c08e0e11bd6a"
        },
        "item": {
          "id": "f2a7c2ae-1f72-4de4-9701-5d93c02adddd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e180a791-36da-4f3a-bb58-cc931c9384ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab02c96-aff5-43b0-91ab-66708d1392be",
        "cursor": {
          "ref": "1a3dae69-9758-4cbf-b3c5-c4fa393b06c3",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "40125af3-11bc-41f6-bc69-c29d08847cf9"
        },
        "item": {
          "id": "4ab02c96-aff5-43b0-91ab-66708d1392be",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "6fc350bf-5fb2-41fc-8c84-7448c5cd36d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee4f09b-fd9f-43dd-8032-113ba3f9b0af",
        "cursor": {
          "ref": "60d7edd5-faa6-43ab-ae6b-84d7d70c7ea5",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "42fc9812-8db5-4d49-867a-6ba7d38c16bd"
        },
        "item": {
          "id": "7ee4f09b-fd9f-43dd-8032-113ba3f9b0af",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "db6e9462-c1e3-4f28-a596-b313084295c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c9b26c-6369-4f94-8bc0-0c3bffb210db",
        "cursor": {
          "ref": "c0c9360e-d1a9-4892-8d05-e3b7dacce1b2",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2d12108a-dda9-49d4-924f-d32f5818d997"
        },
        "item": {
          "id": "50c9b26c-6369-4f94-8bc0-0c3bffb210db",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ec8a5969-4dc7-4c8a-b666-d28a7a999829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddda5ed-e941-439f-9070-480ce4c45bc0",
        "cursor": {
          "ref": "fe11b1ce-c64b-430c-a6f9-7dd37bd5308d",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ddaa8433-8d1e-4626-95e0-3eba291a753a"
        },
        "item": {
          "id": "2ddda5ed-e941-439f-9070-480ce4c45bc0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7ef8b63f-39db-4b20-a099-44c1217d74e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c373890d-b7c6-418a-9d72-f7f9655b23af",
        "cursor": {
          "ref": "bc6612a4-b4e9-4704-b454-2638a27f9426",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d484b258-6b37-4b68-abbb-be8867a7afe6"
        },
        "item": {
          "id": "c373890d-b7c6-418a-9d72-f7f9655b23af",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0ca0f8c9-cabd-462f-a851-3f2e0a2691cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf8810a-8c70-45da-9978-2aa7737c347d",
        "cursor": {
          "ref": "e38107c9-ed4c-4656-8d88-2cdea40f8bef",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f7fe37c9-3c2c-4c9b-aa79-431b80ce37ea"
        },
        "item": {
          "id": "ccf8810a-8c70-45da-9978-2aa7737c347d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2971aa3a-2ddb-4df3-82f1-db0261b6272c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b9d753-45fc-4846-9add-ade4fa13df00",
        "cursor": {
          "ref": "f9f0769d-4acb-4cba-af67-130037a54e11",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ed7b8059-0116-48b8-9172-e7bd9a7317b7"
        },
        "item": {
          "id": "57b9d753-45fc-4846-9add-ade4fa13df00",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a58edc89-2c9b-4812-9874-09b1dca7bfa6",
          "status": "Created",
          "code": 201,
          "responseTime": 6470,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bdc1a2-7b35-4391-8fb2-cc87de0579a2",
        "cursor": {
          "ref": "a0a64137-17d6-40a0-a968-1f0a9d6f61fa",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5da50a50-2317-4839-92fd-019357565341"
        },
        "item": {
          "id": "f2bdc1a2-7b35-4391-8fb2-cc87de0579a2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "531c6cea-ebea-4fff-8233-867871784b57",
          "status": "Created",
          "code": 201,
          "responseTime": 6867,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "482abccd-8497-4f36-a583-c3cb7974adbb",
        "cursor": {
          "ref": "edac4fd5-a9e1-42e0-84b1-b46079665c51",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6c3f86bb-c43c-4cf2-99e6-bd79d1725817"
        },
        "item": {
          "id": "482abccd-8497-4f36-a583-c3cb7974adbb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8b92db36-3672-4b6f-9e50-fe5791ad11ef",
          "status": "Created",
          "code": 201,
          "responseTime": 5921,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36695948-491d-4225-9832-5bff5ac98398",
        "cursor": {
          "ref": "3807fc95-572b-49dd-b7c2-9f79c66e9277",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f7209375-0bde-47a3-90c8-79d820a6e2d1"
        },
        "item": {
          "id": "36695948-491d-4225-9832-5bff5ac98398",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "75324e0e-4ba3-48b7-b793-1e539f4b6daf",
          "status": "Created",
          "code": 201,
          "responseTime": 5907,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "15710f5e-ff1a-478c-b864-0d8ea4ab0cbc",
        "cursor": {
          "ref": "cf30fbff-0e89-4f20-8700-76af4896a34b",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5ed58272-4b97-4daa-b1f2-3cdf3183f440"
        },
        "item": {
          "id": "15710f5e-ff1a-478c-b864-0d8ea4ab0cbc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ccb1150c-bb1a-40b6-ab45-73dbd8f5c116",
          "status": "Created",
          "code": 201,
          "responseTime": 5902,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea875fb1-e1ca-450e-a686-70432ec9ec49",
        "cursor": {
          "ref": "0a6245e1-c47f-42e6-83fb-019e87cd6952",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e9a33fc4-bec1-4109-bf6f-3e034f07e24a"
        },
        "item": {
          "id": "ea875fb1-e1ca-450e-a686-70432ec9ec49",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe982e23-c20a-4875-b227-55f88fbe4904",
          "status": "Created",
          "code": 201,
          "responseTime": 7284,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd5ee8e-4e60-4cfb-a462-9f9f75693b50",
        "cursor": {
          "ref": "8f922248-81b6-458a-891b-1293a630e225",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e07b8781-7745-4141-a178-dc4eafd73b3e"
        },
        "item": {
          "id": "4dd5ee8e-4e60-4cfb-a462-9f9f75693b50",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "98ce781b-352c-48df-8ab6-402fd4bb096a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e21e8f-a289-45ce-984e-70d2379022be",
        "cursor": {
          "ref": "5b6bd23f-5132-4203-93b0-f91ba770ea86",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "481e0a38-9a71-477a-b3c5-447b1fe4ce7c"
        },
        "item": {
          "id": "d1e21e8f-a289-45ce-984e-70d2379022be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a22c20df-42d9-4233-ad70-1f440a1a50f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92345565-9340-471a-8fb4-87d32202a717",
        "cursor": {
          "ref": "b5b4fccb-8036-46d5-929e-0b51a46afa7d",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d1e71b54-95c9-41bd-9f9b-42201ec6dd77"
        },
        "item": {
          "id": "92345565-9340-471a-8fb4-87d32202a717",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9d2ecf6d-9439-4ef3-9b1e-d004993f9258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a55142-a623-4a58-b76e-82c66d12539e",
        "cursor": {
          "ref": "5b280541-50a5-447f-82c6-4beb8c574fef",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "eba8d16a-f56a-4cb0-aea3-802129ab496d"
        },
        "item": {
          "id": "29a55142-a623-4a58-b76e-82c66d12539e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e62e0f86-2146-4a97-90c9-3fbc8fd6555e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578cc340-8bdb-4550-ac7d-e7d36f436db7",
        "cursor": {
          "ref": "acd7ab7d-db51-4bda-9653-834490709dae",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "384ba53c-5a9f-4330-9b1a-b4afe90c54f1"
        },
        "item": {
          "id": "578cc340-8bdb-4550-ac7d-e7d36f436db7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1952f6ef-ac27-4e37-aacb-e3180e5e8788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9054310c-41a5-4a52-837f-2d92f3ea8494",
        "cursor": {
          "ref": "23caf054-7127-4472-9943-a260b4eb97fb",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8649452c-c120-44ca-8c89-003df4b968c7"
        },
        "item": {
          "id": "9054310c-41a5-4a52-837f-2d92f3ea8494",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3c52191f-70fa-4f93-858d-18153b4731d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be032b2e-3c46-4843-a064-f3b3f5cdfbe8",
        "cursor": {
          "ref": "d42ba721-5c7e-4d7d-b628-139ef1e847ae",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "68ae8697-61b4-48de-a159-1a90db58e0c0"
        },
        "item": {
          "id": "be032b2e-3c46-4843-a064-f3b3f5cdfbe8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6815eeeb-287f-4841-a54d-1e5193a3ffbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149f385-e26f-4030-9e22-67310d874f84",
        "cursor": {
          "ref": "023050bb-02b9-4e3f-8f60-e979649dd486",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dbbc627a-f608-4f33-bcf3-777dc46efcbe"
        },
        "item": {
          "id": "1149f385-e26f-4030-9e22-67310d874f84",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a25cbb2d-0ba9-4a60-a293-1f202823f621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8c4ef5-88df-4c38-a85e-1ecf583d7a34",
        "cursor": {
          "ref": "43b37b68-39bd-4ff6-9636-3c5ee66bcd46",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a8ce35c0-7c62-4f6a-90f0-cf56793a3c3d"
        },
        "item": {
          "id": "0c8c4ef5-88df-4c38-a85e-1ecf583d7a34",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d522c3c8-98b3-4194-ad20-e9bbde38eafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 718,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6037e57-05f0-427a-ae43-08eb94b0e705",
        "cursor": {
          "ref": "6020c7d9-5aea-43d5-804d-16662a88a30b",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b77767d2-1528-40a1-9d4b-4db08f2ec658"
        },
        "item": {
          "id": "e6037e57-05f0-427a-ae43-08eb94b0e705",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "968da72b-5947-43a6-934e-e117e827fa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458df883-6f5f-48b5-918b-5c310c653abe",
        "cursor": {
          "ref": "2b3f9539-00df-4f27-bb76-f3b7eb277290",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4d586eec-4787-46d7-bf11-ac2ae23ec3f4"
        },
        "item": {
          "id": "458df883-6f5f-48b5-918b-5c310c653abe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1fa6be88-490c-46d6-a330-c4e41d4e836c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474fb2f0-221c-4115-ad91-c3c9b000ba63",
        "cursor": {
          "ref": "10b7efad-982f-4250-8706-df75226610d8",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b190d98f-dd1a-4d59-99fe-f1b24bb8933b"
        },
        "item": {
          "id": "474fb2f0-221c-4115-ad91-c3c9b000ba63",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "951d4bef-728d-4169-8cfd-61195469812d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705d26ab-6b24-4e9e-ad75-51dd24d28dd1",
        "cursor": {
          "ref": "5dd0f5b7-f27c-44e6-aa55-bb3358d41c03",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ed387697-118d-4c4d-b449-1241384a2c3b"
        },
        "item": {
          "id": "705d26ab-6b24-4e9e-ad75-51dd24d28dd1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "db2e0aed-a2b5-40c6-921c-7164991c32c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811f33f7-dab0-429f-ba1a-d62418cf559f",
        "cursor": {
          "ref": "3e69ab30-2831-4f94-92ae-00ea5aa5d2ba",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2cc9488c-d383-4115-a315-0c8d08f42974"
        },
        "item": {
          "id": "811f33f7-dab0-429f-ba1a-d62418cf559f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "89309e90-e0f3-48c9-91f9-4c2d645d475e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1cd8a6-de62-4116-8844-6fa9e0c85576",
        "cursor": {
          "ref": "c3771f6c-be60-4e29-9335-c8305982508c",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4f7dc203-80c5-41e1-b5cb-7d220c41866e"
        },
        "item": {
          "id": "bc1cd8a6-de62-4116-8844-6fa9e0c85576",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4f35ff15-b600-4399-8210-dfc5b96baee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf213cce-1f72-4c7a-9d78-60f8c94a518e",
        "cursor": {
          "ref": "487a9f90-e24c-43ac-981e-4bb7f111714b",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e3401247-6f33-479d-ac8a-f7467d834413"
        },
        "item": {
          "id": "bf213cce-1f72-4c7a-9d78-60f8c94a518e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fb3014a6-e85c-4125-b276-4b9b96412648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9138bc52-d478-4838-b976-32c9e8719d1e",
        "cursor": {
          "ref": "31f7fe9a-1d6b-44cd-89e6-0c3fe0c0b546",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2be4e743-495e-4544-a050-7529e76432c8"
        },
        "item": {
          "id": "9138bc52-d478-4838-b976-32c9e8719d1e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b22332c9-45fd-49e3-881c-e89f7095b0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f294597-12c1-4eb6-94f6-01a0c0e90c34",
        "cursor": {
          "ref": "32fc62f8-e6dc-42e5-b480-a5d5c30356b9",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "856a1679-6ff3-49cd-8388-891365c5d4bd"
        },
        "item": {
          "id": "2f294597-12c1-4eb6-94f6-01a0c0e90c34",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6c12ed87-41dd-4a04-b74a-9ed04f3f7561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 752,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba8febb-6a90-4aec-9597-89d41d2ec264",
        "cursor": {
          "ref": "1cc40366-5bfd-47cb-92ea-74f818240e0d",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f8004a65-12f0-4c37-80c2-3ef7c2184e6e"
        },
        "item": {
          "id": "9ba8febb-6a90-4aec-9597-89d41d2ec264",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4536386a-c01c-4096-b91f-06f62cc65830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134beff6-a272-4683-bf7b-d18c5a72583e",
        "cursor": {
          "ref": "2462585d-878d-4653-b55b-ab636e583e06",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8f8bf046-62eb-48db-807e-d41e3d1adecc"
        },
        "item": {
          "id": "134beff6-a272-4683-bf7b-d18c5a72583e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "46d3bb2f-e340-4e34-9e71-136915cf60f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a84314-2d62-4afb-a43a-3e4ae3346f32",
        "cursor": {
          "ref": "f648b014-a3d2-43b8-bf6e-b24d629d0896",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "68839f4d-e9d5-4a6b-8bb6-fbbc7d6c6dd8"
        },
        "item": {
          "id": "33a84314-2d62-4afb-a43a-3e4ae3346f32",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b4ce270-d563-4dc7-8f11-39e25052a986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca9d8ef-8c7e-44c2-8b60-2f542fe200d5",
        "cursor": {
          "ref": "ae4a9daf-346e-415e-8ec5-cd32170dc2f2",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7cad0c5c-a6ab-42b0-b060-9df041e2a695"
        },
        "item": {
          "id": "6ca9d8ef-8c7e-44c2-8b60-2f542fe200d5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ad4ad23-f7a6-4306-afa9-017e9d5a4167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05aa6f9-f93f-40d6-a2b5-3a257faa9f87",
        "cursor": {
          "ref": "135a4721-910f-470b-88e2-49126735b476",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "555d77f3-0ff9-43b5-87c0-378f6e3bb508"
        },
        "item": {
          "id": "e05aa6f9-f93f-40d6-a2b5-3a257faa9f87",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "844f19c6-aaf0-4485-8ca1-ad4733d85fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e863f949-3708-4151-bca3-89b205c35f99",
        "cursor": {
          "ref": "fc067be1-7e58-45ba-ad79-a83560000710",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "49b6c5e3-a24b-4f93-8deb-34f8a0bd1287"
        },
        "item": {
          "id": "e863f949-3708-4151-bca3-89b205c35f99",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf4ec277-4c1a-4938-a4eb-952c6855a530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b702a0-9bb8-41c1-9758-3b59015aeb22",
        "cursor": {
          "ref": "11b0a43b-4ac8-4b72-83b9-ef5cf3f30e45",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1f0f4cfd-7fb2-4bf8-b863-2ff6e9d8903c"
        },
        "item": {
          "id": "95b702a0-9bb8-41c1-9758-3b59015aeb22",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d8635c61-2a84-4fac-a674-5bf74d99bf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dddeb95-6718-4d19-845b-c074cd474192",
        "cursor": {
          "ref": "b85a4ef4-4c19-4201-ad23-ec76633c7754",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e19d7495-89f2-42f3-ab70-31aa9f1cc0c1"
        },
        "item": {
          "id": "3dddeb95-6718-4d19-845b-c074cd474192",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ff11acef-b267-42a6-83e6-c5452f1bd191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b496f3-c435-4fc6-9d88-ee922d308c4b",
        "cursor": {
          "ref": "a2b4886a-ff4e-40ca-9aff-01084b4414f5",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "efb11642-48f3-4953-bae7-ba9153d87bc9"
        },
        "item": {
          "id": "84b496f3-c435-4fc6-9d88-ee922d308c4b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9c4409e-3865-4484-a800-4ade2692720b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a552b9ca-77fe-4bd8-a697-b52201b9a24c",
        "cursor": {
          "ref": "22a0d637-b95f-45f1-9721-c8701bc65ec9",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3f1d3e2b-94d1-4952-8c0e-9bdf8bcb176e"
        },
        "item": {
          "id": "a552b9ca-77fe-4bd8-a697-b52201b9a24c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4a42fa61-9893-42bd-a1a2-3ca4a372bf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7ee4c1-f373-4ae1-b526-9fbd94b8b0f3",
        "cursor": {
          "ref": "1f969db9-f5ba-4e12-998f-3cdd6fea9b65",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "44629beb-af9c-41e4-989c-2e0d0431a6cf"
        },
        "item": {
          "id": "4a7ee4c1-f373-4ae1-b526-9fbd94b8b0f3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5ddcea9d-f32b-485f-9cc5-abfd6fd957e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe5b0c4-a873-44e0-883b-ee6b43aa6064",
        "cursor": {
          "ref": "8bf114b6-adaf-40ab-b961-6e7f357e2923",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "56d80cca-c06b-467f-9a6f-a460b94499e2"
        },
        "item": {
          "id": "6fe5b0c4-a873-44e0-883b-ee6b43aa6064",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1ccf1054-9df2-4173-961b-f493d45d2da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a73564f-8f7d-4eaf-99fa-8f91c1a61604",
        "cursor": {
          "ref": "87c2fd8d-631d-4254-bb93-84c88b283e3a",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b1fc3691-2125-4052-ab0d-a58a04c70f0c"
        },
        "item": {
          "id": "3a73564f-8f7d-4eaf-99fa-8f91c1a61604",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6434a2db-1db2-4203-8609-e3a98566f7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a914fe1-3c86-4dbe-9f7c-081aca9e35ef",
        "cursor": {
          "ref": "78466f48-0e0f-4d0f-b746-5896723e4ab9",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9381a0a-69d8-4b7e-bf2b-338b4b9f78fb"
        },
        "item": {
          "id": "7a914fe1-3c86-4dbe-9f7c-081aca9e35ef",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cb36b266-d113-45d8-a939-9756145a0757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df31ed87-a1e8-4399-9941-aee804bd8569",
        "cursor": {
          "ref": "0e90aba6-6a3d-4389-b507-a837c5c62384",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8a68460d-dfeb-436d-8684-4dd6c75fa24a"
        },
        "item": {
          "id": "df31ed87-a1e8-4399-9941-aee804bd8569",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06023f86-d3bf-40c7-ae49-a6bfcdb3e005",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3982b3-1e25-43b1-bfd7-c89e88327e5b",
        "cursor": {
          "ref": "ad2f7da0-430e-4bf8-b612-579ce942f39c",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "761d77f3-15a1-42aa-bbef-946f0d511981"
        },
        "item": {
          "id": "7b3982b3-1e25-43b1-bfd7-c89e88327e5b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "452090c4-72d6-4a01-a099-6f519bab875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd7d0b9-dd1c-4571-ab40-1a102c676d3c",
        "cursor": {
          "ref": "5757754a-f3c2-4dfb-8989-63b40dfddc93",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "84a71394-12c5-4960-83e2-c23e5f584822"
        },
        "item": {
          "id": "3fd7d0b9-dd1c-4571-ab40-1a102c676d3c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "be65cf85-1210-4780-969d-64097d832472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc681ba-4d74-4b27-8844-f05ed418fd36",
        "cursor": {
          "ref": "22f1f611-999e-4ecb-88ec-e7ef394ebed8",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c0fb60df-ff76-45e3-9da5-9eb03df845d4"
        },
        "item": {
          "id": "ccc681ba-4d74-4b27-8844-f05ed418fd36",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "88bd4c45-725a-401e-9967-94d457cca509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8841acc-0298-4105-9cf8-9ac3f1ec325b",
        "cursor": {
          "ref": "f00b9512-9b6d-4724-93dc-da26efd1858e",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "9580f1db-d33c-42e4-bfc1-ea0b87a64039"
        },
        "item": {
          "id": "f8841acc-0298-4105-9cf8-9ac3f1ec325b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bbb7b5c8-2afb-4632-9069-bc24ebd1b43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c61c616-dd06-4c88-bcc1-7a76220cc6b7",
        "cursor": {
          "ref": "ff8a04cf-18ef-47e8-8b87-233bce063e6d",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1a14777b-ef6e-4837-9edd-b977a1f1f054"
        },
        "item": {
          "id": "3c61c616-dd06-4c88-bcc1-7a76220cc6b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec77793a-4b5c-48bc-a510-023c851b800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331dc22-e838-4310-959c-6eda8fccd98d",
        "cursor": {
          "ref": "f05623f9-0ee2-4a14-b93e-be11e9b912b1",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ca9dbe48-c445-4f25-9c0b-652e42b0ad6c"
        },
        "item": {
          "id": "3331dc22-e838-4310-959c-6eda8fccd98d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2631a3ae-f6d7-49c8-8037-7804e3f9a17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732c01c5-0bb2-4bcc-af14-6057f052c9cf",
        "cursor": {
          "ref": "898dff5a-688e-4cf7-809a-bf01c206b35b",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5e547e30-7921-4809-bd5c-29f1c120b5cd"
        },
        "item": {
          "id": "732c01c5-0bb2-4bcc-af14-6057f052c9cf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fef01682-9607-4164-8504-816bca152963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87399717-4a2e-43b0-b9de-4f0e72c6b537",
        "cursor": {
          "ref": "289dc937-fee1-43eb-ba1a-de76079c0b9f",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7622c52a-5ad1-4134-a9fa-f28f638c5666"
        },
        "item": {
          "id": "87399717-4a2e-43b0-b9de-4f0e72c6b537",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3d0d26a-4d36-4d14-be43-7afb9ee11bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eae2aa3-dc63-473a-a8a4-3c679cd8c8c0",
        "cursor": {
          "ref": "e415844f-5714-4698-ac5f-e1d507d4716b",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ca2b36fb-db63-408e-9c59-81e75be6f6a7"
        },
        "item": {
          "id": "6eae2aa3-dc63-473a-a8a4-3c679cd8c8c0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "63bad497-95fc-4d28-8b0d-26997a54254f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b62bff1-caf4-4eb0-9ed7-96e1ac39ab60",
        "cursor": {
          "ref": "d2b26043-1de7-4b8a-8483-ee9fddd07810",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bbb329a5-a620-48e1-af74-85b5708c7fbe"
        },
        "item": {
          "id": "6b62bff1-caf4-4eb0-9ed7-96e1ac39ab60",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "70b36de2-af8c-4f90-9fa5-103ad38637dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e92c80-1df9-46b6-8450-7ac000623d52",
        "cursor": {
          "ref": "93b1fda4-1234-4f6f-9dde-7252cf43f5cb",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "afffde24-fa00-48f8-80a9-d0c2c4111f5e"
        },
        "item": {
          "id": "94e92c80-1df9-46b6-8450-7ac000623d52",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c1508df8-d10e-45b0-9f59-6b6d386a50b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c64f9bb-3537-4e2f-9181-37f47d3d2f53",
        "cursor": {
          "ref": "81539662-7031-47bb-b9af-3206815251d6",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fbce8843-19c0-4d45-b323-4fbd63bc0adf"
        },
        "item": {
          "id": "6c64f9bb-3537-4e2f-9181-37f47d3d2f53",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "49850796-cea3-4d05-88aa-a1906e0e1f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d685309-1f69-4b04-b14d-b968b94d73e7",
        "cursor": {
          "ref": "bdd070ad-6fdd-4330-a28b-dc896e7246f2",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e715bbbe-379f-4cb3-afbd-da60f5363977"
        },
        "item": {
          "id": "1d685309-1f69-4b04-b14d-b968b94d73e7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d06fa917-fce3-4719-a750-7f436924d762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e50c832-a8ff-4ca7-a6a7-83b11ceb986a",
        "cursor": {
          "ref": "61902b04-03c0-4b69-b957-6da39df45e09",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e1df3f76-bc18-4f40-901d-78075d9e5b43"
        },
        "item": {
          "id": "0e50c832-a8ff-4ca7-a6a7-83b11ceb986a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "61cadaf1-1a4c-4ef8-a132-9016bf72eb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64502eaa-4b07-4ca0-9eec-1ece734af15e",
        "cursor": {
          "ref": "e4663100-a444-4502-bf09-6ccb3ab3b5e8",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4493a9e7-8987-4005-8706-8dcdb338ef11"
        },
        "item": {
          "id": "64502eaa-4b07-4ca0-9eec-1ece734af15e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "970541ca-4817-4d4a-bef8-cb2f7e53a397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4757c81-bbf7-449c-b5e0-946c905ad601",
        "cursor": {
          "ref": "c4efef3e-acff-4536-ac56-82738e9906f4",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "be963d66-d840-4396-b621-ae7a43f50732"
        },
        "item": {
          "id": "d4757c81-bbf7-449c-b5e0-946c905ad601",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f67fd3c3-43d7-4288-baab-797c7eb0042f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4d4ebf-cc65-4c21-abcc-983dc42c78f4",
        "cursor": {
          "ref": "55e4771c-330d-422f-8f29-894e80b08528",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3bc153ec-7aca-43cb-9319-29bb73bb4f7e"
        },
        "item": {
          "id": "7a4d4ebf-cc65-4c21-abcc-983dc42c78f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1ea69638-6421-4449-addf-82bd0792fd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7f54e3-f30c-4b44-a1fe-d0f2b90dcd02",
        "cursor": {
          "ref": "5f77e503-deea-4f90-92e9-17316b7dddda",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "898c9e77-4368-4ebe-8dd8-d6f689504149"
        },
        "item": {
          "id": "bb7f54e3-f30c-4b44-a1fe-d0f2b90dcd02",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f7c08b57-1ade-45b1-8730-012b7cdcd627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396be25c-3f47-4dc7-a12d-d10ef31fb4ca",
        "cursor": {
          "ref": "1d2efb78-33f1-4223-96d2-b887a42db5b2",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "55f77c07-f451-4632-b7bc-d954e9936944"
        },
        "item": {
          "id": "396be25c-3f47-4dc7-a12d-d10ef31fb4ca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a524cd91-496d-4277-83ea-6b0945af1978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca712a1a-ca2f-44d7-851c-e6d27ca06377",
        "cursor": {
          "ref": "cb76172e-94e9-428f-a57c-e7449ac9ba01",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b0d3b94d-faf1-42c9-8a7e-06c1dc6afaf5"
        },
        "item": {
          "id": "ca712a1a-ca2f-44d7-851c-e6d27ca06377",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "37d761f6-abdd-4ba5-b5b6-20c5c81340a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3356ddef-6bc1-403c-904c-7a36c1889b2a",
        "cursor": {
          "ref": "44cb7e1f-bc19-4957-b42b-261bc6c4dedf",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "762aa8ba-ef7c-408f-bd77-c185989ff587"
        },
        "item": {
          "id": "3356ddef-6bc1-403c-904c-7a36c1889b2a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c9a530a4-d91b-43b3-a97b-954f0051fd93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dac7e0d-241d-4d97-ab57-491d5626854b",
        "cursor": {
          "ref": "f2689a16-a730-478b-b1f6-6098b24a18fd",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e08715b8-ce04-4f67-943f-9c5052cb177c"
        },
        "item": {
          "id": "2dac7e0d-241d-4d97-ab57-491d5626854b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a6bc614-5039-460b-bafa-d211fdb0a82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0a79d6-8dfd-4722-9415-1a2229687238",
        "cursor": {
          "ref": "904e9d3a-02f2-4b0e-99fa-52aa311a1dfe",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f7c06a4c-6386-4b15-97f8-792d50489646"
        },
        "item": {
          "id": "6d0a79d6-8dfd-4722-9415-1a2229687238",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a42d9b4-a03e-4923-993c-2d5cd378c82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09756bcd-6cf5-4b2a-aff9-f6083f5cc3cc",
        "cursor": {
          "ref": "c36f3ef5-76c5-40d3-9c02-5a4920568ec1",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5042d7ed-40e9-40a6-bbdd-6e95f3d11b7d"
        },
        "item": {
          "id": "09756bcd-6cf5-4b2a-aff9-f6083f5cc3cc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2fc0c768-6d4e-447c-a5cd-ebb330a4f86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8a52cc-bde9-4b23-bd56-d44a0648d0a0",
        "cursor": {
          "ref": "e27477a6-d177-4764-b20a-a7a2be6d4b4e",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8da827a6-b751-49ae-a4f9-eabd0e945f00"
        },
        "item": {
          "id": "2d8a52cc-bde9-4b23-bd56-d44a0648d0a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c125b1bf-f068-4bf6-9579-b14b23e70e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214918fc-5040-47d3-a984-4f1299cae9f7",
        "cursor": {
          "ref": "560497fc-fdf5-4381-b6a6-9d8609809976",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b25e1c1f-5b86-4207-ab02-e35fab707c4f"
        },
        "item": {
          "id": "214918fc-5040-47d3-a984-4f1299cae9f7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b1d9c147-2518-4931-9d3c-4cfeb0bdf9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0860d8-9e71-46b9-a110-39a6fb46486e",
        "cursor": {
          "ref": "2e84a41b-8dee-4578-9aec-ad1731a138bf",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "128be6a3-1f5d-41e1-bc43-23e6676da07e"
        },
        "item": {
          "id": "db0860d8-9e71-46b9-a110-39a6fb46486e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3cbfa300-655b-4c0f-a0d8-610dcc79a267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcd5bcb-eb88-4504-80a1-94b095637d35",
        "cursor": {
          "ref": "e809db56-4a6a-4450-a592-c483399cee0f",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43fcee41-4de4-43f1-99d2-06d39ff0e5cd"
        },
        "item": {
          "id": "dfcd5bcb-eb88-4504-80a1-94b095637d35",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "35ba9742-072a-4728-a94a-9848ff09b766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ace5ee8-114d-46cd-b26a-c8db19f75c2e",
        "cursor": {
          "ref": "8b1abbd1-474b-491e-84d5-408ae296f6df",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d78f200e-0c8a-420c-8f56-9d989088af27"
        },
        "item": {
          "id": "4ace5ee8-114d-46cd-b26a-c8db19f75c2e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0a0cac85-fd4e-4262-9b62-8dcba89b2128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb7dfed-ce31-4fcf-b717-bff35d7478e3",
        "cursor": {
          "ref": "2ed0c24b-17a5-4b0a-806a-ad3ab20f4238",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3056e90e-70c2-4d65-8e2f-12a1fb7cb8d9"
        },
        "item": {
          "id": "9eb7dfed-ce31-4fcf-b717-bff35d7478e3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "739ebba9-7c26-4604-9ddb-2df4539916c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7b7cdc-2fec-4ab6-8fd5-d3baaa7c3bec",
        "cursor": {
          "ref": "185892a5-8f6e-4b9a-b101-3db37b4a7523",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ba90e4b4-74b2-4a1a-a912-9cdc1b99d1de"
        },
        "item": {
          "id": "fc7b7cdc-2fec-4ab6-8fd5-d3baaa7c3bec",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "64e6f2e1-d4f8-4f7e-937e-dd61e6b1b4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a973b9-dc25-443b-acc5-36434b3acfaf",
        "cursor": {
          "ref": "20219fe6-670f-4291-90af-9144dacdd5bb",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "77324657-93f9-4c59-9b50-0e12645efa78"
        },
        "item": {
          "id": "e0a973b9-dc25-443b-acc5-36434b3acfaf",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b9d3fd45-d763-4889-8047-f2cb2065caac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c6461e-8586-4dfe-a27e-d51f2300b620",
        "cursor": {
          "ref": "050ccad2-557c-4dad-b355-01256927381b",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0f40bc83-752c-48f9-8a87-23580ed3f697"
        },
        "item": {
          "id": "b3c6461e-8586-4dfe-a27e-d51f2300b620",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8a5e7799-1c54-45a2-bf74-cb834b48395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8635ae69-202d-4adf-8d60-ab1527bf6831",
        "cursor": {
          "ref": "27f889d8-edf8-4362-a018-e0bc918d11e7",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "df3e26fd-2059-469f-a341-a65b0d187186"
        },
        "item": {
          "id": "8635ae69-202d-4adf-8d60-ab1527bf6831",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2f66ec82-8df0-42ea-861a-b7bb6adb386e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004ba4e-c528-4f28-a930-90de6d63b8f4",
        "cursor": {
          "ref": "a36539bd-5313-489d-827e-45df90bf349d",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "eb081e0a-71f2-4427-8fbb-daeac221d05e"
        },
        "item": {
          "id": "7004ba4e-c528-4f28-a930-90de6d63b8f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1d6df901-9fc1-46b5-9937-9f4e8831a0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b354c305-d8d1-4b3c-9056-ca348392a597",
        "cursor": {
          "ref": "5b62fcb8-46e1-4a82-88ff-eb2b694a81b4",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4478ba08-eda6-4f65-b46c-3ea05758edf9"
        },
        "item": {
          "id": "b354c305-d8d1-4b3c-9056-ca348392a597",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5869899e-01cd-4dc8-baa5-9963240de3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd22f91d-096b-4175-85f8-57256adb0b77",
        "cursor": {
          "ref": "84e5b478-f05c-4597-b284-b5a9f22a155f",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cee961f1-ddff-4eab-be70-23c0c81321b7"
        },
        "item": {
          "id": "cd22f91d-096b-4175-85f8-57256adb0b77",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2c92c2d4-c878-4c7c-8b61-da2dace04d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef36b988-4c7a-4ede-9d29-51fc915dee1a",
        "cursor": {
          "ref": "0a8d7b2f-a6e7-47a2-8158-6a919e0fed34",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5654b0aa-a9aa-47d2-9bae-7e751e0cb58c"
        },
        "item": {
          "id": "ef36b988-4c7a-4ede-9d29-51fc915dee1a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "880bf3f5-dde9-4863-b0c9-044d0e5e0566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2e963c-33ca-4b8d-8c36-b0060edf1d45",
        "cursor": {
          "ref": "52e1d0ae-de84-4148-912a-22744e4faf6c",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e1cbf40e-3bff-4c3d-bc13-5b951799d867"
        },
        "item": {
          "id": "3f2e963c-33ca-4b8d-8c36-b0060edf1d45",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8ab73ee-2e1c-4ee7-8405-50310781596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841e195a-797f-488e-aa1e-a31e4157cb33",
        "cursor": {
          "ref": "1c6f0abe-e6ed-4a45-9078-0ef440d849fb",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "81e8900a-7157-4a33-b826-91d525e1555b"
        },
        "item": {
          "id": "841e195a-797f-488e-aa1e-a31e4157cb33",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "23b8885e-4110-41f2-9711-002e77efa246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab1c775-fe25-4230-af49-f30279eca84d",
        "cursor": {
          "ref": "4c7b72d8-60e0-4b2a-a300-27b769b1707c",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2e36b82f-55ac-417e-8c11-d521b6b4363f"
        },
        "item": {
          "id": "0ab1c775-fe25-4230-af49-f30279eca84d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b0ff8c2a-d98d-4da3-b782-c04555b8e316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a1adbc-5da9-498c-b458-50c16dc79f8e",
        "cursor": {
          "ref": "92385110-81a3-48dc-b431-294e583df13f",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a78554c-ab72-48dd-9a74-c67d08e23998"
        },
        "item": {
          "id": "76a1adbc-5da9-498c-b458-50c16dc79f8e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e6ea0bf1-c7ae-40c8-868a-31e8a0c769a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede925cd-bba1-4468-a314-cd2570893bcb",
        "cursor": {
          "ref": "ef415304-8b3f-47e4-80bb-34bef34371a6",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "30972c3b-a99b-48e5-95bd-f2af37e125a6"
        },
        "item": {
          "id": "ede925cd-bba1-4468-a314-cd2570893bcb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "299ec4d7-d8d7-44c7-b97d-0d5986b3b9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14e8d72-0637-4d18-a8cf-f073c6db54ba",
        "cursor": {
          "ref": "f7d61222-81bd-41e3-a3ba-d273445c0abc",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "252b0460-7d61-4f7d-88a3-41c3f2dfd11b"
        },
        "item": {
          "id": "c14e8d72-0637-4d18-a8cf-f073c6db54ba",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eed87b59-f6d7-4a39-bf1b-d4bbe4fb88ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce74eb8-0848-4d86-98bd-0ef9094a0b4a",
        "cursor": {
          "ref": "d2779db2-2b05-4f54-8321-7dcf33083762",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a3c45326-ac39-4b90-bc6a-8f7bda3e8d31"
        },
        "item": {
          "id": "0ce74eb8-0848-4d86-98bd-0ef9094a0b4a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "501b2cfd-a97f-478f-9c8d-b841e5d90f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18996633-38c0-4ee5-82b4-ca8083e666c3",
        "cursor": {
          "ref": "55d1a117-a8c1-4319-82c7-a4edc84b9787",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f667ee23-34dc-4c3d-9852-df319c654a55"
        },
        "item": {
          "id": "18996633-38c0-4ee5-82b4-ca8083e666c3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "748a1fa0-41f8-405a-a911-42f675bdc0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8323e6d-b808-4173-90bf-8a40cc59594d",
        "cursor": {
          "ref": "e377f870-7842-4808-8420-daa23a84aaca",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a57262b2-7014-43cf-ad6f-59c1318c4d53"
        },
        "item": {
          "id": "b8323e6d-b808-4173-90bf-8a40cc59594d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "895c826a-feb0-4a34-8e94-4e6f0cecf673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffa5792-eaa7-4b8b-8b01-ce2da1eea3a0",
        "cursor": {
          "ref": "b1b5e21b-3d39-4bd1-8937-c6f975a27422",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e6c5ee36-1898-46a7-98c2-a48431b18dba"
        },
        "item": {
          "id": "fffa5792-eaa7-4b8b-8b01-ce2da1eea3a0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "39b98694-be53-4de2-86b7-67913975bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657660a8-595e-4fe0-b93d-251dccb27dc5",
        "cursor": {
          "ref": "f54cfe54-cd2d-4755-b7ed-859f4d67eedf",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1f42036-161a-4811-bd16-3dcc2a48b6a6"
        },
        "item": {
          "id": "657660a8-595e-4fe0-b93d-251dccb27dc5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "12facb2b-8d06-4591-8466-656b31c9ac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ae2149-4c34-44e0-8871-0af78b17f7b4",
        "cursor": {
          "ref": "616bb983-f805-4324-9448-b50941b03f17",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5c934899-05aa-490a-a70c-1a758c65738b"
        },
        "item": {
          "id": "93ae2149-4c34-44e0-8871-0af78b17f7b4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2560866f-a9cf-48ec-ad18-2be5cc1f2b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41601822-6646-49e3-b7b8-a5429fb68b6e",
        "cursor": {
          "ref": "bcb4702b-9a05-47aa-a1ec-715716ad4462",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9affe80c-05fb-48db-98fa-c6d4b1147932"
        },
        "item": {
          "id": "41601822-6646-49e3-b7b8-a5429fb68b6e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e169266c-1d9c-4c31-99f6-fb3472be4650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464a4c60-3c28-4d38-9eee-cdcd20f45e7a",
        "cursor": {
          "ref": "bf8ddb37-c5db-4170-a0a8-2545eb2b0db2",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3e08324d-71d1-4fa2-9d79-04655070817c"
        },
        "item": {
          "id": "464a4c60-3c28-4d38-9eee-cdcd20f45e7a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0fbaddb6-ceec-44a6-a960-d360a3985bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1126942d-021f-4d61-bd47-b64aa9a5fd07",
        "cursor": {
          "ref": "f81b9d0a-5778-4edd-bdc5-d15f8a2eda90",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82e4c4d1-0540-4a29-96c7-08f848634d8c"
        },
        "item": {
          "id": "1126942d-021f-4d61-bd47-b64aa9a5fd07",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a06bbc0-dc14-40fa-9555-cd38539d6908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe11310-2bba-4be2-b48b-5da28fc85a19",
        "cursor": {
          "ref": "74e7db70-3fa8-4c8c-8795-c13284cb3a1e",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a41d8417-3570-4e86-8b57-aa6c45df04c6"
        },
        "item": {
          "id": "fbe11310-2bba-4be2-b48b-5da28fc85a19",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "76ebbd23-7209-42b9-b5e2-f7a6ff3cde58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685c0b7a-6885-450a-aef3-b686bdd0ea93",
        "cursor": {
          "ref": "468d2f36-bf54-47e9-93c2-e5c77e522b35",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b1ed7e8a-b734-426b-9d14-d27681f792f4"
        },
        "item": {
          "id": "685c0b7a-6885-450a-aef3-b686bdd0ea93",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7250dba4-82a2-4884-81ec-63896220f1a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0deaa0-2e79-4692-b51e-cb5949e59557",
        "cursor": {
          "ref": "61c03a40-0a13-4691-8729-4a9995e3519a",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "99495ce6-d0a5-4b16-bf38-d652a990ff36"
        },
        "item": {
          "id": "6f0deaa0-2e79-4692-b51e-cb5949e59557",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "64e64d34-f96c-4efe-9ba4-35c9f86ddda5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e031aa41-c378-401d-a6b8-d9e9b34c5dc6",
        "cursor": {
          "ref": "7163f9d8-1d2f-43cf-9a83-cb6776e0b455",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6c4fdc6d-bdc9-44fc-b4f4-0ea6a584c425"
        },
        "item": {
          "id": "e031aa41-c378-401d-a6b8-d9e9b34c5dc6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fdc46d8c-a9f9-4dcd-8a7a-6ffea2433710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e2a24c-6cfb-4941-9ff7-fbd6d24ed87b",
        "cursor": {
          "ref": "67a55515-45a7-4e56-bdb8-5430a42b6634",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0dbfadc-3bb5-4d8c-8e6e-474665d1031a"
        },
        "item": {
          "id": "a5e2a24c-6cfb-4941-9ff7-fbd6d24ed87b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "128cde9e-dd9a-4528-b73b-25118f1ad006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c575d08c-b512-480c-83bf-969d51a02113",
        "cursor": {
          "ref": "3735ae21-b611-4057-91c1-bcacb5755787",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f26d80f7-7456-4b16-9967-12e8349127e7"
        },
        "item": {
          "id": "c575d08c-b512-480c-83bf-969d51a02113",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb9fd782-560c-42dd-b131-bccc88918cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3c6e2a-7d0c-432f-a811-2975b265b411",
        "cursor": {
          "ref": "f280d5c1-bd0a-4072-968b-f0802fbbeb1c",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f3dc1764-b638-4797-8d87-1488983d4ed7"
        },
        "item": {
          "id": "0e3c6e2a-7d0c-432f-a811-2975b265b411",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ec05c6f9-3e27-441a-b1db-030dd5390041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa82619b-3513-4dc3-887d-32ebba67165d",
        "cursor": {
          "ref": "a7b7d9f3-066a-471b-a03a-4b0a9864d52a",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "392abbc3-a7d6-48c5-a74f-953a43edb317"
        },
        "item": {
          "id": "aa82619b-3513-4dc3-887d-32ebba67165d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eb06565f-be3d-4e74-9c11-ba1a9bf48c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5107a8-6bfc-4338-b851-2a696d4c3b96",
        "cursor": {
          "ref": "2d6334a3-c343-4f03-aae6-47a57f21cd1c",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "320cb8a5-12d4-4747-a79f-53a5ceef2f5f"
        },
        "item": {
          "id": "6d5107a8-6bfc-4338-b851-2a696d4c3b96",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0a4d01b9-a269-4d35-85dd-5c4fe7283eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb44301-1c0f-403e-b9fa-819bb3d88710",
        "cursor": {
          "ref": "50010eb5-35d6-4992-88f4-5ef41ff48e84",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "14b87a3f-0a3e-48d2-bf79-732917d53a2d"
        },
        "item": {
          "id": "0cb44301-1c0f-403e-b9fa-819bb3d88710",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "368bd8d5-1acf-4caa-b660-9022f6fec959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bff52e6-b0ba-436e-9897-7cec28734dba",
        "cursor": {
          "ref": "6b9ea7f9-6e36-4842-b99d-3b858e21cd1d",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f9893177-ecf2-4731-80cc-e867a8793dd2"
        },
        "item": {
          "id": "6bff52e6-b0ba-436e-9897-7cec28734dba",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99838d0e-fb74-44d5-b513-f7732ec29e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1121fb94-3c6d-4e5f-9399-86b26bf76d3b",
        "cursor": {
          "ref": "5d202d3c-78ed-4e82-9ead-9cc78bf74f83",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c381748c-f731-4347-9e74-779899115c74"
        },
        "item": {
          "id": "1121fb94-3c6d-4e5f-9399-86b26bf76d3b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14a6b198-d78a-423f-bc6c-736da583e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4df7694-c048-48a6-a5ff-d3c63a14c253",
        "cursor": {
          "ref": "1bdbabba-2267-4dc9-b50b-961ad00882b8",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "bc81c798-0aae-4d94-85dc-cfb755872fb5"
        },
        "item": {
          "id": "d4df7694-c048-48a6-a5ff-d3c63a14c253",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "78f9a00d-3ee5-487f-9224-82b0848fcf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66253d18-a633-4943-9d03-80742f5a2223",
        "cursor": {
          "ref": "491f0a99-63a9-4dac-bf17-7672ab6bec9b",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0bb6b7b8-8091-43be-9186-d63d3f4e47b9"
        },
        "item": {
          "id": "66253d18-a633-4943-9d03-80742f5a2223",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "85317cf8-d655-49d0-82ea-a453e3cae069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd27a90a-a814-4393-8f01-e670adaec297",
        "cursor": {
          "ref": "38c9274f-1456-4247-be4a-4d82051b74d5",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "124a561c-1e07-472e-b2a6-40d6d4728f90"
        },
        "item": {
          "id": "fd27a90a-a814-4393-8f01-e670adaec297",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e9f16cd0-ba20-41fa-8a17-9f74c492dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d17e92-0557-4cb0-af9b-7d46921f6089",
        "cursor": {
          "ref": "b6c79960-3820-41aa-8fb2-16a2eb903e33",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "11e9fd1d-439f-4d02-9d93-c813f8561c00"
        },
        "item": {
          "id": "43d17e92-0557-4cb0-af9b-7d46921f6089",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d6f93f7-62ea-4471-b41f-530e53ef3482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8d7225-b11a-4655-bdb9-5399c6a17502",
        "cursor": {
          "ref": "b16f2fb4-c56d-4d2d-80f1-814a69c741c3",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ab940677-e195-4579-8a6c-6a7d101ef0d4"
        },
        "item": {
          "id": "ea8d7225-b11a-4655-bdb9-5399c6a17502",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa3a711b-edf4-40b7-8e94-29e78af8721f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a555794-82aa-4a1d-9af0-a904ac528f2c",
        "cursor": {
          "ref": "ea69ea67-d8bb-4418-afc7-a9751ae008ed",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eb468d6c-788d-426b-8a66-96479b9d8a5d"
        },
        "item": {
          "id": "4a555794-82aa-4a1d-9af0-a904ac528f2c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d364d97d-c0c0-4bf5-bda5-83b65953b7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6990f402-82b0-46b3-9380-5ed7845406fb",
        "cursor": {
          "ref": "584d1388-1267-4417-9aff-4e01675e5981",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f38c9628-966e-411c-9e48-73abde87e75d"
        },
        "item": {
          "id": "6990f402-82b0-46b3-9380-5ed7845406fb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2d7222ac-bdb9-49c3-9dbf-3f22f903bba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8eb2fbf-1cda-4dbf-8b75-4d17960ea614",
        "cursor": {
          "ref": "464d2cd3-0c05-4855-9b76-a9b9396ede4f",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "44afa526-052a-415d-b998-851b9e72b43b"
        },
        "item": {
          "id": "d8eb2fbf-1cda-4dbf-8b75-4d17960ea614",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e5b0eb81-d1fa-4050-913d-778c9bd3e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8d3c88-c366-4fe8-b349-1b16080431a6",
        "cursor": {
          "ref": "f1e24e99-004f-4aaf-8274-7f3e105c4dde",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4c218858-759d-4b91-aad3-8aeb02b56deb"
        },
        "item": {
          "id": "ac8d3c88-c366-4fe8-b349-1b16080431a6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fff9460d-4196-4533-9041-a758b24df3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86877f29-c941-48c5-9241-0f6b5e7bae8b",
        "cursor": {
          "ref": "9a6e051a-682c-4134-a151-e4f2ff54b98b",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2dd27c38-3e44-4f65-971d-3dbec913a214"
        },
        "item": {
          "id": "86877f29-c941-48c5-9241-0f6b5e7bae8b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e1343f79-d339-4c66-820e-264a1f32b400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eb42f2-8090-4fa5-967f-2e0caeb881ea",
        "cursor": {
          "ref": "e13409c3-c4db-450f-b4c9-0f3b2293778a",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "01bb0522-eb0a-4830-a27e-8ece48a5c03e"
        },
        "item": {
          "id": "76eb42f2-8090-4fa5-967f-2e0caeb881ea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "722cb043-39ac-47c7-bc68-55d5d5b0fdc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a638072-ae2b-4162-a99c-0de3c8beb4e9",
        "cursor": {
          "ref": "fcba3ef9-3827-409f-a434-bc92572a481e",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "63b69f1b-9819-479e-a256-32629da0ffe7"
        },
        "item": {
          "id": "1a638072-ae2b-4162-a99c-0de3c8beb4e9",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "203a518e-a7e9-4c1a-a542-d8046bcb4c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485a3860-b4d9-4fc3-ba2b-42a3a99c4cd8",
        "cursor": {
          "ref": "d6ffd532-861a-4084-8fe4-ef2d5e707500",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3fc73bec-a838-4bfb-b7cf-f6bb36dd56ce"
        },
        "item": {
          "id": "485a3860-b4d9-4fc3-ba2b-42a3a99c4cd8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3b2476fe-fa58-477d-937c-f54cfa27442a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0695a6-58a9-4949-8d08-a5afb1d5f0f4",
        "cursor": {
          "ref": "1f93f9b2-457c-4a1b-b27b-f8b886fd3ebe",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "4d6a5553-c28e-4210-97d2-5f53f3003ba7"
        },
        "item": {
          "id": "8c0695a6-58a9-4949-8d08-a5afb1d5f0f4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "72e08a4a-5e27-4a34-a72c-76548f4f91d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eead0fa1-323c-4099-9d58-83c34e41754c",
        "cursor": {
          "ref": "11ee4bb1-0ac4-4125-85f9-4b849dfdd817",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d45b52e6-db6d-4993-a134-21966c3476dc"
        },
        "item": {
          "id": "eead0fa1-323c-4099-9d58-83c34e41754c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ef7b8725-018d-44ce-8b38-a103a4a27330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1814d149-1434-4c6e-9dba-cee9b6a9bd7c",
        "cursor": {
          "ref": "7feea83e-0307-4287-b63b-97e9ef4cd878",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "067adc75-0719-4280-b8fc-2f65c024de74"
        },
        "item": {
          "id": "1814d149-1434-4c6e-9dba-cee9b6a9bd7c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "705b9dd8-b3cd-4fba-93fb-f31cbfb04cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52cf3c7-0cd6-4f13-80cc-61332fb5ce9c",
        "cursor": {
          "ref": "1b895573-5595-4aa7-8d70-ccff779a956a",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a59c995c-2dff-49ca-9241-18dfa2ba6070"
        },
        "item": {
          "id": "d52cf3c7-0cd6-4f13-80cc-61332fb5ce9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "db32639b-16f4-420d-86c1-1e6fca2cd5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809d8b82-0162-4934-8156-f0095b10c889",
        "cursor": {
          "ref": "7a68bc88-0191-473c-9633-fb4ca2d1ef45",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c89acd3d-0035-4d60-8549-0a384101ed9c"
        },
        "item": {
          "id": "809d8b82-0162-4934-8156-f0095b10c889",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4a3d6460-789d-4dc2-923d-0fa5b1db5b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a132c3-11b7-4e9e-b07c-cc21a850e3cb",
        "cursor": {
          "ref": "27a87932-8f24-4596-ae2b-1583223bb4de",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "80f0caad-b1c4-47b3-852c-dd216d0833d0"
        },
        "item": {
          "id": "04a132c3-11b7-4e9e-b07c-cc21a850e3cb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b085e759-3179-4ba5-99a9-a240c06b9eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87815131-c4c8-45cd-ab95-97ab343522c4",
        "cursor": {
          "ref": "de9e9fd9-7b0d-4522-9ff6-d8cfd2d3285b",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b472d1cf-9527-4316-bcd1-7293dff9d88b"
        },
        "item": {
          "id": "87815131-c4c8-45cd-ab95-97ab343522c4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f2424eec-c400-49b2-b07c-ff433e71fba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c68ed3-fc5b-4b08-8197-87ed919620be",
        "cursor": {
          "ref": "ca3acac8-30dd-4538-87af-758a754ed3ef",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "2e8e0bd6-964c-4a2c-8bc0-5924cc3901af"
        },
        "item": {
          "id": "f4c68ed3-fc5b-4b08-8197-87ed919620be",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3111c7c8-e03d-4a39-9bbc-eca4efb6f34d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace1e1bc-7761-448a-8c04-9011d8caa36c",
        "cursor": {
          "ref": "07937b36-e11c-4e11-af44-0237cd3f252a",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "db2fa47f-edbe-4d85-b1c5-c7d0da214b29"
        },
        "item": {
          "id": "ace1e1bc-7761-448a-8c04-9011d8caa36c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7c1f2636-e094-485b-93d9-59d4defab300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a306feda-a35f-4b59-8b24-d04bc956b04a",
        "cursor": {
          "ref": "fab29b1a-d603-43e8-9288-26c209843149",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7f9da6c9-e2ca-4b93-ac53-19066d3f7434"
        },
        "item": {
          "id": "a306feda-a35f-4b59-8b24-d04bc956b04a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "efb2d0d5-fd6c-4210-9f89-39aac3b94df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45726f8-e778-4eae-b634-7a6388c259ef",
        "cursor": {
          "ref": "f0627f3f-51dc-4373-ad92-a7c828cdc20f",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "09717a8c-eccc-4b2d-8746-1ffad1294534"
        },
        "item": {
          "id": "a45726f8-e778-4eae-b634-7a6388c259ef",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "93997c01-e61b-4bbc-84b8-d9229602e528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65edcc2-871a-4bbf-a814-f8f16cf4dbbe",
        "cursor": {
          "ref": "fa07dda8-564c-4141-b6b8-7b3c51aa2aa5",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "13b71606-e50b-4154-96d1-237f1aebaedc"
        },
        "item": {
          "id": "b65edcc2-871a-4bbf-a814-f8f16cf4dbbe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ebabb51d-c85f-4052-9cbf-f9b79827b8bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f40805-750a-40dc-aa9d-90997433f1f8",
        "cursor": {
          "ref": "a4ca65df-407c-46e5-85b1-5fe9e45c97cc",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6597b0c8-39b8-4a82-bc94-524f028f6e16"
        },
        "item": {
          "id": "b0f40805-750a-40dc-aa9d-90997433f1f8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a64eaea2-ded9-493d-9aa6-9badf97d3180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f96f67-957b-4460-a38c-2bb8ab05c521",
        "cursor": {
          "ref": "ecd473b3-b601-4171-b1ee-399356e44fe9",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "236075f5-38bd-4028-ad24-b02a3b312342"
        },
        "item": {
          "id": "d4f96f67-957b-4460-a38c-2bb8ab05c521",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3f06f0b2-6822-48e4-a588-517df69451ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be830129-8307-4e36-ad80-850201d43c5c",
        "cursor": {
          "ref": "c47478b8-7291-49ff-b965-1ddcf0b8f3ca",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c4b8ac94-f4e2-4dc8-a339-fc0a952fd7de"
        },
        "item": {
          "id": "be830129-8307-4e36-ad80-850201d43c5c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2b1b512d-3a55-4ceb-999f-546d49fd8987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 728,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f39014e-a17c-4ce8-86f8-7d4b318cb0dd",
        "cursor": {
          "ref": "7e7e26b0-7b52-40a9-9686-f02ed8a2759e",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "09e7ac4a-25dd-4a55-bc1e-503fec63cf32"
        },
        "item": {
          "id": "6f39014e-a17c-4ce8-86f8-7d4b318cb0dd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b4bdf10a-53b6-427a-974b-fb76070c1210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f451066-f14e-4a35-8221-cc6c245e3539",
        "cursor": {
          "ref": "919143c3-af39-471d-a60b-e23e72a11a32",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1d28c8af-1f2f-4560-937c-c8724e57f3e1"
        },
        "item": {
          "id": "4f451066-f14e-4a35-8221-cc6c245e3539",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "424b7e1b-13d6-40a4-8441-63e8662ecf39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f152c77e-5282-4117-a482-8d28374f5e88",
        "cursor": {
          "ref": "156f1224-3ea4-497f-b58f-7c730b18b7cd",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "85c35d50-c23f-4bbd-bab6-9c39fafe0ccd"
        },
        "item": {
          "id": "f152c77e-5282-4117-a482-8d28374f5e88",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8503cb71-3731-4c64-b94c-28484e16066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c129286-79ab-463a-a7d7-2550e2085b52",
        "cursor": {
          "ref": "f7cf9313-e309-4b5f-b28b-1d2dfb8e0980",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f44a0dca-7172-4e33-83ad-d3ef54f8685d"
        },
        "item": {
          "id": "3c129286-79ab-463a-a7d7-2550e2085b52",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "03fc83c5-bfd9-4576-a83e-76ef4de50ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314164db-9b46-4d85-ac47-c6f88cd8d31f",
        "cursor": {
          "ref": "9d3c8184-cc86-40e1-bb99-45cd705d9505",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f468cd0-647d-4dd1-8ac6-735371763be5"
        },
        "item": {
          "id": "314164db-9b46-4d85-ac47-c6f88cd8d31f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17e8e686-a8c6-44c0-9354-80fd5e4f94f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d6b25e-7025-4e9c-a8cd-6c43f57dcdd3",
        "cursor": {
          "ref": "5d435798-225c-4393-8f3a-6f812204f4d1",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1c741310-98dd-47f9-9417-1606b9efb680"
        },
        "item": {
          "id": "14d6b25e-7025-4e9c-a8cd-6c43f57dcdd3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8640d40b-a2be-45f8-bae2-fc6486f86dac",
          "status": "OK",
          "code": 200,
          "responseTime": 770,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "069f59f5-af79-43c8-bad4-08c74ba94d1d",
        "cursor": {
          "ref": "58b32641-36a0-44bd-a3ce-4f5a010cd2d5",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bbb3bd81-26de-46f7-97a0-1ec0ab99e23c"
        },
        "item": {
          "id": "069f59f5-af79-43c8-bad4-08c74ba94d1d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bacaf306-a830-4d71-8b9f-5fe07f8b6dd2",
          "status": "OK",
          "code": 200,
          "responseTime": 2003,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d89594-09c3-423b-9582-57fcf79c6e43",
        "cursor": {
          "ref": "343e2be1-95c3-4590-9366-58f988aba4c0",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "77835c01-46da-48f2-8dea-c447f805efc2"
        },
        "item": {
          "id": "63d89594-09c3-423b-9582-57fcf79c6e43",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b7e9229e-96bf-40ff-9eaf-72949915f4ba",
          "status": "OK",
          "code": 200,
          "responseTime": 1766,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a535fa-e63e-49e4-87f4-8365443ec65b",
        "cursor": {
          "ref": "658da5ba-fcce-4482-a9aa-657fb8eea03c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ceef374c-d4c6-4033-acf6-e15008341483"
        },
        "item": {
          "id": "e8a535fa-e63e-49e4-87f4-8365443ec65b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3ef58327-86ec-4696-a9fc-9f4528c1c71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a535fa-e63e-49e4-87f4-8365443ec65b",
        "cursor": {
          "ref": "658da5ba-fcce-4482-a9aa-657fb8eea03c",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ceef374c-d4c6-4033-acf6-e15008341483"
        },
        "item": {
          "id": "e8a535fa-e63e-49e4-87f4-8365443ec65b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3ef58327-86ec-4696-a9fc-9f4528c1c71b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1b59e0-0e88-483b-b700-05bb05ac6dc6",
        "cursor": {
          "ref": "e445b8d2-d5d1-4cc1-9b11-522e52a55336",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "083229c5-2805-40b9-bf06-7a0dabc3912b"
        },
        "item": {
          "id": "3c1b59e0-0e88-483b-b700-05bb05ac6dc6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8c700723-6634-43a8-a32f-2432b25aa9dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9084ddca-3bf4-45e1-9d3f-67d8e3cbc9e5",
        "cursor": {
          "ref": "808df45c-efef-445c-b3a7-d08e0ca78b08",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fac68965-1b4d-4d02-b755-6e91daf2e684"
        },
        "item": {
          "id": "9084ddca-3bf4-45e1-9d3f-67d8e3cbc9e5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0bba19ba-702f-40c5-9e0a-5d257def1ef7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}