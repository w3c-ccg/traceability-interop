{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ae029143-30cc-48cc-86c2-97a966f98c11",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cd2835d5-c3c3-4e99-87cd-75137b5fd933",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d5bc6835-dfe4-444d-a1c2-30e68f90fb8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cebb75ec-9420-4d14-b9d6-aa791d533317"
                }
              }
            ]
          },
          {
            "id": "a8063d66-0229-4e1c-9061-4c9ea53be31c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e08de48-4a3c-4389-a513-16168457eedc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95f81821-9e50-4038-8bf6-f1a0831b071d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d434a50b-f2a6-46ed-8aa1-c55d40efb843",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ef6881d1-cc7e-4cc8-858e-890ea0f606a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eac72617-3550-4433-bf93-5fdc79d9e963",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0111b30b-5eea-4a44-bb8d-de4c13989888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6b57891-ce6d-4b85-9085-8d22e3894b6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "032cbb6e-95de-4304-a640-76cf9c7bbe1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "130ab76a-3a78-4cba-aecf-1442c5a6f5c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dcf0d2e8-61af-4493-ab34-ea32026005c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc72ddbd-f447-4659-8b65-9716cbb1c22c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f53febb6-cd28-4db6-955d-e193c42d2397",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f061ffce-e296-47aa-b6bb-3caa878398e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed4a0e65-c235-4101-aa27-0811ba7be072",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cb72bb2-96ff-4eab-8fe7-7918b4326fe2"
            }
          }
        ]
      },
      {
        "id": "d8922575-9f7d-4155-822e-2eb700ba71ff",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "faa8b497-e4d1-4c7d-bd36-8997e0fc7aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26c0d53c-2ff3-4b77-88ca-9caabfa1d614",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7979e651-e4ea-4437-a3fc-b663b26dbf29",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fe7ee1-be1b-4e1e-b14d-5affc3cc468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd9bbc09-b24a-4788-9a36-399d8d6e7228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f857fed0-fc46-4349-b8c2-5e990f571a9b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367ad207-e4f1-4715-a5d6-5735ab744acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "232e3ab2-a061-4b2c-a6d6-1b8daae2972c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d865e79-1ad6-438f-81f7-68ae64371f44",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7db8fe8-9784-4d22-ae24-b258e1939cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2696fac4-e86c-4f7b-a509-be656203aaf9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ba25d39a-0dd8-461f-9fa5-c7e9fe0c39e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4ed29966-86d3-4cf2-b641-d3f6d9bbffc6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f2a276-e951-42a3-932e-886c39225a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe45457d-c17c-4a36-a814-fd4b0bfa2454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846780c7-6fed-4819-9a16-3fe6c9174830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28256b57-a547-48a1-a7f9-ec15af742bfe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "77f8936e-2bcc-46a2-84ea-2018ebe8928e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bbf67954-2b41-4dca-9f94-2847d74af35c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67a74a40-d746-48d1-a90f-55a5860d9e2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "403eef2b-50f6-4816-ae5a-2f2ff23eed5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4619c3a-fce3-454e-bed1-60740df32aeb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "33195c13-c8f2-4def-a292-8130957f9b4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e542b94-9fcd-40d8-90f2-6b9fcba03f8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9672b1c5-7bcd-4206-9adb-39cf2fb488a9"
            }
          }
        ]
      },
      {
        "id": "4348b3f1-31a3-486b-9d44-29c6694fb65b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "27c05063-0610-49db-bea6-a739dc977987",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a58babdf-f131-422f-a221-a387e7eeea94",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "307c018a-32a2-496f-be06-68643d3c16fa",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a47de37-7a91-4852-beb0-645b7ae3a54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167128c2-5933-4910-ade5-d80fae82419a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eaf2173-dbef-4dbf-929c-b17983a5113a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42ca8c9e-64a5-4bba-8f57-30dc80b33765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982e4a0a-c973-477c-837c-8e8fcd8c721f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a558e51-f0d0-428f-9e53-7f93105d1acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabf855e-1383-41ac-971c-3020ea8dcc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e0a4f0-c9a3-4f87-a6a1-f00bd0c6b4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2072dfb1-bfc2-4d3b-a93b-4dd792189791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc6c93c-2820-4830-822c-963cade084a5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c29ff50-0832-4e6e-9506-5d85f775a925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7a2004-fc7b-4264-ab4d-00461e66a2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb8d3e-3b9c-43c7-abf4-e177b8a14302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d64285f-6643-43f9-8317-afda97a50f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f2ad02-9bd4-4f35-87a1-15aa857427b0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4f4666-898b-4930-8455-17719377f979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2709c0a0-1473-4077-810c-75be1056b7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c36534-9db3-4f10-909e-5bd0ff26aebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314e16a2-24f9-409e-9547-6d2e38631beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ab414f-dc98-47e1-baee-b4491fe62d14",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f89d6a-6287-4869-ae1e-585590a019a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a35f8f-71a5-41ea-82e3-ca0b841168e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31270a9-7ea7-4960-a70c-3d5c1d938e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d66afa59-1af8-4d0f-9455-2ac2c8c73a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a7ce67-0338-44b0-a30b-c723e332d081",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4c16df-4c0f-4584-8b1a-df0d891154f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa50b223-8a2b-4a7f-9e05-20175052a044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e50ac88-4e88-4204-8da4-f2d6e1fed152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ed32ba6-b392-4b43-8a6f-6ca3744db2ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28978e9-f79b-49bd-95e5-8f403cc972da",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9494087-1742-425e-b15e-b48626e98019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef4f57f-3998-48c5-9b95-0a766d746c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0891fa97-cfbb-436c-8b74-23e6b341cf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8074ffd-6090-4f76-bc0c-3060d7f2b334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c59bdc-da8b-4e9a-a4d5-983b22fc6ccf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acf0264-9295-4248-89dd-e1a8308f8ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6d5c9f-fca6-4a4e-a7e0-353a9b81d494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991b1a6a-351c-4544-8b3e-600bd51e5c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43849cfe-51e9-43b1-8c35-e7c80dd10d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf42410-0feb-4b4a-b9c1-a1e07fbc49fc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270836f3-069e-4d35-a5ac-adf82f1d8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17ae213-1fbd-4869-bb98-395b54777e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6cecba-8468-49a0-8d9c-436632a3bd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f5f1348-4abb-4636-bcc3-18e7fb963569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadc0513-3aa5-4a5b-b032-4cb759ef2eb2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042b036f-9d2b-43ad-a148-aa2f05614054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2021c7a3-c5d2-4c11-b4f1-0fe4c54fa3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98df4010-6d44-466f-9539-2e01ef5a2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe71635f-8c43-4630-9765-83d59152a08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d7d068-70c3-4c80-9119-3993002c4328",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6acad3b-6f9f-4677-9eac-d57a33b30768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93307fd-5e06-4522-acd8-d38ad7eac859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c319fcbb-0e4f-487e-a8b2-9fd61282a3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0ac746-dd17-4374-a14a-afafac347f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80be8c41-5c95-4b95-9394-36a84a4e065c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46423aa7-6c3e-4841-bd7a-8f0b13d0aa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff9368d-96f6-418e-b0e3-fcd8f019e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b583433-5fa0-4894-8150-895417e91873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36984a19-12f1-43e3-917a-b07b6c6baf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d648909d-d5c8-4c4f-811e-987ae861dfc2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bd0865-17bf-482b-93ab-e28ea4696de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffedf051-d69e-4ecc-bfd4-9a3e55636191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd60cee-1e83-4484-9c80-3e0a31687787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd79f578-3849-4855-8f95-7ba85a30c8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa85bdc-ca41-481f-98d1-e7cf8871c764",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82cfcb7-10c8-412a-9714-cad93be0899f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bb10ef-d5dd-44ab-bd57-10bb75f5fbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfb5ea4-aa00-4798-a98e-8a1b140dadaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "478fa8a3-005b-4a3a-8dc4-373b3a69b095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391ba32b-ac0b-46bb-a206-bf7de00d8b9e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba62d556-9867-4fbb-b22c-874e4f49e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0088843a-f859-440b-a801-2b3d8e2fe80b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debcc805-eb8b-46bf-a22f-1068200b3d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c94da1ba-e9a8-4ca5-945e-f886c2e7faf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc37c1f-02ca-4330-bab9-969fdecbeb1d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e416d6f-44b8-4b49-8c3b-3132224b3346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb7a317-5d38-4573-8eb5-1ed2505d83d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00e6a73-c65f-4154-80aa-a0fc2c19dcd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73acbe12-8e4f-42e4-b380-935fcbba3d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eb0793-a50a-4824-ac0f-c23b312bb62f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a75f51-53ca-470e-9885-a67e836f638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ef7c92-6a0f-4315-83f9-b2916f6e1775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab5ba33-e9f5-4f07-be9c-09c12b4da397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec123f9e-3e93-4ce3-bf00-a4e9721a3c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd16730-1b93-4d28-98f0-e0df6014062e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c29c75b-5702-4a36-b4d0-73fc6eae6b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8abf11-dde4-4787-9af9-f1ab24ff7811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d07bf8-7169-4ce9-923c-9e2bc04f2262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "464f3327-18d0-4b31-9de2-98a4b750bc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dc3aa8-d0ad-45f3-9016-007b71672f42",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7ec274-0c98-458a-b54b-b0a1c7aae178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1aa85e7-386f-47d7-a37c-5dd485f6f644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92c494-d5de-4437-85bd-a06616986e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ce16d4-1344-465e-b387-38eb8557ca6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce0ac94-1952-494a-95a9-7d88827f7df9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d568d69a-2e4e-493e-aec1-984420cd6bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1604672b-5fae-4d2d-90af-a49872e62163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61463232-733c-4826-8daf-fda2f9a70592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef17e346-30bd-4d1b-8f4c-ad118ff5dbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a571147-0947-43ac-8048-029b81124091",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fbf7e7-5f65-4a14-8e4a-c66f4d361430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c77f31c2-4f23-4bc4-b23a-1c25ce8a4cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bf02c5-3862-43d1-ae6a-a8a8acc380b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ea1a86-84e0-4acd-a8f1-6ca847eebfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd13484-7655-4bac-8c5f-4be5844e6249",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96968566-29cb-4764-a8e2-49394c6ea2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fb6c7ec-bf54-433e-b970-3b3c8537fb0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec0379e-e6bf-4030-a21c-a9d6a4982a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d420bb0-c953-4a9b-b21d-88f4ce128771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8988b7-7459-4be1-b5ef-187628919847",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1e82cc-c7c4-4e83-909a-82fd16ae45d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d251d1-bcc2-46e8-b9a6-a4ede15b1a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90402027-3c6a-4cfa-aed0-6e6fd3f65853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9231eb88-1910-40ba-a530-b24ac491883b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd93f3e-53d3-4ff7-bebd-44528f1a06a0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037902e4-9268-4c23-af3f-3b66c4a7645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b22648-3b36-4b50-a979-321bc34e6418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c13344-7e08-4be2-88cf-5b835960d4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "119cfbf9-4b4a-4614-a0f7-3d90ea7a24b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6e0955-1e1f-4b32-951b-bc22895f7550",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34369bc6-fffd-4d6d-b877-020c44affc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da519008-0c38-4384-85d2-3b315926c245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4c8d3c-8a7b-4c06-b0e6-390c9933fd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba40ccc6-d167-4506-b33d-e4ce85af3857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1203a951-2fdd-4ac1-9808-aaad1586a9f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeaf666-d0a4-4f80-a612-32a1d7938ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e4fd9fe-5c0f-42b7-b7a1-dcd5e81e17fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513609c3-ddcd-483d-941e-03cdeb26ca31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9449968-579f-462a-81ad-8ef0e7a3aa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ec3f4c-0176-435d-9a98-f99bfeb6fe4f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad503013-1662-43a9-9fc7-51f12d822da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2001ef4-bffd-4e9b-90ea-07c187e9ac08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecda3c46-6964-45de-af81-78418d4ccc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fecec9c-3b19-430f-9abc-4d747bc42fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e9987b-515f-4ab3-852c-799053f4ffb7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929009c6-fe9b-4eb3-bc17-d3d13cf1f311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96a5d63-04f5-4809-a31b-a7c742ce2006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83829102-a2f9-4754-ae34-d77a0859d444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a7d6a91-07bb-4cbc-9145-3751a6a99293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0caa1b-db01-41b6-97d7-9150baf71f7d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3fc431-1ea2-49c9-bf81-7cd8f7f6b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9b612c-9876-477b-ac5d-569a28e07671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714918cc-7540-45f3-95e5-c3147a6c1cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd21bf27-5703-4473-9714-cb90db8a7a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf2b6be-50a9-4d5e-9198-2f344e887377",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef691c9-b73d-4569-b48b-cdbc8e2b93ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c58577-a565-4a72-99bc-734a9f36532a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52929a9-ad19-4c8c-ba2b-eff249d4544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53247098-7da0-4a0e-ad2c-756606dfd7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3580cf33-9104-4b1f-b17f-609a4f110205",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0e255c-2518-4c73-952c-1721c6bf14de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89de12c5-d415-464a-ac70-a10624e9bd4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211d3d46-eda8-4142-96d5-1237e4eeb2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1758f59c-f8f3-46d7-9c3e-703003eae24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743c3457-9054-40f4-9ed2-e92dba44ac79",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f4c85f-b1cd-49f3-90ee-ab7519f92be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bb5e8d-0d80-40a3-8673-853b44fd652c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb6d5ac-c096-46d2-9596-e83c036b20c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a69295-3a8c-4b7a-a653-4d878efc0411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a647b79c-20b6-4d76-aaab-0571e10c92b6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce47668-4106-49d1-b866-e75478dbff47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c63e344-c843-429d-aabd-ec1dce900945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789b93d0-5279-4754-b551-41ace6848787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52aa2048-fd0d-4fba-b255-14d7962d2060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84602f27-e3fa-4944-b72d-8230368106a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19630f85-dc53-40a0-adb0-8cdd888796ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd8a040-3fb9-489b-aea5-ab5861864b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3a04bc-a3ef-41c8-a949-eaebec87bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c577be03-70da-4bc6-b091-b1590095c1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40b06ea-f9fb-4ebf-b1b2-17cad466ce72",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123adc02-0343-4ac7-b1a9-de2a46f0f983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae27742-5f23-4fed-a019-9e2d40fa8b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7ccdf-f849-4ef7-9cdd-3ee3796cff00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f0624d3d-4476-4538-a3c3-5f45f6c3d6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fe2019-c83a-439a-9f3f-6b52bf84f067",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d616707b-4fa7-479f-ae45-1419aa6fc24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f2120a3-74d4-4a3b-8385-2abe03c0847a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf5f295-12aa-43cd-a48f-82804863d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76f89265-e5ca-4c93-94b5-ebe455ea7958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2d8b7d-872c-4a8c-b6fd-0f3b199f75b9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd56dee-20b1-4550-b553-8f00e2e16a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbc2d24-4448-4d71-8b3d-7e2224d794a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29df98c8-d3b8-4879-a349-decf996b2416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfd076b-e7e7-44be-95d4-2b26bee9470c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae025e6f-de6b-4637-aa70-83b0978742e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2a6d1a-26d6-439b-84a0-bc7a5facfaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c88bce3-aa71-4384-84bc-1fa884a003a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcf22e5-9e59-4789-9003-68f661ef8d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e42a2ff9-1afc-4af9-bc23-2885968fad12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d8043f-99cb-48c3-a3df-2c6508294006",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaa7707-67cc-4fd2-ab18-ddd367366c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c011a04-7b37-4477-b2a8-04e01c611674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11c75d4-5efe-4603-af1f-18eff95eee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be3b379e-fd3a-4c84-a07f-83c602278ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9ebc83-ed37-4f88-8dc8-6309a09f089d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69777f7-05be-4b7d-9ae2-19916c821bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70fea35-3361-4c83-b6be-5bcf43eeb11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e0d59d-1a04-439d-bdea-29c76dea0128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31642d3-53a5-4a5c-b8c1-0f0ffc6aa8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aca1cee-8674-45b2-ab7c-6cb9a2b83016",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d320d9bb-d118-4dea-84fd-6df543ad6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d93527dd-84ce-4e31-a8ff-48a07b5ad800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc402a4-9d82-4eda-93aa-0da85eae89d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a19f88-7752-4343-8bcd-512a1d801138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08fdc74-7414-46b5-9774-69f146a8179a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af912f5c-fb0b-4ae3-96f6-5871885b9b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8954bbb6-2d15-40fa-bcbc-997672fc456c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a9a99c-b2cf-4216-9970-5c5eab62aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9811a3a8-db84-4900-8061-b3e3bf97e4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27958961-2dc0-444f-8766-82c39e080058",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46da5044-2a9d-4e33-9443-b5d822e31115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f686d894-523c-4971-9054-1e9accdc7878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43532b50-9b37-472d-bf04-730a3d9ced69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e63939bc-efd1-41af-99f8-8abfd08d4c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839f1ebd-e0cd-441a-92b9-83475b9c93ea",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe629b57-1579-471d-aa8a-0e6f12559ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1816f52-7a63-4567-8bb2-3eddd482c88c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151cd910-fdea-404a-a55a-a99b04f88dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a60e201d-b744-4748-a5b2-f8b0a25e2495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d3057a-6fb7-4265-9f8c-7de254fa9193",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c038e-5681-43fb-83d3-878b2294e1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be5304f7-5ab7-4925-ade6-e24bfd11b7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1297b6-8a9f-4b7a-b826-5aa8e27b4d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24374d12-b43a-4e0c-bcfe-71107c510a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596833ad-bd8f-4cb2-bfd7-f66916e62a7c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d136772-6371-4271-b26f-2cda5017786e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5c8db5-f234-4f3f-aa2c-92832ce1e58b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4342230-33ca-4df1-a41e-5b63bee92cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c26fbf-e958-4676-85ef-fdd2417acff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf6695c-9ab3-4d35-be21-3809e9473c05",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a54eea-06d2-4438-b691-650835efd612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a9c38b-960a-4678-b347-c133529a502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d253a0-5713-4a45-81b3-5670ce8cdfc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b1392f-91ac-444e-99dd-d9d1cc575383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076241b5-91cd-4cc2-ae20-8de3235562df",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c237292-12f0-4fda-9542-f2c7f0e53dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e46071b-318a-4d73-98ea-6a86a86c3f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcd12db-1c7a-4886-a38e-ee3f7e09bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d595a32a-8c05-4b2e-aae7-f6a6b8c4a4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f8b883-1bb4-4df9-b652-1c5bad9d5f1e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e13881-6cc4-4624-b441-fd2b1e519a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e791679-c938-4b48-a007-44ffa786b15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195ade7b-6d2b-4003-a673-f2ec83293d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7b4def-d29b-48c6-bbcd-8d4bd93fdc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1b4e10-682d-4681-ad84-e650d418d909",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf4b98d-c0e9-41d1-9d45-ebcae058c07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4336d60e-26dc-4cae-9e60-abe2a1743397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a1b363-c3b3-4949-9180-af7da5744628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f722c06-9060-4b01-8915-9c64c83113aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2598b7-e92a-4d63-ba4a-46baa12e63ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9e4c07-6ca2-4f2e-973f-1287afae9677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bcf8524-f81b-4de3-a333-01a40a964931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d882c18-f119-45c0-97cd-34395799f0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f89680-952c-4173-a163-4d21145cd641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d2a6f0-5e45-4bde-b26c-6100047c4d26",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b075d9-2edd-4978-bb6d-3f476f3625fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d680c5b-8552-4998-8b7b-a7aad373577c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a04aef0-8337-41ef-9ad1-07a30ba3c8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "74bca9d5-0894-4ce0-bb54-b1c6a529b057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b35bf40-fb52-4fc9-9f8c-71eafc19f544",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d04989e-ba5d-4d2a-a662-6937d5e5d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba8c19a-6044-4a51-8aec-9fe34e6b7d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a68e6-9f98-48a1-a629-f1a1143eb7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a07667-9714-4706-8ea8-11078d908b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278a2b64-1b99-4a61-b2ce-a71fe2e9f3b7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edac592b-89de-4ad6-a676-eb34a7426043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c30239-9f5c-4a7f-8d66-a5e94e165711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fa7db0-a86c-48b3-ab21-c6acaebded8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85a82846-2798-445a-9235-817ac6d7510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d61c63-cbe6-491d-a788-57dd304ef282",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041b57f2-ea99-4788-8869-7c87662e5dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c452e226-6c12-497b-bbd2-6360660979e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f0e770-77e0-4e91-85d2-248565ab9653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aad99c6-073f-4b6c-9f01-902ce5dabccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a173c00-9dad-4d19-97d0-136b56d50700",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649944d6-6518-4df6-bf69-ca589a0411ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccf7892-c103-4183-9e4d-eb55223363d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6179f5-9822-4016-a243-7c79934d1d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3a6c1f77-06ee-4646-add0-161ab243a637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ea625f-d75f-4dff-a4f0-98fdf16269b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89dfa3d0-26e1-4db3-af35-917c48ff948f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc100dc8-1d83-4711-baca-284cbe52426d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a777811-157d-44ca-b542-4166e450a791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3119be-1bad-4481-8fde-25d79ae4bdfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0c3094-7fb6-4cc6-b406-dabf788385e7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f3cb67-eb9a-48f3-9b2e-dfb8628b07fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d381644-980e-4d47-a5e9-b3d084707c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0727c1a5-071e-4990-b71d-9f52e25a9217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "19ba256c-a41a-4774-94cd-7dd2c55fa5e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db746ce0-3570-4105-9e1a-d4b3ecb4876a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56829ca-14cd-424e-99b4-39b891a88e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8cb650-874b-43b7-9255-5326983cef79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5519c5cd-40e4-48f0-8443-e1dfeccd2be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a1524e-6b60-4745-81ff-79b632968710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ebe251-a8f7-4e23-8483-e439b2aaaf38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a78924-4a15-4c41-b2e9-8a4e2defd2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a80065-3685-44e6-a932-56c7db9af4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898be695-421f-4c72-940a-354318de0ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "410c16b3-7c26-4d3c-a41f-13da0f4b04fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b628974-a6e8-44dc-8fed-aa8f3afd76e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd89a44-b68a-4853-bcc2-b30bae243512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f98e2e-2daf-48b3-aa23-6225b8e4f64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df88f75d-83b5-4a74-ad90-a4e83945a22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2929cc4-aa35-4503-8c7d-7c4c0010fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199f3a48-7619-4780-8278-6d5b4b471f42",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2b51b0-f6d4-4b87-abc9-5dd5e8d4e27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e85cfef0-c785-440c-ab81-dd66a5ac74c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63ebac3-22d9-4281-9e9d-025e989aaedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "63f13b92-97d5-40b2-99a5-25b7a4545cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf946c0-93bb-4958-8d22-b0c82f20f10d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b47fc5-8871-4016-9276-6772973643a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df851aac-2d33-4f6e-9980-a777125b5cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433f990a-5b23-40ea-b5c8-f20c2211cdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e3e8d16-822e-4820-9fdf-13dbc1d7dee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5ffa4a-080e-47f6-9296-472b615e6f48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb962a6-ca7d-4b00-ae05-bd7ca218d3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a345b52-487e-4962-8cc5-1298efe93032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb816a7-c978-4c77-a95e-76c33c1a7280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba3ee55-410a-4716-b546-622d68c93010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8825c384-c8cf-4380-9e69-b2537b81aa55",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6703a0-21bf-4be3-ad8e-0f147d83c0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e6af02-254c-4905-a62b-0ccef05423ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fb9e57-6a87-4ff2-bc25-a842682d04ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "525d6489-8ddb-434a-9c19-c44b8ab5589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f37a11-ba72-45dc-859b-03560bee39e0",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87120d4-cd5c-46a4-ba57-c76c056e6713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff1ea45-a57d-4dad-a9e5-44b29cd9b174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ff11c6-2883-4fca-a49f-e795d9b03e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0319d796-1067-42d6-a109-09a2b9bed057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95368d60-7be6-44b6-8a1b-460e4b16c974",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7255979c-221a-4f57-a2d3-be072e9c87f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46bb0574-6a3c-48f7-8d80-c2f9cc960f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fce8453-b3fe-4515-8cc5-4dec34b99c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77f46ead-ffec-4f5f-8990-adf3eb4b2aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a567c8-9d18-4aa5-963a-013e0b2c6e2c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd45df3-89cd-4927-824b-44cd7011c8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6424bfd-71ca-4eaa-ab38-c8334b0d3ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e42904-3db3-4310-9233-82fd60773b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8854e3-12ba-490d-a9f8-9d44de72373f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa56344-d676-4d8e-9fc9-387c535f003d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64ddb6c-14f7-4c42-b608-0a5313c9d9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6ddd19-d784-4594-9244-3becc1ea192f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac01bc6-66f7-40eb-a132-7ac56d669128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "34c837d6-c2ac-469e-a828-a58075153742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca9002-14eb-4ab8-94ac-fd47fac7b7f7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0265483-3453-48fd-a90c-c475b7613318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed783d4e-39aa-45df-8262-88fe0795b255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb2d956-3e3b-474e-9638-0400ae8ce81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89a5a612-5415-4118-8f9a-e3ccefbf08b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05939846-d099-4dea-a532-7f14d2285e3c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91aac51-8692-4649-8c3d-b2cd689a0167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e1861e-378b-422a-b62c-bf2a162f7c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4385173-1f32-480a-a508-2ed76e0ab2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea50b760-3adc-4a3e-84d7-7aaee625fa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83123437-307d-4508-9eed-4ec956cf0119",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d391e48a-377f-4848-b123-e544c2b8dba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9d0069-5902-487f-8b53-86de1dbdb5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33ac48e-f2f9-4d77-b313-89238f5b6034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f5893f8-af25-401a-a85d-a4038aae59ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "907b4317-87f9-4d1a-9bc0-354578bbd4fd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c3dfe8-9f1d-4de9-b9c4-88f95d8a8169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5caacd30-f8e0-41c7-a0ae-a029c064bf6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b093e05-eb2a-4a0a-ade4-4ae4cfb0f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a554f615-46ec-4f23-a9c8-6a71564cc8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f2127d-239d-481b-8c70-78e7077e25dd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed928b5-c445-41c4-bbd8-a29809cf4c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629124b6-95fc-4809-92ab-540ecf488b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb6c7e-e5d2-42e2-aa9f-26fbfaae7ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b36d3f-691c-4406-9687-48d8aedd6c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca6d3df-3850-48fa-b797-06878f69b34a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11312e1b-c9cb-44e3-8f28-dfe1230077b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b10b58-8034-4da4-b0f3-0dfed14b4a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fe7ae1-be59-4dbf-a6bf-6b6beb1f90c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8493085-2386-450c-9e32-9d122e311ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e6cb25-b03e-41bd-917f-4e408c5f8bee",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387ee198-52c6-47cc-88a3-6330a87ce3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7be1cfb-0cdf-4d6c-8442-9e7dd5a9f62c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a235af-1cb7-4863-abeb-cd714449623a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86b9903e-0e12-4a63-a15f-84971b37bafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9d0ade-6dc4-4118-ae00-7cb9a482adc1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624ef7a2-7059-4741-8ab1-e24fc478df1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd9cd76-6bdc-49ac-b88f-89570035f9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea27b5a-7b14-4d04-9ca2-b5a02df60462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef007b26-2277-4f3a-ae80-0365e73037c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c21a6f-39e8-4c37-9c80-d913c15ebac9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab51f52-cdb1-424e-a4fd-4d2eddba9ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3102d26-e677-4df0-9b73-06e3e4ac1b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a645a182-3d74-48fe-9eec-e908ef657767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a154a4d-7b27-4f8a-887d-445d82fde414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c673064-2bdd-4276-a8e1-7001dd1242b3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47b4234-ca15-4c4d-9e47-3866874fa8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c3fc03-a673-45e1-9246-0916375f8918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f791661-8193-45a9-8bcd-0988b2316922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4617318-919a-42fb-997e-22f6f782666f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcbfac6-2b00-435d-b26f-9cefc2689757",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1371fc0-8d69-4b39-9bb6-394075bbb16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1be27a-c67a-4a4b-89ab-0097ca0e9679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75f9887-5873-4c43-981a-ac2264dd39c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ce33478-dd06-42f1-b5ee-be9c65151675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d44759-6c7a-4ec4-bda5-bb67f7c9aa7d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351b51f7-1fa6-417a-a089-ea839e742bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490c7136-8314-4393-9df9-f9df4ac804f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a88f83-459c-4ec8-b485-3f38adad4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "27abfb7d-491b-45cc-904d-ec7f314a9ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2024a20f-5022-4bc4-8d4c-d8d0028a3691",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222994bb-2cb5-47c0-949f-9c07012abf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb1db75-37a3-4b1f-bc5d-44a11c350b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a100178f-8330-42f9-b50d-3a1820a97fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcfd028a-6979-4667-b9e3-7d6f7b9467b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad1def6-5ef9-4864-ba9a-7012690cf834",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b0a677-b3b8-434a-a6b2-2f4bef05386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1f5e4d-c03e-434a-9130-f0ac378c020a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed014217-e2a1-49a1-84ce-7813985e2c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c494d8-7251-42de-a9dc-1c93dc024fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc976b8-7883-4e1b-aa7c-b48aa6d5420b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d640c253-e376-46c6-a441-d3c2551f6f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a1cfb8-7a3d-4b31-b3b4-9d466aaaecd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b839d7c-96f4-4576-903d-795bef56d554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc34511-8bd0-437a-ab73-e264e5986b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d9d3d-5dc4-4e29-9c2b-fd383c51df69",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9f206d-4ccc-4050-b792-90435a401d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66e64a26-dfab-4b31-89ca-6c66058bf11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef1ef0a-e5eb-405c-a0a5-5b86124a8da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cacfca6-ae6b-45b7-a857-a1e5fce46695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620774a3-f645-4085-b217-c1c823f292b8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30d6a7-025b-41fc-a36f-f76aa8d51dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203184b5-dfb8-4713-bb02-6379a462bd1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5f00d6-f60a-42a5-a85b-815cf71be866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d53ded-4402-4bdc-a82a-e006bf210978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad09a5d-e4a4-4cbc-9442-9c50752cf58f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a3afa2-2ad9-47a9-8f0c-17d05b119559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3939e51c-16f8-43aa-b8c3-be715c4522c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bb3ed2-1fcb-4a71-a319-8784a23de1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "091562ae-5d2b-43d6-a64a-1f82ab59474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3ee85f-dc39-4862-b59c-6ce9d94e4fb3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00320dc4-4c7d-4b0c-abe7-42c14171efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc4d8f2-825a-43e0-93da-2e84799ab00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1e9e57-df5e-48a1-a663-b01fa77f0ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ab69f1-4790-49fd-a73b-73b100989ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be54fa-aee0-414b-b427-130ccd78d46e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4380521d-4831-4853-a40e-af9e1af8fed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4774e4-db27-4504-818d-399dfd0c6cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c5a115-ffb0-4ebb-b644-b6ed898516cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "390da97c-9aad-45db-9678-6ad2406751d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a14f552-bf02-4404-b8c8-7eb087853410",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33d4320-266d-4f79-9ba5-75d213427576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a02d37-565c-47e1-ac6b-4d3cd58bc2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f472a405-36a5-4dff-8d07-cd5738d4ab0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "093bf995-5e96-4871-8965-b6e568f97c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac56a80-c7f4-4bcd-a0ad-71065f6b8e7c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741f8bc3-acaa-46bd-b39d-d9283ca9a37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9077ec1a-eb25-4a5f-8e64-68645e84f218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d2472c-577a-4e32-b7a4-005511d6278b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "236d5024-482b-4e52-8fa7-2b109cd61d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abe3903-0c1f-4880-b90d-11c9c42f99a7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2013c061-17a8-4c70-a4ca-eab8e027401e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9850a8f3-0a0f-43a2-a1ab-9a92db6570e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc63985-9da5-47db-bc9e-ba7c31354d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70824a8-483d-4160-9902-f2d3df6f756c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "13373462-714f-42d1-bf70-c96915342aff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29769d93-8688-4c1f-812c-53f2a5ff64ff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d881e6-241a-44a1-8504-78414348ed91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf8b9f1b-863a-428d-96e6-c5d594612ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eddbc7-e9b9-4885-8d08-3b5d4a246b13",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8169b7ba-3f0e-4c98-85b8-463a85edd8a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e3a85a4-3d15-45a1-a9ba-589a6147b57b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5108108-ccc8-4d5e-a6ed-30be7fbe31e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68cf4f5f-6957-4cf0-bb22-01869af0d750",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f95e8c4f-e9f0-4ef7-895f-584f08bd5bca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23de2066-ddc3-45df-a1d3-6981d54551c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d2f4d797-b734-43fc-82cd-8b60442c35d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "844e9f4a-cacd-4f6c-8c8d-f4310c4f941e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cea71f82-789b-4a6e-96e7-443ad04f8a45"
                }
              }
            ]
          },
          {
            "id": "9b015b50-d33d-4b04-bb54-e1c7a7bb95ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3325ee14-6fc6-437f-8fff-738571732836",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e059af9-a8db-43f4-aeff-dcd9b0b933e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b961ede7-c9f7-47ab-9072-083836846cab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "108d4484-2c59-4c47-a978-1e69c0a81243",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "786c38da-edcf-4337-82cc-595c46b22062"
                    }
                  }
                ]
              },
              {
                "id": "e8650755-cb12-4453-b5a0-a1ac290a53c8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d77a892-0e36-4a01-965e-43a7a09a27d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1532f271-34ab-4a41-bd1c-d81236bd5a68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f564aad-e753-4822-96df-9b08e5eec39c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33de3781-2a71-4a80-99f1-509770e0376d"
                    }
                  }
                ]
              },
              {
                "id": "d110a5f9-93e5-4769-be39-86147d46f4c7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a344e6d0-10a3-49b7-bea5-764fcd1adb21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d603a04d-357f-41ad-a4c7-f7895686b842"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a51b98b-af66-428a-b97e-f41ad9267cb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a9ecebd5-f08a-4f5c-a911-d41c26982c7b"
                    }
                  }
                ]
              },
              {
                "id": "cbe55f62-17a4-4e62-a5aa-bbd01135003b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7eb9bd74-3615-4609-ac5b-26db929b40c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34e45242-d46a-4dbb-8b24-f72f651fc2c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c3719ae-4034-4ebb-a748-8eb910a58a17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c5a9e072-c8f6-4e45-9529-ac0d27d9da7f"
                    }
                  }
                ]
              },
              {
                "id": "a753cf02-f975-4a14-8f18-9610205d2f32",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef89312c-0745-48a8-99cb-5e230245b890",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a73042be-a520-43e7-b762-768f6f0ead0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "611b4bea-6285-4c9b-9bf3-a6dbfbd42a86",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "429f76b5-3af3-4bc5-9731-8c5742e73851"
                    }
                  }
                ]
              },
              {
                "id": "37b10495-d4f7-4239-bc13-ab9d79cc14e3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25dcaf7e-f08f-42e7-a11f-c2c14f84b35e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "392f487f-f021-4906-a93e-1aa59327d1d5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f22f43ff-ee68-46fc-a5dc-42dea3e3adf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1e7ade88-ab1a-4b4a-b469-1c5fbf8493c0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05db32aa-4a22-4c89-9176-76240789ed15",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19c0b9cb-76cf-4489-b642-b7554a866d84"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1f4df0d-58fc-41e1-aa3e-d8b0fc3e5b62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e04c5be5-3e0b-4f05-97b1-f3f70b19da5b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "444c72b1-0388-4e11-81b0-e0ae4fc1729f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dbb3948b-868f-48dc-b4e3-4b9e7dabde3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d69dc42e-2113-46ca-8f01-5b45bdfb1712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "264b2303-64a6-44f3-8622-1d7e48cd6a82"
            }
          }
        ]
      },
      {
        "id": "1cde32c8-7a89-41e2-af61-7fbdb986129c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b169d2b2-d63e-4f72-b7d8-bed458227835",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d52b1f2a-b0ef-4474-8ba1-a68fec9e2172",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "19af145b-4b30-409c-b2ed-c624c414c7a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87efe308-87df-4b20-97e7-1975fa32617c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3acbd2-40f9-479c-be65-9bfaa11e2bfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b266727-569a-4dbe-a3cb-2915be223c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "519078aa-6ef1-4edf-816a-a87b21ed800d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cebc46-fbe0-4d35-9787-1fa1eb654924",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f41dd3-1958-4248-88f4-0f31ff2d186d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368ea849-bddf-4c01-8d51-2345f7bdf7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13678b10-c834-4367-9aec-c8e3a25f3bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91720b26-ab3a-4426-afc0-a5db3850eb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e1afd5-78ab-44c8-b481-abb376b58195",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b39194-7d63-446f-a37a-8b6b8d50fec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ad448e-d0fb-42ac-b893-461a7adffc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92151ba-6962-44a2-b045-e57d883c4234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb72503-5a76-4edd-b03e-138d19e6b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72fe5f5c-2f52-4d8d-aaaf-c692c664b93c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b570a5-5a27-43ab-bf61-0e9e265f643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89190761-d75a-4ca8-8554-c7ab426bc71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553b7e9b-63b9-4845-bdd6-53b334fac1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd55b7bd-d066-454d-bd46-4993df0aadc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1373f884-2db4-4b36-aeb9-1c4d9f124ab8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80bc952-8675-4741-8a66-c12b0908488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3589d3d9-a591-437b-a0fb-175236d2db44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed1e083-950d-4ae7-8031-b95a597c3472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a68cb95-e7d4-4189-a526-81725392f019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07ffe91-7819-4def-8552-5649f4815518",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2a3024-b38d-4a8b-a7db-46ae59a94e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549268d8-218a-40c8-a92c-2cbcc86f4434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f75c00-496c-42fd-afa9-ad6738adddc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e113f3-3a42-4e08-acd1-f949027b2ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4e1cf4-898c-4f20-8410-c2a3437c4a12",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94aa123-8e28-41db-98a2-ff9d345162f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5841d37-886b-4f92-83b9-1ca53366d0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbe6950-210a-41b0-9b26-34ea6bc65175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8056e556-35af-4405-bce8-0c105fa21f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475824a7-8514-4f58-ae93-4ad91c76e2be",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c1e7ec-82e2-4ed8-b1be-1370ef203b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b9edd8-08b3-4a61-b4df-23a550efd2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d4d3f6-a402-4017-904e-c6343b0c6364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0a3688-64fc-44ec-b323-df1bd3e19886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71a0e37-7f37-45bb-9f27-3d04cc8be069",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3590375f-6682-43a8-91f3-79e2c4dbc711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9205adb8-e9b4-4369-8e53-72751b88fdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb57a4e3-9299-4624-bcd7-2675bd0292f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb4b383-79dd-4447-8c6f-d9a1636d62ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef94cac9-7f45-49fa-8117-62a3c42efd7f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c97945-d925-4c8d-bcfd-ebcdba151e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7579460e-c957-49e5-aa85-695820fb94ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b86fb8-65d3-4929-932e-7bdf62d1f23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ac61be-d614-4b6a-a609-990ca159d361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617f436a-037b-4468-b296-a460a4b5e8d1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9faf43-4e03-4bb8-9551-84539f292688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bc9d13-3e05-4456-9e17-05f19f8add94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b8de7-a0b2-48fb-9a0a-af26b32a2cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "376e5378-0d43-47d5-8581-b4486da9fa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0a0691-76cd-4cc6-a0cc-470af9ec2182",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5837e975-5eff-42f2-8fa1-308b554032d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3d6001-690a-4f46-b963-c1327c741288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f20d3d8-a27e-49f2-a03e-99367fbaa4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e8291fe-2063-4df6-a601-286f21c8e82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dbc8f4-4c33-4df5-9a9c-f9bf751b5bdc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1e5636-586f-4baa-b41b-f106894267d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644b76f8-a428-43b6-8a0b-d0ea23924cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa1b2ad-9135-4af5-b629-e3e66436b854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "637ab2c4-e533-4963-a7a5-6e55c12fa58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38141267-3220-4951-aa6f-1ee8e9404092",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d832a0-bf4d-4805-a4fe-3dec9a623274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26aa7e8-5ac0-4e59-b1e1-2b656e5996f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ec1b81-cca7-4d01-88a7-fd7064e4f0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce791683-ed5f-4ac4-837e-d868739008c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acc55c8-c910-45e7-b8e2-2308a93b47e1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd74047b-0043-42bc-b04d-12c6194925ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ee57a9-7c4f-40e4-95f5-7ac60bb80662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13580b33-d50e-45a6-b1f5-254b5b4272a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba020a72-9e2e-4b3a-8b29-e44aa02130b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98024f4-6c4a-4ca6-a496-afbc7ee3bb7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96e3d69-20fa-49a0-81f8-bddcd98aa314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d9a437-b346-42f2-9aaf-0423b605799c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfd0936-abdf-4a35-a0c4-1aed95be3612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "96426180-ef47-46b7-9c17-2f1e74abb4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4b616e-9f92-4dc0-ba9e-5e52cae119f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39049a57-f4ee-4e24-8e3c-3bc6d3c2afdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da5334e-9841-4fc0-a7a8-b9848375aa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6270f123-2e69-4f4b-8b35-ecda78a90124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "406ffd9d-c934-48cf-99fd-e7ca255a5887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed8fb73-3856-4057-9fc5-bfeadb74e161",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74993a-2b25-4570-ad88-4464680add75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d86be8-7bb7-45a2-8b25-17ee2475e05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f50c0a9-cb92-48b3-9b26-ec41e4e17c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d43aaef8-52b7-4657-8fe7-edf9d1ca05fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8cca7ec-65b3-4a60-9564-f5b718603ea9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0da8d0-2cb7-4c70-8493-b7bcc4512bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9bce54-8551-471f-8642-a4f27b0cf3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad52f5-80e1-4ba5-ae4a-ae26f60085a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "103b5728-c705-4106-91e4-83fb8437fa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7369873a-e742-42e2-932b-27d6fedd6d2f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb9d28-3526-4ec8-a13e-1e26750a0fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b270ac-e800-4a29-b9c9-fa3f8c0d1f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9859d1ce-eaad-42a9-9779-79ba765815ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8369a578-655b-432a-aecd-576b372cb024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc8b26-a44f-47fb-a707-c166407e63a9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d70c62-a111-422c-8e6b-e8fca051af59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5968d831-dbea-4f21-b54f-fa14852347ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9049dc73-7e95-4a9f-b884-4289e3173922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fca4d8-6e85-4e47-a719-53a577516bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e27e50-a0a2-473f-b20a-8de83b5ba07a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a119ef8f-332a-4963-8ff5-33ba95d54b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f0750a2-85a9-40ae-b08b-d22d8e088a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b063ebdb-b884-4e87-b885-a10b5c74818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa199a06-a13d-4f2b-8561-1099b3dddbeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612be01c-0b30-44b4-8a4e-a1f2bfdf5e38",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc45d34b-b589-420e-bfa7-ae5d582ec9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a2c2a7-b438-4510-a800-ee8d3fd02b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51e9870-b957-4472-8488-f33054791dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4a376e-e684-4385-9f20-ec00e15756ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98748acc-4196-4675-a3b0-ac8218739796",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a913d0e7-5ceb-4b49-9417-2ccfbe49e48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c238a9-9f9d-4ad0-aeaf-5e0572768b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674d678e-2332-44ba-9980-3e76d1609f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c3c91c-48b1-4683-a5f5-42945591e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e8826d-9131-4b1c-a5e4-d47d4fd0092d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b75435-0ffd-4dd8-abf9-57b921b0c941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72248d69-4626-4f05-bd2c-22fde5981785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d2a27d-929d-4a2f-9b8b-d5400705122c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0d2d00-04da-4374-aa4d-38abace907da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5259f1e-8c05-42f1-b52b-64700e184f54",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221737d7-be66-49fc-8889-782de17b17d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446ad49e-9f26-440a-84ef-1dbc85e0f240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a292967-663c-41e9-b6d4-1d801d7ca999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de62799b-62fb-47ad-b6bb-846aefd751e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225fd5ff-90a4-4c26-91d8-c14a8dee1c33",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f749b87-eca4-432a-9c32-add11d4453e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810bca6e-8419-428c-b5f5-a5c83fa7ec84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a962515b-9bd6-42c7-9f87-f1df61dce799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "965c7960-ecac-490b-bd26-cd99ecd0c863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce34348-e193-4e76-822c-11ded4713554",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc13a50-2996-454f-8107-0363dcae3937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef513f7-6eba-4d24-9ea1-2b6caa99cb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb8c2fe-bc0a-4102-8b2c-82159bab1d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30111ef9-8894-4640-8ed3-539618d7f5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4149ff4f-93f3-4f4e-b4fe-4de141c009d9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8d8be8-fb27-468e-b046-498718ab0a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6b23db-75a4-4d4b-897a-55ff97f2fd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8bf451-8aad-4f03-84c3-3f8a28c9d6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee89168-7c8f-46be-9e12-29cc34d579cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d375d3-9875-4d50-a7c2-e20e8cb9a344",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f51ef3c-516e-4aad-8026-8d06b2a896ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ae1dc6-dd8b-40fb-a9ab-5b291600e6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4550ba8-f4f1-49bc-91a9-79e60766cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4571a2e3-0fd7-496e-8bd8-43665ff2775e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c597bcf2-c19b-4ba1-9bfd-fe21e4183945",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22de3421-4fc7-4bad-b3be-d57fd8b7ad5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d806de-7433-4e79-926c-bec6040d8120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f675fd2-c7e3-4d46-95ee-ee8e3afa480a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d492fb30-ccc4-4782-8f29-bab166ce8f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd6b39a-1911-4a30-95b0-f120d403d509",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998c3b7e-0b8d-44ea-8139-890c965d9068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b1b105-7533-4bb0-8fe3-99f2dbb32194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b7942d-53d7-46a8-820a-2356428896e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c152df3-5ea1-470c-9abb-0ef7f1e191c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "381f18b2-a72f-40c1-9ea6-ade9b04169b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71cacf49-2cfe-4da6-9c27-a314a18e13ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd0e9ed-4701-4bc5-b7e8-816d97f68398",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4fcb37-9aed-47fe-ad55-1603113d5e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0844e1e-1079-4f73-87ec-a7e15bf2001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb66647f-275f-45d6-993a-e954457d60e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d46a08a-597b-41cf-85c9-518879533502",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41a9e52d-a5ee-40b3-a4b3-e4f36e4be984"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3fda981-1bcb-46dd-80c5-5ebd36081399",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "705bb9de-4fdb-407f-93cb-28a8035a70d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "040ad203-0471-407e-adc6-5ecf4ba4fb4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c7b502d9-1ac0-4a8a-950e-e2fdb8562ac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8c5bd2a-163b-4f19-8b9a-7c68682d6608",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dc42c9c-32ec-4087-aa20-23d76c96f631"
            }
          }
        ]
      },
      {
        "id": "5169c875-9e91-463d-8092-bcba4f5a53b0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "03f77f38-d0c2-4c7a-93aa-b9c1c5a4a70d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8abd25b5-0676-4bd5-bff3-e0cf862f73ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65697a4b-5074-4cd9-97c5-204776fa5d13",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05184e3-a630-49a8-b981-8b6f81619888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0a17e9-dcd9-4f95-a389-0548700c3f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378b1bc8-ac12-49ba-a097-127dd339af13",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4070b750-cd16-43fd-ace8-cda47e3becc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40400c4-c39b-425d-9f23-6062025c9ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce43854-25b9-4e44-ac0a-7e35bdc1fcc3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd43eeca-e661-473b-9338-9d13718b39ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad652195-d768-4cfb-af80-01687a2fd92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c0e4b4-5356-4275-a5ea-589f8ebdb3e6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6120d79-fc05-4f08-942f-54508940e930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d540b08-6b15-47b7-b8bd-50539253fc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f578bc3c-a0d5-47bc-bc31-14f7b0314bad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2606e106-af79-44f8-8432-f05ca10e5127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949535db-22b6-41f8-8f86-d4befafccf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229cc8c7-ec5b-4013-abad-83d37be6b792",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac37dfe0-8c63-4e76-b0ad-1551c2836832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df805024-07d1-44af-aa2d-5b4991735286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6e752c-a2a3-437d-80df-f94ee967f8fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b15581-711b-49e3-a490-c851238f6258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d98d78f-1402-4fc0-82b1-7cdb938e6289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5294ba9-498e-4857-8d32-4a3c8d111f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7cd251-452e-4344-9a9d-1482b5670a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5583d97-d39d-4eb3-9481-8f588cab1219",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdee0ab-7308-4337-a486-3b73c27bc279",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff451153-9968-481b-b223-c9a83210a465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea8ef47-9d43-43e8-9d3a-6d636b3553b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f49a4b2-da8b-4422-a1cf-9395c77ffaa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e914391b-234a-4c1c-a461-60a0cbc23670",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12fc9f0-a2f2-463a-af98-bca36d4a9b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6c7ab1f-80fc-4fa2-b2a2-e3e1f9283b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01d3281-7b96-4638-83bd-b66099c9aef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7c9b17-7f7f-4274-82fe-ce7a9ecc9a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba4bf7d-374d-48f6-a69b-53079d5d1d42",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89662c0-80da-4eb3-81e9-5f901b22fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d796ad54-c7b3-4b9d-b97b-d55ecf7161cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06940e3-b585-4de3-8315-0e7668a87f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a1f86bd-753f-48ba-894e-cfeaa789361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdf43f-6e2b-40c8-bf4c-144a0dc4ff91",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db0fb07-85bd-44f7-a671-bf4c9ccfcc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec428ca2-5749-446d-819c-5586afc22bac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45977ca7-c8e1-4316-8f9b-044975a682e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a18e2bc-e08a-484d-a748-f0c4bb6ac607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd2f7ce-c403-4166-8cec-cffe2c405ab2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d679a5bf-ffa0-4194-81e0-9f722321c590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc32ab33-35b8-4aa1-97b6-5fe9f9fe6612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54c5770-57ad-4731-882a-e6413829e82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394c0990-3f86-4b1c-8960-c29b20110c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddc4e19-c9bb-4f5a-a0e1-4db0c9d2accd",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605554de-d232-44af-8569-f53e352e5334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8fdb636-c2c4-45fa-93d8-3779a0899a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4529924-1b99-46db-aff8-be2937adceca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f53a1e7-754e-4c99-8b5e-e32c57af40f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2afcd852-7b7d-47e2-bfe4-7b17ff29dc91",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87124b3-b0c1-49c9-b759-1e4aac336d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3df9b9a-e133-4e47-91c6-c7c21455c87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d63bb7f-f28c-4f02-9b95-acaa5b0f0aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1fb963e-b879-4c68-a613-abab96aa24d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfeb64a9-8ac3-4e02-a14a-98e952604265",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ce88fd-64da-476e-a0a5-147e042e4726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec940f7e-8620-40b6-8a8f-6cd99dcc62b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a81674-119e-4ea8-9d79-3e409f58d236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bba8ec-bdc3-4b11-89b9-7a3d439d7ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec53089b-c30e-44ac-af46-b33a015dddce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3256da-0e76-4b0b-9893-ec053fb9099f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ae2a5a-1f22-42f7-a9ca-aa0e8af2861f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17211c-8a1b-495a-a24e-b123441abb40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7799489-222e-467b-9ef2-dc0eeea01676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b91d785-2e67-4187-8130-451367fc3caf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8852d4b3-bd6c-4d66-a3a4-e4ac927d8592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d339d7-8f93-4e5a-ad3a-c28be0ca0d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d584538-8bb2-4f80-8ebc-768b4cc40388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bb0eb8-e8c5-471b-99a2-da4e8dc7cc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba94d213-7d1f-4740-b1c5-275f35bcc25a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65af96d5-d9f2-4f19-93da-27219bd6776c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de13dbb4-f6fc-4ad6-a828-fa9b405fa0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9040c1ee-cf7e-4534-ad2f-23870a00a8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22e86ba9-e4d3-4321-bb45-711b9f24a3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384c188d-f6f4-40c0-ac5c-618c241b66a8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138bc8f5-8004-471c-9a1b-fc1ac130d349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd8ab2d-84b8-4816-93c7-128819e422c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2761d261-4a1c-409a-b459-d2d4293d3738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de543432-f84a-497f-a4ba-e7c7e65cd5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9eaf1a1-da0e-4e6a-99bc-1ef01251ecb1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e7934-9ccb-4468-96ed-05a06bc10ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f05be0c-68b0-4538-acd2-b8e38274fb1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e2607-2fdd-4bd3-856b-080748b4bc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7466d5d0-ab97-44c7-ac19-95ee41c60eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761638a6-43c9-444e-beb0-b7d7e3764b5a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79da4c8-4117-4612-8918-197874359d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5350bbf8-26e2-4c44-baa5-ec23de1db891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4e2d66-6d73-4c2b-9d27-d2574dbc9d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c0d675-7f3f-43fb-a1d7-3c002b24a408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fea323-89c7-46d0-9edc-5f9aed983a66",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf69d8f-89a3-4f73-bbb0-22497f4d8d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ddd9bfc-387c-44ec-a0ba-5623241cfe87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38829688-5ebe-4bc3-830e-e6b4bcc605cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ec4f8e-e1e3-4268-8ed9-e30995a8de99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8ba2db-7001-4e3b-b5cf-ab139a127478",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f57625-36f9-4b98-aa3d-c01403eeeab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae546aac-cbd8-4295-ab62-e91bc69225e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aef51b-8bb5-47c1-8841-3df38ba7f308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56efcf1-bc76-4b7f-8319-d85769f7eeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1f999c-8101-48ca-805a-aef094aa1019",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950c5da0-fae2-4915-bdb3-90fcf01193d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5c1ed9b-7bb8-4be1-989e-2ac3e103d9e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f466431-8733-4b70-b345-70bffeb54012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09718dea-bd14-4424-b3cd-4218992e123b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e824a4-c95e-49d8-843e-19b290a77976",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795bd986-d047-474e-a906-d733448eaf63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d37ceaf-e135-49b8-8ad5-207622cef3c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5635cbcb-9b31-4e30-8a46-0d12f04f3750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b342aae1-4d71-4593-9582-06e3d78556a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174a9c7d-b968-4818-8beb-168d8ced04d6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2181a225-f1c8-4221-8e5f-19226fdf94fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bfdb53-832b-49a1-a170-f7ed4bcba9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad1eaab-b1ac-4bc7-a2ff-078a543359f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ec2264-4692-4f6e-b1dd-4fb85f6e389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6425d389-0d98-48c2-967d-13501bbaf045",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0af8e8-4a81-478e-8316-c20bec0c2a28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea50cb66-4c03-4d23-93d2-2033e8deb079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064d42ef-b735-4998-9b5f-af6fd006b597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4964f24c-82c2-4d2e-a52f-6e3845081534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bff0c9-fa09-41d3-8911-557e05e0bfee",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a850a2f2-5f14-4a1d-8423-fe4a8b8642db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efffd0d2-4c03-4a02-8ec9-693b29d02702"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee518a22-bd77-4fa5-abbd-3a67c2d38cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8711f9ba-2c9b-4775-bbcd-0e01aaad1732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514a45cb-f1cc-45db-9915-8f0947e66531",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ac8109-2ff6-478c-bda5-cb52de7db37f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f8ede7-e5db-44a9-b8e0-348103c92a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d020ac-e4d6-44f3-bef4-533d609545c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6802e635-28a3-4855-abcf-0b9ff6a31a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b31cd8-ba64-4de0-a0d9-69377e83cb88",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd564050-7892-4d9b-b8fa-a4938a709643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e128ef4-b345-4e23-9afe-10c059b89d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa9e85a-255e-42be-8fe7-9b90c853806b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c563ca-e030-4fa8-abdf-507992a3bdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42a52a8-eebc-4075-8400-1def40a95a60",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc340d2-97df-4ca3-834e-661eb43fac81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07ff812-63ca-4d66-a756-ad6aedb47ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c93da8-7b11-480c-9fee-66e75d38fa31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d1e685-ceec-4b5d-93e5-e2e5d006e003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0e48ce-66cc-4606-9235-a09e4432b642",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2e43eb-9daf-4ede-b2e4-a7b0c1c9ce7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3cf321-72d8-4627-89a8-52ad8cb7d5a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855a04e5-8581-4e1b-ac09-c5bab908b22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0083a795-6cee-47cc-93a9-e91506d58087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6d6cdf-cedc-4ffe-bf40-9b6b575c3b92",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5affffde-ceb8-4f14-9e99-9f11b2910d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af5db60d-49b4-4285-af0a-1b54ae3e0064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ad241e-027b-4fb2-a94e-ec2c8d259dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361c3b5d-73f3-40d5-be46-5fde4bd8d61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631aba68-c055-4548-8a32-d4eb66d92de8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d327503a-31aa-4f21-97cc-ce78c5b8004b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5a5218-4e3a-4640-a17a-3104dd883ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff74bb-fc69-4ca1-b96a-1ebc41de33e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769dd809-6d0d-4fa4-ba45-fc8bcb5ce158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e525832-392e-4b7d-b83f-d9034b9b7064",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef37b58-d28d-4f9b-9378-ed955bbc8e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9f188b-4f4b-4137-a5b4-dd8c263db08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064435b8-aea7-49da-9670-76a352a6f346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b3b326-887b-445f-8fa6-21ceb1cb9106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bb5106-eaf1-4e45-b0ff-1d52195413ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b424fd-5a42-4353-b0ef-5f683f4d16c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84c40fc-3696-48bf-8065-072dfc2d0a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0718a3-5d38-4da4-ab4c-305c80a42b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c29cfea-09e1-4c4e-b3bc-9f942090fd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9ddb2b-8d70-4ba3-b612-e419c4ce1651",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4222df6-165d-4ecc-b8f0-44e10262a79e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db6f5a1-24ca-4489-bbd1-71203c557fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6a93e4-c466-4f2b-9930-57b6dc8e580d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588ab3b8-a016-4833-835c-63ff59cce25e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd16fc74-77a5-428d-9c28-f370905643bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46f02d-89c4-489b-9f27-dfe0c973497c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7aea25-a321-4af8-837d-2feb5836c439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9e5309-8372-4736-b1c7-7a751e56f1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d278fe0b-5419-45d5-8c7d-1415e3113eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abd1bc6-ea8a-4878-8cb4-faa67d6cdbbc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ef8f8a-1511-4f11-bbf1-fd526ed27aea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5aa2d29-4eee-4e55-a702-171fbdaf41eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fd5c33-4d23-4bcf-8bf3-780188870095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c689b4-5126-4786-87d8-91f4b7007f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2201501d-b4d5-4aa5-85d6-64a23b5c2c55",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590be506-c50f-49cb-bac9-47a4fd7efe72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9505fa08-1eef-478e-815f-aa3663e04418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ea7347-654c-42f7-8b97-2331646eca63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e9846ea-2e9a-4787-b540-10c52d06b531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c0f066-d275-4c58-9d23-845f73cdc502",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fc518d-30fb-4c31-aba0-37cabe1b89ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fdd0a9-742a-4d02-8024-b71c35957ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c98c13-f638-4d07-bba2-a65b987b38f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef979206-23f0-4376-86fb-3b0d0d87558a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357a860b-ba3c-4b60-b0d2-688d6ae18594",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949229a9-5269-48d0-afae-515cdfd3c3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9982617f-4e91-4fa0-90b5-b075400f0036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e2030-6aa3-4647-bcf0-9b6436709ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc034bf-9f7e-4c9a-b144-590727f99cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5e83bc-a91d-408e-9ea7-16846265ee99",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ba2e25-3aea-476f-b27b-397aa64060fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fb5799-d9e9-4be5-a9f7-82bbaf424f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c10f432-269b-4913-aee4-3e5e457a05b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19fd9b9-88f9-4471-b0ab-c7d1b03fdb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ac00d3-4f45-4930-99e8-66ca69924022",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec7d329-0523-4793-b247-ae0e411d2646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d9af4b-41c6-496c-9922-8bd841b04bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3231312b-41a3-4f8c-bdef-717d326a938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b610c1d-f1f6-4b33-8be6-d1e2bde53dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f977c2-dcc4-4a59-ad67-772d45a17619",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f905125-6564-41eb-8527-05f94c3ef247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df047a5-b5ad-4123-b90f-edced5327b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7713dc14-5082-4717-85c0-a9a62c53fa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ea783c-0eac-4017-87b5-8bbdcc9cd9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc1003f-af53-45e7-a8bb-093ded849ff2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4983deed-c22f-4915-bae2-7df389027f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d052807-2416-4a19-b9b6-1cbcc80e8e10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaf8a88-94ec-4b6d-aaea-fd23b01fc843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652751c7-0ef4-4425-96bd-b1efca86cc6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc02a3-9d26-49c4-95c2-a332f9e80fa4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec22b08-e5ba-493f-9840-586c6918f120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836205ca-b603-4d13-b767-288c93b466d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d56a8-afb6-4314-bedf-ebaad72babf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82237803-448a-40ff-84f3-30eb0b5eb74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00902324-343b-424b-af44-ac160fabd5b1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4d4bc3-67eb-4cdd-9bc6-c6065c80ec6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33618e1-1d82-4c87-acd9-121caa21868c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92fc3e8-2d93-4179-a743-efd5a2ad4f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f206e1-85e7-4f7b-94fa-76a28d56294d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31542e77-96ff-4daa-a51d-dc4e5ac18fa6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c2fd15-7efa-4be3-8fee-859848ee1442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d4592af-424a-4dfb-82a0-2a4b923189ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99733177-7135-4c61-b972-93aa3b4b6419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cc9bc2-0ea5-428e-a5cc-a7a194709808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e66e18-e0e5-49f9-a342-5cbfe55eab73",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e65350-37d9-46b2-ab2a-dbbc5c77ffd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c732b889-ec29-4d09-bfee-329680809e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "766fc2e8-591c-4071-b392-f4854e95c6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4119bd7-ffac-408e-8574-f03939ffdd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b81040e-7411-432a-9916-aefae48ca126",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243266c4-957f-41a0-98ee-fb56c406baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2a197f-09a1-4aec-a325-44c8d1c63c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4312ff-78ba-4320-9849-ebf1298b7303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168b683b-5e69-4042-8a25-926f9c85354a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e78d716-3da4-4359-989a-020cb8a27d73",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347c04c5-6842-4041-861c-f49fe3b35dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d83136f-67da-4ecb-bbfe-6ba0de43723a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53821ac-89dc-4eb2-b3e6-1bfbfe748657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e833733-15da-44a7-8357-5d686acb8316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727e1150-cc24-41cc-b3f3-948d48a9cdd3",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5c591d-60d8-49da-9efc-21512281aa0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3292616-0812-49c0-88bc-8c43b23b7bc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da69b543-801c-4843-9af2-0d1a64aaea41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed62f2d6-7053-4963-ae12-eb253788c182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e00b2c-63b5-4815-866b-8f0108581358",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd862b64-b43d-40cb-adbd-3f86e6176ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60a415b-9106-4535-adc5-dc33550eefd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23701f19-8a77-403e-8ff5-be6dfca98000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785e3b3c-249c-4d7e-8493-f08b18da5d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2704302-611f-435d-b035-461d48843ae4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005c9997-0e27-49b9-8adc-0b4451b2e39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0423c83-59fe-4374-99bf-77b00d3802d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771e0dcf-c1ed-4d42-a4dd-79894f4a7af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b83ba13-ed06-419c-802e-a9f21bf42f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13839f72-14b7-4823-82b5-79f61b40bdf6",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb707ba-c606-496e-844e-b63ed5a2bf5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efba3922-34fb-4cef-9472-5add9afcb47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc7b53f-6862-4f00-9452-025fbe01921d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8171fb0c-294a-4317-9a84-1314fc7e0617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b63416-7cbc-48c9-8256-e2ccf47c7bca",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd21a374-5d86-47a3-a9df-2535376f17e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cb02f7-7d2a-4e31-bcb4-adc1ae762777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5270af-047d-4443-956f-c50bfbff4676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5cf26d-f976-417c-8731-b964db929fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be4d478-0275-4f7f-97e9-2d980ee50c59",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd393526-332e-4d77-9eee-07f07ef1dd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d08b5b9-0030-43ca-890e-59bd7161c6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6159f820-9f3b-477d-9296-08b49a054cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "660bf3d3-adaf-47c4-8a65-c2b64fd55724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c9d4c1-2169-4903-8e22-af11d4f61e0b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c022fd-24bb-452a-a954-1983f6d4571b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d0b02c-2e18-4ddf-aa7d-6e536bd714c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884c5235-946c-4c6b-8295-08489477729e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe55cce2-0e3d-4abc-8fd5-06f36002f4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d51314-80af-47a7-8b2d-8ce1384a0b3c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90e1750-5617-4282-91e3-76188d2e3731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b877e3aa-f75b-4b60-bef7-4b012083dd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4902d79a-7c0c-42ff-9640-c0cc99b97ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb665f3c-50ff-4822-a90f-1693c21c0f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c718c85-7827-43ed-a745-f774fba1cdf1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73c0ab1-5049-4f29-b914-66dbb4191133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e47b95-2c42-464f-a94b-851be1d05754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60317255-f20c-4dcf-8c7e-80adbf2e98b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73dfce38-2660-4927-bdbb-5b494fb2b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3c36a8-b5d5-4edb-85ee-95118e1dd2fe",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef462e54-bcb2-4899-8ab0-494bf8ef01f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0e59f4-28fc-45d0-bbdc-84e2e6f080fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fc554b-8bf5-41df-8dd2-f27b2446fe64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1e459e-5607-426d-96e0-edecf3ac001c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a11d7af-bb0d-49cc-8459-89036c045148",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b43d20c-bc19-4ed0-bd2a-7ed38851e6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abd5210-6a8e-4f60-94e5-45fb3c1e59a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745b430f-d93e-4fb2-ba6f-35b4f51326f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "953bb8c5-08ce-4f47-a9e8-27282fbd2c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ecc5a0-6ed5-4ea5-a3ff-eaec86c7aec1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6555127e-58d6-4fa6-a77a-b94e3793137b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "355ed944-b557-4d93-a295-d13065d98e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad00ac3a-24fb-4264-b362-4e718f12b816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead37bc8-aa9d-4ee9-b535-2d15532bb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3627abe8-f5aa-4fe2-a621-c4fb94dddc3e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474aaef6-12fb-4a58-acf9-01cc181c4d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16661e10-1647-4dde-877e-9ca5f1622528"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddabe294-b3d2-4fc5-b33a-7a61593bb1a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8718f1ed-a934-449b-8cc0-2ab60f9b7ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf885d5-88aa-4ca1-92f6-f96e9e2c11ea",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a82d63-500b-4945-a9a1-6a6e6203fec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c9280f7-8883-40e7-af88-4fd04dacf30b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab435b7-db47-4ac2-ae19-40a2d5cfda48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb977e2f-4c14-46c3-b59c-e706862a1c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b9fbfb-b1ba-4bcc-b64b-b5fc83f8764d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404c8e6d-c259-4a1a-a596-adeb9a99277e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63002e06-d497-4386-9dfd-bc1d761c180a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b9efce-6e61-46d1-934b-c5b053f28a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c450c9-f803-4d0d-aa9b-524b12b83056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede40878-0738-4355-b3cc-0258d9ba6358",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a161afef-fdae-496c-9b3c-77a980fb3d38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc40e6b-81b4-47c9-90d0-7583a57da6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e106f78-eab1-4d83-9f1e-c690f7dad09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ec8e47-74e9-453f-8304-3a59af2b1968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50d37de-096b-434b-8d4a-b378f337e36e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1735543b-1638-490d-9b75-698063ee96c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "796e3ce7-26d2-4e73-9142-421ab45319d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdf2e61-962a-4f45-9703-b0fe08648bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496f82cd-8a5a-4809-8f12-e837ce4ecc2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576d87f-b986-4f20-a380-48ba6220a8b9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e2d95-2530-41b7-9036-fc9cc32bc2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "779bc550-3329-4e77-8f34-907f53148ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d836b202-8215-466f-8f32-01470a67027e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44bd703-1e0f-431a-9be9-b6fc764c2cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d26665-f89d-4568-9d49-5bced0dc7b78",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe98e4b-7b52-45d8-beb3-b2ac80513634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811255b0-74b8-4cc4-bd75-90294710a5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d8a3f9-ef24-49ba-9de0-7598d9d6020d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7064e5-e7d0-4a4f-8ffd-91b6a1241a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d64b00b-c4ac-442b-8278-5e3a923802a5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909a707c-0cb6-4bd8-a674-c7d1b64b79aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5055d7de-a8e7-48ba-9c65-22b5e08d1977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11571dac-4345-4404-96ea-aab01f5f0189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d57e85-5e86-47e7-82d3-05568d064f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfec3eef-a6c2-4e22-ac7b-2691fae9f7d6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66e6b19-9843-4bdd-8cbd-1f45a5b5f5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b868d26-ef4a-418b-9e36-1c2de62b4676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30264191-a20b-4b90-9217-dc5c6f005a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "472db720-438d-4236-929f-7436db2299ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb3596e-f363-41ca-bf79-0ff4b511a917",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb3457b-756e-4225-9b3f-878f727ba25a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0001bc18-ba4e-4aa0-a61a-16f56de55d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489c2d3c-f462-4da8-90d4-76d9a2cd9e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d004ba-9692-4d6f-ac30-8fc90bdf418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c027e33-6e9c-4bbc-989a-3129871643bf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e43eec-cebc-45fe-8b60-0a1fc76bac65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd88765b-e0bd-49c9-8ef2-b7f65e24ef99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee392adb-fd33-49bc-a250-4a090a2a74d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e90fd7-e4fc-4d8a-aa34-dc7a6163e6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b85556f-2fed-494a-b3ac-7ca995c39bb9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f702dc59-f5ba-4389-b409-f03151c19816",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d79c84ec-8a15-444a-b775-681c061ad151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0444b398-34b3-4839-9596-9ff1fec579fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ef86d6-84b0-47ea-9653-c92e5b1efe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a230b5-476d-4a71-890b-b91a897f13b5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a9527-e201-410b-b4b5-af162281bdf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ae48bd3-9ec2-4d25-9f54-3620a7361d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b7a05e-07a0-4c69-bc97-a74ea25cb813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db63fcf-01d9-4d7c-a7ba-1a51cdb8ace2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19322383-83aa-4dcc-8643-072888263d2b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a5b889-7bf1-4bc9-a90f-68f159b865c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dd0b4d-2569-4315-a6eb-9c800cdef737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f04ba9e-6637-4d8c-862f-5ec4cc6ee0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d80b8ea-9a1f-469e-b381-418a2516e6d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd863ff-a359-4230-b774-d149f3d7bb80",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c723fe-5a75-4293-9b79-22bc45a768ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d61a663-8a88-446a-b394-d69abcd431eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60add584-c8f0-48a9-9cbc-048c0293b91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04060cb-7729-435b-8f49-be58cf8c457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cf69fd-c390-48a3-b81f-ad8d9f400ec9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c940a087-aa42-43bb-9f70-5c1c11312e5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b2a494e-d576-4f33-a2c4-699caa842059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d6a506-3171-4e34-997f-26c1322b7d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d9e46a-1ba7-41df-b00c-d196d242c71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cffea9a-ac23-4150-be9a-04186b84c61b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf523f0-214b-47d3-ba6c-db78b8d3e43e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a6609d-0a26-4ae0-b310-dfa4b5bf864d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f71f6b9-0e23-42dc-a365-69370020e3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2140e32-085d-433f-8913-9ee666aa1717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd020bc-7442-4867-ae8b-d276d366a7c1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3f70c3-a60f-4faf-8899-a9956711aebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d7b818-91fb-4f32-9b5f-90422dfad0a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2903171a-23b5-456d-ba9c-d06aff48a041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f5b5b5-d573-4330-bebf-c5f912cf21b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381a221e-4b67-4a18-9c61-bf44d162ded1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc82e70-9369-4b58-98a8-df5bff67f6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3499be98-8282-49b4-ba5f-e2b44bbdd182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1b907-e0d1-4282-8037-1276cc305f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9440f4-ad4d-47f4-957e-7dec55a116f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18303c81-d536-4e4d-ad14-46479072bcda",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86bd5ec-bd1b-44fa-911e-bdca2d5a38c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6c1b0f-b89e-48cd-862c-7164c5009490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b29c68-2745-4a55-bfe3-75617749465a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb0f96a-bf4b-4301-b97f-01f314e22310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcf58bd-dfd4-48dd-bf4d-c1db1e0616ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7deeed-f5e8-42c7-89ae-d2dbd7c9f54d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a85605-6272-4af1-b4fe-49b22ef33014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507c7d14-eb55-4637-95e0-20f8de17b3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218486a4-4930-4d9c-b8a4-f76a30e8a27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0151c5bc-03bd-401b-85df-7615e5385689",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35370013-b221-4895-8821-6d6381c072c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc9fe87-c41a-46d7-afe3-534745a14756"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21781496-485b-4ceb-b692-0f9e1856f91c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f9e1c6-2fa1-4034-b4d5-bc391ec17f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4edb80-a879-4c56-8387-e41198514d47",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2279ba82-5488-4843-8792-c3d8fee6bf19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3624cff6-5b9b-415f-9dbe-80747147ee8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c720c6-ef71-4ea8-8607-21a0f07a0616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c47f22-c24d-4be8-a490-5b214badacea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00b2359-eeb7-46a9-bf04-7c4d0de68a5b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d38ebb1-6945-4247-82be-b898df5691e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfac585-1d46-4d74-9588-7805c697141c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93190c-6b04-42c7-b4bf-00aad80ee577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51b06c3-11b4-49f3-b918-ac04d23f2732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9601d34-c797-4593-b1dd-1724617206e7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c7042c-4266-4111-90c1-7306cfcb7740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ba5bae-b617-47b7-92f4-81e651dae633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eb0c81-180b-487c-bdce-549e4bba9dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de99d739-6ac6-43e1-9457-5cd587c08696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1613461a-c907-4d01-9793-a6329700ad28",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df6e84d-a76d-418d-98c5-374197f2b384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae3eac0-ed92-4837-a3c3-347f76e863d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d265d33e-108d-4f9e-abba-9ebb4757fe47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba2d569-45cf-4f3e-b941-4a87d78d67f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3760410b-bce3-4076-b9c1-b20d7d6fadf8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaab985-8427-41e8-9063-f2f3ff1f14b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4ba277-4e51-4164-a189-2b778d8751f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493c8be1-0fe0-4ca2-8493-3c1a19b92a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bedb856-c00e-4136-a5f8-c957fb192664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed8f1ed2-822b-4259-9e3a-b70c8463b889",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36328638-b084-45e6-bff5-979f0716ec9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4d068e9-4b28-49de-aa32-69fa8936c6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bede0c-9259-47e4-8d7f-8adb39202865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b47eb3cb-a1b0-4cd0-96c7-62e95fc20fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6cf5ad-f18c-47c8-b51d-b25bf43d2023",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc8bc92-7182-4b79-a4ed-04f578188e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5cfe1d-b1e9-4e1e-b913-68638c7736c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75cffb9-4bbd-4011-9315-fa0356a00a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3d000c-2eb7-401e-83d3-ed606d832bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8d6121-5e5f-4156-9c52-0883c7cf9536",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b9be0-d392-45ef-8367-d3d55aa3fb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fe762c-feef-42d3-b0d0-2b8664cbffc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7326ede8-08a1-4147-b269-9a63acf2b05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13de221-19e5-4093-8fcd-fbb406df5ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b0dcf-29b0-4e67-ba86-45d2ca255a2f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c349651-6e0f-4771-bfd5-6445ce6f689a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27b7e886-d551-46b5-b836-f3a5b95b8d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e11219-b9e8-45ef-ab7d-5b7110b0d923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49bd486b-d26e-4b7a-821c-e70999953f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3181b9-d9f3-4b47-9e17-981372d00090",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa91e94-11b7-401e-a49e-64701bedc840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d14b93-907d-4c2f-9ec6-889388ea59f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b011594d-b2d7-4430-8bf9-5dd77854e706",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692a81a0-92fb-41e4-a751-5c30c436211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf531dab-8f5b-440e-adb5-d9e1d98d485b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687138bf-4c8a-4ee4-9470-9c39c5769258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1ef319f-e3b5-44d1-b52d-df3253126a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1608a759-c254-4edc-9ac4-cfee06acf188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3d2cb3-82d7-47fa-a447-cf9d9caec330"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "175a52c3-b85f-4e58-a649-fd98931b20b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98549f59-7a68-4c03-8e81-d1ca5da2bc04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffc6e951-9516-4604-8d66-ac020c23efe4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0bb84eb7-9316-4290-94c2-4db0ff638a4e"
                    }
                  }
                ]
              },
              {
                "id": "bc7c9aff-1256-4198-81c0-3529afefb53c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65702460-bd53-4694-aeb2-d8132ffa1ba0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffca534-7a79-4a37-b726-50dfe788e67f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89f16b36-73ca-4907-95c7-10c80c7176e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea96051-010a-48f6-b8c4-8076cdfac251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6713404-6e82-44f3-945b-8de9dd82c636"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6fc9ad0-1a2b-4759-92ef-6a110ef290f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c00b069-d83f-42c3-a0e7-5a2424ef941d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "916b02b7-1d4d-4319-a4df-c6baf90f3464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24085596-260b-4d9f-aaaf-45856af60dab"
                    }
                  }
                ]
              },
              {
                "id": "4c20e0e0-63b1-480a-b647-02695b847dac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b2309262-1b2a-4518-9d17-a5220c0d908b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea797b7-1aa6-4a2b-9201-353c4ad990aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "233867cf-05bc-4dd2-87e8-52097cfb0de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b3ef83-09c5-460d-adb8-0573d471a1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723c79bb-e5bd-4789-8262-d6be0ea9839b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bdc71c45-a425-4570-acec-acd2e202c2fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdabed2a-b31e-4bff-bcaf-89b461430822",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33fd5697-5a0c-4c87-9449-b0bd7c41c75c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "db238279-71df-4399-9731-d95586dd2abb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fbbc852-4890-4682-b313-fd7001424286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a17b74dd-dbca-44cf-bbdb-d859e7a6a02d"
                    }
                  }
                ]
              },
              {
                "id": "5d3b3ae2-c16d-420b-975b-568dac232166",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29a97ee8-e5eb-4aed-8dbb-67104a476344",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "029b66b1-7636-438a-b19f-e335bd80a8e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "490966ca-b9f0-450e-a275-9acc8ece6984",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb23923a-8228-44e2-8181-d92f1359cc82"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fa00faf-1127-4e76-8709-c6a956d87bad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "837250a9-f5e2-49d2-842e-c377c50f2842"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ef91db9-8fcc-40ed-8f38-4e0ef0695528",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3544605f-9349-42c3-99fd-0c9f67475c5f"
            }
          }
        ]
      },
      {
        "id": "aa5f10d8-3935-4f16-bc70-4099ccf93a80",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "76b785bf-733c-4478-8a0f-0d16639a76d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d11f3ed2-179d-4a0c-9e09-ef65dd52b1e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61004c04-0608-4109-abea-7c23aa0e3cd0",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b040b496-06a6-40c9-9f03-b2c17a939991",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d7cc063-d90f-4e0e-a294-5276d2b374d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efac15f-127e-4e47-b8bc-36101457db7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "278a43b9-21ab-489f-99c8-2fc091107800"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebdc6d3e-dbb1-4626-b9a4-043a405856e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c2a42bc-ffea-4221-9b9c-ef384d8b6827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad1b760c-b597-4f19-aee2-3f954f7d7720",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9695aa30-003f-4bc1-b76b-0f9ed1b013cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6dcadd51-a92a-44c0-8aa2-b674720bf771",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "44bab5a8-544f-483c-9913-ef617dfc5049"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deb578b0-7a40-400a-b8ff-5d861711742e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1d9e8b33-12d6-49e1-bcec-970692188e1a"
            }
          }
        ]
      },
      {
        "id": "ba8bdc42-8fa2-4c38-b888-709e9eba723d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "551c0d1a-9dba-4cbc-86a7-b87859dbf51b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f457143a-223f-4b93-b6e2-21b1ec56743d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41b2e1b2-e18e-4e62-ad32-d06408ae215e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfb2552-5510-4b97-826f-6e6636191b5b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac6a1926-e2e3-40d9-b1f2-c6efd7b45c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5053aae-944f-4f1a-bba0-6f92efd18970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bbe74d0-c5a8-4fee-a07f-dd6a51432045"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "427b3a5c-a2ad-4f11-8a00-f62dc366ca88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be2ca087-09e2-4151-aa1e-88cacf235dbb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fce03228-f0ea-4507-9bed-27dc040b770e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1c738b7-5fa2-4eba-ae92-4266d873b597"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e1d0eea-a40b-4975-80ef-ff73c8183b07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68c00857-698e-4084-a9ef-1327e5b71493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5da53ed7-5b41-47f0-87f4-3082b2af6c30",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31ea22d6-be13-4756-ae23-26a6abc8693b"
            }
          }
        ]
      },
      {
        "id": "469a1e64-9cf4-4b0f-b5a5-0b3c704dee62",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "12b77bea-9f68-4f8a-9b14-92268939f0e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0cff4511-45d4-4f40-bce0-ebb8f20b95e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e36b109-e29b-423c-8253-f482e5fd2a25",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d88672c-0390-4eff-a80f-89711a4ce806",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d05d4a6-ba63-4850-88ed-13d28c5b7e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c28279-2799-4f30-9fdb-3d8f0b8b983e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ab0557c-c2ca-41f7-95bc-99d8c961c64a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5dc1164-e351-47a0-9e44-f7ccd0f927e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8f8693f-f61e-41cf-9c9b-6a9208da1ecb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bde0245-7366-45c2-9916-e9fce637e659",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c7545f8-4613-4603-9e86-99b4cc824f77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a192f08-ca7b-485a-b41b-b4667f359297",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d261f50c-3610-49dc-abd7-63b84b86542b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71fd39a3-17b8-493a-be57-bcbc9b60dfdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b46e5b9-79eb-4226-a20f-60bed7e7dc31"
            }
          }
        ]
      },
      {
        "id": "215fdb2c-e322-4556-bffc-05b4685b8fa4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3475363-c1c7-4a0f-a3ff-18d0433603a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e67316cc-ba05-4761-b199-f07c61b4d7dc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "685517f8-442c-4508-99af-a35997545c47",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ca66e6b-4b26-48ea-a140-1edf5175093b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b5bc47e-ce74-4863-95e9-5dbf4bdb6b94",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.26016260162608,
      "responseMin": 8,
      "responseMax": 258,
      "responseSd": 22.328237762966797,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686228421182,
      "completed": 1686228451881
    },
    "executions": [
      {
        "id": "cd2835d5-c3c3-4e99-87cd-75137b5fd933",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d4089ec7-a601-40eb-9788-bacce3d984b5",
          "httpRequestId": "76b698e0-5c17-4b12-8738-59d5655032ce"
        },
        "item": {
          "id": "cd2835d5-c3c3-4e99-87cd-75137b5fd933",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "97479231-539f-4e19-8af8-48a0ea25d64b",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "a8063d66-0229-4e1c-9061-4c9ea53be31c",
        "cursor": {
          "ref": "e8898fb1-a66b-40c3-858d-f38eaa1e9b92",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ca4bee48-f282-4bfc-a64a-2556c4d32e0f"
        },
        "item": {
          "id": "a8063d66-0229-4e1c-9061-4c9ea53be31c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8e382bac-17af-48b5-93dc-aa06410b0ca8",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "eac72617-3550-4433-bf93-5fdc79d9e963",
        "cursor": {
          "ref": "98b3967b-3bc2-49e1-ad4d-01c753e468c2",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f411549d-805e-49a3-b1b1-343227c644ac"
        },
        "item": {
          "id": "eac72617-3550-4433-bf93-5fdc79d9e963",
          "name": "did_json"
        },
        "response": {
          "id": "331343a3-a3a5-45f8-869d-9d57e8161455",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7979e651-e4ea-4437-a3fc-b663b26dbf29",
        "cursor": {
          "ref": "386c147c-1259-4560-ae1b-2b03d32754ce",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70d64b08-9b92-4e8f-9a68-fb872472ff6d"
        },
        "item": {
          "id": "7979e651-e4ea-4437-a3fc-b663b26dbf29",
          "name": "did:invalid"
        },
        "response": {
          "id": "8088be9b-19f2-456e-a76d-9fbc17df07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7979e651-e4ea-4437-a3fc-b663b26dbf29",
        "cursor": {
          "ref": "386c147c-1259-4560-ae1b-2b03d32754ce",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70d64b08-9b92-4e8f-9a68-fb872472ff6d"
        },
        "item": {
          "id": "7979e651-e4ea-4437-a3fc-b663b26dbf29",
          "name": "did:invalid"
        },
        "response": {
          "id": "8088be9b-19f2-456e-a76d-9fbc17df07e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f857fed0-fc46-4349-b8c2-5e990f571a9b",
        "cursor": {
          "ref": "0ecb4d66-37e2-4b4d-bb81-b46ce621f542",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "051f3a3a-5a26-4e52-9f29-e77d6b7152e6"
        },
        "item": {
          "id": "f857fed0-fc46-4349-b8c2-5e990f571a9b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "af423630-5d82-47d4-a90e-32a865006896",
          "status": "Not Found",
          "code": 404,
          "responseTime": 127,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d865e79-1ad6-438f-81f7-68ae64371f44",
        "cursor": {
          "ref": "d9089afd-c400-46f2-8b8f-843a1cba9b48",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6672fdad-4739-4e87-91a0-f5db020c1fea"
        },
        "item": {
          "id": "9d865e79-1ad6-438f-81f7-68ae64371f44",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ee963629-e40a-493b-a4eb-9a90ab4edc43",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed29966-86d3-4cf2-b641-d3f6d9bbffc6",
        "cursor": {
          "ref": "09149e7c-07d2-477e-a81a-e073c7ea4452",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "29a527b5-874c-429a-8c32-16c5225f30c4"
        },
        "item": {
          "id": "4ed29966-86d3-4cf2-b641-d3f6d9bbffc6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14695d94-806c-4c93-86fc-1528a11c4f57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf67954-2b41-4dca-9f94-2847d74af35c",
        "cursor": {
          "ref": "1192cfb5-5ea5-49ed-8c9d-aff708e14f81",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e60ed407-d47b-4bd1-995c-42660b5a822c"
        },
        "item": {
          "id": "bbf67954-2b41-4dca-9f94-2847d74af35c",
          "name": "identifiers"
        },
        "response": {
          "id": "50773c6e-665d-41d6-8bd9-8de9fbdfb6a2",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307c018a-32a2-496f-be06-68643d3c16fa",
        "cursor": {
          "ref": "6c4f8556-f6ea-4dc9-a3ed-74a1a30ae1c9",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "14c218a6-ab06-40f7-a756-28063d958839"
        },
        "item": {
          "id": "307c018a-32a2-496f-be06-68643d3c16fa",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1b73539f-0075-44de-a82e-eff7509ad9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982e4a0a-c973-477c-837c-8e8fcd8c721f",
        "cursor": {
          "ref": "c6dc5862-4367-4468-b0d3-1c72884c3588",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "26f57e13-418e-4b26-910c-9eb90fb0a25d"
        },
        "item": {
          "id": "982e4a0a-c973-477c-837c-8e8fcd8c721f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e58dc8d4-c69a-4573-bc93-b76aba4db3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc6c93c-2820-4830-822c-963cade084a5",
        "cursor": {
          "ref": "8eba3058-9cd3-43a1-9d87-84d41e0a3cbd",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9acf76b5-1c8e-4f39-b64b-489bcd052bec"
        },
        "item": {
          "id": "6bc6c93c-2820-4830-822c-963cade084a5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "814b0d14-ad2b-447a-8180-be3edcfd2f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f2ad02-9bd4-4f35-87a1-15aa857427b0",
        "cursor": {
          "ref": "86f07156-5156-42d8-84c9-940277edd537",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "82073282-09ec-44c6-94f1-1a889efe9d46"
        },
        "item": {
          "id": "39f2ad02-9bd4-4f35-87a1-15aa857427b0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a494470b-d67a-431e-8e13-57707a816c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ab414f-dc98-47e1-baee-b4491fe62d14",
        "cursor": {
          "ref": "4b790801-4516-48ab-8d9b-c1cc394a3e5b",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d876431b-6333-4182-bce3-4b3e95fd5b9c"
        },
        "item": {
          "id": "73ab414f-dc98-47e1-baee-b4491fe62d14",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5fcad925-70b9-46cb-8023-9a926db95d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a7ce67-0338-44b0-a30b-c723e332d081",
        "cursor": {
          "ref": "b0b50c93-b626-4bc1-b9b1-a74033ff87bf",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "dde8b8af-47f7-4847-8fe5-cc0201f9a937"
        },
        "item": {
          "id": "34a7ce67-0338-44b0-a30b-c723e332d081",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "81a49764-4420-49d3-a9fb-e3ddbad16762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28978e9-f79b-49bd-95e5-8f403cc972da",
        "cursor": {
          "ref": "5ca8a5ce-d9f8-4731-92ce-571dacda2241",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "104fc916-864f-4b84-8087-ec3a88ec32bb"
        },
        "item": {
          "id": "d28978e9-f79b-49bd-95e5-8f403cc972da",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a7825b21-c621-44c9-95c2-fb20d08108ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c59bdc-da8b-4e9a-a4d5-983b22fc6ccf",
        "cursor": {
          "ref": "b119c3b3-6327-4b0a-b961-9146022745e0",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3479e1ba-ec7a-498b-83d1-5e99457e2506"
        },
        "item": {
          "id": "52c59bdc-da8b-4e9a-a4d5-983b22fc6ccf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "09e6f43d-a252-45c5-82f3-28005ad4b054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf42410-0feb-4b4a-b9c1-a1e07fbc49fc",
        "cursor": {
          "ref": "b17f0885-b172-4669-a9d2-1205e4c512b4",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e26e778-3241-4f61-9790-a1bfb2790f3c"
        },
        "item": {
          "id": "edf42410-0feb-4b4a-b9c1-a1e07fbc49fc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "731101dc-e694-48cc-ae99-9d3b8cba4819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadc0513-3aa5-4a5b-b032-4cb759ef2eb2",
        "cursor": {
          "ref": "0093a374-be56-4b53-8a9b-32af174eb1b8",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "616a95e5-7b59-4e23-b66e-0d569e9bc57b"
        },
        "item": {
          "id": "dadc0513-3aa5-4a5b-b032-4cb759ef2eb2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "af7cf173-3316-467c-ba53-97d9d938f135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d7d068-70c3-4c80-9119-3993002c4328",
        "cursor": {
          "ref": "231a332a-f079-44a5-9540-21b996e50c0e",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "649f9719-7708-4357-a339-0e502458754d"
        },
        "item": {
          "id": "a2d7d068-70c3-4c80-9119-3993002c4328",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d2167525-7311-4cc3-9eec-640ca6a58289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80be8c41-5c95-4b95-9394-36a84a4e065c",
        "cursor": {
          "ref": "61e33890-70f8-4777-bccd-1283743bb360",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ed30d0a3-d0e8-42d4-b62b-48904c4f462c"
        },
        "item": {
          "id": "80be8c41-5c95-4b95-9394-36a84a4e065c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f44a900-6de4-4286-a2a8-6b1ff2cf2ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d648909d-d5c8-4c4f-811e-987ae861dfc2",
        "cursor": {
          "ref": "0f171e00-1da8-4683-8d46-48944dd5f361",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "130d83b2-d69e-41ea-aebe-334c5b96f779"
        },
        "item": {
          "id": "d648909d-d5c8-4c4f-811e-987ae861dfc2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "a8c60274-689a-4ce7-b838-d1e92e7a7048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa85bdc-ca41-481f-98d1-e7cf8871c764",
        "cursor": {
          "ref": "1221fb12-8462-4597-a67c-b1f97d1405b3",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c45998db-4263-4fd1-85b8-dc27edaa0ad1"
        },
        "item": {
          "id": "2fa85bdc-ca41-481f-98d1-e7cf8871c764",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "813e8e3f-b665-4040-bbec-7a31df48202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391ba32b-ac0b-46bb-a206-bf7de00d8b9e",
        "cursor": {
          "ref": "31c2ce28-563b-4c8d-8aca-0e92862db5aa",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a36ca423-4d94-43da-b1cc-ea9a10618c50"
        },
        "item": {
          "id": "391ba32b-ac0b-46bb-a206-bf7de00d8b9e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a70bb957-4dc3-47b6-a5e6-f6e05b2bd070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc37c1f-02ca-4330-bab9-969fdecbeb1d",
        "cursor": {
          "ref": "038fca0d-1fb1-4dbc-b8b1-bad9da7df3dd",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a6acf703-3b0f-4c5e-bba8-3b693d76848a"
        },
        "item": {
          "id": "adc37c1f-02ca-4330-bab9-969fdecbeb1d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0add1fc8-cc71-466b-b27b-1e195735e740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eb0793-a50a-4824-ac0f-c23b312bb62f",
        "cursor": {
          "ref": "9a416c7d-8ff7-4cae-b1a4-7d54629b0575",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "24e63dea-9cd0-4425-99f9-5ea0474a218a"
        },
        "item": {
          "id": "c5eb0793-a50a-4824-ac0f-c23b312bb62f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a9e0d750-6dfd-45da-9fad-7d7cbae0d4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd16730-1b93-4d28-98f0-e0df6014062e",
        "cursor": {
          "ref": "0db49677-af07-42a7-9ee3-1add920a92a9",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "51be8f99-2c59-4fed-b01c-5576e7e327ea"
        },
        "item": {
          "id": "3dd16730-1b93-4d28-98f0-e0df6014062e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d9ea5076-e82f-4196-9fa9-90d2f7412b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dc3aa8-d0ad-45f3-9016-007b71672f42",
        "cursor": {
          "ref": "9eacfaaf-7d72-41be-9a59-785a7f58a6fb",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e63db11c-25d2-4720-a99c-08ea735b640c"
        },
        "item": {
          "id": "87dc3aa8-d0ad-45f3-9016-007b71672f42",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b9b3b751-274b-4575-917c-07aa464f5c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce0ac94-1952-494a-95a9-7d88827f7df9",
        "cursor": {
          "ref": "f65fcd8a-d04f-47e7-b396-b67c9a6f7a4c",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a37ca73c-e7b8-40f1-9ede-3f097b43ecce"
        },
        "item": {
          "id": "cce0ac94-1952-494a-95a9-7d88827f7df9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "789f1206-bdd8-4d97-a29e-fc041a1e675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a571147-0947-43ac-8048-029b81124091",
        "cursor": {
          "ref": "bebea53c-f28f-491f-804a-2ccf85d088bd",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "464ddc21-0852-4f6a-97a7-9655aa2fb062"
        },
        "item": {
          "id": "5a571147-0947-43ac-8048-029b81124091",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6797e608-0e6f-4265-9fd6-5b81247b3ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd13484-7655-4bac-8c5f-4be5844e6249",
        "cursor": {
          "ref": "61784292-ce2e-4714-9ac6-9d8be3a0c7a1",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b495f7e5-2373-4f9f-94cf-d9747cc26ec4"
        },
        "item": {
          "id": "acd13484-7655-4bac-8c5f-4be5844e6249",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7cbff4ae-4b8b-4f93-9ea9-0d770aca6492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8988b7-7459-4be1-b5ef-187628919847",
        "cursor": {
          "ref": "014e6411-3061-495b-b395-7617a0be571c",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e73ecb83-596f-429f-a75a-86b99052cc69"
        },
        "item": {
          "id": "1d8988b7-7459-4be1-b5ef-187628919847",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "069d074b-df5c-449f-9474-7ac47cd6ff60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd93f3e-53d3-4ff7-bebd-44528f1a06a0",
        "cursor": {
          "ref": "319ed533-45fa-4c8e-9da4-e65585d3e376",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8b8c8506-0083-4c08-8165-326adee670c5"
        },
        "item": {
          "id": "3fd93f3e-53d3-4ff7-bebd-44528f1a06a0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9615ca01-6d02-422b-b551-859f47fa24cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6e0955-1e1f-4b32-951b-bc22895f7550",
        "cursor": {
          "ref": "e66c835a-318a-467f-9e2c-2d8b91ec7b48",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4467cd29-98c2-4a00-aa09-03623244ad5e"
        },
        "item": {
          "id": "7b6e0955-1e1f-4b32-951b-bc22895f7550",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8319473d-7f87-4840-8813-f4018a23b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1203a951-2fdd-4ac1-9808-aaad1586a9f5",
        "cursor": {
          "ref": "07151106-dae1-401f-b1af-3edcd54df554",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b999256c-3e35-4729-8448-2272d56690fe"
        },
        "item": {
          "id": "1203a951-2fdd-4ac1-9808-aaad1586a9f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0f581016-0e15-4b54-b581-fffb4e1a7e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ec3f4c-0176-435d-9a98-f99bfeb6fe4f",
        "cursor": {
          "ref": "6b13fba2-7393-4b75-8a73-307d68e4bfb5",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "24c7b6bd-7b35-4e1e-bd31-9a82b80a73e4"
        },
        "item": {
          "id": "d4ec3f4c-0176-435d-9a98-f99bfeb6fe4f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "50064f5c-0cf3-4d69-8763-e4a9ea677045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e9987b-515f-4ab3-852c-799053f4ffb7",
        "cursor": {
          "ref": "22aabfdf-7c0d-40cd-97e4-c40af17bd866",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "86d5595c-97c7-4ed8-bd24-bcb7c5e11967"
        },
        "item": {
          "id": "f5e9987b-515f-4ab3-852c-799053f4ffb7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7979191a-18a6-4a62-b8ae-a1464528d531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0caa1b-db01-41b6-97d7-9150baf71f7d",
        "cursor": {
          "ref": "893da74b-cada-4e96-bc77-7d3ea80ff41e",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "86bf26c0-037b-49f1-9230-53a6d6aca4ae"
        },
        "item": {
          "id": "4a0caa1b-db01-41b6-97d7-9150baf71f7d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1cfd9c9-0f40-4798-bf25-76f0c4e512a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf2b6be-50a9-4d5e-9198-2f344e887377",
        "cursor": {
          "ref": "7c58a9a5-fd4c-4e88-aee4-16f69d1af38c",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "03df2acd-c545-4c2b-9aea-22f296fba187"
        },
        "item": {
          "id": "5cf2b6be-50a9-4d5e-9198-2f344e887377",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a196ca78-0487-4a88-a4c7-d0d409950005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3580cf33-9104-4b1f-b17f-609a4f110205",
        "cursor": {
          "ref": "86cac36b-0978-4e0b-a937-5a80ea21ed3e",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bc104ea8-7494-41e7-8b2a-9727bd9f1ffb"
        },
        "item": {
          "id": "3580cf33-9104-4b1f-b17f-609a4f110205",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "57d4b790-3aed-4910-879a-bc5444396eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743c3457-9054-40f4-9ed2-e92dba44ac79",
        "cursor": {
          "ref": "e30d9962-603a-4d95-9574-ab82768501b5",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5d7a5703-f7df-421b-a6ce-bc4e72fa0aac"
        },
        "item": {
          "id": "743c3457-9054-40f4-9ed2-e92dba44ac79",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5f857289-af95-4622-af09-1fb5cbe2d92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a647b79c-20b6-4d76-aaab-0571e10c92b6",
        "cursor": {
          "ref": "01a263bf-c34b-4718-aa80-9c6ad3835e88",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dc4f7092-f692-41d4-847f-3c4cf7e6d2b7"
        },
        "item": {
          "id": "a647b79c-20b6-4d76-aaab-0571e10c92b6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5067fc88-4205-4e0e-9767-c675ec3883bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84602f27-e3fa-4944-b72d-8230368106a6",
        "cursor": {
          "ref": "685aa99b-759c-4686-9cc5-4ee3fd8a9422",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b9489860-a1fe-4a7b-9ca5-206b504abccb"
        },
        "item": {
          "id": "84602f27-e3fa-4944-b72d-8230368106a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bc44b1af-d6a7-423f-85b4-827cbcfd0bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40b06ea-f9fb-4ebf-b1b2-17cad466ce72",
        "cursor": {
          "ref": "1d851641-d3c9-4529-b4c0-813031d20859",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6dc8a23c-0d97-4fe1-b550-53106fc8272b"
        },
        "item": {
          "id": "b40b06ea-f9fb-4ebf-b1b2-17cad466ce72",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "91f313a6-5bb9-4c45-ac75-387dba476bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fe2019-c83a-439a-9f3f-6b52bf84f067",
        "cursor": {
          "ref": "aaf3e947-214b-436e-b176-accdea71df24",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6c2b0b06-4a16-400b-ad46-62c11605b29b"
        },
        "item": {
          "id": "95fe2019-c83a-439a-9f3f-6b52bf84f067",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "daea4a16-0541-49d2-80b9-eca42d966769",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2d8b7d-872c-4a8c-b6fd-0f3b199f75b9",
        "cursor": {
          "ref": "5051854b-e2e9-4991-a182-b2ad4384a386",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e0766e6-5557-4e5e-bfb1-21facc99c94c"
        },
        "item": {
          "id": "9c2d8b7d-872c-4a8c-b6fd-0f3b199f75b9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c937a561-884d-4b5a-927a-77d8ec234fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae025e6f-de6b-4637-aa70-83b0978742e0",
        "cursor": {
          "ref": "a28d8ea2-c8b2-41e9-b534-ce717763c25a",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0d4fbf06-da6d-4a91-9db4-d3f78fd6a57b"
        },
        "item": {
          "id": "ae025e6f-de6b-4637-aa70-83b0978742e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a410341f-c4d6-4a70-abd3-457bc80c47d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d8043f-99cb-48c3-a3df-2c6508294006",
        "cursor": {
          "ref": "be4200f6-7450-45e7-9e4c-702be2c0a002",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c0ce5768-c399-4b5e-910a-427e693c8e0f"
        },
        "item": {
          "id": "b0d8043f-99cb-48c3-a3df-2c6508294006",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d421e475-2ee0-4870-86c5-dd9cf55310d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9ebc83-ed37-4f88-8dc8-6309a09f089d",
        "cursor": {
          "ref": "9fafef27-0ac0-4a96-9b13-c81104e3aaf0",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3ef28c96-55ad-478c-a628-ab6e293a20fa"
        },
        "item": {
          "id": "3d9ebc83-ed37-4f88-8dc8-6309a09f089d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "34d5825d-a20b-48f1-a49f-4ed801e06816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aca1cee-8674-45b2-ab7c-6cb9a2b83016",
        "cursor": {
          "ref": "64bd0d49-15ba-426e-9592-2d2ebd7b95ad",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "08cef87a-9d66-4348-a5d1-a521b816532d"
        },
        "item": {
          "id": "4aca1cee-8674-45b2-ab7c-6cb9a2b83016",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9ee769e1-56fa-461b-bab1-2426f1e863b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08fdc74-7414-46b5-9774-69f146a8179a",
        "cursor": {
          "ref": "3c79ed18-55ce-46b5-837f-f331c3c04bde",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fabce932-8619-44cd-b495-0b59e93038f9"
        },
        "item": {
          "id": "b08fdc74-7414-46b5-9774-69f146a8179a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "64cb706f-e07f-4842-909a-505d44305896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27958961-2dc0-444f-8766-82c39e080058",
        "cursor": {
          "ref": "5a381878-c6c5-406c-95cf-2bd0d95504af",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "bf3fc604-122d-4121-88c1-405657bcccec"
        },
        "item": {
          "id": "27958961-2dc0-444f-8766-82c39e080058",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "31e4e4e5-3d6e-4560-b42b-5bf14c5ba585",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839f1ebd-e0cd-441a-92b9-83475b9c93ea",
        "cursor": {
          "ref": "40f0cc3a-0662-4fbb-9433-2000a1ab7608",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f4af5c75-d0f6-4673-bc23-f10896dc88d7"
        },
        "item": {
          "id": "839f1ebd-e0cd-441a-92b9-83475b9c93ea",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5827fedb-b17e-4e2d-9e45-aafc19755d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d3057a-6fb7-4265-9f8c-7de254fa9193",
        "cursor": {
          "ref": "09ef1f3a-34fb-462b-8f77-5ca51670112f",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b03dce4c-6a42-47c9-b321-2b993ae7c56a"
        },
        "item": {
          "id": "84d3057a-6fb7-4265-9f8c-7de254fa9193",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7bc52faf-627a-4af1-9f28-ca8f5099ef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596833ad-bd8f-4cb2-bfd7-f66916e62a7c",
        "cursor": {
          "ref": "eb617ec6-b9e4-4961-ab1a-2ba30c17397f",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "473fa2b5-ed0a-4190-b857-1a8c7e219174"
        },
        "item": {
          "id": "596833ad-bd8f-4cb2-bfd7-f66916e62a7c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "92937705-ef63-4ee6-baad-46dee5a434f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf6695c-9ab3-4d35-be21-3809e9473c05",
        "cursor": {
          "ref": "5893f728-87c8-46b9-b099-cc88d4c61399",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7bd2d72e-951a-4d90-85b3-34f01aec7d39"
        },
        "item": {
          "id": "3bf6695c-9ab3-4d35-be21-3809e9473c05",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0898c52-c0de-49cb-a14a-675937a0f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076241b5-91cd-4cc2-ae20-8de3235562df",
        "cursor": {
          "ref": "e54b82d5-5dd9-40ec-aba3-acd775de4d6c",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1e1953c9-5e4b-4da3-83bb-5868e8c1022e"
        },
        "item": {
          "id": "076241b5-91cd-4cc2-ae20-8de3235562df",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2e14d907-b398-4ab9-962f-43e8c0bd0cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f8b883-1bb4-4df9-b652-1c5bad9d5f1e",
        "cursor": {
          "ref": "d5b4092b-b1a7-4db2-a51d-317bf59bf4e5",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e152a5d8-e288-4f86-9f6f-172ddd216ea1"
        },
        "item": {
          "id": "d5f8b883-1bb4-4df9-b652-1c5bad9d5f1e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b330f736-556e-4802-93c1-2860e10adf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1b4e10-682d-4681-ad84-e650d418d909",
        "cursor": {
          "ref": "a466f926-95de-4f7e-ac0f-b71db4bf148d",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a7bab077-1558-444e-a3d8-196617949052"
        },
        "item": {
          "id": "af1b4e10-682d-4681-ad84-e650d418d909",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10a90557-7623-4e7d-a08b-aa1a21c84b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2598b7-e92a-4d63-ba4a-46baa12e63ca",
        "cursor": {
          "ref": "68631ec4-e19b-49f1-b52d-a4c46bf218d4",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "57039489-a55b-4768-8c1c-71a635ab4743"
        },
        "item": {
          "id": "ad2598b7-e92a-4d63-ba4a-46baa12e63ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "cb15759e-a87f-45f4-a5ef-44bf98c5e755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d2a6f0-5e45-4bde-b26c-6100047c4d26",
        "cursor": {
          "ref": "3e6e0598-81a9-4ec3-942a-620c14820ece",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "379d3a8d-ba0b-47db-8201-449e6ac0dc9d"
        },
        "item": {
          "id": "f0d2a6f0-5e45-4bde-b26c-6100047c4d26",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c22aa93-d3d7-4349-87ff-f528441e5a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b35bf40-fb52-4fc9-9f8c-71eafc19f544",
        "cursor": {
          "ref": "80db6009-8158-4b74-af15-3a36106b20bd",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "93817093-7584-4ae3-bd17-4fa9711f55f5"
        },
        "item": {
          "id": "6b35bf40-fb52-4fc9-9f8c-71eafc19f544",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "90b74fcc-d3c2-47eb-9797-c53c5d247cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278a2b64-1b99-4a61-b2ce-a71fe2e9f3b7",
        "cursor": {
          "ref": "820b9fab-7a63-467d-ac4e-bfb95b17650a",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "06035d76-4244-4db5-bbc3-f4a3293b193c"
        },
        "item": {
          "id": "278a2b64-1b99-4a61-b2ce-a71fe2e9f3b7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9aa6da39-692d-4001-9cf1-fb95b5247bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d61c63-cbe6-491d-a788-57dd304ef282",
        "cursor": {
          "ref": "55cbdb61-625a-4c70-b25f-93e73b2c1f6c",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "68c00569-2ff5-4f2c-93d3-c1094708acb9"
        },
        "item": {
          "id": "67d61c63-cbe6-491d-a788-57dd304ef282",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fe699d00-54e7-4400-bec4-c04c712ec680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a173c00-9dad-4d19-97d0-136b56d50700",
        "cursor": {
          "ref": "3abb1961-0082-453b-9680-30755a7efe60",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d98dbe77-2f85-4fcd-9203-b31fbe1e4487"
        },
        "item": {
          "id": "8a173c00-9dad-4d19-97d0-136b56d50700",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9ddc86ed-edfc-49bc-9220-a52b8e70fffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ea625f-d75f-4dff-a4f0-98fdf16269b7",
        "cursor": {
          "ref": "6bcf55cb-5133-4fde-b25e-3c9b6bb60157",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6a8e8bef-5f0e-4352-bed0-2fd9d70a511c"
        },
        "item": {
          "id": "e1ea625f-d75f-4dff-a4f0-98fdf16269b7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e4d04156-f470-4afb-bc87-8819a32c9b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0c3094-7fb6-4cc6-b406-dabf788385e7",
        "cursor": {
          "ref": "45a46704-8c20-4753-9b8e-1bb095820d31",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8bf1d030-b6bd-4d7b-a46a-faefc42b30c9"
        },
        "item": {
          "id": "9a0c3094-7fb6-4cc6-b406-dabf788385e7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e887d3eb-5ebe-4e03-a1f4-6be7593affd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db746ce0-3570-4105-9e1a-d4b3ecb4876a",
        "cursor": {
          "ref": "e303006e-b433-4bc9-86ce-44e6e9b9010b",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "21a32f5d-2bcb-4d9c-b36a-76cbce902bea"
        },
        "item": {
          "id": "db746ce0-3570-4105-9e1a-d4b3ecb4876a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e5e44550-abfa-4452-9089-519723630be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ebe251-a8f7-4e23-8483-e439b2aaaf38",
        "cursor": {
          "ref": "6e0b7f7f-1345-4001-a0a7-cd4e09a52399",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "515cd2b1-3f77-4297-9f2d-66e7d4af1e65"
        },
        "item": {
          "id": "a1ebe251-a8f7-4e23-8483-e439b2aaaf38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "94de9af2-c8f5-476e-ad04-fbf5656b372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b628974-a6e8-44dc-8fed-aa8f3afd76e0",
        "cursor": {
          "ref": "6b2d3303-8573-4732-8396-5b3645497d12",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d89311af-e6dc-4775-bbe9-3af87b2252be"
        },
        "item": {
          "id": "9b628974-a6e8-44dc-8fed-aa8f3afd76e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "914cbaf8-1e69-444a-a529-551ac710a4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199f3a48-7619-4780-8278-6d5b4b471f42",
        "cursor": {
          "ref": "bcc40e5c-36d1-412e-acb6-ebb7a14ec7a1",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a817242f-8819-4e01-9ccf-5248a3e9a320"
        },
        "item": {
          "id": "199f3a48-7619-4780-8278-6d5b4b471f42",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0bcf7bf3-9be1-4c63-b8f9-e2748bf8c3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf946c0-93bb-4958-8d22-b0c82f20f10d",
        "cursor": {
          "ref": "936d74ce-8eca-4583-8d74-de14750be284",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3d89c393-e22f-4ad4-aa91-c29429ca3426"
        },
        "item": {
          "id": "aaf946c0-93bb-4958-8d22-b0c82f20f10d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "36703eb4-df52-4c23-9ead-ea824d87eee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5ffa4a-080e-47f6-9296-472b615e6f48",
        "cursor": {
          "ref": "ae88afeb-f1bd-47e7-896a-c9db57aebcbb",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "db1bab7c-4794-4146-a7e5-a4043782b132"
        },
        "item": {
          "id": "1c5ffa4a-080e-47f6-9296-472b615e6f48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1b9590c-eab6-442c-8702-71f3f9ab4a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8825c384-c8cf-4380-9e69-b2537b81aa55",
        "cursor": {
          "ref": "0d548052-b150-46d3-bd5b-3adefe24ee94",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b87bb4c0-2c3d-4fbf-bfa5-d09e2de16ad0"
        },
        "item": {
          "id": "8825c384-c8cf-4380-9e69-b2537b81aa55",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "dea45465-1a93-42c2-a552-a8b60f5afc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f37a11-ba72-45dc-859b-03560bee39e0",
        "cursor": {
          "ref": "a37f6f3a-c4fb-4938-97e5-b12d81a0591b",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f90bbd2e-108a-466f-84f5-72972258598f"
        },
        "item": {
          "id": "d2f37a11-ba72-45dc-859b-03560bee39e0",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "486ab88c-fd68-4f95-829a-498b46311874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95368d60-7be6-44b6-8a1b-460e4b16c974",
        "cursor": {
          "ref": "566648d3-d6b8-4026-b834-85541476fde1",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c53b76ce-861a-41f6-a045-29105da5c4f2"
        },
        "item": {
          "id": "95368d60-7be6-44b6-8a1b-460e4b16c974",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7bbef1fd-e5a7-47d2-ba4f-785ade9d3304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a567c8-9d18-4aa5-963a-013e0b2c6e2c",
        "cursor": {
          "ref": "3fa59081-4e8b-4fa1-80a5-dd5aab042051",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "478136d3-af39-4da0-9d0b-c9ef5f26066b"
        },
        "item": {
          "id": "65a567c8-9d18-4aa5-963a-013e0b2c6e2c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "73cf9a89-f513-4f31-942b-098535001d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa56344-d676-4d8e-9fc9-387c535f003d",
        "cursor": {
          "ref": "06dc2336-bd57-4065-95af-025a172a8c23",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e23afc49-dc7e-477e-b9f8-1190fed994db"
        },
        "item": {
          "id": "8fa56344-d676-4d8e-9fc9-387c535f003d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2df4f90b-6572-4823-9681-57a85d5f05a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca9002-14eb-4ab8-94ac-fd47fac7b7f7",
        "cursor": {
          "ref": "7fa19d01-9604-438b-899d-5d6c65f9c350",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "25f51e98-c2be-4c34-abbc-b0843b1949bd"
        },
        "item": {
          "id": "2dca9002-14eb-4ab8-94ac-fd47fac7b7f7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e9f08280-27e4-4a1b-8917-898f22a98adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05939846-d099-4dea-a532-7f14d2285e3c",
        "cursor": {
          "ref": "21cd6716-e459-456d-b5ac-02d90a3ebb1b",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "db324c60-1a22-43fb-b3c9-df3238784b25"
        },
        "item": {
          "id": "05939846-d099-4dea-a532-7f14d2285e3c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f25b85a3-df9c-402c-bba9-f3645d07a881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83123437-307d-4508-9eed-4ec956cf0119",
        "cursor": {
          "ref": "f1c7640d-33e5-4dd2-8be0-f044876eabae",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f8096d74-ead8-4e26-9fcc-7c3964351cdb"
        },
        "item": {
          "id": "83123437-307d-4508-9eed-4ec956cf0119",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "623475d9-ed16-4f28-bd99-daeae5d7e326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "907b4317-87f9-4d1a-9bc0-354578bbd4fd",
        "cursor": {
          "ref": "569c8136-e9b1-4a11-a411-16f31743331c",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fb4b4024-6869-437c-bab2-fd6e7fc5361e"
        },
        "item": {
          "id": "907b4317-87f9-4d1a-9bc0-354578bbd4fd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "84c14955-5273-491b-83d5-68d4dc4a0a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f2127d-239d-481b-8c70-78e7077e25dd",
        "cursor": {
          "ref": "f8ed75e8-16c2-449c-881d-0591c02f34a6",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "19889385-9879-49c6-80be-3e8a64577013"
        },
        "item": {
          "id": "55f2127d-239d-481b-8c70-78e7077e25dd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cef8921d-6e07-4b48-83a6-440e252dacda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca6d3df-3850-48fa-b797-06878f69b34a",
        "cursor": {
          "ref": "a494b4da-af2f-4c0c-966e-fc4d05ae0e38",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89e2215c-fab6-400d-b93b-056548682863"
        },
        "item": {
          "id": "bca6d3df-3850-48fa-b797-06878f69b34a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "480d9249-e176-43d3-9bcb-cac8c873d055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e6cb25-b03e-41bd-917f-4e408c5f8bee",
        "cursor": {
          "ref": "4aa20277-0860-4b07-8894-436c11248ac5",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c02c603c-6947-4c55-b5ed-f76610bc5f64"
        },
        "item": {
          "id": "59e6cb25-b03e-41bd-917f-4e408c5f8bee",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "176e60aa-0cfb-418b-a438-a05b93e16134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9d0ade-6dc4-4118-ae00-7cb9a482adc1",
        "cursor": {
          "ref": "689f87f4-f063-480c-b6b4-f82c57a48e35",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3bf31357-3061-482c-97e4-8e00e9081f6a"
        },
        "item": {
          "id": "7a9d0ade-6dc4-4118-ae00-7cb9a482adc1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8f28bbf2-d1b5-40fc-a0eb-7f1024047794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c21a6f-39e8-4c37-9c80-d913c15ebac9",
        "cursor": {
          "ref": "839209e4-9d95-4809-9914-95d921c13486",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "53334b24-a86b-4291-aada-88855046ba99"
        },
        "item": {
          "id": "f5c21a6f-39e8-4c37-9c80-d913c15ebac9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8135fa09-e2bd-495a-93e5-1c4a6bdb815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c673064-2bdd-4276-a8e1-7001dd1242b3",
        "cursor": {
          "ref": "13103815-3c09-408d-93c8-7ba9227db65b",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0de27687-5ed0-410a-8b11-b1fbd2ed6dde"
        },
        "item": {
          "id": "4c673064-2bdd-4276-a8e1-7001dd1242b3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "112cd083-1d9b-4e6a-aabd-4d196edc3144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcbfac6-2b00-435d-b26f-9cefc2689757",
        "cursor": {
          "ref": "8cfdd19c-ffc8-410d-a88b-3ca64f86a6e0",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e9156218-0a17-4234-b7e4-063409b51b8d"
        },
        "item": {
          "id": "cbcbfac6-2b00-435d-b26f-9cefc2689757",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cf4db629-efaf-47ff-830a-5ed037bfba69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d44759-6c7a-4ec4-bda5-bb67f7c9aa7d",
        "cursor": {
          "ref": "f135a56c-a54a-4277-a950-3be946c6dcb4",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c94067f2-46b6-4205-8aa4-c788c65a4bbd"
        },
        "item": {
          "id": "09d44759-6c7a-4ec4-bda5-bb67f7c9aa7d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b62b014b-ccdd-4bae-8cb6-03ce1bdc9559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2024a20f-5022-4bc4-8d4c-d8d0028a3691",
        "cursor": {
          "ref": "dd6cf3b9-821e-45bc-befe-aff8dc187e95",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c23b1ea3-550c-4d11-ab58-7a4747b85097"
        },
        "item": {
          "id": "2024a20f-5022-4bc4-8d4c-d8d0028a3691",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bc94ae08-abc1-4018-851e-452264463a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad1def6-5ef9-4864-ba9a-7012690cf834",
        "cursor": {
          "ref": "e0868e63-8934-4d78-a516-5bccfa9172c0",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f753d2a5-5faf-4703-8bcf-812d197eabc1"
        },
        "item": {
          "id": "7ad1def6-5ef9-4864-ba9a-7012690cf834",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "65791b7c-2752-4197-93b1-9636ef599a34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc976b8-7883-4e1b-aa7c-b48aa6d5420b",
        "cursor": {
          "ref": "c2bc6f7f-2d4a-4071-be07-01d8a309d695",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1417cb92-6264-4f4f-8201-82fc8070a304"
        },
        "item": {
          "id": "0fc976b8-7883-4e1b-aa7c-b48aa6d5420b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "79baeba0-2025-4550-af52-070206799748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d9d3d-5dc4-4e29-9c2b-fd383c51df69",
        "cursor": {
          "ref": "48968c65-7400-470a-91bc-0d97a60b58b5",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dd3a0f77-1d68-40a7-af0f-e55c2f3b42ff"
        },
        "item": {
          "id": "7d8d9d3d-5dc4-4e29-9c2b-fd383c51df69",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ec7f65c4-56b1-4604-afc7-c5d1c50cca15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620774a3-f645-4085-b217-c1c823f292b8",
        "cursor": {
          "ref": "bfeb5982-1581-4f15-82bf-d5bc37628fb6",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5cf1b1bf-13d7-4c49-ac58-7efbe45d7703"
        },
        "item": {
          "id": "620774a3-f645-4085-b217-c1c823f292b8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7f3c4c2e-6619-4720-af48-d9b0656e9491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad09a5d-e4a4-4cbc-9442-9c50752cf58f",
        "cursor": {
          "ref": "9046f669-b5f1-4931-ba60-faebeb86a9e5",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "43cb1cde-bb3f-47d5-95b9-307ab538f27e"
        },
        "item": {
          "id": "7ad09a5d-e4a4-4cbc-9442-9c50752cf58f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "db5fb8c4-d1a4-43df-bf32-f608621e7457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3ee85f-dc39-4862-b59c-6ce9d94e4fb3",
        "cursor": {
          "ref": "1accf9aa-2e23-4bc8-973f-c6db98887bcc",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5c00e7cc-cf20-44b8-8a43-443c0c8ac4d8"
        },
        "item": {
          "id": "1a3ee85f-dc39-4862-b59c-6ce9d94e4fb3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "34560dbc-40c6-410d-a230-dac6a53e9bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be54fa-aee0-414b-b427-130ccd78d46e",
        "cursor": {
          "ref": "f99695ba-ad75-4bf3-9627-3cb1bce0f03d",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "62b157c7-1e68-49d6-8fd9-3122cc6980cd"
        },
        "item": {
          "id": "20be54fa-aee0-414b-b427-130ccd78d46e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e20286b6-6a3a-416b-b142-d7fb86119a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a14f552-bf02-4404-b8c8-7eb087853410",
        "cursor": {
          "ref": "71c582ad-021c-4ecf-84a3-966e5c11fd22",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bee44bb4-2d6f-49ef-af71-ddd4100de9e7"
        },
        "item": {
          "id": "8a14f552-bf02-4404-b8c8-7eb087853410",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cadac300-a694-4980-9987-0c9850b585a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac56a80-c7f4-4bcd-a0ad-71065f6b8e7c",
        "cursor": {
          "ref": "b95c2151-7c00-43c8-b7b1-eaf0241a4674",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "720f9df9-a929-4a02-8d9a-1a63763f9e29"
        },
        "item": {
          "id": "9ac56a80-c7f4-4bcd-a0ad-71065f6b8e7c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "84d58066-92cf-40ae-8419-5af01a54b55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abe3903-0c1f-4880-b90d-11c9c42f99a7",
        "cursor": {
          "ref": "e956b49e-d7e0-4342-b134-6ef03f7922f1",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "842d6b67-7a02-40d9-b8cb-594fcb2dc056"
        },
        "item": {
          "id": "9abe3903-0c1f-4880-b90d-11c9c42f99a7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ce7f7d5f-bcb0-4a4f-8d2b-3cc79d7c672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29769d93-8688-4c1f-812c-53f2a5ff64ff",
        "cursor": {
          "ref": "bf905dfb-92b3-4ddd-a770-0b38edf24827",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f2cec48-9b8b-4a26-802e-da974399a5d6"
        },
        "item": {
          "id": "29769d93-8688-4c1f-812c-53f2a5ff64ff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "288f4b49-2068-4a79-8fb9-28a5a74f12ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3325ee14-6fc6-437f-8fff-738571732836",
        "cursor": {
          "ref": "2f6a821b-afdb-4db3-ac20-a913bc15a5b3",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f73b318e-6932-4571-aaf8-399755bb4a65"
        },
        "item": {
          "id": "3325ee14-6fc6-437f-8fff-738571732836",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c5a0116-1bda-48dc-af7c-59d2880e3e99",
          "status": "Created",
          "code": 201,
          "responseTime": 162,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8650755-cb12-4453-b5a0-a1ac290a53c8",
        "cursor": {
          "ref": "caaa1e65-43e9-4209-bacd-61a8c5a445df",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "464a12c8-8918-44ba-a780-a0d992256b62"
        },
        "item": {
          "id": "e8650755-cb12-4453-b5a0-a1ac290a53c8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d0b68741-67c4-4498-a23a-474797755c02",
          "status": "Created",
          "code": 201,
          "responseTime": 258,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d110a5f9-93e5-4769-be39-86147d46f4c7",
        "cursor": {
          "ref": "dc24006d-8362-40ff-8b2e-3d29e80eeb59",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6fe36d13-394f-4d06-a4ea-3c3213fa92ae"
        },
        "item": {
          "id": "d110a5f9-93e5-4769-be39-86147d46f4c7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "736619f2-62ea-4d15-9f36-125a122660a3",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe55f62-17a4-4e62-a5aa-bbd01135003b",
        "cursor": {
          "ref": "da1de808-8a86-4f38-9285-73cf18a0a357",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "20657d0f-adb6-49af-ac3e-e29df0d653ed"
        },
        "item": {
          "id": "cbe55f62-17a4-4e62-a5aa-bbd01135003b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20f62159-312b-4562-98e3-69b5c3924b4b",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a753cf02-f975-4a14-8f18-9610205d2f32",
        "cursor": {
          "ref": "52fc8c65-658f-4ab9-8bc8-ace90fdabf69",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8a59a388-a2ef-4a9b-8b84-e54cfa390e54"
        },
        "item": {
          "id": "a753cf02-f975-4a14-8f18-9610205d2f32",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "405f42bc-3672-478c-99d2-664501488595",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b10495-d4f7-4239-bc13-ab9d79cc14e3",
        "cursor": {
          "ref": "cd78e450-52d3-462c-8f74-e576d5170594",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "33b95c52-7ef6-47d6-891c-21081f5dd46e"
        },
        "item": {
          "id": "37b10495-d4f7-4239-bc13-ab9d79cc14e3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b1f0fdc6-efa8-4efb-9e7e-87c7d60c4495",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19af145b-4b30-409c-b2ed-c624c414c7a3",
        "cursor": {
          "ref": "e0a93d32-0286-412a-a65e-f27690f90aba",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b66d0240-db5f-44e6-a298-478675099b35"
        },
        "item": {
          "id": "19af145b-4b30-409c-b2ed-c624c414c7a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "54aa9f32-65ea-4781-ad13-3135a82cc32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cebc46-fbe0-4d35-9787-1fa1eb654924",
        "cursor": {
          "ref": "9b03e928-50d4-48ba-9495-21f5b14c2e50",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d0ea8640-e43b-44e6-8fbe-170ec1d99ee7"
        },
        "item": {
          "id": "e3cebc46-fbe0-4d35-9787-1fa1eb654924",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fceab3cd-4c4d-463f-aa92-3d352c864368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e1afd5-78ab-44c8-b481-abb376b58195",
        "cursor": {
          "ref": "64c49c07-b66f-42ba-82ba-b18605f9a381",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "abbf55cd-967a-406a-b9b4-e24feb506ba2"
        },
        "item": {
          "id": "59e1afd5-78ab-44c8-b481-abb376b58195",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6fc2f481-1dc1-476e-a939-11bbb43526d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fe5f5c-2f52-4d8d-aaaf-c692c664b93c",
        "cursor": {
          "ref": "6a3f8ca3-d7b6-4fba-a264-8523235e35ce",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "629e858e-326b-4f34-bd88-5c63deab797a"
        },
        "item": {
          "id": "72fe5f5c-2f52-4d8d-aaaf-c692c664b93c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8ac69bc8-4968-4a38-b129-aec71d6131e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1373f884-2db4-4b36-aeb9-1c4d9f124ab8",
        "cursor": {
          "ref": "889126e0-c9a2-4da3-b6ba-0d9f7359b0cf",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "93705924-e882-4183-a6b8-ba8dcd8e45cf"
        },
        "item": {
          "id": "1373f884-2db4-4b36-aeb9-1c4d9f124ab8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "91b60160-6dc7-41cc-8b98-0a4b8743a1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07ffe91-7819-4def-8552-5649f4815518",
        "cursor": {
          "ref": "a3337325-f68b-4a38-ae45-8859cc96071d",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dc6c73c5-0f7f-484c-866d-6f649e669823"
        },
        "item": {
          "id": "d07ffe91-7819-4def-8552-5649f4815518",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "79428a26-d61e-432b-b5fd-91e26f74dbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4e1cf4-898c-4f20-8410-c2a3437c4a12",
        "cursor": {
          "ref": "5006f5a9-95d9-4fa0-8d4b-f62733d84735",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "915de27b-ef2e-4327-bec7-9a7b8a9eb043"
        },
        "item": {
          "id": "ce4e1cf4-898c-4f20-8410-c2a3437c4a12",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ac635d01-75d4-4b5e-af31-9d0c86809069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475824a7-8514-4f58-ae93-4ad91c76e2be",
        "cursor": {
          "ref": "1c162d49-981f-4b69-a54a-2cafb3894276",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d1771275-8855-48a3-b418-5cd84cf171d5"
        },
        "item": {
          "id": "475824a7-8514-4f58-ae93-4ad91c76e2be",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6415c97-d609-42d7-ae4d-9b8934d18239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71a0e37-7f37-45bb-9f27-3d04cc8be069",
        "cursor": {
          "ref": "590f2fdf-4ba6-4f42-a8cf-11b7a9c0a984",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "15fc892d-8f64-4257-8703-9878507a4c53"
        },
        "item": {
          "id": "c71a0e37-7f37-45bb-9f27-3d04cc8be069",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "72cb96d1-ca81-4d68-af1d-57fabe264130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef94cac9-7f45-49fa-8117-62a3c42efd7f",
        "cursor": {
          "ref": "3abaae9a-12b3-4ace-acce-8fead70aa7ee",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "456b33a2-2e3e-40e8-8553-5e3597a4329e"
        },
        "item": {
          "id": "ef94cac9-7f45-49fa-8117-62a3c42efd7f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7eb9c247-ac3b-4697-b775-bda4ea3aaac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617f436a-037b-4468-b296-a460a4b5e8d1",
        "cursor": {
          "ref": "ab93e75f-7698-437f-9a9d-96d8f255822c",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "068a5c12-4520-4955-af11-7f7b8166116e"
        },
        "item": {
          "id": "617f436a-037b-4468-b296-a460a4b5e8d1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "faba0749-99e2-40d2-85a1-e74df9b56816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0a0691-76cd-4cc6-a0cc-470af9ec2182",
        "cursor": {
          "ref": "9cd95204-8541-49d6-8d50-649945ad6c1a",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3f39c44a-c2ac-479d-8ca8-0251844648d9"
        },
        "item": {
          "id": "de0a0691-76cd-4cc6-a0cc-470af9ec2182",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a2af6fda-2159-4c1a-9957-4723ff08f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dbc8f4-4c33-4df5-9a9c-f9bf751b5bdc",
        "cursor": {
          "ref": "415d4a62-a83d-423e-afa5-8896b13e3870",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "29384808-8b1b-4cd8-9841-23ac81d1495a"
        },
        "item": {
          "id": "b3dbc8f4-4c33-4df5-9a9c-f9bf751b5bdc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a282d6e2-797b-4bff-a4f3-d43cc629a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38141267-3220-4951-aa6f-1ee8e9404092",
        "cursor": {
          "ref": "336ff8bc-3750-4753-8346-4669f68ca5ff",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2a11dc8f-296e-4648-b7ce-335264cd19c6"
        },
        "item": {
          "id": "38141267-3220-4951-aa6f-1ee8e9404092",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e8cf614-e54c-4564-a4d8-36dce6022eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acc55c8-c910-45e7-b8e2-2308a93b47e1",
        "cursor": {
          "ref": "e8e94c1d-866c-451a-91de-49a536196756",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "93d94b14-7ff3-478f-856a-72a0b0f0faf9"
        },
        "item": {
          "id": "4acc55c8-c910-45e7-b8e2-2308a93b47e1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0cc298b-1aa1-442a-8dff-bee3f4f2dd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98024f4-6c4a-4ca6-a496-afbc7ee3bb7c",
        "cursor": {
          "ref": "a8cab822-2a3f-48ba-8844-a6bca158d835",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42d0fa64-85e6-42a5-b80f-3deb47780654"
        },
        "item": {
          "id": "c98024f4-6c4a-4ca6-a496-afbc7ee3bb7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4417004a-0fd8-4446-8db3-164f1716fedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4b616e-9f92-4dc0-ba9e-5e52cae119f7",
        "cursor": {
          "ref": "eeb91849-08d5-4ef1-9373-bebb3b563783",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "299de2f5-12a2-4420-9e22-f7423f2eeaf1"
        },
        "item": {
          "id": "3e4b616e-9f92-4dc0-ba9e-5e52cae119f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e3bf65b6-c540-4c30-a469-96ef906f24f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed8fb73-3856-4057-9fc5-bfeadb74e161",
        "cursor": {
          "ref": "f5cbd52a-b2a4-423c-a938-b6b847266ef8",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8e2a8666-97a7-4650-8021-6bc303f1d2ac"
        },
        "item": {
          "id": "1ed8fb73-3856-4057-9fc5-bfeadb74e161",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2907b316-f75f-492d-a3d6-9e79e9268f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8cca7ec-65b3-4a60-9564-f5b718603ea9",
        "cursor": {
          "ref": "0d691a05-1898-4b98-8c2e-f52fbe1fce7e",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "26eebf6c-b5d3-4502-9cd8-9effa53cd8fc"
        },
        "item": {
          "id": "d8cca7ec-65b3-4a60-9564-f5b718603ea9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3d86fce-9329-41e2-afc1-c5a22986669d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7369873a-e742-42e2-932b-27d6fedd6d2f",
        "cursor": {
          "ref": "0d81ddfe-5853-421c-b860-3e6464795314",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b987a609-ae72-41fd-b453-8684bd59407f"
        },
        "item": {
          "id": "7369873a-e742-42e2-932b-27d6fedd6d2f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a4b338da-54cd-4f13-a930-19781586082c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc8b26-a44f-47fb-a707-c166407e63a9",
        "cursor": {
          "ref": "556c51e4-0087-4c16-9d73-b4839ee7a27d",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8035ca09-d7c5-488b-8106-8375eb41ed1a"
        },
        "item": {
          "id": "8fcc8b26-a44f-47fb-a707-c166407e63a9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cd1a3752-d87b-40b3-8302-9acdca0e6e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e27e50-a0a2-473f-b20a-8de83b5ba07a",
        "cursor": {
          "ref": "0171495e-5152-45dc-92d5-4563f3bc3fd4",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b1405f00-201c-4b09-8c88-79d761a25f82"
        },
        "item": {
          "id": "c9e27e50-a0a2-473f-b20a-8de83b5ba07a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6afb2d1b-12db-47bb-91c9-7319aa46b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612be01c-0b30-44b4-8a4e-a1f2bfdf5e38",
        "cursor": {
          "ref": "c44d5875-2ef0-4ad2-b68d-ef4b1e6ff35c",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eda3556a-83f0-42cf-8517-f9a7d6136d84"
        },
        "item": {
          "id": "612be01c-0b30-44b4-8a4e-a1f2bfdf5e38",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "acc766e4-bfc8-49a4-9571-6f99dd646f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98748acc-4196-4675-a3b0-ac8218739796",
        "cursor": {
          "ref": "59e77cb0-2b4f-44e3-ab6c-5b3212d14727",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "89b5eb73-47ec-46bb-b904-bd1072f396f1"
        },
        "item": {
          "id": "98748acc-4196-4675-a3b0-ac8218739796",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c5791534-f979-4567-b7bf-467874391b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e8826d-9131-4b1c-a5e4-d47d4fd0092d",
        "cursor": {
          "ref": "4416d3b3-9bde-4be2-b15d-dcdaf3dfbfd7",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5205556a-0f7a-4609-bb00-75365c059972"
        },
        "item": {
          "id": "84e8826d-9131-4b1c-a5e4-d47d4fd0092d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0bb4bac-8eca-40cf-bb8d-1b6c7949df00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5259f1e-8c05-42f1-b52b-64700e184f54",
        "cursor": {
          "ref": "efe2f9bd-93d8-43e9-bd67-e11bf7dd4502",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "afb960fd-7093-439c-adb7-27c1e1c6ce6d"
        },
        "item": {
          "id": "f5259f1e-8c05-42f1-b52b-64700e184f54",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad095fb5-1557-4b67-922a-f769c2e3138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225fd5ff-90a4-4c26-91d8-c14a8dee1c33",
        "cursor": {
          "ref": "c75c9220-05b3-4957-95c5-7866934004c8",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cbfb2869-5716-42c7-9076-3f414804631d"
        },
        "item": {
          "id": "225fd5ff-90a4-4c26-91d8-c14a8dee1c33",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41ab26a4-8c90-4317-b410-7e28b64f1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce34348-e193-4e76-822c-11ded4713554",
        "cursor": {
          "ref": "b3a96744-463e-4597-a140-10fa36df9647",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ef41a203-5dca-4699-97a6-8e10d7e2e9e7"
        },
        "item": {
          "id": "dce34348-e193-4e76-822c-11ded4713554",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "48130e54-6f89-4f5b-b700-2dde1bb5c9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4149ff4f-93f3-4f4e-b4fe-4de141c009d9",
        "cursor": {
          "ref": "6b0f057e-6df6-42c7-8ea3-6b6493c6a512",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "61768ed5-7c34-44f6-871d-4f50312588c2"
        },
        "item": {
          "id": "4149ff4f-93f3-4f4e-b4fe-4de141c009d9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7472b3b-6bb4-4f75-b16b-55b193756653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d375d3-9875-4d50-a7c2-e20e8cb9a344",
        "cursor": {
          "ref": "c77ea898-9a4a-4485-89b2-b67c8727d455",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f466c7ef-f49b-4df8-b3bd-3dd880bf09ad"
        },
        "item": {
          "id": "13d375d3-9875-4d50-a7c2-e20e8cb9a344",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "73a0ebc0-2383-4df6-8421-74367893db20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c597bcf2-c19b-4ba1-9bfd-fe21e4183945",
        "cursor": {
          "ref": "45787e63-abbf-4783-acc4-afeb46716282",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bdfbeb67-df8f-41fa-a7b9-b61e37c1e3a6"
        },
        "item": {
          "id": "c597bcf2-c19b-4ba1-9bfd-fe21e4183945",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0f41ff43-26a8-453f-a183-e2f49fbfaae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd6b39a-1911-4a30-95b0-f120d403d509",
        "cursor": {
          "ref": "0ea78906-90fc-45df-8fcd-ca58afb6a8d0",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9346056e-b7a4-472f-b446-d669879f7431"
        },
        "item": {
          "id": "8dd6b39a-1911-4a30-95b0-f120d403d509",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5a8c36e9-f39b-4a19-a653-1a8819933068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cacf49-2cfe-4da6-9c27-a314a18e13ca",
        "cursor": {
          "ref": "48bc6970-a1ce-4cf7-b1ec-82231f863c13",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "71a3ca50-c102-4b84-ae63-0d91868c1dc3"
        },
        "item": {
          "id": "71cacf49-2cfe-4da6-9c27-a314a18e13ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bd5693de-3ac9-4ac5-a729-e7eac9cb8857",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65697a4b-5074-4cd9-97c5-204776fa5d13",
        "cursor": {
          "ref": "7cb7d1f6-aa93-444b-ab18-a0c342ef8984",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f6fcd18f-4954-4534-bc04-1bbda3ba5eba"
        },
        "item": {
          "id": "65697a4b-5074-4cd9-97c5-204776fa5d13",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e784cc16-40a7-49b1-8ae1-8c5f9f476a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378b1bc8-ac12-49ba-a097-127dd339af13",
        "cursor": {
          "ref": "2bca6f00-87e2-46fe-8c43-5e6dce77d2d3",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d6654bbc-2804-4ef5-9f18-06ca94ad6141"
        },
        "item": {
          "id": "378b1bc8-ac12-49ba-a097-127dd339af13",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "91e54fb1-876d-4d56-976a-f6c151f04842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce43854-25b9-4e44-ac0a-7e35bdc1fcc3",
        "cursor": {
          "ref": "aef9ac65-7782-4ddc-bdf7-53a778064429",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "af14770f-ecb7-4184-9237-726bb21afb4f"
        },
        "item": {
          "id": "9ce43854-25b9-4e44-ac0a-7e35bdc1fcc3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "48f74328-40fb-4b65-9280-64a1e8266b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c0e4b4-5356-4275-a5ea-589f8ebdb3e6",
        "cursor": {
          "ref": "00c17b6a-8f25-4932-9d08-dbcead8b0c5d",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "59813a84-367a-43f0-b804-116ff289875a"
        },
        "item": {
          "id": "f1c0e4b4-5356-4275-a5ea-589f8ebdb3e6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7e1d4b2-180e-4fe2-bf5a-ffe521caee28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f578bc3c-a0d5-47bc-bc31-14f7b0314bad",
        "cursor": {
          "ref": "5c62514e-7a41-43a0-99e1-38686664e26f",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7ca76b80-54cd-4bc3-889e-3871ea0ab34c"
        },
        "item": {
          "id": "f578bc3c-a0d5-47bc-bc31-14f7b0314bad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b55f6ee2-0cf5-49f3-b18a-f786d30b8b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229cc8c7-ec5b-4013-abad-83d37be6b792",
        "cursor": {
          "ref": "6798578e-a66e-421c-91a2-73b2c3bb5dfe",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "213528eb-10ec-4efe-bcad-c9c74fcc7d3e"
        },
        "item": {
          "id": "229cc8c7-ec5b-4013-abad-83d37be6b792",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6d161858-5a5f-4d32-8179-f5cbe8cd6088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6e752c-a2a3-437d-80df-f94ee967f8fa",
        "cursor": {
          "ref": "ef296145-51d3-46b1-9dee-d5304487c5c5",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "33186021-87a5-4117-8dc2-66f152b8fb42"
        },
        "item": {
          "id": "1f6e752c-a2a3-437d-80df-f94ee967f8fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e0cbbf6e-258d-49f5-a825-1cd02d71c2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5583d97-d39d-4eb3-9481-8f588cab1219",
        "cursor": {
          "ref": "d8289fb7-b4f2-428a-9197-5853412e6302",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "22be1d12-e9fb-434b-a8d2-7dc5e920f41e"
        },
        "item": {
          "id": "a5583d97-d39d-4eb3-9481-8f588cab1219",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0b72e391-4d3a-4d4d-8b50-65317c4990f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e914391b-234a-4c1c-a461-60a0cbc23670",
        "cursor": {
          "ref": "413e761c-7020-4164-95c8-3627fef72f8b",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b1c42826-6925-4a58-8c3f-b69f4c42584f"
        },
        "item": {
          "id": "e914391b-234a-4c1c-a461-60a0cbc23670",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "be3e52d2-befe-4bcb-892c-b1bbe201eb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba4bf7d-374d-48f6-a69b-53079d5d1d42",
        "cursor": {
          "ref": "8e8fe9cd-9860-4ec1-bcd3-d625ae4071bf",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb55affc-7702-45a0-bc2f-4633ab29e8a7"
        },
        "item": {
          "id": "8ba4bf7d-374d-48f6-a69b-53079d5d1d42",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f4d452f-b2de-4198-bd13-d20af90349f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdf43f-6e2b-40c8-bf4c-144a0dc4ff91",
        "cursor": {
          "ref": "f736136c-ec5b-4bb7-ba26-e159b12b4027",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "22b6e901-5494-4d0e-a0be-f9b14f484980"
        },
        "item": {
          "id": "ddbdf43f-6e2b-40c8-bf4c-144a0dc4ff91",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "355bb8c5-12e6-4612-9568-9f55c92636e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd2f7ce-c403-4166-8cec-cffe2c405ab2",
        "cursor": {
          "ref": "0cb0f4b6-e323-41d8-a3ae-144707ede72f",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4efb9592-af83-423e-8a12-ac1b7061313a"
        },
        "item": {
          "id": "3bd2f7ce-c403-4166-8cec-cffe2c405ab2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9242681-3fd4-4431-b0a3-8af507b3b3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddc4e19-c9bb-4f5a-a0e1-4db0c9d2accd",
        "cursor": {
          "ref": "7b7d7802-10d8-4ec2-b8fc-c8b7b5da0aaf",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ead2a87a-03c6-4b84-993d-75ad22f0f8cb"
        },
        "item": {
          "id": "4ddc4e19-c9bb-4f5a-a0e1-4db0c9d2accd",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f7104ed7-d44f-4cab-8518-90dc062ba082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2afcd852-7b7d-47e2-bfe4-7b17ff29dc91",
        "cursor": {
          "ref": "74ff133b-8e04-439c-944b-d21a91488fc4",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f334761b-a274-4797-9267-65251d404e89"
        },
        "item": {
          "id": "2afcd852-7b7d-47e2-bfe4-7b17ff29dc91",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a38d6954-f304-4276-bcec-7a7aca2ace8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfeb64a9-8ac3-4e02-a14a-98e952604265",
        "cursor": {
          "ref": "6e68d402-0850-4002-adca-eef47de700b2",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9c9ffb84-ef83-4347-b2b1-dd01fa00e1bf"
        },
        "item": {
          "id": "cfeb64a9-8ac3-4e02-a14a-98e952604265",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "74501964-fb56-4e00-b282-97f676ba5aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec53089b-c30e-44ac-af46-b33a015dddce",
        "cursor": {
          "ref": "d1f89e88-3a74-44c4-97e5-2d481e27fb95",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "641c9ad9-5304-44e3-a208-674b10c7c40a"
        },
        "item": {
          "id": "ec53089b-c30e-44ac-af46-b33a015dddce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6ef324cc-b7cf-4932-96f5-fd324d68616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b91d785-2e67-4187-8130-451367fc3caf",
        "cursor": {
          "ref": "8778df6f-d561-4070-ae23-ab97321bd339",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4ad70448-240a-4b09-a80b-1cac6cb856cb"
        },
        "item": {
          "id": "4b91d785-2e67-4187-8130-451367fc3caf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1fe67df7-01b9-44ca-9287-5a095cae77c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba94d213-7d1f-4740-b1c5-275f35bcc25a",
        "cursor": {
          "ref": "c5808d84-d36c-4a37-ab90-04bd3ffd19cf",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "511709e6-b2ed-4ea5-b9ee-106c72ed55aa"
        },
        "item": {
          "id": "ba94d213-7d1f-4740-b1c5-275f35bcc25a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "55a0592e-3aba-474e-bdad-81f7b8872232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384c188d-f6f4-40c0-ac5c-618c241b66a8",
        "cursor": {
          "ref": "cdc19786-48cd-436f-bb93-ab2f9e3376ed",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "099fbcb1-b527-411c-98c4-e447f500a65b"
        },
        "item": {
          "id": "384c188d-f6f4-40c0-ac5c-618c241b66a8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0e94eb9a-2aad-4ac7-b66c-63a1d1a7fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9eaf1a1-da0e-4e6a-99bc-1ef01251ecb1",
        "cursor": {
          "ref": "8512660a-1d87-4840-bd5e-683b7e378875",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1ac47b3d-9429-4081-9099-6c7d8dae0d1f"
        },
        "item": {
          "id": "c9eaf1a1-da0e-4e6a-99bc-1ef01251ecb1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c74694ce-5c07-4847-8b44-2f56736a3ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761638a6-43c9-444e-beb0-b7d7e3764b5a",
        "cursor": {
          "ref": "84af5076-8436-4d19-9178-e38684515e01",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c1612fef-1bf0-4875-9779-8b9eb529c688"
        },
        "item": {
          "id": "761638a6-43c9-444e-beb0-b7d7e3764b5a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6b964118-4547-4083-94cb-dd8ee9775caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fea323-89c7-46d0-9edc-5f9aed983a66",
        "cursor": {
          "ref": "27b7d2e2-0ff5-4e4f-9990-dcc482d09201",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "97f7897b-c824-434c-936b-9f22510b6112"
        },
        "item": {
          "id": "e7fea323-89c7-46d0-9edc-5f9aed983a66",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e1556094-d919-4a43-a2e0-e54416780fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8ba2db-7001-4e3b-b5cf-ab139a127478",
        "cursor": {
          "ref": "44abd9dd-c3fd-4a24-bfa8-f865d2ad5e37",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "da6d7c77-7218-4b38-82a8-c05bbca9b07c"
        },
        "item": {
          "id": "db8ba2db-7001-4e3b-b5cf-ab139a127478",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f4af7d0b-8db7-4cdb-86ef-ec60097b9ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1f999c-8101-48ca-805a-aef094aa1019",
        "cursor": {
          "ref": "75b04e01-d873-4c94-b03b-dc3faa982368",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3fc267d3-010d-4dea-99d4-3682bbf27daa"
        },
        "item": {
          "id": "5e1f999c-8101-48ca-805a-aef094aa1019",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "927d6dd8-c8f4-4dd5-8de3-f1154f8d191b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e824a4-c95e-49d8-843e-19b290a77976",
        "cursor": {
          "ref": "fb48e087-9d0e-41d9-b3ee-2e572b3b3191",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "48c1813a-1697-4594-9fe2-6d804d37ca20"
        },
        "item": {
          "id": "59e824a4-c95e-49d8-843e-19b290a77976",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9486c64d-0e89-44f8-b83e-223fb043a0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174a9c7d-b968-4818-8beb-168d8ced04d6",
        "cursor": {
          "ref": "5128349e-f174-451d-a8e0-10eb28f6e85d",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c008f8e5-ecef-4a08-b507-5acfa244731e"
        },
        "item": {
          "id": "174a9c7d-b968-4818-8beb-168d8ced04d6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ba305933-7b95-4d49-b9bf-8fa56d6ac71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6425d389-0d98-48c2-967d-13501bbaf045",
        "cursor": {
          "ref": "c57e86ac-c066-4b2e-b229-ed6c38bb1e53",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "83ed2ce9-7765-45a9-955f-ac1fbad40a16"
        },
        "item": {
          "id": "6425d389-0d98-48c2-967d-13501bbaf045",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "583ec466-c674-413b-8d08-eb1e96fcd82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bff0c9-fa09-41d3-8911-557e05e0bfee",
        "cursor": {
          "ref": "fe3a3aad-a13d-42ae-b2f3-48d0b7860081",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fd976669-bfb1-4dd1-9a14-83344d3f9971"
        },
        "item": {
          "id": "05bff0c9-fa09-41d3-8911-557e05e0bfee",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f7e8e293-d699-41f7-8827-be50f4134b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514a45cb-f1cc-45db-9915-8f0947e66531",
        "cursor": {
          "ref": "d346ee19-7e21-4867-8227-932c5467d390",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b517da9-66b7-4a3c-b50b-91a1ef74da75"
        },
        "item": {
          "id": "514a45cb-f1cc-45db-9915-8f0947e66531",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8729f176-94bf-4794-a9a3-b3fcd06c96ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b31cd8-ba64-4de0-a0d9-69377e83cb88",
        "cursor": {
          "ref": "d185945c-671e-4dfd-a107-9bb7d9668158",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d70cf63f-a11e-46fb-b615-a28b71c0c02c"
        },
        "item": {
          "id": "f1b31cd8-ba64-4de0-a0d9-69377e83cb88",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5a0cc14a-d2fe-4a3e-8daa-2272ce6b2692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42a52a8-eebc-4075-8400-1def40a95a60",
        "cursor": {
          "ref": "73b1bfb6-bc49-4c4f-83b0-ba5877f2ad87",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0edf6bee-3d2e-4709-951b-1e15f1d914a2"
        },
        "item": {
          "id": "c42a52a8-eebc-4075-8400-1def40a95a60",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "943537f7-949d-4428-b54e-3d3608783d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0e48ce-66cc-4606-9235-a09e4432b642",
        "cursor": {
          "ref": "b07fa6ef-1684-452c-b378-362b9baae82c",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "79c91cf9-8c18-4b82-8aec-9e697d5da746"
        },
        "item": {
          "id": "eb0e48ce-66cc-4606-9235-a09e4432b642",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c667a808-3424-4e96-b2c2-51c8e1610f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6d6cdf-cedc-4ffe-bf40-9b6b575c3b92",
        "cursor": {
          "ref": "b4129a1b-c358-4cf0-9abf-9deb0f8874e7",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "02ae9c5a-baba-45cb-9e7a-c3f0d28d306c"
        },
        "item": {
          "id": "6b6d6cdf-cedc-4ffe-bf40-9b6b575c3b92",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "95eab35d-416d-44e6-8d5d-a33d72ef8d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631aba68-c055-4548-8a32-d4eb66d92de8",
        "cursor": {
          "ref": "9e622faa-592a-4efb-9919-6bb2f2b74042",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4dc6ceeb-f2f6-4bef-afde-71681455d7bd"
        },
        "item": {
          "id": "631aba68-c055-4548-8a32-d4eb66d92de8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "dcb131fd-95aa-40a3-9a12-677e699f6108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e525832-392e-4b7d-b83f-d9034b9b7064",
        "cursor": {
          "ref": "8543dfb1-752b-4e6e-a949-211957560f51",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "39c75568-985d-4dc2-b4b6-50d164132fc6"
        },
        "item": {
          "id": "9e525832-392e-4b7d-b83f-d9034b9b7064",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b3e8d637-f1d0-4b3e-a7f6-4453f854c934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bb5106-eaf1-4e45-b0ff-1d52195413ca",
        "cursor": {
          "ref": "63970fd7-7bc6-4c61-8c22-2092fcc5ddf5",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fbf26b38-2a2a-4c28-a59f-5393ac0da712"
        },
        "item": {
          "id": "a6bb5106-eaf1-4e45-b0ff-1d52195413ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c4dd266f-fdfc-43c3-8f9b-69ccfb0eb8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9ddb2b-8d70-4ba3-b612-e419c4ce1651",
        "cursor": {
          "ref": "5c5be90f-9afd-420e-9ccc-3d07bcc14740",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "528367cd-9995-458d-944a-027ca53a40b9"
        },
        "item": {
          "id": "be9ddb2b-8d70-4ba3-b612-e419c4ce1651",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b6f4a1e8-cfeb-4eda-bf2d-ce4060449795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd16fc74-77a5-428d-9c28-f370905643bf",
        "cursor": {
          "ref": "ca2ea192-1435-48f8-a495-67499dcb6159",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92efbdf5-1bde-45c4-b78f-0d448595e01a"
        },
        "item": {
          "id": "fd16fc74-77a5-428d-9c28-f370905643bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d7abdfe5-faee-4288-9658-362cec6fae14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abd1bc6-ea8a-4878-8cb4-faa67d6cdbbc",
        "cursor": {
          "ref": "c74d6240-4836-40af-880f-26660f4db3e1",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "aa2b4bca-f060-4415-961f-153d54e8c76d"
        },
        "item": {
          "id": "9abd1bc6-ea8a-4878-8cb4-faa67d6cdbbc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "494db462-f4cd-4983-a8d8-df729f0c1910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2201501d-b4d5-4aa5-85d6-64a23b5c2c55",
        "cursor": {
          "ref": "e3a9eaaa-1a8d-4a91-a2dd-11604c94ef46",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb5f4ea6-4585-4dc7-8d76-974d94e414b0"
        },
        "item": {
          "id": "2201501d-b4d5-4aa5-85d6-64a23b5c2c55",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "107e113b-5c13-42b2-91b8-c08d7cc27a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c0f066-d275-4c58-9d23-845f73cdc502",
        "cursor": {
          "ref": "0c2d44ae-c212-411e-a8ca-e46e713035c4",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "67f2bf71-ac86-4961-ba88-0f4a35160ca8"
        },
        "item": {
          "id": "60c0f066-d275-4c58-9d23-845f73cdc502",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b2db754a-2b99-48c4-9a2b-a052ad0fed50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357a860b-ba3c-4b60-b0d2-688d6ae18594",
        "cursor": {
          "ref": "dbe49ea6-0cb8-4da3-a31a-6e100b675727",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b57bd395-199e-4c20-a31b-f0f717c865a4"
        },
        "item": {
          "id": "357a860b-ba3c-4b60-b0d2-688d6ae18594",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a94be160-365c-4277-bbb3-3609a49e136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5e83bc-a91d-408e-9ea7-16846265ee99",
        "cursor": {
          "ref": "a7fecd5d-c758-4fbb-9fc7-6c015a33757a",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1b6d1e38-cf4c-40de-8f8f-50f20726a703"
        },
        "item": {
          "id": "ec5e83bc-a91d-408e-9ea7-16846265ee99",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "494a6e41-2f12-4f16-ac3f-954a0803f2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ac00d3-4f45-4930-99e8-66ca69924022",
        "cursor": {
          "ref": "ff940b0d-077d-4562-b4bc-616061e7eb62",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c9504e75-fcc1-4ea6-8b58-db20dc5ff982"
        },
        "item": {
          "id": "a5ac00d3-4f45-4930-99e8-66ca69924022",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3e825301-2490-47f6-9330-b1158b43e808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f977c2-dcc4-4a59-ad67-772d45a17619",
        "cursor": {
          "ref": "a2d41866-6dd8-441b-92d4-6947f1ce484f",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fb1b60c6-ccd2-45ca-bfca-275d170cf828"
        },
        "item": {
          "id": "73f977c2-dcc4-4a59-ad67-772d45a17619",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bf5c1867-9d86-459c-9904-63a328444f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc1003f-af53-45e7-a8bb-093ded849ff2",
        "cursor": {
          "ref": "2b45f6d1-2ae5-427e-8a19-aff6783efeae",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "df02a974-e1ad-4fae-b227-b219efe46503"
        },
        "item": {
          "id": "7bc1003f-af53-45e7-a8bb-093ded849ff2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d22af783-7430-40e3-a8c8-f714ccdd151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc02a3-9d26-49c4-95c2-a332f9e80fa4",
        "cursor": {
          "ref": "3b4d73a3-e99e-4365-b2e9-9e9531545520",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e573c1b-3a56-43f9-af08-2159ed69dfec"
        },
        "item": {
          "id": "c3cc02a3-9d26-49c4-95c2-a332f9e80fa4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3f936a38-cc57-4c3a-a0f4-129ba2908f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00902324-343b-424b-af44-ac160fabd5b1",
        "cursor": {
          "ref": "d76beae1-1306-4a25-b6de-a15eac6083e6",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7d8aaf64-d417-4e13-a7bb-c51ce3943e9f"
        },
        "item": {
          "id": "00902324-343b-424b-af44-ac160fabd5b1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d0dacff4-17c2-44e0-b6e7-cdace9adeed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31542e77-96ff-4daa-a51d-dc4e5ac18fa6",
        "cursor": {
          "ref": "1e3f8e38-c2c3-48ce-b150-de383f70df8e",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f748f1a-52bd-46f0-81ed-9d8f1ea8b4d7"
        },
        "item": {
          "id": "31542e77-96ff-4daa-a51d-dc4e5ac18fa6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "abf12afe-85e2-49ab-83de-440dae3d57fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e66e18-e0e5-49f9-a342-5cbfe55eab73",
        "cursor": {
          "ref": "7fcb81f6-6ab1-4f98-acd8-05f48270313e",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "90ae82f4-bb26-45eb-b7b7-83d9e0a39d8d"
        },
        "item": {
          "id": "d9e66e18-e0e5-49f9-a342-5cbfe55eab73",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3e23359f-4b49-4a9c-a231-729abe7e1eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b81040e-7411-432a-9916-aefae48ca126",
        "cursor": {
          "ref": "d9746419-1fc9-4c4c-89cf-c08e589791ab",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7ac69701-9748-404d-acdb-e60567cc006d"
        },
        "item": {
          "id": "6b81040e-7411-432a-9916-aefae48ca126",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "92e02518-1e4c-4443-b3ae-16af865cca03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e78d716-3da4-4359-989a-020cb8a27d73",
        "cursor": {
          "ref": "d42b15f3-22a6-46b7-99b5-7c17aaca41a2",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29343aa4-5519-4e0d-8379-641c6abde823"
        },
        "item": {
          "id": "3e78d716-3da4-4359-989a-020cb8a27d73",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7438c6c0-167b-4d3d-b85f-818e8bf194f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727e1150-cc24-41cc-b3f3-948d48a9cdd3",
        "cursor": {
          "ref": "7f128608-5421-4272-9064-9494b20163a8",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b68bd794-1a2a-4410-b090-39c3f05de88c"
        },
        "item": {
          "id": "727e1150-cc24-41cc-b3f3-948d48a9cdd3",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1bdad69d-cd48-4338-acad-2c97edef32c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e00b2c-63b5-4815-866b-8f0108581358",
        "cursor": {
          "ref": "b6b13d7e-24de-4f92-b259-ca42517b5392",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ee565418-7a42-4adb-ab9c-a9922533e917"
        },
        "item": {
          "id": "d9e00b2c-63b5-4815-866b-8f0108581358",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c1d44e8b-2ff7-45ea-9dae-5ee0c1abcc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2704302-611f-435d-b035-461d48843ae4",
        "cursor": {
          "ref": "4e278cac-4661-495c-8cf7-353bf37a4924",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b443097d-1989-409c-b648-beee147f131a"
        },
        "item": {
          "id": "f2704302-611f-435d-b035-461d48843ae4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "946fe897-f596-400e-92a7-4c9e550f5d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13839f72-14b7-4823-82b5-79f61b40bdf6",
        "cursor": {
          "ref": "30870664-42b5-43f6-8aaa-f33234a47c1d",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f29a15e0-8419-4c60-8083-7be4fce8b0c4"
        },
        "item": {
          "id": "13839f72-14b7-4823-82b5-79f61b40bdf6",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "02afc51e-bbdc-4c27-82b0-786a48015944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b63416-7cbc-48c9-8256-e2ccf47c7bca",
        "cursor": {
          "ref": "febcd7c4-0e49-476e-b858-998092264620",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87a3ebaa-5e0a-4ca6-adf8-dcc1e2773dac"
        },
        "item": {
          "id": "84b63416-7cbc-48c9-8256-e2ccf47c7bca",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7314a50e-b927-4a6c-a988-af04c45129bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be4d478-0275-4f7f-97e9-2d980ee50c59",
        "cursor": {
          "ref": "6ee71661-571b-45ce-86b6-101a7198e98e",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5e9cb6ad-feee-4460-ab05-c1177c2e0156"
        },
        "item": {
          "id": "3be4d478-0275-4f7f-97e9-2d980ee50c59",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2738e6b4-a70b-444d-9c7a-36c39cc29fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c9d4c1-2169-4903-8e22-af11d4f61e0b",
        "cursor": {
          "ref": "9d0fe631-4236-4740-ab20-4080801d201b",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "92efb9e0-b5fc-44a3-83a3-59529335cd69"
        },
        "item": {
          "id": "58c9d4c1-2169-4903-8e22-af11d4f61e0b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "98711330-efbe-4de2-ac4e-c6e8071522b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d51314-80af-47a7-8b2d-8ce1384a0b3c",
        "cursor": {
          "ref": "54f28b2d-aac8-4818-af67-ee1b02fe9300",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a29b6a2a-acd8-4e31-a4f0-3b9a684a3fc0"
        },
        "item": {
          "id": "02d51314-80af-47a7-8b2d-8ce1384a0b3c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a7c05be9-f1bf-4e09-b9d3-4efa109603bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c718c85-7827-43ed-a745-f774fba1cdf1",
        "cursor": {
          "ref": "7c2c5b75-810e-49c9-9a50-5ca2f4f8e0f3",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "25553939-d4e0-494c-9ca6-2d8b0ef74392"
        },
        "item": {
          "id": "5c718c85-7827-43ed-a745-f774fba1cdf1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bb740867-c75a-40b4-9c29-ca48492aecd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3c36a8-b5d5-4edb-85ee-95118e1dd2fe",
        "cursor": {
          "ref": "aea6becc-ef54-478d-9ce2-e19b14884a08",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e71b4ee3-cedd-4715-b896-258c6fd1479c"
        },
        "item": {
          "id": "5a3c36a8-b5d5-4edb-85ee-95118e1dd2fe",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5a592f7b-4b7d-44c4-b158-aa1aea516f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a11d7af-bb0d-49cc-8459-89036c045148",
        "cursor": {
          "ref": "fc6f3638-3daa-4b6f-aeba-ca8f8b16e07f",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "89ab346e-60cf-4e0b-a9c1-3527f62dcb93"
        },
        "item": {
          "id": "8a11d7af-bb0d-49cc-8459-89036c045148",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "32c64235-bd39-485b-af74-a11edaaa718b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ecc5a0-6ed5-4ea5-a3ff-eaec86c7aec1",
        "cursor": {
          "ref": "01127db8-a310-4f70-a17f-18dfc7199dd9",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "45388a06-257d-449d-b3ac-26cc18402849"
        },
        "item": {
          "id": "17ecc5a0-6ed5-4ea5-a3ff-eaec86c7aec1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "218caea4-d574-4da4-b2b1-080a4110e950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3627abe8-f5aa-4fe2-a621-c4fb94dddc3e",
        "cursor": {
          "ref": "027f59fc-8ae0-4caa-b9aa-53fa70d768c5",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4285b720-4d17-41b7-b947-7d231eb9cbea"
        },
        "item": {
          "id": "3627abe8-f5aa-4fe2-a621-c4fb94dddc3e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e2c5f228-7d6c-4e86-8bd9-2c8836999a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf885d5-88aa-4ca1-92f6-f96e9e2c11ea",
        "cursor": {
          "ref": "89ffaf4a-bcd6-4e05-8ab5-1331c8579260",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2166c97e-983b-4970-acbf-b801cc78f59a"
        },
        "item": {
          "id": "abf885d5-88aa-4ca1-92f6-f96e9e2c11ea",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "77077b2a-ac1e-476a-a6af-567ebfb6233b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b9fbfb-b1ba-4bcc-b64b-b5fc83f8764d",
        "cursor": {
          "ref": "4947dfdf-f55a-45d9-ae54-b1e8c05d4bc3",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f4c28ea7-7c98-440c-92ed-e2e3ac847e53"
        },
        "item": {
          "id": "f5b9fbfb-b1ba-4bcc-b64b-b5fc83f8764d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "090d7b34-d0b5-4aeb-ad28-581bcd80d6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede40878-0738-4355-b3cc-0258d9ba6358",
        "cursor": {
          "ref": "15d23cd7-b1ab-478a-b284-53c3b50e58dc",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "18be2420-34c3-46fc-8b57-c389f5bef326"
        },
        "item": {
          "id": "ede40878-0738-4355-b3cc-0258d9ba6358",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "51e83c8e-51ba-47db-b6b4-0e7e40169601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50d37de-096b-434b-8d4a-b378f337e36e",
        "cursor": {
          "ref": "204646ac-1451-477f-ab71-72e1ec8280c2",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "21ddab1e-ffab-4d8b-bfa3-abbcc70b02fd"
        },
        "item": {
          "id": "b50d37de-096b-434b-8d4a-b378f337e36e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d8077fac-79ca-49c5-b0ec-34393494268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576d87f-b986-4f20-a380-48ba6220a8b9",
        "cursor": {
          "ref": "41cf0ad0-76e8-448b-a74f-1dacc842db43",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "55261a2e-7bad-4b58-ba6e-b95aadadc8c0"
        },
        "item": {
          "id": "b576d87f-b986-4f20-a380-48ba6220a8b9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85062327-d699-4c25-b039-b20dbddc92ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d26665-f89d-4568-9d49-5bced0dc7b78",
        "cursor": {
          "ref": "c5b0ed24-d6ff-41a3-a4c7-44c9df772f06",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "64b9ed67-dbdd-42ef-8b6b-0d0955d64a32"
        },
        "item": {
          "id": "b9d26665-f89d-4568-9d49-5bced0dc7b78",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7b5d7781-0305-4329-a1fa-565715933536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d64b00b-c4ac-442b-8278-5e3a923802a5",
        "cursor": {
          "ref": "24f7f855-b5bf-44b4-ac79-03384b7fa04b",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8e4a22bc-1063-4cad-b8f2-6328180639c1"
        },
        "item": {
          "id": "4d64b00b-c4ac-442b-8278-5e3a923802a5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6201d4f7-6eee-4b44-a517-c7a51a35bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfec3eef-a6c2-4e22-ac7b-2691fae9f7d6",
        "cursor": {
          "ref": "a1d2da0b-9efe-4ae9-b6e9-ed02c9690d60",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4793112e-7c7c-4114-aaa5-094aaab9aff5"
        },
        "item": {
          "id": "cfec3eef-a6c2-4e22-ac7b-2691fae9f7d6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "295a7957-46c4-436b-b3f4-7a4e23fb339c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb3596e-f363-41ca-bf79-0ff4b511a917",
        "cursor": {
          "ref": "797a1e24-b557-46b4-b8c5-5cfcb46dbe02",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7ee4da5f-fe9e-4bdc-96be-652436d163e8"
        },
        "item": {
          "id": "6fb3596e-f363-41ca-bf79-0ff4b511a917",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3196d216-b7a6-4553-8c59-f93405b6860c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c027e33-6e9c-4bbc-989a-3129871643bf",
        "cursor": {
          "ref": "640abf77-1b2b-471d-a088-cba07f9cce0b",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "daa2fe98-6db8-4dd9-90a5-2f99687d6dbf"
        },
        "item": {
          "id": "6c027e33-6e9c-4bbc-989a-3129871643bf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6e0bfb9a-f3f9-47a5-9822-26a12e486f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b85556f-2fed-494a-b3ac-7ca995c39bb9",
        "cursor": {
          "ref": "0df60c40-2c0f-420a-920f-e6b0446854db",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "826bd6a8-e5d0-4f04-86f7-321d4fa8e200"
        },
        "item": {
          "id": "2b85556f-2fed-494a-b3ac-7ca995c39bb9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0082a3a2-0808-4c6d-8db7-cf707c7bb458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a230b5-476d-4a71-890b-b91a897f13b5",
        "cursor": {
          "ref": "e5f71055-05d0-4e84-ad91-8a781f657d6f",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "de007ac1-faf3-4a5b-97cb-92df358bf262"
        },
        "item": {
          "id": "d0a230b5-476d-4a71-890b-b91a897f13b5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a3fe4a5e-7353-4ad8-a789-c467bf4b4f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19322383-83aa-4dcc-8643-072888263d2b",
        "cursor": {
          "ref": "e2a67e15-18be-426c-9bca-1b134b352e6c",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1b910dbe-f79b-407e-98e2-9074ddc28be7"
        },
        "item": {
          "id": "19322383-83aa-4dcc-8643-072888263d2b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "857c25d5-a8b8-4332-8050-d2cb30ae24c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd863ff-a359-4230-b774-d149f3d7bb80",
        "cursor": {
          "ref": "c5118648-2f4a-4c62-aa45-fa1387b1e029",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c06178b8-dd0e-4e14-8e2f-f8c8e9bf5d32"
        },
        "item": {
          "id": "4bd863ff-a359-4230-b774-d149f3d7bb80",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3c675459-77e9-4fb5-a23f-90bc7965929b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf69fd-c390-48a3-b81f-ad8d9f400ec9",
        "cursor": {
          "ref": "8557b29f-4567-43d3-a6c5-25ed1f0bd09c",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc30ba76-ddda-46be-9977-175260dd6237"
        },
        "item": {
          "id": "78cf69fd-c390-48a3-b81f-ad8d9f400ec9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "897f008b-1489-4a7f-bb01-69cf69c99848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cffea9a-ac23-4150-be9a-04186b84c61b",
        "cursor": {
          "ref": "5f75dd51-4bdf-475c-8f8a-9e8c32186e8c",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "61c99c3a-ee23-49e7-9c5d-0dc1b939fa77"
        },
        "item": {
          "id": "8cffea9a-ac23-4150-be9a-04186b84c61b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5aa7f38e-e7c6-4f9d-9b2e-1e1e76d07710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd020bc-7442-4867-ae8b-d276d366a7c1",
        "cursor": {
          "ref": "5f557654-c142-4cb8-952b-f3062327d03f",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fa3d4106-8c91-4511-bb70-fb91511d2797"
        },
        "item": {
          "id": "0bd020bc-7442-4867-ae8b-d276d366a7c1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "147e3513-fdb7-4cc4-b8d3-dda84983bbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381a221e-4b67-4a18-9c61-bf44d162ded1",
        "cursor": {
          "ref": "00b69866-c533-404b-8ec1-8aa23fdf4224",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8bd189e6-99c5-40db-a3d5-03b62cb0215e"
        },
        "item": {
          "id": "381a221e-4b67-4a18-9c61-bf44d162ded1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0b722444-f9a3-4b80-b8ea-1f2b70dcd9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18303c81-d536-4e4d-ad14-46479072bcda",
        "cursor": {
          "ref": "92517354-d304-4e4a-a12d-7224c48dd80a",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3edefc5f-2f28-45ba-b5b5-c7dd70f7533f"
        },
        "item": {
          "id": "18303c81-d536-4e4d-ad14-46479072bcda",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5f30492a-6f44-418a-862b-601383d1c3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcf58bd-dfd4-48dd-bf4d-c1db1e0616ec",
        "cursor": {
          "ref": "42a0f80a-763a-4202-8601-adf3d1985453",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4b6a2acf-6a7d-428b-b1c6-04a8315b4400"
        },
        "item": {
          "id": "3fcf58bd-dfd4-48dd-bf4d-c1db1e0616ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e16f9df8-f02c-4633-81c7-522285255cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0151c5bc-03bd-401b-85df-7615e5385689",
        "cursor": {
          "ref": "ea94b0e0-cb42-4530-8d0f-e947372b5cf1",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "baac9ad6-6322-4449-93dc-25126651857c"
        },
        "item": {
          "id": "0151c5bc-03bd-401b-85df-7615e5385689",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7ed99b5-5489-4c03-a243-641e81aeb806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4edb80-a879-4c56-8387-e41198514d47",
        "cursor": {
          "ref": "f3ec2dcf-daf1-4ac4-9f5d-6984e7073f31",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "84b682c7-d2c4-47cf-a92b-644fa7beefae"
        },
        "item": {
          "id": "dd4edb80-a879-4c56-8387-e41198514d47",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "68980bfd-743a-4d1f-a850-38303ca48824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00b2359-eeb7-46a9-bf04-7c4d0de68a5b",
        "cursor": {
          "ref": "15f5e69f-f45e-4b8f-8018-df8b0d5d6849",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "88fbe02e-d0be-47cf-9f6e-7f5968df1aa0"
        },
        "item": {
          "id": "f00b2359-eeb7-46a9-bf04-7c4d0de68a5b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "977d6496-eb23-46b9-8d69-4c001acb1a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9601d34-c797-4593-b1dd-1724617206e7",
        "cursor": {
          "ref": "ceab5f1e-b6bb-4cac-871f-f4eb999491ba",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cc3012e7-3c20-4148-8a82-7ada343928c2"
        },
        "item": {
          "id": "c9601d34-c797-4593-b1dd-1724617206e7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6a335bb-f308-42c2-8272-d322956cf656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1613461a-c907-4d01-9793-a6329700ad28",
        "cursor": {
          "ref": "7211312e-6e5a-4278-9704-8370ec3e531a",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8709c1ac-8834-4ec8-a7eb-a6f18e471f3f"
        },
        "item": {
          "id": "1613461a-c907-4d01-9793-a6329700ad28",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "66d437a8-96e4-498a-a7b0-15ef5e523155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3760410b-bce3-4076-b9c1-b20d7d6fadf8",
        "cursor": {
          "ref": "cd639f7a-b109-4eb9-b732-1fdc0f891073",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4354c5f7-4ca0-418a-b603-9ff27e126c94"
        },
        "item": {
          "id": "3760410b-bce3-4076-b9c1-b20d7d6fadf8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e38fecb8-3d1d-4079-a19d-0449ae5d9c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8f1ed2-822b-4259-9e3a-b70c8463b889",
        "cursor": {
          "ref": "0315012d-d00e-48ce-91ce-864465326b28",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac298e3f-4436-4e89-899b-37bc032c8541"
        },
        "item": {
          "id": "ed8f1ed2-822b-4259-9e3a-b70c8463b889",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b3c59286-17c4-4666-a6f9-afb1be9eda74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6cf5ad-f18c-47c8-b51d-b25bf43d2023",
        "cursor": {
          "ref": "2c2fad6d-7135-4d20-aee6-3f69dd75dad1",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dfb5dc31-06d5-4739-a3b7-c42a760a1a7c"
        },
        "item": {
          "id": "2e6cf5ad-f18c-47c8-b51d-b25bf43d2023",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21d4541b-0fe7-447e-8fb1-8953ecd4ba37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8d6121-5e5f-4156-9c52-0883c7cf9536",
        "cursor": {
          "ref": "f7452e07-aead-41d6-9f82-799bf9896b40",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f1db42c4-3677-4de9-9d57-46909c80da5f"
        },
        "item": {
          "id": "bf8d6121-5e5f-4156-9c52-0883c7cf9536",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4bae65cb-f1e7-4d2f-ad32-cf3573abd8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b0dcf-29b0-4e67-ba86-45d2ca255a2f",
        "cursor": {
          "ref": "fcd71423-6bf9-4dfd-9377-02ab3ec42d64",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "42600c3f-1369-44f5-b3b3-eb2ab6261ce3"
        },
        "item": {
          "id": "cb5b0dcf-29b0-4e67-ba86-45d2ca255a2f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "94a4ce8f-08f4-42f8-ad65-965e42986a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3181b9-d9f3-4b47-9e17-981372d00090",
        "cursor": {
          "ref": "c4304ec6-d2eb-4554-96d1-c75824c9e6ba",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "61df8a35-4e54-483a-bf32-5af26d48e9f6"
        },
        "item": {
          "id": "fd3181b9-d9f3-4b47-9e17-981372d00090",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3cc8bb29-4e36-4b6a-9f4a-1e187ad41afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf531dab-8f5b-440e-adb5-d9e1d98d485b",
        "cursor": {
          "ref": "ea2f2cae-b4d9-4101-b10b-c4f64782b157",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c4aaee37-6ed7-4ff7-a7bc-a4907ee44506"
        },
        "item": {
          "id": "cf531dab-8f5b-440e-adb5-d9e1d98d485b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ff22329f-6372-4fe1-a4f4-d8686a5da012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65702460-bd53-4694-aeb2-d8132ffa1ba0",
        "cursor": {
          "ref": "0020b925-123b-4ab4-8675-30ccfcfa1487",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5b111d4a-481c-40c8-8fd0-08673c48d34e"
        },
        "item": {
          "id": "65702460-bd53-4694-aeb2-d8132ffa1ba0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "28330b86-43ba-4045-87a5-af87a6e8d174",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2309262-1b2a-4518-9d17-a5220c0d908b",
        "cursor": {
          "ref": "93a57b99-02c3-423e-9d09-e34395a35893",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "741be712-ec23-4875-b45b-3c5a5b416529"
        },
        "item": {
          "id": "b2309262-1b2a-4518-9d17-a5220c0d908b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "99b0adbd-cc2d-4afd-9191-de44601aa146",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdabed2a-b31e-4bff-bcaf-89b461430822",
        "cursor": {
          "ref": "afd48c16-50e4-4d41-809c-572f2ba12452",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2b078f70-3497-4408-b090-bb35c0370c63"
        },
        "item": {
          "id": "bdabed2a-b31e-4bff-bcaf-89b461430822",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4227566a-2715-449d-bf82-48182e9d29d8",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3b3ae2-c16d-420b-975b-568dac232166",
        "cursor": {
          "ref": "78932440-ef66-4a43-a479-674e6484a7a0",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e501c5d8-3811-4aea-9122-44ea18fc1808"
        },
        "item": {
          "id": "5d3b3ae2-c16d-420b-975b-568dac232166",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "108d341a-1ea9-4eaf-8077-4c190e61dd12",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "61004c04-0608-4109-abea-7c23aa0e3cd0",
        "cursor": {
          "ref": "064d1fc5-29e3-4772-9900-f06ee4d0c203",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "beb14704-ba30-4d07-9e37-aaef3091ad4c"
        },
        "item": {
          "id": "61004c04-0608-4109-abea-7c23aa0e3cd0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "97d0ad9b-7652-43d8-867f-ea5c4f385e15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61004c04-0608-4109-abea-7c23aa0e3cd0",
        "cursor": {
          "ref": "064d1fc5-29e3-4772-9900-f06ee4d0c203",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "beb14704-ba30-4d07-9e37-aaef3091ad4c"
        },
        "item": {
          "id": "61004c04-0608-4109-abea-7c23aa0e3cd0",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "97d0ad9b-7652-43d8-867f-ea5c4f385e15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b2e1b2-e18e-4e62-ad32-d06408ae215e",
        "cursor": {
          "ref": "e7d85c38-352f-4c92-8c98-0b73fe761c90",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3c33f6ad-9d42-42c1-bb36-90f0799e44cd"
        },
        "item": {
          "id": "41b2e1b2-e18e-4e62-ad32-d06408ae215e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0917c25e-2d34-4ba4-bb89-ce3ab018e674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e36b109-e29b-423c-8253-f482e5fd2a25",
        "cursor": {
          "ref": "a0e13225-00f1-4783-8e3e-ffa94bf69991",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0942d498-936f-4c52-8475-6329d97985cf"
        },
        "item": {
          "id": "3e36b109-e29b-423c-8253-f482e5fd2a25",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e8a52dd5-9009-4411-922a-ff57bda1f636",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}