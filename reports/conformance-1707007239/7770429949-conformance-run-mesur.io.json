{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "027717b8-ac37-46c8-8111-12678ecc07ee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9f78e848-f17f-418b-9fdb-e2120c40872c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "913c4dcd-d4fc-47aa-af2f-b502370d29b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0904b3ee-a47b-4ad9-992a-b3005748fd5d"
                }
              }
            ]
          },
          {
            "id": "f234f490-40d0-4b56-8494-f59c123cc86a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1e4cf8eb-4ffe-4704-9dc2-4cad7dc590a2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ecba4347-57b7-468c-8b43-ee390f925b1b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cb6d6399-58e0-498e-b578-8d2c2602695e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9ec23cb8-c110-4dfc-b435-0427c95eb7ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e40cd4b-f8ac-4c83-8452-a4b3d5b25574",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d16628af-950c-44a1-bd5d-b9f42359a5cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11b67eb8-20fb-460a-a5a9-dd40d4fed90e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "25ef8209-20f9-4729-a19a-e5a04a3b081a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e8b1be0-7356-47fb-9583-6ef80f919889"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9af3d59e-004c-49ed-9fea-6c1bc720bc82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a8b57a79-4379-4f09-b6bf-12ee2a20050d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7b4cdd4a-bf0c-456d-955b-2c5989fc3209",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "94e57f59-d8f9-4b32-a62a-3360cab5b352"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f65c45b-41a2-4571-9ad4-71ed2169a062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7177fda-fe0b-4d9a-8e7b-2fc149881493"
            }
          }
        ]
      },
      {
        "id": "f75f65b1-ebfc-4aa3-99db-adae572170b5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "28ef48cb-f147-4317-bc43-2a5275d81003",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b216c62b-cb30-4a78-b554-c0c4bef3b2c7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c94b18f8-8bc5-4eae-9594-d556e9e4acdb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724c35d-522a-4e12-a5a9-ce09c2cef1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1567311a-2d04-44f0-91ec-6532c6e2dfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1745de-09dd-45e0-ac6a-e90e7b838a34",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c860a3d7-9083-44e6-962d-b7de2f0e107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d94c9447-1211-44da-8f30-0345466d27d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41c9a885-2bc6-46dd-b790-264fb6248830",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc718727-9acf-4f56-8358-f12b8097d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0fd5895-2ab9-4783-95e6-c3479d607473"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0089099d-8c10-457a-b147-9f55aa4a3a12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "752b84ae-e680-41ed-92dc-ccb2e34addc3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb7ca6f-eb15-490d-8efe-f20864fdcaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42e04bfc-5844-45de-8848-544045ad1c12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d2d455-ebab-4ff0-bc62-396d188c78e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3da5827-2aa3-445a-898a-95148863a3e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c0e6d68b-8911-4efd-a80f-620f2b9b5a12",
            "name": "Positive Testing",
            "item": [
              {
                "id": "42a6a503-11f7-4d14-a95f-e6d8d659c0cd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e9c19d0-410e-4a2c-9d4a-cad8b8e0757f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d76ebd1b-0921-4506-a7f4-36bd4675b1b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d02a1b5-2db7-4fb4-81c5-ec9e36f76565",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3a3b96b9-5d81-44c9-bc4c-bb95ffba32d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6bcbee1c-4642-4b2e-add5-98ca6a81fd8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80256049-1996-49f2-bd21-38db54486bc3"
            }
          }
        ]
      },
      {
        "id": "0d009edd-b100-4475-a5ad-94e7104514e4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bf58deab-cb39-46d2-ae31-17e876d47493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e70352a-7605-4904-a156-2dfbea7624ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "563cabe6-86cc-4037-82ab-8d054a2ef9fe",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72afc727-41fd-4579-a16e-15181b913ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5801609-0f8d-45ff-b5ef-ad281063e998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a40945-dcfb-4881-a097-3791ef08eb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c160c1ee-2cb3-436e-a3ee-a657cbd2d54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d90b87f-215a-47bc-96b4-4923ba05a2ec",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caea2db-da00-4ab9-9f41-32f1f97d429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a743a01-dbd4-4726-aea9-4a789718739d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df91e09-bd8a-416a-90b1-0349bc16230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a10624b1-5340-4d3e-8f78-221ef296fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605023e3-68b3-4783-a1a2-f33bf4e03ee6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3567402-2f28-4223-b8c4-96c15364e7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed672757-12ef-4d88-a2ae-0eb8f591f1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1d7c3c-af07-49fd-a3a9-556f74f06899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40546452-7aee-4e03-a69f-278bb91b98b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c10ed8e-24ae-4dde-949a-8a56449b5a00",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cc1cb7-28e3-4170-bb3d-187da389fb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f5cb29-9522-44dc-8974-12affa84fa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce7f022-5795-4afb-b86c-5d756d591b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f1b119f-2382-4e34-90cb-55ada979a995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21971511-f8b9-4fb5-bf1c-c6d155f6dc92",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb23f09-4a2d-435d-88db-bea342cbf5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec98fa6-522d-45bd-82a1-b179d58282c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48484474-d4fc-40ab-a026-b2664bdcd5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b5751b1-f84a-4d05-a606-b6140cc758b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b24f210-8cfe-4c57-bef1-e952532685c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d081b6-cd64-4909-a692-0574b61cae36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8d74e2-0b21-45f6-be4a-d29febd57aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a7767f-4b25-4c24-8747-64fd02788f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72fe698c-704f-4f72-ab9f-6ba91d44f4b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c55948-cbd2-4d25-ab93-872d03c6b762",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd3fc84-21b7-4609-a8ab-8aea5fc8bd9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c77ee49-2f15-496b-ade4-16906939561b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c2b5c6-e071-4c80-88d3-f2bb8169f2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c809f757-aa92-4cb4-9390-7ff3b459cd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580e592-9b21-46aa-baa9-c3a1dfa898fd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11cb604-e34a-4aaa-ae6d-23f70d659198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e47173b-8036-4f52-9d88-49754e3484b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb47d23b-813c-499d-8e22-1625b9566220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a63179bd-6ea6-4c7b-9984-56327ee03af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef305abf-a23b-4f6a-b9f4-fb4506e4bcbe",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371410cd-e272-408d-a381-f752bedc63e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0caccc92-613b-4507-b089-1ede0a212ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc3efb-b468-4da0-ad5c-1201f79f028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22815007-9106-4582-84ee-5f1e1bb9846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4166a035-0c79-4b11-903a-a3f1c083859e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73daf314-1d6b-4900-bfdd-51993dd02624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6a7e08-6184-4ceb-8866-6bed974c54a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce05570-4b78-44eb-948f-172f68957dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92fafb7f-ec66-477e-8d1a-0076c1670efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ab0272-1099-4e55-b25a-c78447321955",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f42260a-ab6b-417b-80a1-e963230cd6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21cfb78-40f3-4b7f-869d-3264424ac55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b2ae3c-25a8-4760-8e12-31c07bfba1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a637fb05-01f5-4187-8e85-5c66d9a490dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4c39b6-f1f6-47a9-8216-6fef12736f26",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3ee7fa-fd6b-4d57-b9a3-5dd5a82ea231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96946b83-a367-40e5-b73d-d2013d53a414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b0b3f0-79c7-4228-83aa-0a6076f19c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc69aa55-5296-4eaf-ac09-6cd6756bf5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ab2c25-8398-4b92-ac8e-19bfbb0c27d8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4179072d-35a7-4b6f-be34-2c7c5ae88636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960c3397-c435-45ab-863f-ba473b5e099f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1692a0a0-6ac1-463f-adad-a74f41456750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a196c101-37c8-4b83-b696-bb87bb0d0857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a426f8-7ebf-4ad9-8afd-d7b3a3336248",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f47b40-970c-4e03-a522-cabe23a937e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7698769-db81-4d8c-ac28-5d712d81b975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0910db72-e8dc-4a7d-bd69-651e7ec9e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13db0383-0c20-4efa-82a6-2978eaa52f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34a5cdf-7c2e-44e0-93c9-40fb533ce7e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6715f0-27ec-4510-8f9b-da88deccc6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f89c00d-0b00-4af4-9fe6-7bbd3c928de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda474ed-b52f-414d-a2ac-3220b60c42c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "967a0ded-305c-459a-816c-f5f951000a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5efa3b-6be9-41a4-9ef9-40c1b546d2af",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d4640-de45-4523-977c-7df312922522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb408d8-765a-4d8c-bceb-08f32ce09349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7502843-6816-45b0-81f9-67891e0e8c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfaf8e9d-6b4d-4dbd-b696-6a7d3da937bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb79c884-4ebb-4d77-988c-4bfb4e091388",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb24ee2-a5ea-4570-b670-dd4f27398223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08d57142-306f-4a88-acf2-03237a1c68f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46324a1-5889-4c2a-9a66-bc22f733ee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ac4486e-8a2a-4f45-9c3e-ae45f0d7c542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dde7c8e-7280-49d7-877c-3d245e7ce1e1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39dbf80-04b8-41d0-b8cb-2fd2e50bda9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b90ed5d-a3f3-4e71-a47c-97252d2ccd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0c04cc-14b2-47be-9185-a4c0244105b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a117e971-3a48-4799-b8a5-2547c12fef5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0508848d-c250-488e-85ba-b93cf5f52c30",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c2331e-95c4-4b38-9d12-47eb281109ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e62e9a-a644-47ad-9a77-89d067485bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df439c4a-6581-4c40-be9a-ad673d74ffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e984e3-fa7c-4fd7-999b-956d8a2d303d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c2c6ea-ec51-48a1-b047-46ede8fd367e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37548566-5f76-4829-bd13-09028517c69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "035ceb7a-799f-4ed5-9ba8-d91da470620b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943f44eb-28c9-4ce4-97e1-6769188c57ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "888cae21-2e75-4a1f-bba6-df5bead52450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad48a53-e494-4d8d-a008-162fc803d857",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae47c48f-3c57-49aa-967f-64df8187a20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aceb989a-cdd3-4b32-a018-9f64f4eaefcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3315022f-de7e-465f-ad45-cf6f58b72a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdca18d6-5a31-479b-b439-9b79e8904f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ac0c1a-b416-47d5-b1c1-9f4a35aa6932",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63817737-3075-4e2b-9b50-7c5438c5fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b765dcbe-8233-425d-9740-338eae96422b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6789fb3-67c6-4b5c-9eb1-ae0fd5d19021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0df7395-87c7-4dc4-b917-f9297c5a5749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ab9336-6af7-4c99-84c5-27c6dfc277d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ca2621-da92-4356-949f-834112259ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5cee9c-99dd-4290-8b16-38e66208ab08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a167b9c-67be-4f9a-a9f1-132c5a029712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35030f50-fc27-4959-81c0-51ed53fa0487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c081da-562d-4906-b754-a5618dc8cf1d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ac9949-983b-4fa9-8b21-d5da24407297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0752055-868d-497f-ab42-ad952083e93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde70f3c-f7f8-4dd6-85ad-1ca99a08d3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "95976ceb-531f-4290-b047-c7b1fd2a1160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefdd723-af97-4de4-8aa3-dcb8345487c6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e186f848-c949-4041-beba-66448b6ff478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6e121d-9c70-44c4-b80b-d1e5791a46ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1f4b76-b0cf-4017-8768-ebea1675520c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccf791e-98e0-47da-b16e-a22e554f2280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc999fb-594a-4766-9c61-f285c64bddf4",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "264f3697-399e-46d8-a696-5afa347b205a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec3e882-3f4f-4bf6-9e3b-0b5d280c87e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f6086-fb88-4278-a931-60283977aa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e20ecdd4-b4ec-4a01-9362-440783e8daca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64750ea7-5ee9-47b5-b94b-3fa9fd935749",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbbdcc8-460d-4625-8596-8e5c4f49b6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe87aea-b18b-4a28-b36b-4f911805d86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc5e0df-bc64-44fc-9306-8bfcc8caf2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba39e14-8104-43ea-bfa9-9e81d8066420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3d1562-3e8a-4a45-b42d-f36f1a6ec2f4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ed0a83-ce05-4f2c-982c-54fb2e9ef81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d484bb9a-70a7-42e0-ac5f-f5a333f07f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95579e2a-879b-4418-804e-b801ff40d2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e5d6be-fcab-4125-8778-843a27e4065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a79c127-4daf-48f7-b9f8-57a70859aaef",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b2ab4e-e518-4182-8508-4a3986a8f78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51067c5-19b5-4508-b2ac-0713b0be0eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea66cff-4f4e-4109-a190-780da1a45857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e92e8d3-02c3-451d-b4e0-4c09e653a4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b002a28-4b15-434e-8d65-3f5dcae48f28",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec190403-f463-4228-ac36-55bc5a41cebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54869e9-5c5e-4982-b037-4a59e61fcd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce26ecbc-25bf-4d30-ba9f-d13997d0d3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f88c59-41e8-49c7-87c4-918757053d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25e8cf8-ae09-40e3-b64b-cc431e208864",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b9379a-906c-435b-93ee-6dab72babcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcb9e9d-3e18-4eef-8083-bf3a74e4beb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774393e2-cd81-432c-b0c2-8e1fbb449132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "973347ce-43c0-4e63-ad39-eb94aebffb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d94a63-29fb-4dd1-864c-3c9ffeb2bf2f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cf1ca-a8e4-4263-a22b-175e2fb8dd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be66fb71-6747-403e-a1e3-9bb08da4a8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2e4641-7e53-4368-98ad-96b7393aca1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c988a198-1bd2-46d2-b496-3845073034bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6f2c5b-c82f-497d-8282-0e888b91feae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f7e0f3-539b-4e1d-bf7f-30c67c0fcd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1827af-e861-4744-a885-317a6f3c5567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022f53d-f581-4271-85c1-3a8d414ac4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec7bf4b-1186-48fb-8480-85c12c276819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2266f9-4889-4dca-b95a-541e58a09f87",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf58297-a701-4107-a75c-bdcc172ff122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15e0af8-1362-466c-b7ae-0c6afb144e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc617dc-7087-4557-a85f-21361cbc0497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f39c850c-b30c-457d-a0d5-b7427b8ba1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692f3ea4-f723-45a1-a741-b4ff3c8199fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe95706f-9708-481c-b81d-1d3df9b6c4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb5679a-8d63-4853-be28-dfdae8dd7d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0646c6b4-517c-445a-b69f-895e0a09dfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "53dae4f3-4b57-4e53-9510-bcd774600ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1738ae-c766-4baa-9320-a0c4488587f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4e738a-3960-4c35-8f76-ed0b0b49b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46a106fa-ce01-46b4-9326-a3047d2c8052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07fa714-85d8-4047-b466-b1bb0c1dbeb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "567c3655-21aa-49d1-99f5-1d9a8dae8b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d077ca-11f6-4816-aae4-7453b0d003df",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1415e7c0-1ac8-4321-8d2d-c6185827b9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9014aefb-ad61-4f92-ba44-1b7bf445398c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f9f572-9a3b-46ee-a2f5-399aed445af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "463fdb0d-2ec5-4640-88d2-baa51de854bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37c34eb-c8ba-4b99-bd91-08eac8e92137",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9524fa-9279-49d4-80db-7c3e04cad7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c4c4af-aa1c-4332-81e0-d80095c0f52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc46c6-0b9a-490f-8155-57f87fce7abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "745c3399-d820-4bd8-ab68-1037156f0eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb85c6d1-019b-473f-ae36-3d0348e9bb86",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb349525-2426-43a7-8a28-234be85d5863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c44a2661-a0ec-4587-9335-000955f3a645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260b871c-aa12-47f0-a6f5-a96d9d1a30b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b618bd-68e8-4ac3-b913-15cf0a451c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5675929-a0ff-49d2-b0ff-f6fa074c1506",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdd5a2d-681e-4357-9b8d-04f4d931ed6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6098ee25-6c03-4aa5-b55d-0268339eefbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6100425b-390d-44ff-9af7-49583de83738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "684bbb4d-51de-49c4-8d83-a55169f1e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c53356-4427-4a41-93ac-c55dd7922ec9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6320575c-cf9e-4f04-bd33-5766b78218e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2fd008-33a9-493d-a35c-d0bdee645088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b9aa00-3ace-48b6-883d-6b5572acc671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "414cb743-7ef4-4c99-b0f2-f9c4dbcb6f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350f335a-7d86-4e0d-8c78-360c42c137f4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4df944-71af-464f-8abc-e8f78efbeb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d4a8e3-5d5e-44f4-8afe-96b11b416e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9260816b-b95d-40d2-9e5b-48fbc7516f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd0a2c3-c273-44c2-8ade-40f43f2b0688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441089b-b5bd-4ae3-bccb-a0679107fa36",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597ffcbb-d667-4640-adaa-a5fc5ff020ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c07d22-44a5-4cad-bd1d-fd095d18389c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34859c8-6594-45de-bb9e-26ee966443ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a42f8b1a-e70d-4077-ba1d-dfbc5703554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469601c2-a954-4549-ab3f-6f13a819820b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3048dcfc-a7fd-404f-b66e-c6425381bcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48507ebe-f5fd-4678-80d1-23b38e67fbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecec1620-b527-4cfe-8998-f451d6de4b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd1d509-3039-45cb-954d-89748405f0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73408f6-43d8-466a-8554-2b2ffb52fbdd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a546511-4ecb-4d4f-a31b-34d647bc2850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b9a955-4a54-44c5-9ef4-b519f584b3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbd4403-595e-4495-84a9-c2ca78a0315b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5a69d9-222f-4497-bd0e-cef9890810c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6943e084-863d-4509-974f-c5288f01c1b8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5791faf-7a14-4838-a2cf-37a9fde000a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05495673-9c7f-4d13-8ab2-826c37ecdc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80a0f70-c3c8-4d05-9e29-1d1820b0d199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "256d4600-cb0c-43a5-b645-17d10530a880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d19c3e-fde8-47d3-9825-ece214dd14df",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7075bd-b7c5-4965-a3d0-dde25b4dbfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd88841-4479-490b-96bd-19ae885d0686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2925b74-8860-4d3e-8986-870c6d4b3a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "010363ac-8d8e-41f1-8bd5-2d17d340b38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bd5fe6-4622-4d7f-b432-52c45afdc087",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae2e5c5-9eb2-4e46-8016-1a65359355d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140f6dfe-8dfb-4c95-a4c8-135771bbb4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e77fb3-5cc5-47a5-9900-829dffaa5f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b412d9f7-bffd-4b8c-9fd1-0db419fa0a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdce09d-d29f-47fe-8ec4-9a683ddc463a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa27be8f-76f5-4b9e-915c-cfe2906f1abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30aba933-4455-424b-b3f8-f2d7b3d133da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2358b9dc-346b-4d3e-9c17-ab5dc3054b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a993f479-20e8-4123-bc14-4ae45fdf1f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c1774-bfca-4b4f-adec-08e334b0fd9e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b151018-050f-412e-b88c-059d60cb7ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2138173e-6390-4cd8-a1a5-f209f6bfe6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8542067-e1c0-4813-8caf-254f75dead25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a541e4-b703-42fd-a1ce-76faa1fd4f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a760a924-9320-49a0-ac1d-0670f924e142",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46dce73d-1a86-4e23-8a0e-ae9ec148f06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07de6666-966d-49bf-843d-cfc279052c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bdad6-d612-4c43-8450-0d9249d47bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4ae74e-a25f-4d48-92e2-9495ee5d061f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb7528-da9c-4855-8e5e-d328bca8d989",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5976bc-d38d-40f4-9ed0-5790f55ef6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be5d9a2-5ea7-4cb1-ace1-661de9970cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b5d843-c10e-4447-83aa-950284972b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "749164db-41b2-4881-8d75-1c3a8b2412ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db64d86b-d26b-4073-b217-ecb947e456a6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "032ede30-1a84-4bb8-aa06-47535119c2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b15f2f-9f0c-46bc-945a-2bab265d34c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60cafcd-7db0-439a-bcd3-5ad376274318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4878ec17-225a-49fb-b904-ee8145faa455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0b2145-71ee-48f4-9174-dca64c007850",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8280feb-00f1-49fd-9872-6aa2158de5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fa1baa4-7ac8-4420-9983-0a4394c06b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3915d0-7788-45aa-93f2-0f7e3a4ca5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d73a01-9be2-4c42-80b7-fe9fb8976393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c408c5b-6f30-41e7-8113-02f7006b8a54",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81210eb-7fd2-4370-b5a6-7a06a8f692a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e807e30a-0315-4b96-b6d8-29d8b8f67d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce041c-2837-4870-a403-b35ed672ba3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd26732-ad5f-479d-b92c-9e1853423dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b171347b-30da-42a8-a191-1f6e4d97cf6c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e390783-7a2a-47bd-b3bc-499496c3f23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddbccc3d-e965-4ff9-803d-57733585292c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c221fb4-4380-4b98-a76c-fa41f4e6ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "58516d0f-30ef-47be-aab4-094d69bd20dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46e12bd-b7e7-474a-838c-26d487c4f215",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01816294-0e0d-4130-ac77-a84237ea8a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5b8b4f-bca5-4b0f-a67d-d22332fc4d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2296341c-0fa2-4aca-be47-9c25642891a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6278c55-34e6-4939-9db4-230e10c63e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538dd2d-48fa-400e-82d5-88a457ffc7bc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25dcf22d-065c-4ad5-b82b-fb62b466340a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afeb8013-34a3-4743-b05a-7761b5883ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bf8c87-c602-461d-8739-8c23fa02652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53c4c07e-d04d-48d8-9659-89ab9edf6cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec14d09-0ac7-4f4c-bf21-55305cee3697",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf3c251-6fdb-4523-a120-ffbe369c2f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436063b3-a53d-49fb-83c5-7a11ae599d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e0fae5-27b0-4753-9373-e70a52e83b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f28c26f-61fd-4199-bbdd-76c074fd7d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec2a55-6582-44b3-81d6-3e815d122dc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e8329c-8683-42eb-a3a4-18bb547c301f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bf1ec7-a2bd-4dad-9401-f8408d4310da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2b5539-8622-4cfa-a692-fa55191000da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90f5624e-eb68-4525-b6e3-6f67efc69a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dc18ea-0161-4294-9e05-8a976395e2cf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5291d3c6-effb-4dae-a448-ffad779a80c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3181199d-edd4-45b6-9dd9-bdc71cd0c89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4ea71a-0bdd-4a9d-9e42-18e364592c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "69586198-966f-42eb-b343-6ea10cf94a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0632e2-26a3-42d4-9352-48c7315eebf3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ae95a7-0a65-4bf5-b32f-1fc3f6cd9294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02916e47-cf8d-41d7-9634-f53311335113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6884ef96-be68-4607-a1af-ba2de22e1ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2ed875-4893-44dc-9936-4cf505ca2fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92babfa1-54bd-45ed-96ce-822bbffff4d5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd406757-63ea-4a63-af35-8ba8d352b3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0478982c-edf8-45ff-9fec-0c74409973b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9963c61c-7a81-4050-bed6-14b5bd897953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66645a9-b584-4812-8f80-b08dc9070542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c719b68-ce4b-468f-b245-66da06d00984",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef2381f-fc98-4e40-b375-cf24fdde1c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e966598-db52-45a5-ba56-f207a2aaa0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19db3b4-66cf-44ac-9bd9-ec6979cd736e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d978bc6-c2ce-4a03-ac07-d5551baefb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa1f5ef-a102-402b-b69a-8a5f2d16e90b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422c03bc-f223-492c-8bca-edce82159672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a214496e-48fd-43db-8b3c-6608577b3589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b06210-acb7-4f3d-8b2e-02b7452d3312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "536f1413-b4ab-41b2-9128-afbb96e7b033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f76d333-adfc-4a8a-9ffd-e462c9b84ac8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25260b55-46de-4b87-8e41-564b685baade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626b89ba-cad7-48c1-ace3-1a36eec5a7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6090224-c29a-4359-a185-1d828aea87f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75ef7553-586f-4126-ac9c-6d30563ff877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efaa0216-c84f-4af2-a7af-a7e5e3747a28",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e89f42-fd6c-4d06-9b5b-7431e18ab07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273700c9-9551-43c4-849f-15321d31bc0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9cd6a7-a549-452d-ae1a-6a2c4e6fae7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "843747a1-f2f2-4311-8a31-784cfd696144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d3d707-d36e-4e9e-a4d8-6ca1e76db77f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6e7155-500e-4c2b-8666-7b0acfc419b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323a9ace-3005-498d-9f3e-fbb66e0fbef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7a8d34-70dc-4597-b0da-a2c4af4ab1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75208dd-0124-487a-b218-f16d53b46238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6007d92f-86fb-48a4-b8dc-d65da0908988",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edbcbd3-fe01-41f6-9033-bb4969f6da25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dfe44d-c0cb-4798-9870-f126d9b639b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2530499e-5a68-4c22-92e3-c60feea1268a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8877e2ee-b7b4-41fb-9356-42533660366e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ed6c13-8003-42e0-959e-d4e14382c997",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db14065a-bc12-4d7d-a4fe-903cf1debd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a5ab479-33fd-49c5-9c03-8ff93fc91125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfb0e33-eda3-4244-b5b7-c524dc2cf3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17464166-7020-41c6-a415-9d27e7b7b1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf194110-6334-4cfd-b8c9-2e2f73b7735a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db717df-1500-4f76-9800-5eaef281ba4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa18b7d2-f512-4290-9ff3-e26fac599aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc274de2-fde9-4fb8-9e01-4fd11ccb3fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1eaf47-53b8-4503-b7fa-ff70e1f0a2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86817090-1751-4dff-bd7a-1c0110e2deb1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f15d00-19f7-4e59-a520-bd720f0782c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07232777-e253-48eb-8be9-6bb5d19ebb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d939d18-9dcf-43d4-826f-9d55ea1d1ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c69c53-5972-4ab1-9879-8ec2a6f0f929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d4213a-6edc-4db4-a714-c904a928ec30",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e630a07-3ced-4626-b017-abd9745b3c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22362568-3128-46b7-bdf9-3dff9d563f73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d578694-4dee-4253-bf68-4c7bc5162397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2da6b0d9-6d27-4304-8358-a0116e670ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0a1355-c11b-4795-8089-9e16cd7d9c04",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcdab32-ff4b-4b8d-b6b4-afa50e139fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1805019b-cfc7-4766-b0c7-f35ffa4c466a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1c662e-c3bb-45f4-8242-48a5f50ffea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8132e95-42c8-42ab-a681-04c6597137d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cff690-3347-4493-bb42-54f1178d99d1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c803ad70-1a5e-49f4-a256-faab36dc5df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7038ff-c54c-4be1-aecc-98400531cd29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6331ea2c-6ee4-476c-a360-9124e823ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e343fbbe-b962-4539-86e2-28f91a774043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555805d7-28fa-4e23-b238-93d93e324096",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ada723-433f-42e9-a9fc-f785470dc5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf25494-a36f-45a4-ba50-ea3178b2ac98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54b72ea-4d24-47fe-9b9e-4281f1c92fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c5f5a6-1eae-4ecf-b0f1-a46f3349908a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8d3ff3-9f7f-469a-b368-01c173b16bdc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdf8130-fe83-4598-bba3-adbdd915ce9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e88848-bc0d-4a9d-b7a2-02e27d4ab075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22602386-88b5-417e-b6cc-5ef75ac7ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdf8d6d-f707-45a8-b2db-a989f8b2e1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c52c7f-41f7-47d2-b941-16600459d6fb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65278edf-9df4-4218-a209-f3ddb81ba060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abade788-3b58-462e-9527-26e3a1a5e890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfd042b-531e-452f-9ffa-037628e4db3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e42dd2e-fa5e-4d47-8697-5ed63507c6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcafccc3-e894-4a09-9106-2abc26a2de33",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48c4d3f-bf39-433f-8d81-90dea6c92f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1498fed1-fb0b-4415-a733-23445b5775f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d3163-4057-4786-9949-2a7b63470a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9116ffaa-4831-44b7-a2da-d4fabf849c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d046ea-4e34-4d31-81d0-2572976b9174",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a521861-c37e-400b-b402-125682608bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73c6794-d25d-4e0e-9d72-cd455dd249da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a823901-663d-473e-a84f-7950ca9cac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d29fa67-e605-454e-987b-2161a125a166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3bed87-1914-4f7b-8bd7-124cf0474a0d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50169638-fb4e-4392-b2ed-b287d06ce8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5436c1-6f2d-47d8-a5e1-359571938d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0c5454-db6e-4ae3-a1fa-91e253446fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d343b1b4-e224-4e5b-8844-22629a593f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d3bd27-5503-48e4-881b-432f66330e28",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ed769-a034-4e37-93ee-5d64d34b0cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07af9e0c-299a-44e0-af31-2f27d12e136d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b704134-87d9-49ed-a93a-a88980bceccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31e1a27c-d7f0-4437-8729-cff03ce1e2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a3e177-aa09-4208-8156-50c760c97237",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31db72d-9a80-4401-b3a2-8e9ff49d97a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254e89d2-4274-448c-925d-a4708ed1f4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead3320e-fd46-4da2-ade9-4f07ab650e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbc9c36-e41b-40aa-8425-99ef18a4ef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b2b3eb-9cb3-4e70-a4ac-a92e9925aaf5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1f8897-3548-4b6c-9aaf-81d32527ea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1b787c-5bee-4a5f-8010-94c2c179241f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ab6122-f6a2-47ce-a137-eb36345ad2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17a598f-e312-471d-8c71-1f5d02694fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae3737c-9c25-4f5c-961e-e465c367387b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2e96a7-10a6-43c0-9b1c-225ea35f4696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003fef52-a7db-4c0b-8383-e738ee668615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9786b5-45d7-4137-8e25-d8b5d06c5cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "403e48c1-f57d-4540-b03d-a72c88b150c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e7e0b9-e8be-49e3-842d-9a7285b78996",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e792449-de14-4f6f-9dfa-55bce8abc86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d45dd8-36ab-489c-8375-933b8ede47a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7f8330a-7be5-4ca8-b7ab-f6e782c092a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed7da56-816c-4d03-a092-ce5e54e88164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd1e186-4ba5-49df-a901-acd15c00a1ac",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2fb315-0199-4f4c-af8a-eb99fe81bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8f2251-2397-47c7-945e-e682a6f3a202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e032326-bd08-4d92-83d4-0a0f0419dc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4eeed263-0b34-4f17-8bf4-758cec9feb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32ef3af-7f96-4e2d-bdc7-fcb11dbfccff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af5b1d8-f408-4958-87f0-9037bac2a136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3115f1a-7917-411c-9c8e-e0641f3b32ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad70cbf-a7fc-4726-840d-efc4b3c3c55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35c56b99-339d-4722-83fe-747384f0c37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6cfa5a-7b51-4315-b1f0-ee24c0a4434f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc03a46-9d7e-4ab5-aa72-3f3bd6084f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678d2eb0-ba0a-4465-88c7-aacb5229055f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9691696a-452e-4229-a3f6-5dde52a51f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4f78c09-14f5-4c25-b76d-cf1130f22b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7be3355-9df2-4dca-9d5b-410dedf6e068",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5276ae93-6833-4388-8a76-ebb0b224b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f359552-1bc5-457e-a4fa-132da55c1352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9595012e-d2ee-40b6-a481-6145a3c6e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e88a89-a93f-4bb4-8b0e-9dd62afe3892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a50d934-5490-4bb8-972b-951a9714c4dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb51f4bd-f993-441c-9eac-6187e51a2125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7deaa01b-a421-41b4-9a5e-5f3914768384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa629c1-443c-4152-9954-221e1db37512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c6ca7f-2ab7-44ff-856e-f9430e0be9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb564073-9d2c-4ae5-b877-63234cde63ef",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bf5f2a-8dfb-48e5-a755-d5e463536a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d0cce263-4b0a-47a1-95e2-95be898aba43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db12f6d4-0e22-4510-9941-42828fb6e391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "01c351e8-9f6e-4aae-99c2-45878217eab9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b27eeb90-206a-48e1-bd65-523eab0a4d9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31c55b47-37ce-42ab-bc2e-220ff877c52b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51da3be-648f-44d3-8c66-3385d34aa480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0dd0cc85-737e-43b2-8929-32139b5d4d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9af8cba-0028-4128-a3b8-ff0f9e4838de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abfae531-d4aa-4ddc-b889-f8491d3aa1e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf5bfdc-c236-4244-834c-8436a4942a44",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e57b674d-828b-433f-81cb-2d4701b6d3f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "987a1157-2a03-4a1b-8b2d-684ec6796076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ed01a8-beeb-4ca7-9258-be540f780d6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "485e9bc5-6fbc-4ab1-a711-e7aafc3badb8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65cfecb1-d8a8-4a94-82bf-fcb44356c1d1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f3c50a6c-510b-4e86-bedc-5fd36858e888",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6beb67b-6117-4e17-8935-5e539a91dbd6"
                }
              }
            ]
          },
          {
            "id": "fea4bd21-f1e9-4165-b0d8-746544c15c48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f357ec7-8d51-4468-9489-fb626eddb5b1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "57a4a698-48b0-4962-b96a-20b8e45c70d7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d58e03-28fc-4826-837f-66d36aaeeb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "cd0b7bc4-7f82-4edf-ab47-617c4172956a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4144db-3093-4f87-a609-978a2527ea6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747cdb53-8b9d-43e2-9b24-d809cbe7ce0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b6fbb5af-4d31-46e2-9016-1c6149cdba1a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcaed8a8-1eaf-45dd-9e69-7e33f6b21bfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3275e814-e767-473d-9a47-b232fd7e95cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09a45980-7d1a-4008-bb2d-b0a9327323bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "45795cc2-e40b-4fee-9857-9fd44487c8ad"
                    }
                  }
                ]
              },
              {
                "id": "22be1507-cbc8-421e-ba8a-d9dbf3246ec3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2e919b7-5637-4a77-b2a5-c821c3d959e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91c5b959-75b9-4532-a22b-0ead7f6d29d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3003ae50-c65c-4423-8a00-f3af9af86fbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee48d7a3-6dc4-41cb-811d-5fb35827e727"
                    }
                  }
                ]
              },
              {
                "id": "5804945a-e137-45a3-9b52-92bf0092f60b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f134b8-abd6-430b-8f93-60f529ea2f51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cde9490-f2a6-4e6b-a802-0468775068ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c49f8c-a9fa-4c98-8dcc-2cc26f1f94c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ed606d4-9f29-406c-b230-295a193ac387"
                    }
                  }
                ]
              },
              {
                "id": "ea023ba7-d969-4967-b15f-be72d93da898",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "60eb5f9d-e78d-4a73-aba8-aef5d2933940",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa677114-4b57-408b-b27e-faebfa8619cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7d28b27-431e-484d-a33c-0afd084837a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "38bb9d91-7b27-4f3f-b229-7f94c5f8ec84"
                    }
                  }
                ]
              },
              {
                "id": "dd57c251-6a28-43dc-bdd3-c56d38b6444f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26916b91-2416-4c6e-ab3f-36b966786f6d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48dc7c94-0e2d-488b-98b5-a73cda2a148f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b6b4b17-1666-48d9-a5d0-3b50df87c53b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bb8ec321-77e6-4bad-8546-f1a641c84989"
                    }
                  }
                ]
              },
              {
                "id": "d77eebd3-5cd9-443d-910e-45589cb39e3f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4e66f47-3a02-46d9-af42-cf067307ee7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff48e0ef-97f0-467d-9623-6ccb03b77241"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5517188-cdda-4fef-8c77-408ecaa9debc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60146325-5295-4323-b672-f5a13321e576"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "720ec746-ed10-4342-862f-44a45dcc0f9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b2ab841-c2b1-4ebe-bb6d-2dce24014b16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36bea69c-1369-4941-8b1d-62c3a27a18d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9b55448-b59e-4160-8f56-e1a5e1157032"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd04b160-c84a-4edd-b959-6a7f70e37424",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1a9df58e-6632-47db-b7f9-510b1ae69611"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf24ef8f-c674-42be-b5e7-ad49540711f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7895c81-4518-48b6-ba9e-1f7fe0f5ae5b"
            }
          }
        ]
      },
      {
        "id": "9eea5743-5e88-4444-8eeb-e484178ac4be",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2764b5bc-3264-43e2-941b-fe036715a130",
            "name": "Negative Testing",
            "item": [
              {
                "id": "558ffb53-fceb-4f0d-ae48-f996fba73252",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7bccc8e7-8ef0-4d50-bfc6-9c91022776be",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf848ff-1055-4610-ae50-955eb6ebff89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4eb30d-c66a-4060-b786-b2eeb23e23e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0588cad9-62f2-4ffd-abb8-4d1e2998275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fad491e-5e50-4971-9414-3b824a11153b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dbf4979-4c9d-4e08-afa9-036ea2986fd4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d483ccbf-e920-499a-b49e-2e314ded96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d4cecf-a4d8-4add-a792-f5e1d01a6a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6935e5-0ecd-4cb0-9de6-d8a2ee57a829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d20116f9-392c-4180-b067-1c26dc9efbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8273af-49f5-4c93-b90f-77f0b764a4fc",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96a2cf8-85fb-469d-a55c-25f0e309611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97dcbc19-95dd-41f4-b3e4-7565b3b94e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45554203-21c3-4b0f-bdcf-68dff3f0daa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b948580e-fbbd-4153-b6a5-a825d7050dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba510bd-f4bf-462b-81e5-d835d1699f48",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1302748d-ae94-4037-80c5-63fdf05e3200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9edf2165-0a00-40ae-8803-38f25fd9c6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82ae5e0-dd00-4738-96b8-148d4e99fa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1264a39-f870-4b1e-bcd9-7f10b51e2518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a26e2b-fc2e-4f88-afa7-a743bdd414e6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916c65c5-ff4d-4332-b97c-5b88d575c0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfe8d8d-7e24-45e1-99f8-1170304524c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ddb8b1-69bb-405d-b1b1-3b261d783cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8a6647-2c17-44cf-a8c1-7b02a328ce27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7087c3-77ff-4a00-b338-485c02bd11dd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc08bd0f-5940-4aa2-a4c0-f1ee1c6e6989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57daa690-ea4b-4e6d-82ab-ebeea9731910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a501b7dd-b461-44bd-9c16-dfb4800d2b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f711f19-badf-44a5-878d-0780838f0a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a513ba-8b40-46ba-8918-fa07e63bc53d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa574b7-a7d8-4663-85fe-0a91b9cb29e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0e8600-6ca5-4b0f-88a9-da315d653884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec08041-0ccc-4dc2-a271-ad713ea1009b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "81665f2c-4ef8-4075-ad28-f7550ffc3aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1142bad3-cd26-42a1-bd3a-968564c316c0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db53d7e-0297-4660-8012-6c709ae97ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4beb59-4a76-4eb0-894e-1d6501080d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40062bc5-b352-4718-9bfb-f84b2baed7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbd3a0c-93ca-482e-98e4-9444c0185b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6366296-b5fd-46d6-9b1a-d137a1a62d81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759e683f-9b48-4a82-a235-ded63de212f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4372eb3-760e-4859-a0c9-23ade6b3e47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e6d6c6-c222-4fa0-80f8-92a4c74817f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed901e82-a605-4baf-b969-3d66a08a7f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecf8658-f96e-4f02-8a5d-000663e544e9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df003ca1-d9be-4e5a-9cc0-3b27954b3ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe14727d-5e5f-4f2e-a3b8-00015b83efda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be920f1f-88a3-4ed5-ac52-a921ff9b6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb2e584-3b0c-446e-8c6a-9b7c49ed3203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f9c13a-2aa9-40e0-942a-8162bbf97bb1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ffc1e-304f-4ec1-91be-8e71b4bb0986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b145d5f-ee4b-457d-a482-eddda0748e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9518f1-05b4-4f9e-a120-8340eb954d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e7a894-d126-4c7a-a760-f85a99ad6b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d4c2b5-380d-4eb7-b0d6-46978918b6b2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afea56b4-8b9c-467e-914f-30bc823f6ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eda6cb2-e988-40c3-b96b-3b4c59d76026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fedf2f0-7605-4126-940b-e3e6059933e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e77bc6d-1053-4411-a182-485cd10e530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6623d9f-1840-4944-87f8-75a65799dcdc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0f0849-730a-46a9-8dda-6f7f4ad98c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90495ad1-b022-4062-9a76-504c4638ea39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2103ee8-70c5-4f58-9111-0ed0680bf07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fe7e7c-8857-4df1-af3f-f0803828a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db534d6e-e886-4fd1-a591-f54e9e560a99",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915e7dbf-a14f-44f5-badb-7cadaefcbce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1fd071-bbb1-47b9-a844-70c84dcf80ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c3511a-cc12-44ed-a948-6fc3ff8698ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad33f7c0-dc07-4617-9d3e-090c82df31e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08916c8-5ea3-4e70-9bbd-3289ea3825f8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dff742-0a03-42f5-bd24-1fb8a60a3218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee1cb0e-8e48-4437-9700-8997109dffe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82972b12-91c5-4bb7-afea-0d05d6727f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b10079f-2dce-45ab-b932-f8c0c4e959e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b66120-fdb5-403e-b973-4393de7788fe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe3f7c4-381c-4dbb-beff-de2eb5e1aecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451ddf0e-6249-476b-badc-1b4364eb31d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84852fd-c34a-49bf-9328-e501368becde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c950ff-a7a3-4fb7-9054-4366a3d20a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c461a-e814-4063-a564-4f70ced5d31f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65b0bae-e877-4e2c-a45f-e8a916d5d6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af94d4b-43e3-4907-b066-6b06a80ccb51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5421e763-3895-4144-bf41-ce20292e49e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "65319f39-47cb-4f65-846d-d6d3103bbc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d871f1-217f-46c8-b531-5f71afe0b774",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6073ba-fc51-4229-a32c-4eca7bf46ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cb31ad-d847-4c07-adf5-b07989b0ff82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1671449d-3afb-4eb7-b8bb-4167e0538b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "26ae9dda-59ae-413e-b2d1-487fd1ca9dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde772c7-7b95-4340-bd4c-fd2428a0e614",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c1413e-7176-4c15-9923-7fb0ac213f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e1e142-81fd-44bb-b0a9-1fe045c6829d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9167968-7bb8-4d9b-927a-1f65f33b41ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad0afe-3299-4de6-8a32-d145906ca6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb1179a-830e-437e-92d8-a3d8b850cfc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25405729-c3b7-4e4f-bc71-e1864344d99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa4fa4b-2801-4397-a182-b3ff2cd1d85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721af0d5-6df1-4add-b2f7-b7c68e4437cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223df988-80d1-4d03-8b08-9961ad6e85c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaf1ab6-f18c-40c5-a10a-6dfe8eae7754",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5867061d-587e-463e-a20a-a49e2223cc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cc572c-7bc8-4e54-a520-bb840c04b9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e67dfa-67dc-48f5-a7ed-2443be718224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9377e7d-1b45-4303-95d4-819aa0d1c3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b60bd8-92d4-461c-b7cf-f6b0c787da07",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8771a7-277f-442a-a8e0-9695b337b45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7287aa-de47-453a-9b04-01e3369727e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67d9b65-751f-4529-8f4b-bf0bf8e983a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad8a73c-10f4-451c-abab-79ba16eb9ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae880d-6f92-4390-8dff-3bff76c4bbf8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71cdf36-127f-4207-9461-0d9b67d8ab8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5085e46e-1728-4fe4-85d2-f481e82b0637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c2bf77-8a47-425d-a817-62b451d79036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8677c550-29b1-47cc-8855-e0afb5d71942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80a423-5948-40a7-893c-e7fd2a2ad259",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc81ef87-36ef-41c8-a1e5-3713456da935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d81c8c0-5894-4c7d-9de1-f9b62883c8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bb12b5-8318-439f-add5-be0e7b879e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09fca074-b0f9-4579-a8a4-1c5ccb84380b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7a6354-7b34-45d9-bb98-87255485ecd5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5bd208-77f3-4023-8ad2-ee231dcd0da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9169a06-7857-4415-8fde-650727639ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045069a9-1422-4d80-b240-96a26384ad92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ad394-ea8b-4f47-9559-fb99de37e7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6563a43c-541f-4cf0-b88f-57326d66c804",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a7d2c6-0b91-4bb1-b46a-14471582b2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4989c98-7730-4b5a-96cb-fcac9043d9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563f081c-c9b5-4b04-9075-c6fcc221c210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58bdbec-a7ea-49a6-9258-eefd31f5668a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea7dbb4-5282-4a80-8ec7-5610c2e2fe47",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f5f83b-de58-454f-854f-9e5dd75edc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee6771c4-2735-42e2-a43a-45c22edbf8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650c1bd3-500b-4eac-a19b-e39733f5d5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3328c431-75ab-4784-b50f-d7da93ddfee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5392fac2-28da-495a-add8-16fface036ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f7388c-ed9e-4974-91d9-8e29554f2ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d480f82a-1f2d-4a14-8312-c9267c6aaf9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43631523-1ad7-4b92-8ea2-cdd82eb5783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c247841-aeb3-4a11-90a6-f8f258375770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ddc669e-33a8-4975-a4b7-3ed1525db641",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff46f003-cf5d-4ad6-b1d2-14ea870ef3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b271dabd-6b97-42e8-b66e-e83ebf5430bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c00f05-a2ab-413a-88c3-80860ce07aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1af23d7-7c16-4360-925d-378895b6067a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc4e274-3972-40c1-a6a5-84bb7b21c298",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d329668-af4e-41f9-854c-77cfb425534a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8eabecc-faf9-4a0c-8fba-efbaff77bc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf098db-423e-42dd-8877-c3404226f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef649a6-9d11-4e15-98c9-5d4a6405fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef3288-2fb9-4c3f-a600-22e4900369ca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1079caf-049f-4e8f-8297-74abc8e15b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9da588-1d67-49d0-a9a9-33f52fe6eb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7197f346-7f31-40c6-9214-a667105cd8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecad9d1b-243d-4abd-9bc3-93f64b12899b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fdffa7-3256-49b8-a139-cf13c365719f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fb3bdd-c5aa-4f30-93a8-9cf0feb3681a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0fc859-9bc8-4a68-b48e-4beae9250a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156be1fb-4561-4ed7-9420-c0186fff82ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b58fb9-5a18-4fd6-8881-507f51ddc0e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5b09234-4aaa-41ae-89a1-b3962c9171c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1f8bf4a-6072-4514-8311-8d9e7fce3b6c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9ef21-debe-4b96-b9c9-a108867b598b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "19c5abaf-2e99-481f-8d4b-941f2370e411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef9bb72-3862-49e3-a145-5686853ac613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dba375f-97b4-4766-826d-2c3efb045768"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e4358cb-bc20-4c0e-8f6c-4165442a9c41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a1d0882-6ad0-4a5c-aa1e-e023672f8a0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "724dec9e-3353-45d2-b4fe-6a48b2a25891",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ae19e4a-eb04-40e2-8747-df75f60a400f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47884768-9b54-4695-974e-12e6f1bd228e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0915aff2-659c-419f-8f72-d25328001e4a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2abf4b64-ba0a-4a2a-9813-ad29bff64e57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8787b6da-d0f9-4a63-adaf-2475fa7e72e7"
            }
          }
        ]
      },
      {
        "id": "d82da757-ce0d-4e3b-9937-22c8a9b92a3c",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "44591b1e-5248-4098-a708-f3fa12acd5c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51f1ea61-069c-43b6-8265-5b175133c7bc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0f6b2b8-96e9-48a6-8ae4-8e20f5e06911",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb948b5a-d072-4322-b00a-474bcd3b7a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ad216-15aa-4c66-b18a-1edc56d24b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1fcc57-89ae-42af-93f2-5323e608a40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8b95ab-d0ad-456a-ab9d-866cda495359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ca349e-e4f3-4fb3-a22e-d5eb255a76db",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2154cfcf-da63-42de-a861-038306c4bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ff7197-1b63-441e-8adb-5e5bb087054f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794b7e5e-4c8e-429b-93c7-4a203a84dbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6749bbd-8006-46ee-87a5-d7c18d224b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa5cc78-047f-4b57-8ce5-fdefe9275a94",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0979ec64-72b4-4154-b4d3-4b1a08835f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5371636-52cb-4a37-b7a3-365e732cf097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaa2627-3618-44b2-9040-55c0af5a3b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b315a92-ab97-48b1-80f7-e04c963b680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07cf426-8b05-4c56-9f18-8be3b1478007",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e79fa34-995f-4914-8553-ffb3ebdc9a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f492ac12-17cb-4a15-bf39-4350924e074d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d835b65c-e761-426a-ab0a-d189568169c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ede711b-4ff7-454a-8997-4b0763430735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b7db7-2244-49ea-974b-1e20bf784c3c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49427d3c-a8ae-4175-8db0-cb8d13c6e572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a40353-af71-47b7-b1f2-2f92f2fd86b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170545d7-3b45-4783-b8dd-aaa46fff382d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a721b6dc-3323-46a0-80b7-c9f118e9c319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f266cb-6fb9-4f91-86d7-b64114ff75ec",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee593ab7-4da2-4ea6-b797-633cb4924a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3676f2a-fa31-4cce-9dde-8391586e5390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82db0bdf-406b-4161-950f-ad1e6aec71f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d909d0-2a8f-4b93-a6d1-428b9196cf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7beee487-a20a-4e89-9ca5-bf07139a94b1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de615dd-71e4-4335-beef-494887b19f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d0494f-7230-4c00-9ea7-63cccb27c475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e23fc6-34e6-4854-ae07-7665549a9bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "28e0c736-1fa4-46a6-925e-34f36ee9d9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8d5e1b-4921-4cd1-81f3-a08d5d3a1ac4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1a43a8-5be4-47a1-93e1-4e94b57fde14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64728d75-2376-469e-9ffa-cb6320ba660b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5813c7-8477-47d6-8c9f-afd912c15787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "329178ab-2dc3-4f28-9b21-e3eaa049855e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab4f813-cf50-42ae-8be0-2238fd6d409d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5474ede2-75de-4212-867e-ba8db9e0f4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f97ff09-5fdb-4151-a425-7291779cd59e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a063d8-ffbb-499c-82cd-40018eb36ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccbdefc-8ab8-4058-aef2-523850843256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f1c309-9668-4272-9a75-72cd02110bd5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c0ca2a-9057-46c1-96ac-f95f491c1338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fd4826-0d45-4a41-9b9d-26dd952483df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc1b431-499d-4b3e-9f95-bfd920e2f892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4fbcf9-e9e3-4f82-b26c-2323a4efc069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d19f665-3898-442a-a011-f94c4914c482",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beababd0-7828-4233-b420-1e3187c1e9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2788c9-17b9-40f6-9f94-779d533444da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e446c111-5e19-418a-9b54-db432c0c2009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb77a70-7079-445c-a993-7d4dfa24ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8ee735-37ce-4477-8dd1-4042326df9a0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c3d139-9a35-45e1-8072-7e5e280395e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb61893-dcda-48b3-a673-1d52b75ec2be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b242782b-b45b-449a-b6b9-8cf0bdabe220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e382a9ed-d821-4c09-9d26-b7e76e6378a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ee3812-536e-453b-87c3-b6b2e76bb73f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7a462d-4615-4cc1-a4b0-c6ce0160d9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956dc54f-6e2e-4604-a796-30d6d6d08719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad011d2-4489-4b89-afa1-a8ecc241f331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7afe13-e68e-4913-935d-0445b161f3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b999a6-4a8d-43b4-9d5f-152a3280d124",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97d4911-43c3-420a-9a2d-63fc25c4d20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad56d3a2-295a-4d9c-957e-e23b54002a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e16beab-5ad3-44d7-9741-427159165b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "289dd049-0d9e-4f28-a28e-ade6c2e99aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3ac834-dffd-4949-b7a4-22582f175a4f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4735f856-b72d-447d-8ffc-8d832a7f82f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4bdd83-4968-45cc-b836-134d784050f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f670904a-30e0-4aca-9976-b2dc62c1e4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "43ee76ce-cef7-4b29-89c4-79b107aa1783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e5a122-b63c-4ce0-99bf-6ca618233756",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c132b-1185-4ad5-b679-22f7c198fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5264ef88-75a5-43ee-a381-913bc69c2d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc706837-16c9-4ef5-ab7a-60f2859e528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0770f6-2111-49be-bfc7-1335a510aa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73efedaa-74a5-4b2a-bdce-e1e8df3ffb6d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938db59d-19e3-4bb3-af51-3c907eefada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5120d2d3-50e9-4b63-a8e5-56363520de41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19faf31b-7345-49bd-b47d-82b679921b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19c30623-9121-4af7-b887-ccecfca125d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8c9bc6-ce81-4a7e-ace4-9e2e9e938426",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb84a2e0-1b09-442f-96d7-558723887d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e2b25f-0cc1-4318-b544-d2dd3481e667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9abd23-ffca-4939-956e-7931745a701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be259e81-0cb6-4dea-95eb-59601f518541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b32971e-232e-4d18-8440-a80632a3995f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f27c72-ffc7-4f29-9216-111e24a85416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39064cbe-3707-464b-bdd3-3fd8be27e6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4766de2-214e-4161-ba16-268090c7bfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f183b322-b35f-47a8-9572-f7db513cd234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f933970-56fe-4b35-9e60-7ef75d18d500",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2712c50-b91b-42e4-8e6a-ddf096c64b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f91ac5-c610-4797-b696-b9ab79876cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a811380d-e5f0-4adb-a09e-9cabd3c5e8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2005c78-118f-45b7-9b1a-9bf8b9397389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2231910-654e-4b49-a0dd-17f540c13bb2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22daf6c-f6c4-4c2a-8d5f-2107970e5848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8537d-9ecf-4f0b-bfad-5d1d9121beeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491aed47-e21f-436c-8b05-7a7d86ae8b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92ed60f3-2180-429c-b891-2c6a05edfa63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0e8271-8db5-42f4-adb7-f238643ddc9c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf45acb-a4da-4173-b901-8a09717aa6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dadff0-588f-40d7-8984-4a98cf3787df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc77774-f535-47ae-871f-bdc98017bdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2d6ffd-aeff-4a18-b409-c5d435ba81d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5dcac1-a3b3-4ccb-88d7-d79f55ac4b12",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bab3ff-8e9d-4d89-b219-670eedbec9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0073dbe8-6d6e-408a-857b-a53e05f81522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224cc6f3-2c87-42cc-9b89-c7b9fefbd103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "251a9832-9da4-42cf-b248-f719160ac8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246b6d15-2baa-4e35-9290-b250f39a3041",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8577d72b-36cc-499f-8c65-f2a876269b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd83d81-dddf-45e7-b69f-1c8391cdca36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2debc29f-77eb-4fa6-ad14-64c35fc22ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbce36c0-bcc9-4568-8f31-1d6a9283a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4f311d-98f5-4375-89e1-b40f0ecdf300",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7465c691-7db5-45ba-9eed-43802558b120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db741db8-ff92-4f3c-833d-f5f8110351bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd657c90-65ce-4667-8fe7-241add24606e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2878345-5665-4bf6-be95-57d0acc7c318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377dabd2-d92f-46be-843c-dedcebae772a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf2f6a2-780c-4e2d-a49b-24da08d3d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80e23602-f68d-423b-9fdf-3c5c07bd4fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97830c58-5284-4238-86bc-1f9f184994bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc8e7e0-0303-4486-aad8-511de52f10c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660dc9ee-1a0b-4976-8597-ab7adad18208",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdee8a6-767b-4cf4-bd56-7973daa98a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c33c5f-6b6f-4895-83e5-8f4b7eb30330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346e036-a21f-4d70-bdc0-668d20990260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9df246f-0db8-4d6a-a980-ed6040e3d59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9800e630-3a29-465c-ab52-9c27215ccc02",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27fece7-44bb-4782-947c-db1f01ffac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9cc60b8-95ef-4293-b84c-296722932c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac579284-78ba-4da3-a6d4-8bee0e0a0cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2691a73d-1a11-43d3-aa9d-9e5241297e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16116d2-e33b-46df-b2df-774a2c18f5e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9e4559-afc9-484f-8034-7445b64736a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136e1c6b-a67c-4dbb-8fae-9451d2dc8c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1821f16-35d7-4535-9a1b-ac04e9420365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ba67f7-7790-4efc-92e0-c1e94e5b3b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc954b8-94ba-4f97-bdb9-58e415e2cad5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35b49e5-ff6c-4e94-b374-87fd365ff164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be56759c-90fd-44ec-9a3b-3153d4da6407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390943bd-c8dc-4a9b-b3a6-af7afd4ef4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "590e34e3-3f50-4682-9b88-afdaf0b373ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac377a0a-3138-4cb4-9a1e-9e34e3204390",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc34eb3-fe54-49f3-9db3-71a4639cd1f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4c4c40-9fab-4f38-9e8b-080dcf345e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45fa2c7-d0ff-4449-a020-c2c3c40ff8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f628dbb5-922e-4d18-9611-24feb93997ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbd5b03-93f8-4576-8904-9780185d503a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135c5c82-b469-4154-907f-2bddd47bc7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b918f28-a3c2-40b5-9b99-9c71d9461f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edd0c97-6dd3-4837-9c40-5c983a1c3e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb73d9c-1260-4fc6-b39d-82be958485cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8614f744-afca-41c0-97b0-6cf355dc7604",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1048d52d-7962-400e-be86-6b1108cde697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82ff41f-e983-4cf1-b0a7-54560d0037bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b3dcff-c054-46ec-9fc2-304ec99520af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a933c829-47ec-4427-b918-f9ba95bcc278"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3268ac81-2482-4f10-8107-4d2b50b206f9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41c3f15-e7d4-49d8-8dc9-a8a38ebdd653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6999172e-4e16-46a6-adda-ba128c454ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82eb310-61d9-4eb1-a13e-8b55af0b3cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bf67d2-3f8a-462a-a66e-41717c0a7845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd55e3d2-ea5c-401c-8789-23a142ce8fb8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669297c8-35b5-45bc-a9f1-22d350acab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1ac356-d590-4d95-9539-5763b1fc8d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d4f734-ce08-4a4a-87b0-4de3f111c1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fb9b36-8f8f-48de-b605-3b701e15f7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ed781e-9df8-4f0f-be70-ff2ad48acef6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e0cad9-ce1e-4680-8943-857e5143213d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db0c29c-2646-42ab-a7f8-991f8aeafaab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d64c20-baaf-4fa9-9f6c-ba8782584a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9c413c-c3a3-42f2-95b1-8e78cba790d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70e318d-e4e5-44b2-b147-d93a1f4cb065",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d886b7e-1fd8-49d9-bfc4-fb313b09711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4824f185-e19a-4130-8dbd-4e809c65645f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccd4433-18cf-48b6-8ca2-c1dfcf0a4e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23fc4cef-c7cc-48f1-8858-cd59ad1809de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d538d142-bbfd-4f3a-9972-758525ec44bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff94ee8a-b4b1-4a32-8e7e-13b655f66196",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28165236-38b6-4583-b2de-08101f7eb1f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "35a917ce-6142-4ac3-86a7-1eaa89f1573f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3690477f-bb9c-43c2-937c-beb8b7502e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c940207-38d1-4ee3-9525-2efd2e724ab7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccad5165-9de5-428e-a4bf-83d684cf0c99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5cce3cd7-8525-45ff-8c77-8a439af08648"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09b2b7f8-9531-42e4-bb6d-7967e71e1d8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c9aa15b-54c5-47d8-bdad-71a164d04d51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7a9cb6d-7bf7-48e5-8e83-a81485ac28eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94757ed5-5947-464b-b5dc-5b5a0f6e5465"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "469cdbad-418b-48aa-96b6-79f4db901e19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52150f21-5aed-4ae6-9e4d-fc5ebd31cb5f"
            }
          }
        ]
      },
      {
        "id": "d9413f18-7b10-4f9d-889a-43c08a17f18f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d3c23a3f-d65b-4240-ae37-dcf89c6b1c22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6543412c-7f97-4d29-a8d3-086707481275",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89fc6aa4-e1b6-4d95-a7b9-41cc71993138",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc113c2-2be6-42f8-a0e4-56b4ed405faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571f0730-d0d6-4da2-a138-f9cd27e4ff11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a28ae3-d907-4fa8-91fa-1f31ab523bf2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b53dcf-cfcc-4aa1-928f-28297da41a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d57a40c-edc3-49a4-80a8-66d3642ec683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22442de1-3496-4e0f-a29c-10f44f90a908",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c07ccc-833f-4a8d-8893-a95c993d44d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1499f3f-3f7c-415c-85ff-113d557b5e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4221d2b-fd79-4b18-8e8a-27eeadb5d5e6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f7e160-1482-48e0-b36a-d6eb3d2f8f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f2c4c6-f1cb-478a-acdc-7b002d207754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d92114-d82e-45c0-ade3-5ac11192ebc2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40949bbf-7b23-4fc4-93ec-8c6e023a15e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda230aa-1cfc-46af-88af-b7f012d3bffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b239ea68-6989-4da2-8166-b2441ed4d10c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f8350-a76b-4ecf-9434-e48a3d713877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca730a33-b062-4c36-b9ab-3c4f2b46bfce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcb164f-3bee-45b5-8fc2-0f235d7a85be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c6e1d8-19b0-45ae-b4df-78c564082249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0365186-6000-4020-b191-f76b7418184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40553e9-b966-4607-bc03-3d8a799422ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cdfaa0-c9fb-4dd8-8081-c3eda81e6a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1816c97-76e1-4e91-a1bf-50fc7162c666",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4573d607-b9cd-45f7-8c79-e93cea8df4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391c4fdd-aa59-4bd4-b546-b8784eaa5291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc1ef99-6888-497a-8530-ea1c61f8dfe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f1949c-46aa-4024-ad18-0c3bec4f3cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8c1d5-52cf-4f28-8870-f94f30d83d19",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29840d7-2e31-4eb2-bf34-6ad0c7fd04f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f46a61-f8cb-435c-b424-4e00818d233e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca3031c-7dd8-46c1-9ecd-fd2e7c6477b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f3ddab-c363-44dd-b11e-20d7b1a853c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6608cda2-20f4-4958-89ed-084009fdce1e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5485fd53-1ee4-495e-a4aa-a912bda133f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d7183d-4b25-4254-8d49-efaf22e3fd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12532f02-2325-41e3-a5e1-0bdcd22e5708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a22bbc-c33b-4d64-b64e-964db44e888f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe278db-6165-4340-b2f7-52163639f1c9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1b7f8-2eac-408e-888f-3b5b6e97e4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ff1633-294c-4359-91e4-8efd8fd63a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bba482-1123-4300-9719-e6f316c1780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5293873a-27c7-4e01-956a-325c0f3dae0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91ea7c7-6ef8-4596-a20a-fd1004866b5c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffe2c24-a9ea-43c7-ae90-2cc48d93f0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d28b60-f5bd-4725-a261-dc89546d47f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8293749c-be6d-4f51-ac84-9b311f6eb4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b089ed2-d1af-4828-b4bc-18fa3b6a6f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a308e2-f4bc-4864-9832-062f496c930d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bb18fb-fee1-46f7-8d28-ab1bb9f1ef03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f754d26-6505-4923-a0b4-6f8154fa415d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d490c74-6f2d-4867-869e-786be2eda6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f32172a-c132-4a08-9f0c-fdf46e08ebd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157b03a7-e5a3-4c1b-8d82-ccc7515d868f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6542ce68-1e22-4ad4-94b1-3bdcb59d199e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19912ab-fd04-40f3-be1d-854586dc9954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa48188-f558-4fd2-b4d0-fa92e0c90d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b3988f-4ec6-4cef-8e20-69e658934ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c940c40-d0ee-468b-9da9-679873305a9b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693e769d-15f4-4302-ace8-7330c7812424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb07f985-a31f-4e2f-acf9-3c00d65809b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04592c97-278e-4e5a-aeef-804a84cbc3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bbf5f3-b57b-47e0-b10d-b2409d68feca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e720452-1317-4ea7-8ac6-caad1081ab52",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9250845-8220-4019-990f-029413ae34af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53b21f8c-dbdf-4eb5-8a87-793bbe307db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d32ba0d-45ee-4572-9f24-3f46a2770b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0941a2-a57d-4bb7-8738-ba8bc5f190d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cebc658-b93d-4dae-8f5f-f9156d17f617",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566c6409-edb7-473c-88a9-e1f25070b307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69759cd3-e859-4f6c-b07c-dbb8f7e3acdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedf2b71-dc61-4c99-8332-91b48e9c2548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a925d3-e4f4-49e7-a164-ba631af97e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d84d3ff-ef08-4997-a667-a9499178b0c4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3006d2-9049-4971-918b-c911c434d28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad6317c-36e6-404e-a514-6907ca5c81d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b138647-6ddb-4065-9026-72f7ef43d30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896f4c8d-1c59-4a1d-8f5a-f5bd8e144703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7590a3-62ba-4272-8591-41951f6b7835",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b6f3c4-e3bc-432d-bda3-6c4d46018844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0caac3-9a70-404f-ad50-f01cde7b841f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27679b6b-b195-4b97-a5b6-c6bd0c6970fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "579ae142-44ac-44fa-825a-be664310ab84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e3a619-753a-4210-b4a3-b907b53ca723",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18a9257-60f2-4164-be6c-0d2c56ac0b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8cedff-da60-49a3-997a-c018e953df68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0ed03e-c90f-499e-88fd-834a8bfa0aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a978594-344e-4f3f-90f6-dc99e2c96675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb7598b-e87c-49f2-856f-7f3eab5fce79",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014343b8-416a-432e-b752-3a0fac74adc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913ea6ee-838c-47e6-a064-dfcdf4d68421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b222c40-1f7e-4448-9bf0-11f97d4481c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608460a8-391b-456e-8a18-e5e60e82a457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b8953-17a3-4d4a-9e14-b0ea7670c284",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cff39b-2191-4f4d-8c3a-c1361051c989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410cffe2-3189-4170-8f3c-4113c8034ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cce201-dfbd-4df3-9bfa-4304fac3b8e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8feb42ef-7de1-40c2-8b0a-5d9ebc1ad9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594db4b2-03e6-4d5e-b411-095138618fa0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe65b017-e422-48cd-bf93-12a60dc10131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782b07fb-f7a2-4597-8676-06e8a57e3562"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1fb3fd-6246-4da0-9b4d-861b44f21033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd8d373-300b-425c-9d90-9df66d4bdee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ca5490-cebc-47a3-b844-90a9f0adda38",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8540bf3-4928-400c-a528-90361b8c1e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c2a9fcd-ad7f-47bc-950e-ec702578402d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae510a0-e6c3-4fa5-ad40-7fef2013b4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3f5279-c682-4f42-a78a-dbc24fe4229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6645b606-dba0-438c-8908-78b626cb50cf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0118dbd7-264a-477c-be09-7235870258b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7215eba4-e4a1-44de-b2a3-ec3a7cac4f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128a7e4b-8b3e-4474-87e4-bb09962cc5eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd042315-d6a5-420b-8ccc-826f3e308932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac459b4c-ed2a-444a-87b4-ca749402ee1d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ac7534-6062-468a-bf10-e448ad5172a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a16ef9c-c240-45b9-8855-d0812874ad25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77dc39b-9920-4766-8556-8c974335faa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2261dfe2-27f0-4c72-86c8-e17091d3df76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460209c1-8767-4a55-a4a2-dbbd5ef21470",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dd152c-23e2-4e3c-96be-8ebf56c6bb33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fdbd853f-07a0-478b-a185-732ec15f3a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19468d49-fb43-4fd4-98b2-83de31505b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e20a411-d918-42b7-b35e-63088aac9b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b71dc6-7828-419b-ae33-3a3cf641fd4b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d504037b-091d-4963-9116-fece0b27fefd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa03928-8c14-4b20-a166-4bbc72a46bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b0d43b-eb13-417d-b93a-f27091500afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9497a7fb-83ac-4860-a5d0-e4590d1ba026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4432725e-47d0-4ce5-a2fa-756b8a88d1a8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d0939-90eb-4a64-a5b7-d8b53b234064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e96effd-96c3-4c37-bd79-d85acc035e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5962268b-c236-42b6-8f77-d98e6bb00a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a61c0f34-7ef2-4005-854d-51c4c6ab3217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c427770-3f0d-4e37-9e3c-fdd3383a8dc8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dee440-11db-4573-90e5-584a8081ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6335b534-a759-49e7-a546-d439696945c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9f7560-0f8b-4794-9382-f998cb4653da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aeeff8d-6cfe-4d7e-9891-1661d84731da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc21f67e-006d-41ac-aa36-46d75980c990",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b6b4cf-7ae8-4278-8513-df194a1f4d1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5366759-75fd-4844-9f6e-de05029573df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f316c9c8-4ed1-4467-95ac-166ca8168e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cded0512-6f74-41fe-b137-5b5e21f98b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56db4f57-9214-4178-bd95-7bbd250c113a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57e13c4-05ff-4aff-b791-65e3d1ff8e35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6180b47c-a107-48bc-916c-66daa0ca1810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b27daac-1838-4929-b7fd-2c86bbe38b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50f6f38-3168-4895-b6ae-50fb0a4b8dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5260ffb4-0f35-42bd-8061-92f768a48891",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce14a7d8-9374-4890-b162-e9ea0e04ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c594b2e-bc3e-420b-a1a2-76f1682e064f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a2a047-5087-40e8-a4dc-995428c2d3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d4ce63-a27c-43c6-9d83-58868a86c94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72ee0cb-188c-4632-aba9-66d402e48e08",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2c689b-fcc1-4219-954e-ae39002a8a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42aae9c0-89d7-4a4d-a522-18738f667926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d453d526-060d-4392-98b7-a7dfbd65decf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8122f89e-8206-4d0e-9820-5b9b097305b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1653eb19-5b7e-4d35-b4aa-a83dbcf1a125",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0442c090-c972-4f67-87bc-5ff13048a2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3436471f-1f14-4601-bd51-569ccfb27654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ccaa6f-97fa-4ad6-83dc-73922ebe850f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5fabfd-215e-43fc-bf4d-601da2530f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e483c3a-ed21-499a-a636-fb62eb56cfe6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb4b6cf-64a6-418f-b1c6-f98454c7e778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb62271-8d46-4635-965b-91eee0ba770a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc096c01-b02c-4a2d-af03-4212bfa1d690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa72e1e4-215f-4bc9-b899-aca1334f5618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337da0c9-9e5c-44e2-81ed-6f58caf99c03",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eddbdf6-2023-4aec-9e43-a58744c83428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeddac9-ae24-48bd-aded-dd20daefe821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0ed608-7911-4d82-a1f9-fc8cd849d96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a1a480-b966-4c36-8808-de0ef120f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edea152-9605-4cbc-8b68-52e7287475f7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c00bbe2-76c2-45a2-97cc-fbced41f0ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0208559f-60cf-4098-bec2-09f4a19171e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3aeecd-5d22-4f3b-aa84-ed5993bbc97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900ba01c-4b86-49e2-9d09-a00d7bff0265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20412156-cdf6-4e7c-b7bd-6e1bb87e420e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2e53b2-4f72-414b-bc70-f76b697a56cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fd97bf-692c-4f57-8463-305e4b7e09a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a02b16-ca04-4d2f-b6e6-eab5f105bc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f28ad24-9f47-464e-a0a7-7f5eedc85192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ea71ed-21bf-4ebb-8cb4-97a583318f1e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37806d25-b36c-4066-87d0-95c74ae44c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b9efde-9cae-4aaf-b582-3a8dc241b2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd36c08-328e-47b1-abe8-51bde75a8b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fa290b-89e1-40cf-a34f-671838713ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fad489-d8da-47c8-9eae-59f65b570f8e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdef6b9c-c1e6-4eda-8e1f-dddc844e18e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93043c48-69e9-40d9-8f0e-c21528428208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9200c-961a-4574-ae09-47fcb65f0dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5bc1fe-a6d9-4ad8-8697-9d6618d53974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b78e02-d489-44b4-8a8a-0a12c5200488",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c26e9bb-557f-4dab-8471-b2624f8a7e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a9d24d3-09aa-4f85-8057-ccac137e42be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054086ba-983b-4c64-ac22-deee219cb995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef91120-e529-4c75-b150-852869c1df30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bbdfb1-e63c-4928-ad4a-14268ced6d38",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833f679c-e0fa-442a-9867-ef17add36f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945718d3-c2ad-4ec5-acca-906296d3bb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b87deb7-58eb-43b9-b163-456ba616bab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976be34b-5b6c-4e48-8a91-9f06c882d45c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6a1489-789a-4f28-ac14-6d9705f5b8bf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d3da3f-bfb1-4e7c-a90e-4bdd26326022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a976cabe-a318-44f7-a8ee-425d3d82cbf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95f59a5-70d6-422b-8e9c-42efc340105e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a05d454-4777-493a-8738-c449fbbac733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73352ae-f70f-4838-988d-c3d2b79fe8cc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fd43ff-bba5-4345-a3c4-43fc5535fc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998956d4-a463-4ecb-956d-0c4b6e33edcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fb7c5a-3310-4aee-b63b-e26d650bf7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89727d14-444d-49eb-babe-e5f8c2dedb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7550f9bb-fda9-46e9-ab59-0aaeea7fb761",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2a08bd-484d-4eec-85c4-4f806c401bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8a7672-5b47-41c8-aed4-865a881ec4b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfb729a-d1a1-41c9-9b84-9f1d1ec3d6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746f1a21-557c-4757-a601-5448eea0692f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522e4895-da74-4e8f-a21d-43376571da55",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f9641-98c6-4ea4-9b64-224b9df4478f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295302a2-8bd1-4c60-9b8f-a02dfded1439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd524f4-dbcd-47d0-b78d-a0960d8a3daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08eccd2d-7a66-468b-a51c-c978a6c772ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88455d0e-2955-413a-865d-eb5fa3be370f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6671b3-cf66-495f-9922-7cf7ca1836c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de06acb9-73b3-4b93-a6b1-dbb04874d0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e592cb-6257-442a-8a39-918500def1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e9abb0-258b-4e4a-b249-f6657d162c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c212463-5fe8-4fb2-b6e3-d6b5786000ba",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d850d72a-1d76-4fec-b5e8-2808bbe06b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461e505b-5c69-4fa2-a112-32171d50aea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53cca6a-aeb9-45fb-a4bf-fe6a3b3be660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c26c284-a74b-4e9a-944e-188b0a3093e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219283ba-cb53-43a8-829c-516d75fa1494",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70efb70-ed97-430b-910b-cc5ba80eefdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413b3bed-2968-44f0-aee6-96fa9523c563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8bb3b5-9284-4cc7-8ce2-5231394d1ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004851fb-ebab-4782-8413-a52daf92b184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e5b649-a5d4-4f42-bf6f-c270af0824d4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f5246c-c24f-4468-9ee2-a1e98f906b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71133a69-d445-43b3-a3d4-04ce46edd072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a92792d-f68b-4168-b9a0-2f3ee602d3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5d822c-0ad5-44d5-ad00-6743dfbb5e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40335191-3a15-425b-97e5-e4ad6135257a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21b9a85-9832-49c8-9413-a20c670f33d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23618ea8-373e-4d87-b24c-918fc23eb6b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5636218f-8c98-4650-9490-8f20006fa7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e364acab-1a47-4b9a-9849-dc6e1709fdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a374626-9d32-460a-b7c0-19c405517063",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346fd3b4-8674-4709-93b3-edb766925827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c913e9-1dce-43cd-9ceb-bb8edcb1bd27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f21d0-d1da-40f8-9c63-6c72bb42b18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4d4ad7-dccc-442a-81f0-6d02332d4c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef232af-e2e7-490e-ba2a-d8e6e64cb4b7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f34b57-4085-44b4-bdeb-5216ca78eb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d42fd3b-299b-45dc-8a45-a85c3ab03977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b925a337-fab0-44b2-a5a4-bc4e27ed4636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92d471f-6692-48e8-886e-cc009550e1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d179044-3d5a-4da0-8f54-4929c8639664",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ae113-fe5e-407e-bf1a-15a7665e6ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85053ec5-f7a0-4d2e-a8f1-40ff49a37f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19355714-fe83-4359-9d86-4a0afc001ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d58520e-2042-461b-abe6-2f47b9b9ade6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d1e367-fd40-4b4e-ab3f-7be538cc5691",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac60d8aa-0d1b-44f3-a016-d75e8c7421ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117eb0a8-51cb-4f3d-b10b-62c36afe5a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd17e259-e09f-4836-bd5d-e374a6844289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c02e73e-e105-433f-8c81-47a143386f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3d9dc6-4f6c-4d3d-bfe3-4beb4e60a29d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1534afd4-d2b7-4bf4-84fe-bc2361932866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dd8815-d7d8-4c08-9643-6e85de1949ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f975cf-9fd6-4db8-9775-cf45d961d7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe026a1-2988-49d1-9e50-14181c18010c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca84c77-e271-461b-b593-0a4319bcff31",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb2e410-a30a-47d7-af86-24f31f282bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4bb34e-d8ce-423b-9d91-3a9608c481e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc6f933-96a0-419d-ba2a-dc059ac5b9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ae99c1-165b-4087-96d7-4a82645afccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be21f994-c239-4275-9000-92d5636ad583",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49a656f-7b4f-451e-a159-87446afb9e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ac64a8-732e-4158-b301-9fede74e3bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2149f2-2524-4b3f-bad7-0d4162843064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2fc4da-e3f0-415c-8212-70a503cfb7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df09dc6a-b6fa-4886-8a82-b2381b1ccc82",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d036e2c7-9ac1-4724-8ef5-89138ff9cc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c77ef1-3132-4a51-a722-d3fe590365b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1280b86-8123-48ba-9f98-41976c10b8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac0e38a-5614-42a5-8800-8b092bc10d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371aebee-7f9c-4220-a143-9e30fc00f56e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa1c74a-073d-4840-bbed-88c16cee480e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945ecae4-a83c-4281-8ca5-ed53d79596bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c2e509-f710-4ec5-a4be-4b39cab20c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed5bead-046e-4992-9931-d78fc08f4838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b130d7-4bd4-4e84-8d96-ae822a83fc16",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8522d4-8f8e-4f5f-b959-169a8c1a3489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffccf94a-d1f7-4d78-ba9a-552c6c68df4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6103757f-b6df-4f28-8f65-711fd30081f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193b69bd-b3df-4a4a-9eae-459ebc6e166b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6465a11c-7f80-4747-9917-a4668372d598",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1140ec73-ebc7-4104-ace3-30ea2f31aba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee5634d-dc82-48aa-baaa-f9cd344d0242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1154905c-fbcb-49ec-a66e-028b72b3cb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e919bb8c-a494-4241-a829-dbc6f76ae821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bad441-8596-4b04-9b67-1bc1354c84aa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3b1693-decd-456f-91d8-b9da75036d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe3a489-979b-4678-8f27-344ef07d3b11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e15e13-2a48-440d-a509-e9b9f393e60d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e1b7fb-fbfc-43a9-943e-c5390fad3c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb704414-187a-415d-9fea-6ee4ad88d056",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5f3f79-7869-4f6f-a424-4e85e8317bc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f509edb-2ff5-4856-978e-1fce80791dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09715f0-dda3-48a6-93f2-e22f3fe8bfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f98dc25-07d5-4a37-9c01-8d3566bc92cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35133bd8-54bd-430f-b56a-5a38f272ba8e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0789b11f-00af-4590-8c01-be7643c8fa5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aefd5069-9e18-4a84-9d26-6d7841ad2baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb57d59-1b04-4667-91bb-82fb7f1bf48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c0001e-d710-4201-9fde-d732351bc4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889ad8db-2c17-4aff-be5a-aad77a612c29",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0365a9-0781-49c0-96fd-30d1fd564423",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c535d68-8703-46b0-861b-751cecb39d90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607d3c68-9858-41cf-82cf-aa55071c7ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969ab656-201a-4cc6-865a-0211ba766e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550cb28f-471e-44ca-a73b-7c6aeb16ae83",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee26009-2e94-4803-a8db-cfff4cf32aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe59300-3661-4b8d-91ea-71345cbe1ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84126878-d8e3-4b73-8a7a-f37c76b2ddde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecac39b-215e-47ba-8d20-f1a0019e0aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9134a0fe-ef03-4835-bb4e-e33efd751ef7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3986bdae-bbaf-4d34-a43c-adb0243ff3ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c424169-ec99-4ffe-97d4-3ecfcdfaccaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1b76ba-b57e-4c66-9aee-ed37ff985a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726630a9-f628-4a2c-9bee-e060552f6d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d143fc3-b9ca-4828-94f4-4e62ead7bae7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130cfcce-62d5-4bcf-a09b-93d7a82ce05c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d9f556-711e-48c9-b3e1-760d84254b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "932d702d-eeee-4eb5-b2ad-46cbcc6497f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d106558-89c4-40f3-bc0d-173b537d4abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e300f8-71c1-4b23-b3fd-6bd59b098811",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2593a1-208e-42da-9356-78290b6ae8aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603fda5f-932a-41e9-a072-531efc2fc1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ce5335-79e4-486c-8fc8-b113512a4d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202580f3-9829-4b97-8498-1ef70c73f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3215ad0b-316c-48ac-aad9-8f0164f8ffbf",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc99f5c4-5c4c-40ee-8fcc-55fb08b50601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9b2648c-4c0d-4cf1-9270-3f093c59f47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22d1553-701f-49e0-9400-456bbd64ce7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb80ee5-0d5c-4eba-9bab-2d3a26eee651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358e95a2-83d0-48ca-b8cb-ebcd23fed7f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cda1766-de66-4677-b579-0b83285a5e6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "836a32b7-55d4-460c-a90d-7c6d7c3a76b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6db78e-4f55-4709-bd82-0b40c14e04e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f450a3-bc55-4e12-bbfc-7422f8019aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bb526b-9329-4957-a2ac-0361b15a0b8d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0b5de6-569e-449a-9b30-6c216c15af22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51397532-e4bb-453c-a321-8a64d86f0f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343ff25d-dca4-426d-9083-2675d916dee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b08cf7f5-2052-4ec5-8e71-880df167423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a903113d-1b71-4102-9c8b-17246d3b828c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94438ba-5c3c-490a-ac55-7202e388abc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b5c5c8f-1087-4613-b764-046de6efd1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fab5d3-f858-4a47-9313-3046a3919386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe0b0f1-0cf5-4f19-9edb-65aaee0a94f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46362957-71f4-4cae-bc96-2724537ee74e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0f8aec-7ac0-4106-ab29-651defa089ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c254d771-6cbf-4320-9a89-3eb82e88b4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b74e87-4892-475b-8c09-d8dac8e6ab00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab2514a-c897-4d36-828b-5df7a7397956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b8a9d4-be5a-48b8-8ad3-a9eb460533df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d383ad6-e99f-4c61-8461-f9ab92faa2de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d926aed0-47ca-4c70-8c38-d3391ede61c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ba5284-cb39-48d9-988b-08bc0696692c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dcfb9a3-0662-4821-98c9-739fa7bb0fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933cc1b7-1db2-4980-b84c-50367b023dac",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49103f7a-5da2-48be-82e2-38ac57b594ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f0082ca-8976-4efc-b22f-876a9e783dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5739cca-c224-402b-9292-5c52e8c23a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645673d2-5545-4405-8283-8de03fc4fd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b142748-aeea-4de0-9c07-f7dec981e62b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0aa5fc-cfc4-4fdd-8858-016e2116149c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e74ce50-b1c8-43a0-ab55-78c553360056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff4e7bd-42a6-489a-8134-b2ba8e847257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e45ec7-be60-44f7-9dcb-52f4529ba212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e456aeee-b75a-4e5c-9588-8a552271077a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1686a11b-9b1a-401d-a490-533b3e38d115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af95248c-a957-4520-aeac-dd2bbd595330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b639f7-14f8-449f-8c70-3dced73db391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d5594d-890c-45fe-b540-850636a3fe93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4be4bc-3ffd-4014-be4b-74e3d5f50583",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eee5356-6f80-4833-8f48-4fdd5572e0f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53bd885-7b72-4fcb-9ca2-4dee045b8e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1323ce3c-c5ba-4ea5-9731-43de3c5d483f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292ec544-f7e0-4af1-b7e8-1d8f7f869287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edfca9e-2e66-4720-a62d-a0fadbcff4ad",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164bd328-2a89-4b30-8944-62477b944ba7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c19e996c-a4d3-4a8e-9a2b-5736aafbad7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e37cc35-23cb-4240-be4b-b84180b6914b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a76c720-45d1-48ff-b6de-9b666032d490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c4be87-5f03-4bb8-9110-363331765673",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07632243-05f7-48fe-bf11-45a63ab5d1c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa529007-246c-4c32-9333-fab62c5752f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f1adc-8258-438d-acb5-061ada6f3627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37222012-6375-4bda-a144-088ebbf5401d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7aae84-faac-4ae2-873f-f2b512dd9153",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036bd816-6d7d-4934-b4e6-2b447abec390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68e5dfb-081e-412f-bcf3-7f006c915fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b80b103-39da-4dfe-b3b0-e599775cbbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d052251-a2ff-4093-b779-571ca4fffe65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e464631-2c00-4ab8-93c1-80b201a63cbf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e789f9-662f-4c90-90c5-f42b60fcd88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d3c31d2-fa9a-49f1-8b36-314ab2ff04cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba94f0c-f38c-46b0-a486-21ae8b477e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d801f91-02c4-4d6f-90a9-78a468c6cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e61e5-7212-4f19-9aed-81415b28c6f0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7092aace-5dd0-49f0-9dfa-07e4d82f6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c7390a-48f7-44b9-b711-aae3b1f3660d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0513624b-f5c5-44d7-a4f3-4a92ab30d265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322a4e08-0457-4ca3-93ea-70a4d05bbd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd061275-cf3b-4776-8428-89162685670e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a85887e-a465-484c-b60f-b3e782dc9ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efebf3a6-a886-450e-bf36-cc2cda247b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00d9366-ddaf-4ac0-9197-00476ba82a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee984905-484b-414e-8709-e666ba6c9fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cd482d-dd79-48a4-889a-1478d477c563",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c63a96-5844-4883-94a9-e67cf17f1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "337aab7b-0924-426e-8465-8dc3e4ccd752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e2577b-770c-4754-8603-41bc6eaa0fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd2a957-d03b-44ee-9b1e-f876175c46e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da918f-dc7c-4ce3-9109-bb2d7c132f2f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae575ed-664a-4b51-afee-ec5c6ad12db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "342e66aa-903f-4050-98fe-f0c7c95cb01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a69c992-04e3-4f33-b19d-1b7ecd01b49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f3320a-00e4-4283-9d59-b281f1360bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeee442-46ef-4fad-9042-de0aca359cfe",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc58255-d220-4526-8a30-18f53ddc3e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7c9434-e33f-49e8-a460-26304ab1c2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38247f41-b10e-4c0a-9d95-731d03f55ffa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00afca2-d482-4a9e-a0be-71873e1cae3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a1917a-0299-4b3e-abd0-2ad1e5935823",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d90be25-7b23-4ec8-b8a4-dfaaa117c531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee69e78-12fc-4e9e-8112-ddef69d67842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ed9b50-54a5-49c5-b997-908c6144b9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daaa7951-70ea-4a98-8210-d37d7f54edc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad09bedb-0311-4b1e-ba71-304666230b7d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b93751-f943-4a06-8460-f74764987297",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "badb6a01-5805-40b1-b696-24ff5dc83577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f9216d-4b40-4718-8aed-9ce5026b8b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90c2c80e-4d55-47a0-82dd-eee112495e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d42a22-b65b-42dc-a6ae-96390feeaee1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd9947c-e15a-4665-b918-02ed1281b6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab40fee1-ea9f-41d1-86c9-fc885396b351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6705adbe-fedc-4380-bda8-f09045d1c96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b90679-4d9d-4046-b2f7-d5790e3354c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97531a45-8a9e-431e-bce9-41b1ab68b8a8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01e419a-01ef-43fe-9986-5e7978e130af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6c1dd4-290a-4202-bf6f-1ba7aae7ecdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e2c3f2-50b7-48e1-be0f-33a5c3a10303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381adfcd-297b-415c-afe0-264844a04957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2894d2ad-bef6-4635-a0fe-3ca67ac7bc51",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a000276-6885-4198-ac41-733759b748a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "113dda42-e2f0-4a22-bb80-a8414899029b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c266f0-e631-490b-a549-bff705453855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bece1c-7ea0-41fd-9823-70a0268574d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968cabcb-a178-4331-9ea0-ca343254043e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ef3b77-b501-45d4-a411-b8e660648e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb360b88-6e6e-4ecf-bc16-ea7b5c505e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57d2330-54b8-4548-a05d-3911ab878eda",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c941f968-bfd0-4a94-a25b-022abc211871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1f2e77-1705-4a02-b793-1c347261e9f8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3f5428-b9b1-4859-83c6-940b02407870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c8de8a0-0203-4450-aa84-1395307278a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59905620-4259-478e-bd7b-d87e6d877091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21a7ea29-2a3f-431e-b64c-7b92fd6b7313"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "096159ab-ef14-43ec-985c-e269a8b61ff7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19406490-7576-404c-872c-5d94c4e71ae6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6036e55b-de31-4c26-a373-a06f9b1533df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1da6d216-7ae6-4def-8e61-a4495edfd138"
                    }
                  }
                ]
              },
              {
                "id": "f132ebb0-d415-4f59-9470-2e05c82b990a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efb756bf-3e70-4891-a6b7-446db3d3315e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a87642-382e-4c31-9fdd-c11720e023b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2668ef60-6524-46cf-bcb8-31e89652a6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d32f11b-5b3d-44b0-b82b-6f8faa00b9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e138067-afce-4c60-939c-142b2780fbfe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faebe9fb-698f-4429-9df7-125332c47d09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fe5e03f-b8a3-40e1-b591-290cc93996aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba6e8921-2bce-4b6a-9f37-b2135b0193da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a99d5e2-f05a-42fa-9b81-0e5b0b943041"
                    }
                  }
                ]
              },
              {
                "id": "30a321fe-371f-4052-a558-8d49979f98fe",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "62262002-7041-453e-a71f-6d89b8687867",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a35464-3502-40c2-aa34-9339469db2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b0147a20-eab1-4ec0-a75e-093c3a710abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c3a735-bf8e-4fae-ac32-29c6ea4bd246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fcb588-a0cc-4a2d-b988-fc75bc0c724d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e22ec45e-9ee7-49d3-be91-fe6bdda3a80e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "710c8dcd-4af7-4cd4-9f39-3ace502cdc42",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d06c7236-e775-4cc3-b4d5-e582c248ad10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e641f87e-6eb5-45fe-b82b-01b34c3964cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79df4f53-51a1-4615-90e9-37636108d537",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7e5227-7e9d-4be7-87ee-993dabd1090c"
                    }
                  }
                ]
              },
              {
                "id": "afc5a106-eb56-4ed4-a319-b26644a24867",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfc6fd8f-f53f-41cc-ab6a-eae224cf1629",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6c7f7a68-780b-4fa7-8e08-4dbf5dc99445"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a663e10-8189-4f7c-a15e-1ede3b1006b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1131e61f-c6c8-4d19-94ab-37901c22c9ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f17777d-2c6e-42e1-8c55-60dcf40e1384",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4f1303be-6f86-4a9a-8dc7-32a4114e3b80"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c02ecdca-0472-4380-8005-e2b376016b13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c849c0ca-09b5-49bc-a880-55da6a80be02"
            }
          }
        ]
      },
      {
        "id": "abd2b75f-587f-4b6d-853e-3b9157d93b52",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "81e8d55d-b7ce-4777-aede-cb6ce3d6c88f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1fd4aafd-3225-4ba0-a147-c126347f329c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "906c074a-c170-44bc-b5fb-ee507c893b0b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff2cca0-c960-4f87-a696-f93daa2ee256",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d5d9ab4-4a38-4036-9ef2-6565480d75bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce06a6d-d615-4129-9c85-54396e992aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efb0dfaf-f30d-4ede-a531-efea8d54eff1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c081aecb-6d77-46f3-bb9e-92d36383f49a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8c79d7f-a2a8-4212-a467-186a54d7acd5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a41954d-3497-46a5-9431-ad8cfab8fc15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65945b9b-c4fc-4a87-9d97-5126736d2a6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d97b231c-cfbb-4620-bf09-1b3c23ff19d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ad69cdba-e855-4a92-877c-911744cf6954"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "476143fa-988b-4ebd-bf2f-a2c84c6ade50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71952e94-e60c-4925-a30f-d1e4464c0ccc"
            }
          }
        ]
      },
      {
        "id": "ba3a9c16-72f0-446e-9701-265b899b9f35",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0356165c-ebed-43bb-bd7c-d6bb523997b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82b08ea2-c018-4540-aaf4-f3bb4e358aff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2112d17e-b351-4ad0-a9fd-cb8e98e6a7fa",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f72c0b-eab7-453b-8fcc-a85e74716133",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d36b9c-6e3c-414f-8de7-ffa88b4c9e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2fc269-12ab-42d9-ad7c-9ec930d6c76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "66d0944e-0d3e-4ae6-b300-2f539c6a9d72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "391a82b5-4880-4171-878d-8803c354025c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9abdddce-35bd-48c2-9241-8ef8ea99de86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c691709-a2aa-421f-bfea-dbd895d4d70b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b362516d-0683-439d-8c8a-014cfa359043"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7bd54fea-201e-412e-b897-6e1a5e307040",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ab068815-af43-4ce5-846e-42480b3cc725"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51adb1e2-d227-4ad2-a858-4a70ce65f058",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c405d5b2-712c-45bf-8d55-2f55cad14e88"
            }
          }
        ]
      },
      {
        "id": "2b33d281-0647-488f-9e93-4cfa14eba31f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "53072f4c-31a0-4be0-a941-7377ffd07fac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05321770-e20c-4343-a4a8-4abd39405e35",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75c57b6e-5374-4c80-88fe-8099b45f9c4e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a56813c-a546-463a-8a6c-81ee7cdf7995",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66c5f838-3f7a-4c46-bf2a-d165135432d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589fa57e-559f-43dc-a0e9-388064369019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6927cab9-1b8b-4eaf-add4-81c1ca317634"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1b4773c-7231-43a2-a1e4-ded8c2df8719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ed6da00-ece5-45fa-95ba-ac57b80ffd40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1caed5e0-6492-4f74-8f4c-0dd700c16fb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d4e90cb-8f95-4096-ac40-5bbb5ad3fa1d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5367357b-cc95-4d3b-a13f-c89a39d62140",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7725cf0-8288-43c7-94cb-1553f31340df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68f5168-6a18-4e55-afbe-c56d812a879e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c86f5418-84f1-4521-8fef-b2263bdc6111"
            }
          }
        ]
      },
      {
        "id": "99b7f7c8-44eb-42b8-acd3-47dd6dff6902",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c72407a7-777c-49dc-9110-e4a295e40be5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38e9b4ec-429f-4f46-8982-24c2ebc49dd0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "625f58b1-facc-427d-be0d-5846f761b944",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cb81e0d-8483-42c8-b38f-80d4ec72dc91",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "511b402b-1711-4d58-becf-d673c7ca0f55",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.417543859649118,
      "responseMin": 2,
      "responseMax": 526,
      "responseSd": 34.241009181343514,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707007023940,
      "completed": 1707007034832
    },
    "executions": [
      {
        "id": "9f78e848-f17f-418b-9fdb-e2120c40872c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1a5758d6-8c10-4ea5-adba-ce362f9dd379",
          "httpRequestId": "907a8fbe-5653-4ab3-9af8-727ccfecb8d7"
        },
        "item": {
          "id": "9f78e848-f17f-418b-9fdb-e2120c40872c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "45d02759-81dd-459e-8ec7-8b42afb9ed1e",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "f234f490-40d0-4b56-8494-f59c123cc86a",
        "cursor": {
          "ref": "d2447213-252f-4b37-9409-d47aef8375d9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "28857208-dc23-4c30-b40f-e1c58ac851f8"
        },
        "item": {
          "id": "f234f490-40d0-4b56-8494-f59c123cc86a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "156e79db-f89c-4a78-a5d5-e197ec3a0cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "2e40cd4b-f8ac-4c83-8452-a4b3d5b25574",
        "cursor": {
          "ref": "8b239bd2-f061-47cc-8277-d16218fd719b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "03d0c045-10b8-4952-9782-01943c1f006a"
        },
        "item": {
          "id": "2e40cd4b-f8ac-4c83-8452-a4b3d5b25574",
          "name": "did_json"
        },
        "response": {
          "id": "cf7bd4a5-b143-475b-9745-7b8ad9c66541",
          "status": "OK",
          "code": 200,
          "responseTime": 156,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b18f8-8bc5-4eae-9594-d556e9e4acdb",
        "cursor": {
          "ref": "17f9f849-26a0-44f5-ad7b-50a8ca968e58",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c46a4a0a-4c73-40a2-bfa4-1e58122007ba"
        },
        "item": {
          "id": "c94b18f8-8bc5-4eae-9594-d556e9e4acdb",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b21fce6-02dd-4fc8-81ff-53ade1692ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94b18f8-8bc5-4eae-9594-d556e9e4acdb",
        "cursor": {
          "ref": "17f9f849-26a0-44f5-ad7b-50a8ca968e58",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c46a4a0a-4c73-40a2-bfa4-1e58122007ba"
        },
        "item": {
          "id": "c94b18f8-8bc5-4eae-9594-d556e9e4acdb",
          "name": "did:invalid"
        },
        "response": {
          "id": "7b21fce6-02dd-4fc8-81ff-53ade1692ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1745de-09dd-45e0-ac6a-e90e7b838a34",
        "cursor": {
          "ref": "93cc9085-ca0d-4483-a510-89005d402d42",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7226b760-5e85-49b6-bd2d-b6b15e1efda9"
        },
        "item": {
          "id": "fd1745de-09dd-45e0-ac6a-e90e7b838a34",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0875ebde-66a7-4cc4-a0f9-30a8f2d18e80",
          "status": "Not Found",
          "code": 404,
          "responseTime": 50,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c9a885-2bc6-46dd-b790-264fb6248830",
        "cursor": {
          "ref": "ffe944c1-4b9d-48f1-83cb-093d12e6f242",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cb94f005-5b12-45ae-a7ab-632deccf709e"
        },
        "item": {
          "id": "41c9a885-2bc6-46dd-b790-264fb6248830",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5203cbdd-4ace-481a-92fc-be1b61f7a2da",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752b84ae-e680-41ed-92dc-ccb2e34addc3",
        "cursor": {
          "ref": "f7d0e5fb-5db7-4ca4-8907-3ac6a06f5ac2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "168189cc-5df8-4ae7-a92c-7b962ba21a25"
        },
        "item": {
          "id": "752b84ae-e680-41ed-92dc-ccb2e34addc3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8095d827-b089-49c3-a6fa-7d0bccc8a47b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a6a503-11f7-4d14-a95f-e6d8d659c0cd",
        "cursor": {
          "ref": "0c1f6cba-fab3-4f6f-b189-da394a31876a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2a4f488-4320-4a41-9203-91fbc0fea39a"
        },
        "item": {
          "id": "42a6a503-11f7-4d14-a95f-e6d8d659c0cd",
          "name": "identifiers"
        },
        "response": {
          "id": "99955b27-4e6f-49ea-9e2f-0b78267115c8",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563cabe6-86cc-4037-82ab-8d054a2ef9fe",
        "cursor": {
          "ref": "fc3d428e-4b29-44dd-9910-a2230e01ba24",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4d90e2d8-3dc0-48e5-b9c7-a4cf4866f0a0"
        },
        "item": {
          "id": "563cabe6-86cc-4037-82ab-8d054a2ef9fe",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "37812cbe-0d09-482d-bf41-cec602b304e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d90b87f-215a-47bc-96b4-4923ba05a2ec",
        "cursor": {
          "ref": "fbb74398-aec7-4952-af0f-d712100d6148",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f7988f00-0ecb-4645-b8dc-0627c377c3b5"
        },
        "item": {
          "id": "7d90b87f-215a-47bc-96b4-4923ba05a2ec",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c8339899-c6c9-4f2a-8c2e-15838a28629d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605023e3-68b3-4783-a1a2-f33bf4e03ee6",
        "cursor": {
          "ref": "5832e4e6-a8a5-4266-bf95-7702a4a4ca05",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7981906a-6cb1-43b6-a44b-5c1509bb0327"
        },
        "item": {
          "id": "605023e3-68b3-4783-a1a2-f33bf4e03ee6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a990ffaf-47b3-40af-92b4-7ee6c1559fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c10ed8e-24ae-4dde-949a-8a56449b5a00",
        "cursor": {
          "ref": "06ab4baf-5865-480d-b8da-85e869ff9074",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "46d7de5d-0a72-4001-82ad-f90034e54c83"
        },
        "item": {
          "id": "2c10ed8e-24ae-4dde-949a-8a56449b5a00",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ed966d00-dcbd-42ce-ad3c-e087f3e70a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21971511-f8b9-4fb5-bf1c-c6d155f6dc92",
        "cursor": {
          "ref": "7cee1982-9b19-47d8-9a8e-b32311c10ad6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a671d678-ddb8-434a-972c-6242041702e9"
        },
        "item": {
          "id": "21971511-f8b9-4fb5-bf1c-c6d155f6dc92",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89b14a0e-0c3a-49d3-bacf-59016d6e9ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b24f210-8cfe-4c57-bef1-e952532685c5",
        "cursor": {
          "ref": "d1815d6d-3542-41bb-a4fa-4ff7113c972b",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b20894bc-7b36-4d21-8ee4-d02e0a88bd92"
        },
        "item": {
          "id": "0b24f210-8cfe-4c57-bef1-e952532685c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d260d240-4c50-475d-bd50-3bece026c535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c55948-cbd2-4d25-ab93-872d03c6b762",
        "cursor": {
          "ref": "1f77d629-f103-4a3a-85b5-4257a545ccb6",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e66ecfc6-98f4-44b9-9d1a-19abad9547c3"
        },
        "item": {
          "id": "e8c55948-cbd2-4d25-ab93-872d03c6b762",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fc383c87-22bf-4b80-a9fe-b1ff04de2bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580e592-9b21-46aa-baa9-c3a1dfa898fd",
        "cursor": {
          "ref": "e4384409-8237-4e76-8648-0338c5901562",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4797c721-a38b-47b6-b873-6133fc2fa121"
        },
        "item": {
          "id": "6580e592-9b21-46aa-baa9-c3a1dfa898fd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "622699fd-4f9f-433f-94f9-d1a226ea5c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef305abf-a23b-4f6a-b9f4-fb4506e4bcbe",
        "cursor": {
          "ref": "39a120e3-54dc-44e7-b3e0-a9ad607a1946",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5a08e45c-29b3-44fe-a7c7-b75706835a0b"
        },
        "item": {
          "id": "ef305abf-a23b-4f6a-b9f4-fb4506e4bcbe",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b2dee7ef-462f-4feb-ac11-fbb0ab12e85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4166a035-0c79-4b11-903a-a3f1c083859e",
        "cursor": {
          "ref": "c03ce8b4-63cb-40ee-afed-ea41fff32f9a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8bfce834-8a76-4d69-b8f5-690cf93b8ae2"
        },
        "item": {
          "id": "4166a035-0c79-4b11-903a-a3f1c083859e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5147589d-242c-4d36-a248-55a2dfbfd5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ab0272-1099-4e55-b25a-c78447321955",
        "cursor": {
          "ref": "5beb0fb1-4196-41f8-a6c6-a37df65117c9",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ab91f2de-d813-44a0-8cd9-14eb5e135cbf"
        },
        "item": {
          "id": "54ab0272-1099-4e55-b25a-c78447321955",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b93780ad-0215-493e-bd22-dba2a3576da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4c39b6-f1f6-47a9-8216-6fef12736f26",
        "cursor": {
          "ref": "1cd4173a-6e9c-4e0a-a8b4-778a35ff8e06",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "774fa1fc-640c-42ca-8baa-7a46629c328e"
        },
        "item": {
          "id": "6a4c39b6-f1f6-47a9-8216-6fef12736f26",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "34aae61a-34e3-424a-949c-c1f768270691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ab2c25-8398-4b92-ac8e-19bfbb0c27d8",
        "cursor": {
          "ref": "5dbde907-2ced-49fc-bb8d-f3d80e0005a2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5aa80fc5-de45-4cbd-9d67-758661359203"
        },
        "item": {
          "id": "e3ab2c25-8398-4b92-ac8e-19bfbb0c27d8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c6402468-ac66-4718-9ff6-4c8f691db2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a426f8-7ebf-4ad9-8afd-d7b3a3336248",
        "cursor": {
          "ref": "822e0542-6eea-494e-aeb6-d9335c33a902",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dbd549a0-9d4c-4181-a176-c0a5a2455da8"
        },
        "item": {
          "id": "00a426f8-7ebf-4ad9-8afd-d7b3a3336248",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "44e27848-efb8-4f36-b246-4459341e6705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34a5cdf-7c2e-44e0-93c9-40fb533ce7e5",
        "cursor": {
          "ref": "49003ea7-9b26-4394-9a86-66ed4f42b462",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ebe35b3f-79bb-42f0-9a56-d8d02ac62a6e"
        },
        "item": {
          "id": "b34a5cdf-7c2e-44e0-93c9-40fb533ce7e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "89c0f5dc-2607-4289-b6cd-f1a6ba5e9c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5efa3b-6be9-41a4-9ef9-40c1b546d2af",
        "cursor": {
          "ref": "e0fb917e-e463-4d99-b7be-4fd37ed6fdfb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e71e6b0d-cf84-4e6a-abb3-46eba7c3f6b0"
        },
        "item": {
          "id": "eb5efa3b-6be9-41a4-9ef9-40c1b546d2af",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6c6114f5-f6f4-4939-a53e-09e72ca322bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb79c884-4ebb-4d77-988c-4bfb4e091388",
        "cursor": {
          "ref": "138f0e10-a2bc-416a-bd8c-48e648bc30b4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f68eb76-ee9a-4bef-9309-6d5e5c9c29da"
        },
        "item": {
          "id": "fb79c884-4ebb-4d77-988c-4bfb4e091388",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eb271703-01c3-4685-8196-2b1785ee2e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dde7c8e-7280-49d7-877c-3d245e7ce1e1",
        "cursor": {
          "ref": "1871102b-9f1d-428c-9a48-3abf3ccd6e62",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05e93465-becf-4da2-a7cf-e0e29bb4f71b"
        },
        "item": {
          "id": "0dde7c8e-7280-49d7-877c-3d245e7ce1e1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "512f8bbb-da7c-4ffd-94cf-9516d4b6fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0508848d-c250-488e-85ba-b93cf5f52c30",
        "cursor": {
          "ref": "15c0dab2-3ec0-4cc4-89bd-0a185eec9e66",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "37d8453c-21d9-49cc-9456-29cff1f94c0c"
        },
        "item": {
          "id": "0508848d-c250-488e-85ba-b93cf5f52c30",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd0ef0c4-903f-4bf4-b8a5-bdb75470a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c2c6ea-ec51-48a1-b047-46ede8fd367e",
        "cursor": {
          "ref": "8563cf77-6da4-4c9e-88e3-8a4ba889d675",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8ea3c3d3-f5b1-4848-8eb6-6fa0f04fc37f"
        },
        "item": {
          "id": "89c2c6ea-ec51-48a1-b047-46ede8fd367e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "48527774-ecd0-494c-951c-456f65971322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad48a53-e494-4d8d-a008-162fc803d857",
        "cursor": {
          "ref": "4f079145-939e-4a15-aba8-778cd28408b1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "47648a28-12c8-42d0-b16a-b8668ce6ec9e"
        },
        "item": {
          "id": "aad48a53-e494-4d8d-a008-162fc803d857",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "14651a96-bf67-43c3-9d1e-4fb23c4c9cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ac0c1a-b416-47d5-b1c1-9f4a35aa6932",
        "cursor": {
          "ref": "7dd4fa67-52ef-4ce3-b5f1-e22445d277a1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "32d2bdfa-5125-49ea-ba35-746e0c333eda"
        },
        "item": {
          "id": "96ac0c1a-b416-47d5-b1c1-9f4a35aa6932",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b9420fa8-899a-46b7-9ee0-04fdc06e74fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ab9336-6af7-4c99-84c5-27c6dfc277d9",
        "cursor": {
          "ref": "3fc7cc04-59ca-4da1-9922-950342701662",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "43bc3d1c-0eba-40c0-b7d1-89585688af15"
        },
        "item": {
          "id": "c4ab9336-6af7-4c99-84c5-27c6dfc277d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2d706afe-5665-480d-adc8-17670d30ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c081da-562d-4906-b754-a5618dc8cf1d",
        "cursor": {
          "ref": "75663c1d-bd62-4833-9d42-86960d0987b2",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fcd574db-0aff-4e0c-9ba7-2ee0b211d19d"
        },
        "item": {
          "id": "b0c081da-562d-4906-b754-a5618dc8cf1d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3cf9c9c1-fce9-4cb5-8af8-ae58c0708001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefdd723-af97-4de4-8aa3-dcb8345487c6",
        "cursor": {
          "ref": "31a0bc28-808d-424f-85ab-f76ac1bbb34d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1cec0bdf-f422-43b3-a757-d53ab01ec295"
        },
        "item": {
          "id": "eefdd723-af97-4de4-8aa3-dcb8345487c6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a51e439b-7687-4c19-97e0-305d13b36d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc999fb-594a-4766-9c61-f285c64bddf4",
        "cursor": {
          "ref": "a0789d91-c842-4aa3-ac98-ffdff25edb5f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "00ff969d-72ba-447f-8386-9cde284c535c"
        },
        "item": {
          "id": "efc999fb-594a-4766-9c61-f285c64bddf4",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a8d8e735-83f7-47f6-a317-48759c034463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64750ea7-5ee9-47b5-b94b-3fa9fd935749",
        "cursor": {
          "ref": "8e9f4231-7f50-4bb8-8719-e7c1cbc0094a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "77498b04-10d0-4e4d-9b41-845aa994f8c0"
        },
        "item": {
          "id": "64750ea7-5ee9-47b5-b94b-3fa9fd935749",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e158a5f2-83a8-49f9-a990-5ada05d9e162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3d1562-3e8a-4a45-b42d-f36f1a6ec2f4",
        "cursor": {
          "ref": "196811c2-d2b8-429d-ba69-74beecd2c6c3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "447357bc-5dca-4f84-8c1a-e47d5d234f66"
        },
        "item": {
          "id": "1f3d1562-3e8a-4a45-b42d-f36f1a6ec2f4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ed753213-9daf-4a1f-9ed1-151aa76a8092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a79c127-4daf-48f7-b9f8-57a70859aaef",
        "cursor": {
          "ref": "d2d9ba4e-1b80-43b2-b772-84888695918d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0a9a87a3-cf35-483f-9eaa-d39743fc2f93"
        },
        "item": {
          "id": "8a79c127-4daf-48f7-b9f8-57a70859aaef",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1bb5ebf1-93e8-46ee-9f5a-43cbec3bbe86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b002a28-4b15-434e-8d65-3f5dcae48f28",
        "cursor": {
          "ref": "b8d1e5df-c4dc-412f-b960-d0e7907900e2",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "85fd1d6f-b6d7-4b9c-b8d7-69300a3d962e"
        },
        "item": {
          "id": "3b002a28-4b15-434e-8d65-3f5dcae48f28",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7db24962-43a5-43b4-aca7-c99af26d2efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25e8cf8-ae09-40e3-b64b-cc431e208864",
        "cursor": {
          "ref": "a81dbab6-f894-43a6-943f-b8fbe8580a77",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2a4dd8e5-609a-4007-acca-4f22a4808c73"
        },
        "item": {
          "id": "a25e8cf8-ae09-40e3-b64b-cc431e208864",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dba04b74-fd7a-4b81-a459-5793fc5bf006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d94a63-29fb-4dd1-864c-3c9ffeb2bf2f",
        "cursor": {
          "ref": "6a409943-6fd2-48f9-9706-50ae89173504",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c7dac98f-ee5a-43e9-94bb-77927c39d1f3"
        },
        "item": {
          "id": "06d94a63-29fb-4dd1-864c-3c9ffeb2bf2f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "661a616f-1a39-407f-97bc-af79a4aadff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6f2c5b-c82f-497d-8282-0e888b91feae",
        "cursor": {
          "ref": "f589173b-3a99-4e5c-9ea0-19fb2bc9fe88",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3626423e-f03c-431b-bb86-8e29c763eb78"
        },
        "item": {
          "id": "3b6f2c5b-c82f-497d-8282-0e888b91feae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b756faed-a0c8-443b-b83c-ef68eaf676e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2266f9-4889-4dca-b95a-541e58a09f87",
        "cursor": {
          "ref": "43da1844-f63a-4370-8e28-f8295c0aed35",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "53d501a0-580c-4c99-aa9e-e8cf9d9d2ae2"
        },
        "item": {
          "id": "5c2266f9-4889-4dca-b95a-541e58a09f87",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a60a933b-f10e-4fe4-898b-a95ba913653b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692f3ea4-f723-45a1-a741-b4ff3c8199fd",
        "cursor": {
          "ref": "8daef123-1373-42df-893a-d59020f1bb94",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "83c962f7-142f-4489-b7da-90efddc28c10"
        },
        "item": {
          "id": "692f3ea4-f723-45a1-a741-b4ff3c8199fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "62d9edd0-62ea-419a-94ae-790fbe8191ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1738ae-c766-4baa-9320-a0c4488587f3",
        "cursor": {
          "ref": "faf388f5-1557-47f6-81b9-71860822f754",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b0e15a01-8e5e-4aee-8405-8a020e8f2469"
        },
        "item": {
          "id": "3c1738ae-c766-4baa-9320-a0c4488587f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f1309149-6ab0-42a2-821d-366f514d3f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d077ca-11f6-4816-aae4-7453b0d003df",
        "cursor": {
          "ref": "cf512916-3962-4a22-855b-9779468b57aa",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7fcbd3f8-0c3e-40e2-bef1-8a1382427e74"
        },
        "item": {
          "id": "f4d077ca-11f6-4816-aae4-7453b0d003df",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b11bf3ab-cdad-4bfd-a436-0940540de8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37c34eb-c8ba-4b99-bd91-08eac8e92137",
        "cursor": {
          "ref": "464eaa6d-9d04-46bd-a252-6c1f80c3429d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c850161-65ec-4217-8389-c550eb8bcd42"
        },
        "item": {
          "id": "a37c34eb-c8ba-4b99-bd91-08eac8e92137",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4e1fae0b-9e9f-4aa8-8a30-7b1477965b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb85c6d1-019b-473f-ae36-3d0348e9bb86",
        "cursor": {
          "ref": "2fed3d31-9ae2-499e-9e60-ffcc7f284736",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2aaa8475-34c3-4588-a347-9e5e38c78d28"
        },
        "item": {
          "id": "bb85c6d1-019b-473f-ae36-3d0348e9bb86",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "92ab1930-ec02-43c0-b4ca-7f0ac0abc920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5675929-a0ff-49d2-b0ff-f6fa074c1506",
        "cursor": {
          "ref": "73b49a2b-7d0b-4066-9aab-2b95cec14068",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4012ca0e-c119-442f-b351-f3ecf19ed3cb"
        },
        "item": {
          "id": "a5675929-a0ff-49d2-b0ff-f6fa074c1506",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e3928525-bce7-4278-b673-cc770b0cee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c53356-4427-4a41-93ac-c55dd7922ec9",
        "cursor": {
          "ref": "066d9da0-cebf-49d6-9720-742286d4351a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a31b12dc-ba9e-4baa-9f22-ad0522ee79cb"
        },
        "item": {
          "id": "d3c53356-4427-4a41-93ac-c55dd7922ec9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88831c91-6c2a-4ce4-9f40-59d52eb78901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350f335a-7d86-4e0d-8c78-360c42c137f4",
        "cursor": {
          "ref": "79541520-eab5-4117-8c3a-3cdbab1460e5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "422966bd-0423-4950-8f7a-e6d2dfeaaf71"
        },
        "item": {
          "id": "350f335a-7d86-4e0d-8c78-360c42c137f4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "74315131-0c76-4afc-83af-5a3b49d4fb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441089b-b5bd-4ae3-bccb-a0679107fa36",
        "cursor": {
          "ref": "1c9f4f77-45a2-46b1-a30e-4550abe4c515",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7d1706ba-db52-4e1b-b4c9-c4e5b9187960"
        },
        "item": {
          "id": "c441089b-b5bd-4ae3-bccb-a0679107fa36",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "86b10502-1e2a-4ac0-8dad-1007f0526c8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469601c2-a954-4549-ab3f-6f13a819820b",
        "cursor": {
          "ref": "705e93ad-a598-425c-9229-11b5736eb9e2",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d33b928e-175d-4733-8717-ba53474b709f"
        },
        "item": {
          "id": "469601c2-a954-4549-ab3f-6f13a819820b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8930593-0633-4e27-bcf7-1f764b1cfa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73408f6-43d8-466a-8554-2b2ffb52fbdd",
        "cursor": {
          "ref": "e083bec8-c732-4f8f-95e6-bb3e78afee97",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "84e31b74-89b8-469b-84a4-099a672fef26"
        },
        "item": {
          "id": "e73408f6-43d8-466a-8554-2b2ffb52fbdd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9afbbdf4-a1fc-4d78-bac8-97fc029606a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6943e084-863d-4509-974f-c5288f01c1b8",
        "cursor": {
          "ref": "3a87d8ea-8986-49ef-87b4-d0126125407b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5714e97d-80d9-41de-8c99-74b821348cda"
        },
        "item": {
          "id": "6943e084-863d-4509-974f-c5288f01c1b8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ae0c3fdc-4e27-445c-9f75-531ba71cf8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d19c3e-fde8-47d3-9825-ece214dd14df",
        "cursor": {
          "ref": "c7b12bd8-80d4-4a0c-95c0-8131f0abe28d",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f291a843-0bcd-4cc7-b066-21e63750e8f4"
        },
        "item": {
          "id": "05d19c3e-fde8-47d3-9825-ece214dd14df",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "72029aea-0b76-4425-b0cf-bde367355089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bd5fe6-4622-4d7f-b432-52c45afdc087",
        "cursor": {
          "ref": "a3c3661f-dd0b-47d4-9c26-fb8e2df9d0c2",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "afff210f-7920-445a-aef5-59822e5c9810"
        },
        "item": {
          "id": "70bd5fe6-4622-4d7f-b432-52c45afdc087",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "55efd8c5-c472-4d1a-9bda-53133ac1ded7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdce09d-d29f-47fe-8ec4-9a683ddc463a",
        "cursor": {
          "ref": "1ff02073-fd1c-4a4a-bd59-d69eedf5ac78",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "169f5168-9672-4ba7-a821-9ed4f6ecaa30"
        },
        "item": {
          "id": "0cdce09d-d29f-47fe-8ec4-9a683ddc463a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "54916770-bafd-4651-a515-01230dc051ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c1774-bfca-4b4f-adec-08e334b0fd9e",
        "cursor": {
          "ref": "76554df4-d6e7-445b-8c9c-519323313ee3",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de2eb1a0-655d-4d0b-816a-3a7506ea1539"
        },
        "item": {
          "id": "874c1774-bfca-4b4f-adec-08e334b0fd9e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b71eefa2-1fa9-4575-a26d-9bfb023477a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a760a924-9320-49a0-ac1d-0670f924e142",
        "cursor": {
          "ref": "44acfb86-04ae-4bc9-8ed3-6ef0902df6b0",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "80bf5ace-0388-4cbf-a381-36c8d79dc084"
        },
        "item": {
          "id": "a760a924-9320-49a0-ac1d-0670f924e142",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9d201639-c685-4fd6-b2d5-b67ef673af1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb7528-da9c-4855-8e5e-d328bca8d989",
        "cursor": {
          "ref": "1fb66f6a-a1d1-44f3-963b-4b23fefdfbec",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2ac4a7e5-653a-4b2f-a293-7b4647485aab"
        },
        "item": {
          "id": "4ecb7528-da9c-4855-8e5e-d328bca8d989",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b6b841bf-4025-4955-a0ca-19a1966307fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db64d86b-d26b-4073-b217-ecb947e456a6",
        "cursor": {
          "ref": "72aec1bc-6138-44d3-bcd8-cb8f66b83a30",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c544f5a8-9aab-4efe-a843-ec23dc7d5d1c"
        },
        "item": {
          "id": "db64d86b-d26b-4073-b217-ecb947e456a6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fc3858b7-baf2-400a-bd1c-ed4c7697bdeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0b2145-71ee-48f4-9174-dca64c007850",
        "cursor": {
          "ref": "8f1e0846-f55a-43be-b5c9-5cd34f9b9edd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a40ba036-c1e3-4f79-ae1a-8820475c379d"
        },
        "item": {
          "id": "7b0b2145-71ee-48f4-9174-dca64c007850",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "36b8c2b3-c136-4b0c-906b-1f92ec5157f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c408c5b-6f30-41e7-8113-02f7006b8a54",
        "cursor": {
          "ref": "b85a9f72-35ad-49d1-9aab-3bfb61d89f54",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c5ded87b-257f-47a8-8fd9-1c1d22b7aab3"
        },
        "item": {
          "id": "1c408c5b-6f30-41e7-8113-02f7006b8a54",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87fdece4-686f-4673-baef-9efb2858974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b171347b-30da-42a8-a191-1f6e4d97cf6c",
        "cursor": {
          "ref": "65671512-bbb5-4d09-aabe-5562fa06a24e",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3794e255-ce01-4e1b-8238-494e7cf43d40"
        },
        "item": {
          "id": "b171347b-30da-42a8-a191-1f6e4d97cf6c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84a71209-3351-4e34-8254-a0d61d94e237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46e12bd-b7e7-474a-838c-26d487c4f215",
        "cursor": {
          "ref": "82109edb-3ed4-4cd2-97d4-8a866453c474",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "69823d6c-d8b2-443f-ad32-2a77a3a2ba18"
        },
        "item": {
          "id": "a46e12bd-b7e7-474a-838c-26d487c4f215",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55630df1-5f8f-4adf-ae38-c7bfc919b758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538dd2d-48fa-400e-82d5-88a457ffc7bc",
        "cursor": {
          "ref": "15cd71e9-84d1-4210-a9b2-aee4e9e6d5b8",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2a1f16c7-b190-4523-a985-2326cec4aeec"
        },
        "item": {
          "id": "4538dd2d-48fa-400e-82d5-88a457ffc7bc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7c924dc7-80ae-44c1-abe8-6bc71a3a004c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec14d09-0ac7-4f4c-bf21-55305cee3697",
        "cursor": {
          "ref": "514ba14d-0563-484a-bda6-be59b7a61bcb",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd14d670-be31-4954-96f2-edfa7e4f62e9"
        },
        "item": {
          "id": "cec14d09-0ac7-4f4c-bf21-55305cee3697",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "da428f9c-9e4d-4443-9574-023987a07d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec2a55-6582-44b3-81d6-3e815d122dc1",
        "cursor": {
          "ref": "ddf3834b-21f8-4c25-b01c-d609d2624f16",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f6f4942c-67e3-4946-b8e3-f2bd0fe93c00"
        },
        "item": {
          "id": "acec2a55-6582-44b3-81d6-3e815d122dc1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "57a0b9d6-e7bc-4bdd-bd4a-d6c865c41b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dc18ea-0161-4294-9e05-8a976395e2cf",
        "cursor": {
          "ref": "ddbe0086-f145-4c12-8f19-62679b75b348",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "55ea0af0-a174-4319-aa29-95f1a6e21d64"
        },
        "item": {
          "id": "95dc18ea-0161-4294-9e05-8a976395e2cf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9a09333b-7412-4490-9bb2-73fe5f0e3120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0632e2-26a3-42d4-9352-48c7315eebf3",
        "cursor": {
          "ref": "76f4e7f0-2e6a-4fa4-9358-2ad2358960c7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9dc4e0d3-252e-4fc4-8b1b-621715195977"
        },
        "item": {
          "id": "1f0632e2-26a3-42d4-9352-48c7315eebf3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d032e0cb-7d23-415c-8df5-33bb0ca3dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92babfa1-54bd-45ed-96ce-822bbffff4d5",
        "cursor": {
          "ref": "7a91c0c7-4e84-4cf3-a24c-000ff83f063b",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "952b8085-ad13-4aae-9cd6-8f0fcc328820"
        },
        "item": {
          "id": "92babfa1-54bd-45ed-96ce-822bbffff4d5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "48a83c58-175a-4381-9600-766a774edc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c719b68-ce4b-468f-b245-66da06d00984",
        "cursor": {
          "ref": "46a4e110-4ce9-46e1-bd63-e9df38a1372a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d02cd993-a0f8-4df6-8e80-aee151b98041"
        },
        "item": {
          "id": "8c719b68-ce4b-468f-b245-66da06d00984",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9b765b5e-17c4-4098-bb43-7339c68a7df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa1f5ef-a102-402b-b69a-8a5f2d16e90b",
        "cursor": {
          "ref": "d8537505-1539-4f3b-aa7c-a9f582ef0d20",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d17d9c3-80ab-4ee3-afa7-d0064bec3537"
        },
        "item": {
          "id": "1fa1f5ef-a102-402b-b69a-8a5f2d16e90b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8d26d9dd-7897-43d5-8d23-ea4631514c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f76d333-adfc-4a8a-9ffd-e462c9b84ac8",
        "cursor": {
          "ref": "a2891e73-cfec-4b67-94bc-cd64ef1bbb34",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "9bfbdb38-c058-484d-83c3-e8ac6af186e7"
        },
        "item": {
          "id": "3f76d333-adfc-4a8a-9ffd-e462c9b84ac8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "22f28ffb-c3ac-4ffc-8181-255ae5ddfdf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efaa0216-c84f-4af2-a7af-a7e5e3747a28",
        "cursor": {
          "ref": "0b74eb37-6f03-4e22-896f-66a258769e73",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1bda209c-3b9a-47bf-828d-04ffeafe3021"
        },
        "item": {
          "id": "efaa0216-c84f-4af2-a7af-a7e5e3747a28",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4390c1a-d0c7-4ef0-a8a6-9d0332c795b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d3d707-d36e-4e9e-a4d8-6ca1e76db77f",
        "cursor": {
          "ref": "3bd7a020-0459-45a6-8718-c66e38490eb1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "05ff6cdb-7cdd-4c87-892b-2a461b1bc87d"
        },
        "item": {
          "id": "19d3d707-d36e-4e9e-a4d8-6ca1e76db77f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7544a6c4-0513-44fe-bb25-5be37c9425bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6007d92f-86fb-48a4-b8dc-d65da0908988",
        "cursor": {
          "ref": "3389b138-51ee-44dc-81e1-79e44a661204",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3afc6213-34b2-4c07-91c6-25d4cd62b90a"
        },
        "item": {
          "id": "6007d92f-86fb-48a4-b8dc-d65da0908988",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6fbb1b21-51cd-4e38-889c-6506dcc9ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ed6c13-8003-42e0-959e-d4e14382c997",
        "cursor": {
          "ref": "6ffac5e5-20f0-4b44-aec3-f4843e4768df",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "2af18c03-f46b-4b93-b1a5-5c894f7a2aac"
        },
        "item": {
          "id": "89ed6c13-8003-42e0-959e-d4e14382c997",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "612a8eb9-87e5-4ad8-b993-d47c73ccf551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf194110-6334-4cfd-b8c9-2e2f73b7735a",
        "cursor": {
          "ref": "4d39776c-2a4e-477f-b137-fead7862a081",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1f464508-f6d9-4dea-8348-d4b2d4b2dc77"
        },
        "item": {
          "id": "bf194110-6334-4cfd-b8c9-2e2f73b7735a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "706d0504-a009-4ed2-b25b-e3d897484b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86817090-1751-4dff-bd7a-1c0110e2deb1",
        "cursor": {
          "ref": "d85463de-03d1-4714-88a0-be73db4d930f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "85ed3bd8-1b3b-41fb-926a-15a906e792b1"
        },
        "item": {
          "id": "86817090-1751-4dff-bd7a-1c0110e2deb1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4dd23e42-d0ae-4259-9987-bea018826db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d4213a-6edc-4db4-a714-c904a928ec30",
        "cursor": {
          "ref": "d8ea7470-8d68-44e0-805e-57dbca010b68",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ce60915a-09a8-450e-a01f-3e43793f20ce"
        },
        "item": {
          "id": "d9d4213a-6edc-4db4-a714-c904a928ec30",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "18b4a86c-49ea-4fd6-adf1-d870fe3ca6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0a1355-c11b-4795-8089-9e16cd7d9c04",
        "cursor": {
          "ref": "413927bd-fc3a-4c8c-b231-5851b25a8742",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "45140666-ebee-43ee-80b3-a9a5850bfb03"
        },
        "item": {
          "id": "be0a1355-c11b-4795-8089-9e16cd7d9c04",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4ef3632f-d65e-4ef4-854c-47163d32334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cff690-3347-4493-bb42-54f1178d99d1",
        "cursor": {
          "ref": "eb8af9ab-c518-4aa7-b75c-d9a6e5d5d09e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dc2af59a-e583-45ce-8a63-70c05f937964"
        },
        "item": {
          "id": "23cff690-3347-4493-bb42-54f1178d99d1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1e1a517c-24ff-493e-b1e7-1fd935680808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555805d7-28fa-4e23-b238-93d93e324096",
        "cursor": {
          "ref": "81c070b4-c80d-4021-9c99-2b68cb061724",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c8af9f13-8bcf-498f-961a-647b45051745"
        },
        "item": {
          "id": "555805d7-28fa-4e23-b238-93d93e324096",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e08ba5f1-9d2b-4780-a319-6dd81c7188cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8d3ff3-9f7f-469a-b368-01c173b16bdc",
        "cursor": {
          "ref": "6f1c05d3-01a0-436f-b718-51c142e356ae",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "bcaab626-a017-4fec-92f2-b5e6d922b0f0"
        },
        "item": {
          "id": "3c8d3ff3-9f7f-469a-b368-01c173b16bdc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "60599a11-44a8-49e0-9989-61f0bbe378fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c52c7f-41f7-47d2-b941-16600459d6fb",
        "cursor": {
          "ref": "6db7e747-e555-4ecb-8eaa-60c162720724",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b9adf6d7-d378-46d6-aefc-14ceb70ac311"
        },
        "item": {
          "id": "f3c52c7f-41f7-47d2-b941-16600459d6fb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "63d86861-684f-4a01-97ae-406f088582e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcafccc3-e894-4a09-9106-2abc26a2de33",
        "cursor": {
          "ref": "7bca93ec-abe9-40a0-865a-fbd1dbc713d5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "81b4355c-fa66-4c19-b309-6cd08ad0ff0c"
        },
        "item": {
          "id": "bcafccc3-e894-4a09-9106-2abc26a2de33",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "83c8c28d-8a0c-4501-b5c3-a0d7c3d01305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d046ea-4e34-4d31-81d0-2572976b9174",
        "cursor": {
          "ref": "74110379-e1c4-46ec-aa62-e08e073c4f02",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77b01b8d-ef07-4463-b939-229ddc7b7385"
        },
        "item": {
          "id": "69d046ea-4e34-4d31-81d0-2572976b9174",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "eb699e98-f461-4e87-a9a3-849684cdae8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3bed87-1914-4f7b-8bd7-124cf0474a0d",
        "cursor": {
          "ref": "52b17a9b-9915-4b55-ad55-53dfc96d3fd4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "549b0fb6-d9a4-42c1-b596-8c01216261da"
        },
        "item": {
          "id": "fe3bed87-1914-4f7b-8bd7-124cf0474a0d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "075f63b0-0173-45e7-b3d6-4ec02331e12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d3bd27-5503-48e4-881b-432f66330e28",
        "cursor": {
          "ref": "b9ac04e3-0d78-42d4-a052-8bd61c7aa5d7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8ed30bca-3eb6-4df3-bea2-e1e1a7946739"
        },
        "item": {
          "id": "59d3bd27-5503-48e4-881b-432f66330e28",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b8004c27-e2bc-43fd-ae40-bd4ae46c358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a3e177-aa09-4208-8156-50c760c97237",
        "cursor": {
          "ref": "cac3b271-8241-4bbb-91dc-fea014662fcd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9e81288b-059c-439a-b198-5452b314e47d"
        },
        "item": {
          "id": "67a3e177-aa09-4208-8156-50c760c97237",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d675e894-3f85-4e09-b245-fde99202f132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b2b3eb-9cb3-4e70-a4ac-a92e9925aaf5",
        "cursor": {
          "ref": "e92c42e7-c705-46a1-bfa0-2d6a7ad71152",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3772fe08-f95f-4797-adb8-2b0535f2768f"
        },
        "item": {
          "id": "d1b2b3eb-9cb3-4e70-a4ac-a92e9925aaf5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8a768a5a-a5af-4dca-99f5-4fe6a9323e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae3737c-9c25-4f5c-961e-e465c367387b",
        "cursor": {
          "ref": "dad7ad55-98fc-42a4-948f-6be46507ac60",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f44b565f-6475-4d7c-a418-931561a8af2d"
        },
        "item": {
          "id": "eae3737c-9c25-4f5c-961e-e465c367387b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ca590ad4-a5b5-444a-93be-a00046c55e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e7e0b9-e8be-49e3-842d-9a7285b78996",
        "cursor": {
          "ref": "1bb14606-379e-4e5b-9b47-de707d978920",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "468e21ac-399c-4707-ae82-f524e0335bc1"
        },
        "item": {
          "id": "c1e7e0b9-e8be-49e3-842d-9a7285b78996",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "03ef251d-9609-429a-adaf-8d6e202d59fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd1e186-4ba5-49df-a901-acd15c00a1ac",
        "cursor": {
          "ref": "49373409-af7d-4d6e-8087-75e52b1e5208",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "075dbb15-cb49-41a2-a556-09d6b8f56275"
        },
        "item": {
          "id": "6dd1e186-4ba5-49df-a901-acd15c00a1ac",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6eb98e56-4156-4014-9b30-7f4ea9acfe5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32ef3af-7f96-4e2d-bdc7-fcb11dbfccff",
        "cursor": {
          "ref": "da3cced2-0465-45ee-9b3d-0eb8bc2e042a",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d662bb71-f62b-47a9-b79f-824fcb1dc8f0"
        },
        "item": {
          "id": "e32ef3af-7f96-4e2d-bdc7-fcb11dbfccff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d2ce72bd-4d72-41a9-8a6e-ec0fe262f32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6cfa5a-7b51-4315-b1f0-ee24c0a4434f",
        "cursor": {
          "ref": "e892705c-cf43-4dce-8aca-c8f5b5015fd1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e7d08c7b-8e5a-4795-8d60-e1fa1aecef83"
        },
        "item": {
          "id": "4b6cfa5a-7b51-4315-b1f0-ee24c0a4434f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c5248357-fa53-4eb7-b511-2efe3f2c6b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7be3355-9df2-4dca-9d5b-410dedf6e068",
        "cursor": {
          "ref": "be271439-f01e-4ab3-88f0-d2108dfcdbda",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9c4cd87b-eb92-47d1-acea-82158b3e3340"
        },
        "item": {
          "id": "f7be3355-9df2-4dca-9d5b-410dedf6e068",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4dbfbe1c-1363-4a8f-8f0c-7b88f8b2fb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a50d934-5490-4bb8-972b-951a9714c4dc",
        "cursor": {
          "ref": "def04c42-deef-465a-93ef-402a37d93fe5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11a3065a-e200-40ba-98ec-9545516d7615"
        },
        "item": {
          "id": "2a50d934-5490-4bb8-972b-951a9714c4dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3b67c593-86b2-4321-91c1-c8967219df98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb564073-9d2c-4ae5-b877-63234cde63ef",
        "cursor": {
          "ref": "79c0aa49-79dc-43fd-98dd-78e210379914",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6fa4637c-a79c-49db-a0ab-48e9c020e2b2"
        },
        "item": {
          "id": "eb564073-9d2c-4ae5-b877-63234cde63ef",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "42e9639d-b1fc-4b1d-abf0-e37b689b4166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c55b47-37ce-42ab-bc2e-220ff877c52b",
        "cursor": {
          "ref": "7471e1b7-df8a-40a3-9893-282e2c1119b7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "13692c9a-7cfc-4563-aab3-56e5219e0fd9"
        },
        "item": {
          "id": "31c55b47-37ce-42ab-bc2e-220ff877c52b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a63156e8-9946-48d0-b033-1cfe5945cc2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a4a698-48b0-4962-b96a-20b8e45c70d7",
        "cursor": {
          "ref": "a15e3d3f-cc1e-4b8c-926e-7a8176438b33",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bd20d8c9-d1f3-462f-b58c-8741e1b08e86"
        },
        "item": {
          "id": "57a4a698-48b0-4962-b96a-20b8e45c70d7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "96f30aa5-dac7-4c9c-aa89-a8f0be521d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b6fbb5af-4d31-46e2-9016-1c6149cdba1a",
        "cursor": {
          "ref": "c49b8e81-1639-446d-b401-72c8b5dd62a9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "89aea487-421c-46b7-94c3-9821a7cf29a3"
        },
        "item": {
          "id": "b6fbb5af-4d31-46e2-9016-1c6149cdba1a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "3d745bbf-b1eb-4476-9e1a-293f1a3a1621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "22be1507-cbc8-421e-ba8a-d9dbf3246ec3",
        "cursor": {
          "ref": "33cb2aee-94f7-4dcd-9228-8dd46bd348dd",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "278ceb02-5596-4ae2-8861-f60d0ea1bd3d"
        },
        "item": {
          "id": "22be1507-cbc8-421e-ba8a-d9dbf3246ec3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d280a268-3750-4eb6-90ab-9d7d109f2808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "5804945a-e137-45a3-9b52-92bf0092f60b",
        "cursor": {
          "ref": "a8759c74-9f93-4478-b26a-053e16635fb5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d5f30fa2-1078-41bc-9474-973ede667709"
        },
        "item": {
          "id": "5804945a-e137-45a3-9b52-92bf0092f60b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b3a1a957-921d-48e6-83db-09f59b158355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ea023ba7-d969-4967-b15f-be72d93da898",
        "cursor": {
          "ref": "223c4106-988c-43c3-9116-31fcd6ba28af",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8f970921-fff2-4657-a6ff-5c0fc2209247"
        },
        "item": {
          "id": "ea023ba7-d969-4967-b15f-be72d93da898",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "a6269058-0b44-4a2d-8635-4d88d898809e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "dd57c251-6a28-43dc-bdd3-c56d38b6444f",
        "cursor": {
          "ref": "9c1d97a4-4cab-4048-a726-1f4bd8833b7c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4c247c5b-baa7-4d8b-9e9b-29bd3bed17ac"
        },
        "item": {
          "id": "dd57c251-6a28-43dc-bdd3-c56d38b6444f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6da9db33-ecf5-4708-b684-25c593ca7919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d77eebd3-5cd9-443d-910e-45589cb39e3f",
        "cursor": {
          "ref": "a69e5afd-0f0e-4843-9f07-e2140531ca09",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dacd43da-e46a-4870-b3e1-11665823f8eb"
        },
        "item": {
          "id": "d77eebd3-5cd9-443d-910e-45589cb39e3f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f2dee506-a208-4275-94ef-4b051b8b0426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7bccc8e7-8ef0-4d50-bfc6-9c91022776be",
        "cursor": {
          "ref": "153aa084-3af0-4028-a719-8c6a2295a239",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4718089c-1f8f-42e9-8b22-f98e37ee0746"
        },
        "item": {
          "id": "7bccc8e7-8ef0-4d50-bfc6-9c91022776be",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "82f5fa14-8458-48ed-80e7-3675f78f3ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbf4979-4c9d-4e08-afa9-036ea2986fd4",
        "cursor": {
          "ref": "b331d893-2311-42be-9466-39357023e0c0",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "fb661203-46e9-40a6-9706-28bee4b9817c"
        },
        "item": {
          "id": "6dbf4979-4c9d-4e08-afa9-036ea2986fd4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "afad61a4-3bf1-42cd-aaeb-274ff5b09889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8273af-49f5-4c93-b90f-77f0b764a4fc",
        "cursor": {
          "ref": "31c0c788-f51a-4c34-8961-08cd663b2022",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "369e29cc-5975-472a-990c-419f07631e9d"
        },
        "item": {
          "id": "dc8273af-49f5-4c93-b90f-77f0b764a4fc",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c42eeacd-6b35-4b5f-b9e7-05f6a65d3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba510bd-f4bf-462b-81e5-d835d1699f48",
        "cursor": {
          "ref": "b757b201-adaa-41f8-875e-6f80976cf5b3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6006025f-6876-429d-a23b-fbff68bcf4b7"
        },
        "item": {
          "id": "eba510bd-f4bf-462b-81e5-d835d1699f48",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a23bfd21-108d-451d-a2ed-eb9f00c1b9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a26e2b-fc2e-4f88-afa7-a743bdd414e6",
        "cursor": {
          "ref": "b64ef91a-8307-4b61-a451-60b43bb6ca0c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "daf6dce8-545e-4b19-bea1-055c8f92c353"
        },
        "item": {
          "id": "45a26e2b-fc2e-4f88-afa7-a743bdd414e6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "00c15cee-3d8f-4e10-a30e-df5aa3ca74f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7087c3-77ff-4a00-b338-485c02bd11dd",
        "cursor": {
          "ref": "637076f6-0f4c-4b63-8a2a-098f479ed5c0",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c0a47ff9-41eb-4421-ae5b-4d3d2a2b9e58"
        },
        "item": {
          "id": "6c7087c3-77ff-4a00-b338-485c02bd11dd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8f21789f-b9cd-4b15-ba76-0ec53e5c310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a513ba-8b40-46ba-8918-fa07e63bc53d",
        "cursor": {
          "ref": "e3bcd429-18cd-4142-9356-dcee3159f261",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "15d7e4fc-c794-45ba-a538-1a6e959edb25"
        },
        "item": {
          "id": "53a513ba-8b40-46ba-8918-fa07e63bc53d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7203d4aa-e442-4c39-8052-e15e379b95f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1142bad3-cd26-42a1-bd3a-968564c316c0",
        "cursor": {
          "ref": "ed269fd0-bb61-4e61-b0f3-a734501e4af4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "decd8d9c-9d7f-435b-a365-b7bd8f8ea94b"
        },
        "item": {
          "id": "1142bad3-cd26-42a1-bd3a-968564c316c0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "517cf2b4-487c-4ce0-af40-f6143c04bd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6366296-b5fd-46d6-9b1a-d137a1a62d81",
        "cursor": {
          "ref": "80646dff-bd6f-4c35-a9d4-cdbbaf1ee8d2",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2370e63c-5136-44bb-af5c-97a5e5bdceae"
        },
        "item": {
          "id": "c6366296-b5fd-46d6-9b1a-d137a1a62d81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "267b9bfc-6e07-4545-b120-43c125e63500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecf8658-f96e-4f02-8a5d-000663e544e9",
        "cursor": {
          "ref": "905838d0-782b-421e-8a97-40ab0842f4a3",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "114f5074-1ef0-4f19-a1ad-baf2c0a425e3"
        },
        "item": {
          "id": "3ecf8658-f96e-4f02-8a5d-000663e544e9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46a8a2c6-dbf2-4ae4-88d6-2ac4aade8a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f9c13a-2aa9-40e0-942a-8162bbf97bb1",
        "cursor": {
          "ref": "c5666761-9280-4ad8-815a-e1f78255f282",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ccfad869-b059-4ac9-baad-c70298c01700"
        },
        "item": {
          "id": "69f9c13a-2aa9-40e0-942a-8162bbf97bb1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "330f720e-9770-4904-b9d1-9cd0ea9810a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d4c2b5-380d-4eb7-b0d6-46978918b6b2",
        "cursor": {
          "ref": "2e6642ae-f543-41a1-9879-9c226719d0a6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6abb11c4-4a4a-4a76-b5eb-6152fe43aa7d"
        },
        "item": {
          "id": "a9d4c2b5-380d-4eb7-b0d6-46978918b6b2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "101dce5c-e2ec-442a-9ab9-2dcf188e0939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6623d9f-1840-4944-87f8-75a65799dcdc",
        "cursor": {
          "ref": "3e5eeb24-7765-4065-b93f-81d27a21e352",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9b298765-176c-4f1a-9c14-b4010842edbe"
        },
        "item": {
          "id": "b6623d9f-1840-4944-87f8-75a65799dcdc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "25ac7d97-1313-4356-b3c4-d2bb9967dcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db534d6e-e886-4fd1-a591-f54e9e560a99",
        "cursor": {
          "ref": "4c6c4b30-88ec-45dc-9e44-4e8de0e511af",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "16166181-5fca-4388-98e6-45aa21c536e2"
        },
        "item": {
          "id": "db534d6e-e886-4fd1-a591-f54e9e560a99",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4af73d6b-4a11-4666-a7b0-5cee4356ba93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08916c8-5ea3-4e70-9bbd-3289ea3825f8",
        "cursor": {
          "ref": "a2efee4d-cc0b-4744-8edf-fd040e8f01d6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f87b4b9-ad5c-40f7-aca9-769131c98ea0"
        },
        "item": {
          "id": "a08916c8-5ea3-4e70-9bbd-3289ea3825f8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3385a68a-bdad-42b8-93fb-801a0630a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b66120-fdb5-403e-b973-4393de7788fe",
        "cursor": {
          "ref": "9646a85f-4c37-424e-a81b-e7fec1709961",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "30e46c2d-5acb-4bad-aac0-e78c8f1081e4"
        },
        "item": {
          "id": "09b66120-fdb5-403e-b973-4393de7788fe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2dd7717-2d90-48fc-8def-b88be5e90d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c461a-e814-4063-a564-4f70ced5d31f",
        "cursor": {
          "ref": "5632d0bf-c848-47ec-a3eb-83c05d3131b3",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1b153175-8f16-4827-8776-e0e90e1166db"
        },
        "item": {
          "id": "494c461a-e814-4063-a564-4f70ced5d31f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "57da597b-1c8d-4810-a363-b8e04203472c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d871f1-217f-46c8-b531-5f71afe0b774",
        "cursor": {
          "ref": "408170fe-6a47-4b63-80a8-2d0101e75fd0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "7d48dad1-7639-4ae6-a312-a5adbeae95c3"
        },
        "item": {
          "id": "63d871f1-217f-46c8-b531-5f71afe0b774",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7bad643e-85e2-44a5-a37d-93dedf7153f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde772c7-7b95-4340-bd4c-fd2428a0e614",
        "cursor": {
          "ref": "10f1577b-0fc6-49a8-ad5b-ed37ad99c0e0",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e47215df-7911-4936-af94-d9eafef6393f"
        },
        "item": {
          "id": "bde772c7-7b95-4340-bd4c-fd2428a0e614",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3f012c37-8875-497b-bb6a-2bf2d1ebbc4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb1179a-830e-437e-92d8-a3d8b850cfc0",
        "cursor": {
          "ref": "838bb94f-ae91-4dbb-ab15-91ca752e09c8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6ed56d48-211a-4c9d-afb6-7bbafec76d22"
        },
        "item": {
          "id": "5cb1179a-830e-437e-92d8-a3d8b850cfc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e669945f-a4bf-4dc3-a816-7e7f6c3d5696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaf1ab6-f18c-40c5-a10a-6dfe8eae7754",
        "cursor": {
          "ref": "3fe05c9e-a48a-469b-8ff4-26416ef4e109",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "07be235f-0713-4551-941d-2e3a4cec2d42"
        },
        "item": {
          "id": "dbaf1ab6-f18c-40c5-a10a-6dfe8eae7754",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cfe748a9-4591-4bed-8591-11d068d9d24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b60bd8-92d4-461c-b7cf-f6b0c787da07",
        "cursor": {
          "ref": "18eec3b3-9c79-48c8-a9c4-34157021016c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2d0d3103-18bb-4df0-82ec-146ae3b4a1e6"
        },
        "item": {
          "id": "e4b60bd8-92d4-461c-b7cf-f6b0c787da07",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d7960002-015a-4a4b-91b0-def94b6d284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae880d-6f92-4390-8dff-3bff76c4bbf8",
        "cursor": {
          "ref": "c2587dee-585c-4377-abd2-7138f2e3115a",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bb66497b-430d-4c39-97e3-e2cc9f000747"
        },
        "item": {
          "id": "92ae880d-6f92-4390-8dff-3bff76c4bbf8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "02f5732a-ce4e-416d-95ac-0d333dcecfdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80a423-5948-40a7-893c-e7fd2a2ad259",
        "cursor": {
          "ref": "55b4d8ae-0aff-4413-bca4-4eda1a50ee3f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3ed78247-be45-4e6a-b5e4-6de5df4ad81e"
        },
        "item": {
          "id": "bf80a423-5948-40a7-893c-e7fd2a2ad259",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c9022a85-6887-447f-bed4-3e8b9f1debcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7a6354-7b34-45d9-bb98-87255485ecd5",
        "cursor": {
          "ref": "2a0f19de-4e42-47bb-a7d1-0fd5ea3dbdb0",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ac32cccc-92cb-4096-a90c-90967437cace"
        },
        "item": {
          "id": "2f7a6354-7b34-45d9-bb98-87255485ecd5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1930cfde-725a-4caa-9220-4d9170394f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6563a43c-541f-4cf0-b88f-57326d66c804",
        "cursor": {
          "ref": "c4388650-6a47-49bc-a8c0-6b95ea94d1e4",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9a8d4677-5b12-493f-bf1d-c5b10848d564"
        },
        "item": {
          "id": "6563a43c-541f-4cf0-b88f-57326d66c804",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "167643bd-ec5f-4e87-94b2-376b6664f7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea7dbb4-5282-4a80-8ec7-5610c2e2fe47",
        "cursor": {
          "ref": "5ba54908-07dd-43b7-8513-fbfa058311c7",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1376d4f4-5608-4ac7-8e28-2d6a808113ce"
        },
        "item": {
          "id": "cea7dbb4-5282-4a80-8ec7-5610c2e2fe47",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5841cb90-a5dc-4758-a77f-97ae19971a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5392fac2-28da-495a-add8-16fface036ea",
        "cursor": {
          "ref": "9dbd0af8-c665-4a28-9447-a318296c2b25",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "be325fb5-9062-42b7-bf19-d4857ca993db"
        },
        "item": {
          "id": "5392fac2-28da-495a-add8-16fface036ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "885cff4e-9e64-4ea6-82d9-97783880837e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddc669e-33a8-4975-a4b7-3ed1525db641",
        "cursor": {
          "ref": "e255a000-72d5-437c-9b4c-d16095f926de",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6f05ef3e-19c1-4812-bc05-31b878e77d36"
        },
        "item": {
          "id": "6ddc669e-33a8-4975-a4b7-3ed1525db641",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "30570cf9-e4fe-4125-bb74-7d59f6842e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc4e274-3972-40c1-a6a5-84bb7b21c298",
        "cursor": {
          "ref": "04331715-cf5c-494b-be46-15545d971ca4",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a03b6d4a-81e1-4a01-b6ea-89fc69b3ff10"
        },
        "item": {
          "id": "0fc4e274-3972-40c1-a6a5-84bb7b21c298",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb75d15d-9401-43fd-9cee-08b0b13a475d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef3288-2fb9-4c3f-a600-22e4900369ca",
        "cursor": {
          "ref": "24acfb93-6090-4337-84f8-22e9e639cd01",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "646fec4d-86c3-42a8-90b5-3c7f2d00f4a2"
        },
        "item": {
          "id": "29ef3288-2fb9-4c3f-a600-22e4900369ca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1ebc08ee-89e4-4794-abd4-62e9d189482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fdffa7-3256-49b8-a139-cf13c365719f",
        "cursor": {
          "ref": "d3a1bff5-945b-4475-ace8-2e5f21c54362",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4ad18fbd-d776-4632-9bf4-e3c173b315ad"
        },
        "item": {
          "id": "54fdffa7-3256-49b8-a139-cf13c365719f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e5864177-5a69-4ebd-9030-96a06e43f9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8bf4a-6072-4514-8311-8d9e7fce3b6c",
        "cursor": {
          "ref": "2b457571-30ec-48c9-9a0b-a90ae83dd82e",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d936051f-9de6-40bc-af0b-21699ad41b9a"
        },
        "item": {
          "id": "c1f8bf4a-6072-4514-8311-8d9e7fce3b6c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "67ec83b2-ec6e-4463-95ae-89faa64969b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f6b2b8-96e9-48a6-8ae4-8e20f5e06911",
        "cursor": {
          "ref": "1173ff80-d111-4044-851b-4cf61b502712",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd6e2237-7930-43b2-a585-1281b3e25f12"
        },
        "item": {
          "id": "e0f6b2b8-96e9-48a6-8ae4-8e20f5e06911",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "658c79f3-e5cf-4c3a-9655-6999652ace0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ca349e-e4f3-4fb3-a22e-d5eb255a76db",
        "cursor": {
          "ref": "ac4b1872-afbe-4168-b1c1-147e2c3cc8c3",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2f7a48e8-3897-4e4c-9c4a-aa300eeeda96"
        },
        "item": {
          "id": "52ca349e-e4f3-4fb3-a22e-d5eb255a76db",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1735956f-1423-4082-8f8d-d492419ac0f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa5cc78-047f-4b57-8ce5-fdefe9275a94",
        "cursor": {
          "ref": "21c9e8e9-5b1e-492a-a763-bbb51d10f6e2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4f9ccd70-41ec-4066-8814-705fa26778ab"
        },
        "item": {
          "id": "9fa5cc78-047f-4b57-8ce5-fdefe9275a94",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7db6fb9b-e4c2-42eb-9614-436f6dc702ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07cf426-8b05-4c56-9f18-8be3b1478007",
        "cursor": {
          "ref": "131b146d-7203-4124-961a-cd1211aabe93",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "52c3a8e9-f0d2-45f9-9c24-cd47f6f513fd"
        },
        "item": {
          "id": "c07cf426-8b05-4c56-9f18-8be3b1478007",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "acef34a6-b61d-4355-b27f-4eeee9babaa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b7db7-2244-49ea-974b-1e20bf784c3c",
        "cursor": {
          "ref": "bb1ab0c7-94ce-47c4-b5b7-bda319b7d4e4",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4f51795c-c1b2-4c6d-98e1-f3e91f3f5e3e"
        },
        "item": {
          "id": "766b7db7-2244-49ea-974b-1e20bf784c3c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "288ec6f4-d6ad-4cf8-8705-5e1b78c9b560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f266cb-6fb9-4f91-86d7-b64114ff75ec",
        "cursor": {
          "ref": "c6b615ce-044c-4f6f-a4fd-3813fa263958",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d4052d4a-60ad-4b85-8862-b90c0f456ebf"
        },
        "item": {
          "id": "39f266cb-6fb9-4f91-86d7-b64114ff75ec",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "51a0ec91-96d2-44e4-b1a9-28991832e5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beee487-a20a-4e89-9ca5-bf07139a94b1",
        "cursor": {
          "ref": "cc6e4396-36ee-4272-9757-4954c3bf74a0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "92527bf7-fb14-4fe5-928a-97f52dbffffd"
        },
        "item": {
          "id": "7beee487-a20a-4e89-9ca5-bf07139a94b1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2bb4be4-2f4e-41cc-bc46-4d94c6859c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8d5e1b-4921-4cd1-81f3-a08d5d3a1ac4",
        "cursor": {
          "ref": "a8a56840-5cfa-49f7-9ca2-afca4716ffe3",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1168fa25-c89a-426c-9a45-2d3d0e156cf4"
        },
        "item": {
          "id": "cb8d5e1b-4921-4cd1-81f3-a08d5d3a1ac4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "30182bb3-30df-4731-a4f2-c1845271fa34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab4f813-cf50-42ae-8be0-2238fd6d409d",
        "cursor": {
          "ref": "c540dd6e-46f4-40fa-9362-0e6fbd3dd442",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2ac08f47-b44d-4499-bb1e-c93f46c9ad77"
        },
        "item": {
          "id": "aab4f813-cf50-42ae-8be0-2238fd6d409d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3abc8a3-d120-4f26-9b4d-2ab22773c0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f1c309-9668-4272-9a75-72cd02110bd5",
        "cursor": {
          "ref": "f18a0126-b670-442f-963a-6b7890fdeb08",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d5d204df-3f99-4bb2-9bc5-fcf1aa260359"
        },
        "item": {
          "id": "66f1c309-9668-4272-9a75-72cd02110bd5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "065f1760-24d2-4311-a828-147867608a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d19f665-3898-442a-a011-f94c4914c482",
        "cursor": {
          "ref": "38702662-0592-42df-870c-05d93d3e4106",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cc99d93e-c9c3-4a2e-bc04-b15fe4ffa0f2"
        },
        "item": {
          "id": "2d19f665-3898-442a-a011-f94c4914c482",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0bb6dd40-31ec-487b-b185-32ec45e29311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8ee735-37ce-4477-8dd1-4042326df9a0",
        "cursor": {
          "ref": "52e3d172-aa43-4484-89d8-7d183f33d63e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3098814b-7c87-452c-bb82-5cbeffe715fe"
        },
        "item": {
          "id": "7b8ee735-37ce-4477-8dd1-4042326df9a0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "aee7720f-45e6-4303-a843-c55f799826ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ee3812-536e-453b-87c3-b6b2e76bb73f",
        "cursor": {
          "ref": "8a8f0690-3682-40a0-8062-9eb1ee184052",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a469fb1a-3384-42e7-b5e3-e692256094dd"
        },
        "item": {
          "id": "14ee3812-536e-453b-87c3-b6b2e76bb73f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38613e11-83e0-4e1c-94b3-72b179b380f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b999a6-4a8d-43b4-9d5f-152a3280d124",
        "cursor": {
          "ref": "a6a5dc97-4079-4135-a6b4-d0bf54a638cc",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "55c86d20-5c62-46b8-b378-65435a3da124"
        },
        "item": {
          "id": "03b999a6-4a8d-43b4-9d5f-152a3280d124",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d7966b8c-bbd5-4d99-b196-c7ae85954d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3ac834-dffd-4949-b7a4-22582f175a4f",
        "cursor": {
          "ref": "7c8f5f3d-f17e-4a64-958b-a43906b0b142",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "152495ff-8238-466a-9d3a-f09663e208e6"
        },
        "item": {
          "id": "7c3ac834-dffd-4949-b7a4-22582f175a4f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8e0b9d4b-c2a1-439a-8c55-9557450c95f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e5a122-b63c-4ce0-99bf-6ca618233756",
        "cursor": {
          "ref": "d0cc5528-b28d-4dd2-b85d-dd73af36a79e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8a57b3ba-c2bc-446b-8b34-c1113a943aa0"
        },
        "item": {
          "id": "a9e5a122-b63c-4ce0-99bf-6ca618233756",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d49c2b51-5225-4300-8178-7ee89bcb9f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73efedaa-74a5-4b2a-bdce-e1e8df3ffb6d",
        "cursor": {
          "ref": "8e45f472-2582-4b56-9e88-6f28861573c1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9126a2e0-7500-4042-a5a1-82799daf6cfc"
        },
        "item": {
          "id": "73efedaa-74a5-4b2a-bdce-e1e8df3ffb6d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "99cbf9aa-e0fe-4295-9754-0cb335f93aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8c9bc6-ce81-4a7e-ace4-9e2e9e938426",
        "cursor": {
          "ref": "c03589fe-10c0-4879-9543-a3612e02e6cb",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2abf5b60-5b6c-4e77-a47c-2385df51b01f"
        },
        "item": {
          "id": "0d8c9bc6-ce81-4a7e-ace4-9e2e9e938426",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5f6f0af4-a00d-4a82-8d1a-10389d60b23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b32971e-232e-4d18-8440-a80632a3995f",
        "cursor": {
          "ref": "df522482-7cec-46eb-9917-d935a8c90b24",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "884f66d6-c383-47ab-a4c1-609cb2fc8065"
        },
        "item": {
          "id": "1b32971e-232e-4d18-8440-a80632a3995f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "96b3050d-528d-4ebd-991f-fdcd333ac7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f933970-56fe-4b35-9e60-7ef75d18d500",
        "cursor": {
          "ref": "55afb4f4-cc92-44be-b26e-f512fbdaeb9b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7a307995-9368-45df-ab0d-b63b6ebce2a2"
        },
        "item": {
          "id": "2f933970-56fe-4b35-9e60-7ef75d18d500",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fa8ffcf0-6af2-407e-85cf-4cdc7c04524f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2231910-654e-4b49-a0dd-17f540c13bb2",
        "cursor": {
          "ref": "840dc3e4-d4b3-4c94-8c1d-677a5788c0ef",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "60b5b226-7530-4b0c-a18e-98b133c06579"
        },
        "item": {
          "id": "a2231910-654e-4b49-a0dd-17f540c13bb2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3108c856-35b4-4739-af98-f737dbbcdb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0e8271-8db5-42f4-adb7-f238643ddc9c",
        "cursor": {
          "ref": "98ec9389-d454-4c16-8057-1af62c2a8c17",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "67043e4f-9c8e-4b14-a7d7-e5ae0012ee46"
        },
        "item": {
          "id": "0d0e8271-8db5-42f4-adb7-f238643ddc9c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "44954572-e9f1-46a0-88b3-d2fd62203046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5dcac1-a3b3-4ccb-88d7-d79f55ac4b12",
        "cursor": {
          "ref": "c9ad9898-df7a-43b1-8c43-b2ff4b5fa17d",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ed4ea9f0-fef2-48f3-9d2f-f87c634a21fa"
        },
        "item": {
          "id": "7c5dcac1-a3b3-4ccb-88d7-d79f55ac4b12",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "95bc75ca-9d43-4a97-8b87-56f7d6645a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b6d15-2baa-4e35-9290-b250f39a3041",
        "cursor": {
          "ref": "46266330-7eb5-4f4d-bd92-c67e10af6c8f",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bd542a7f-f3aa-4ac1-940d-7c9f2cb9cce8"
        },
        "item": {
          "id": "246b6d15-2baa-4e35-9290-b250f39a3041",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bf6d37ee-4f9e-4b8f-85a0-7803d5778e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4f311d-98f5-4375-89e1-b40f0ecdf300",
        "cursor": {
          "ref": "882d5b82-1102-4853-a408-a3dd30010987",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e099da48-2a75-4f58-acba-20cf41d21725"
        },
        "item": {
          "id": "be4f311d-98f5-4375-89e1-b40f0ecdf300",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6729d7d0-bae1-460e-81bf-309195bec886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377dabd2-d92f-46be-843c-dedcebae772a",
        "cursor": {
          "ref": "1e055f29-71c9-4349-b037-a44d35d15077",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "67b39a94-5f07-4043-94f2-c15161145a70"
        },
        "item": {
          "id": "377dabd2-d92f-46be-843c-dedcebae772a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "abeeaee8-ec42-4cbb-87f4-54e140a90d6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660dc9ee-1a0b-4976-8597-ab7adad18208",
        "cursor": {
          "ref": "fbd2ecc9-ad8b-4b70-900d-b321cacf0cdc",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "32421854-04f9-4bf6-b32c-729b109e74f4"
        },
        "item": {
          "id": "660dc9ee-1a0b-4976-8597-ab7adad18208",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ab634dbe-44d1-4e4f-9636-34f12bf48138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9800e630-3a29-465c-ab52-9c27215ccc02",
        "cursor": {
          "ref": "ac66cb56-da7f-427b-893a-4a775a93d31e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3f9bc11b-766c-499a-be73-e0d7915c06d1"
        },
        "item": {
          "id": "9800e630-3a29-465c-ab52-9c27215ccc02",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8605d505-05c9-4dcf-8309-e3bff36b71fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16116d2-e33b-46df-b2df-774a2c18f5e9",
        "cursor": {
          "ref": "82bb7548-dfa1-488b-8ea6-fba7023538cc",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7190d620-3bf2-4634-baf9-c15e0ffe84e0"
        },
        "item": {
          "id": "f16116d2-e33b-46df-b2df-774a2c18f5e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4b8f161-5748-454e-aa05-6a32dde7c160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc954b8-94ba-4f97-bdb9-58e415e2cad5",
        "cursor": {
          "ref": "d1b91af4-f5f7-4e03-aaf6-9b3b732bec2e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "04894033-4111-4ae7-ab2c-52f0b2270602"
        },
        "item": {
          "id": "abc954b8-94ba-4f97-bdb9-58e415e2cad5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2dd809ce-5ce9-48eb-b8ea-d36aa5e05818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac377a0a-3138-4cb4-9a1e-9e34e3204390",
        "cursor": {
          "ref": "c295f960-1365-4b01-a217-a5059b29c568",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "37009759-9c0c-43ea-ae77-9f6adce435e6"
        },
        "item": {
          "id": "ac377a0a-3138-4cb4-9a1e-9e34e3204390",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "07b88012-7703-4436-b878-d5c55e90b374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbd5b03-93f8-4576-8904-9780185d503a",
        "cursor": {
          "ref": "843a8a09-1af3-4e98-b4fd-bda359214beb",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "53e14d2f-3b2a-46e5-86db-ff0a9e8ae23f"
        },
        "item": {
          "id": "5bbd5b03-93f8-4576-8904-9780185d503a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5ba0270f-dba1-441f-bab0-62e52107551f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8614f744-afca-41c0-97b0-6cf355dc7604",
        "cursor": {
          "ref": "f9787acb-afb7-44d2-a0be-422d8a4a6497",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2833f783-8316-43aa-b137-cc6f71b0aa57"
        },
        "item": {
          "id": "8614f744-afca-41c0-97b0-6cf355dc7604",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "55b9f53e-c60f-415f-b74d-e7fd2b58bee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3268ac81-2482-4f10-8107-4d2b50b206f9",
        "cursor": {
          "ref": "513ef224-db82-432a-8b7f-00244da028e7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0cd7ae2e-f951-4286-97e4-d1cf290fb9fa"
        },
        "item": {
          "id": "3268ac81-2482-4f10-8107-4d2b50b206f9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "689a9a29-f65f-4a4e-be8c-050f33dfc841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd55e3d2-ea5c-401c-8789-23a142ce8fb8",
        "cursor": {
          "ref": "f275d82c-8ebe-4064-b084-98004d31ed6f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4268a528-bf8c-4164-8cff-17ba681de94e"
        },
        "item": {
          "id": "bd55e3d2-ea5c-401c-8789-23a142ce8fb8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fc1c17ee-0b74-45af-8510-2fb50cfa3b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ed781e-9df8-4f0f-be70-ff2ad48acef6",
        "cursor": {
          "ref": "bbfb0c16-947c-4eab-bf86-184d77fedfe2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "68c2a9e6-1f6b-422d-8ef7-0212861351fa"
        },
        "item": {
          "id": "69ed781e-9df8-4f0f-be70-ff2ad48acef6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "283e4949-58c2-4444-93a0-8c79cff3b7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70e318d-e4e5-44b2-b147-d93a1f4cb065",
        "cursor": {
          "ref": "0522cc65-fc8f-43f6-aa78-f4cce5341116",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "18346145-1d62-45b0-b781-244bd0f5bd38"
        },
        "item": {
          "id": "b70e318d-e4e5-44b2-b147-d93a1f4cb065",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0ba9eac1-9f02-437f-acc3-0c2c9cb390a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff94ee8a-b4b1-4a32-8e7e-13b655f66196",
        "cursor": {
          "ref": "fc74d548-9f5a-45d6-901e-c947627d4e1d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b8c20403-687b-4896-81be-da151597b07c"
        },
        "item": {
          "id": "ff94ee8a-b4b1-4a32-8e7e-13b655f66196",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d31fbad-386b-49ca-a7bd-fcbf32ba071f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fc6aa4-e1b6-4d95-a7b9-41cc71993138",
        "cursor": {
          "ref": "2c5a5ece-4147-407e-b72b-c93063f6306c",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a8c4b34b-0cce-499b-9c94-0ce68eca689a"
        },
        "item": {
          "id": "89fc6aa4-e1b6-4d95-a7b9-41cc71993138",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "326ec60c-427c-4a8e-bf55-bf40bba909c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a28ae3-d907-4fa8-91fa-1f31ab523bf2",
        "cursor": {
          "ref": "26c97986-411f-473f-b94c-d766b6a183b5",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "06555f2d-0d9c-474d-929b-05da5b967b9e"
        },
        "item": {
          "id": "30a28ae3-d907-4fa8-91fa-1f31ab523bf2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c3317bd-0e67-4cbc-994c-37c15c2ad146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22442de1-3496-4e0f-a29c-10f44f90a908",
        "cursor": {
          "ref": "36b9c2c4-7cc3-476b-9991-d721baa12930",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2e40ba6a-23e7-47da-8f5c-17cfac81d9bf"
        },
        "item": {
          "id": "22442de1-3496-4e0f-a29c-10f44f90a908",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c9f133a-dd96-4714-a35f-80d5976b7567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4221d2b-fd79-4b18-8e8a-27eeadb5d5e6",
        "cursor": {
          "ref": "3fe370a2-9b7e-4690-a770-8642a079ce48",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "050d1fef-839c-4cff-b92e-4d29f0a20f3a"
        },
        "item": {
          "id": "c4221d2b-fd79-4b18-8e8a-27eeadb5d5e6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6a451ae6-51e6-4a63-bbbf-b6efd20b4c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d92114-d82e-45c0-ade3-5ac11192ebc2",
        "cursor": {
          "ref": "c495e4c3-5dd5-481a-a4fd-1c96f8827d6a",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9a22fc5f-2563-4369-9640-7818a2de6622"
        },
        "item": {
          "id": "99d92114-d82e-45c0-ade3-5ac11192ebc2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f83d8ce4-6950-4b53-a9e8-c993e12e7703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b239ea68-6989-4da2-8166-b2441ed4d10c",
        "cursor": {
          "ref": "62b51146-08f5-461b-b8d8-32dabbb8cb1c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0f47d0bc-93cd-4e82-8bb6-d8e3b77b2e05"
        },
        "item": {
          "id": "b239ea68-6989-4da2-8166-b2441ed4d10c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b8264a48-0a69-415f-8bd1-5eeebac0118c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcb164f-3bee-45b5-8fc2-0f235d7a85be",
        "cursor": {
          "ref": "365b4dbe-7eca-4241-a384-642899a01cb9",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8bd878a8-faec-4ad8-ae5a-2c438bac92c1"
        },
        "item": {
          "id": "5fcb164f-3bee-45b5-8fc2-0f235d7a85be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a035f42e-43b2-47de-98ba-eefd3e22ae2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1816c97-76e1-4e91-a1bf-50fc7162c666",
        "cursor": {
          "ref": "d72dcf8b-ed51-4b4e-a0b6-0e60c905db75",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5512bdfd-6a3e-446a-b9f8-484740087dd2"
        },
        "item": {
          "id": "f1816c97-76e1-4e91-a1bf-50fc7162c666",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c905993c-1ee5-4d48-bfb4-72e530b19c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8c1d5-52cf-4f28-8870-f94f30d83d19",
        "cursor": {
          "ref": "b8bd3851-a46c-4127-8511-df75c3355395",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "afee308c-a537-43c0-a5d0-d4eee7d4c1eb"
        },
        "item": {
          "id": "75a8c1d5-52cf-4f28-8870-f94f30d83d19",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "54ea446a-8e26-4cd0-b4fd-e43d1f770c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6608cda2-20f4-4958-89ed-084009fdce1e",
        "cursor": {
          "ref": "a04f1ad0-cf44-4b9b-a201-e88765df16db",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dc6a61dd-81ef-4b1d-9e26-54d8b432d121"
        },
        "item": {
          "id": "6608cda2-20f4-4958-89ed-084009fdce1e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c7b1352f-786b-4a88-8639-c9a03bf1e6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe278db-6165-4340-b2f7-52163639f1c9",
        "cursor": {
          "ref": "b3bcde74-7327-43b1-82bb-b0f67f63e25c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3a85b283-1267-4776-823f-64a8300d33f5"
        },
        "item": {
          "id": "bfe278db-6165-4340-b2f7-52163639f1c9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1e38202c-c30b-4029-93fe-055b1a46db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91ea7c7-6ef8-4596-a20a-fd1004866b5c",
        "cursor": {
          "ref": "6075f7cb-f39a-46b7-8088-31efc5e9ec37",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "42861281-68fa-413b-98e0-b2648344aa09"
        },
        "item": {
          "id": "d91ea7c7-6ef8-4596-a20a-fd1004866b5c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89b4a3d8-efda-47fc-8fbe-26c497acc645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a308e2-f4bc-4864-9832-062f496c930d",
        "cursor": {
          "ref": "d0c393b5-ad23-4f88-8440-f98e2fa7467b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c434200a-b5b5-4d95-827c-b530e504c25b"
        },
        "item": {
          "id": "36a308e2-f4bc-4864-9832-062f496c930d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f5b66839-891c-439e-8eef-df4339aa45d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157b03a7-e5a3-4c1b-8d82-ccc7515d868f",
        "cursor": {
          "ref": "4143a8ce-efa9-4d0e-a2f4-c0d744573317",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "332461ef-11ea-4e66-af5c-0ff0d044d909"
        },
        "item": {
          "id": "157b03a7-e5a3-4c1b-8d82-ccc7515d868f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ff7455ef-055d-4098-976e-e19ea475896c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c940c40-d0ee-468b-9da9-679873305a9b",
        "cursor": {
          "ref": "83c215ba-0fa8-46e2-b5a0-c08972d44466",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fe9bec2d-4192-4f4b-8a83-467867d8c737"
        },
        "item": {
          "id": "2c940c40-d0ee-468b-9da9-679873305a9b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "70878cb1-77c8-4dd7-ab90-5f9650bbf4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e720452-1317-4ea7-8ac6-caad1081ab52",
        "cursor": {
          "ref": "1e106c66-af3a-4685-827b-48ce4342c677",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "42ddf554-ef08-4901-bef6-83556f7ddb78"
        },
        "item": {
          "id": "3e720452-1317-4ea7-8ac6-caad1081ab52",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b3d23776-5035-4c93-b4b1-c824431def26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cebc658-b93d-4dae-8f5f-f9156d17f617",
        "cursor": {
          "ref": "05ebdd3f-ba36-4156-b5d8-5a19673b5cec",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "09e1f2ce-7a8e-45e3-a5d6-ed77556f88e9"
        },
        "item": {
          "id": "7cebc658-b93d-4dae-8f5f-f9156d17f617",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f120a21e-bffc-4b68-b39d-1f571212285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d84d3ff-ef08-4997-a667-a9499178b0c4",
        "cursor": {
          "ref": "eda0788b-50b5-4280-8686-b6398db15050",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc93bafe-463f-48ce-ad04-79be68627286"
        },
        "item": {
          "id": "1d84d3ff-ef08-4997-a667-a9499178b0c4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "955bed59-c0c4-4b2c-8013-8821b335758e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7590a3-62ba-4272-8591-41951f6b7835",
        "cursor": {
          "ref": "29f8cf76-0423-4b7f-9258-20433750b5d4",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "40dfc818-d5f8-41b3-9821-bec5d9762c97"
        },
        "item": {
          "id": "1b7590a3-62ba-4272-8591-41951f6b7835",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "411f4c4b-1a7e-4dff-8463-808fb8354c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e3a619-753a-4210-b4a3-b907b53ca723",
        "cursor": {
          "ref": "fe5f5bbc-5975-42c6-b269-4b33722cc85f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9931aab5-992f-4ca4-a1b0-0f2454d553b5"
        },
        "item": {
          "id": "11e3a619-753a-4210-b4a3-b907b53ca723",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d92de42-bfc1-424b-97cb-0e1fcb7f002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb7598b-e87c-49f2-856f-7f3eab5fce79",
        "cursor": {
          "ref": "7c7a0304-5869-44ff-9d0b-51e0268bfdff",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "76781730-cf5c-4045-bc53-d9e358fc44b0"
        },
        "item": {
          "id": "ebb7598b-e87c-49f2-856f-7f3eab5fce79",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c1f3a692-5531-4bd2-82c9-dd588cd00a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b8953-17a3-4d4a-9e14-b0ea7670c284",
        "cursor": {
          "ref": "56b7894a-260c-41c1-be25-028c2baf2781",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "72e8781a-03e5-4399-b324-2114c7fcde9f"
        },
        "item": {
          "id": "9f7b8953-17a3-4d4a-9e14-b0ea7670c284",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "49ac9841-fd8e-4e6d-9574-cac0615ddf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594db4b2-03e6-4d5e-b411-095138618fa0",
        "cursor": {
          "ref": "e58938bf-5c9e-4d52-9ec7-092d98e9b345",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6563d634-c53b-4941-95f4-1ff8d0d06b79"
        },
        "item": {
          "id": "594db4b2-03e6-4d5e-b411-095138618fa0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ecb1eff-654f-4088-8531-e027bc82e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ca5490-cebc-47a3-b844-90a9f0adda38",
        "cursor": {
          "ref": "760a14c0-f12f-4677-977a-6f25fd4036ed",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d61e30cc-cf40-4472-b6e8-da3b55e298b1"
        },
        "item": {
          "id": "18ca5490-cebc-47a3-b844-90a9f0adda38",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "56ee5db4-159e-4722-a121-a19af02f72cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6645b606-dba0-438c-8908-78b626cb50cf",
        "cursor": {
          "ref": "c7750916-807e-47e9-9892-dbbfe6f53e7c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2910044f-16b3-4dfe-8765-e5321a78c928"
        },
        "item": {
          "id": "6645b606-dba0-438c-8908-78b626cb50cf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2d913511-647f-42f4-93ec-beeda3703fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac459b4c-ed2a-444a-87b4-ca749402ee1d",
        "cursor": {
          "ref": "2174d64f-6f56-4972-bc26-28be5c7e176a",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5e1e50ba-32de-4ab8-9119-e412615c1761"
        },
        "item": {
          "id": "ac459b4c-ed2a-444a-87b4-ca749402ee1d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "760da7e9-1e78-4ae4-90d5-43bbeb2b396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460209c1-8767-4a55-a4a2-dbbd5ef21470",
        "cursor": {
          "ref": "5ed585af-762c-4728-b9a7-4af311105a7b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2f2fe047-0ea4-45d9-9d5e-5e1e6e5014d6"
        },
        "item": {
          "id": "460209c1-8767-4a55-a4a2-dbbd5ef21470",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cced1c9d-1cfb-4bd5-bf96-9e067e6c7226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b71dc6-7828-419b-ae33-3a3cf641fd4b",
        "cursor": {
          "ref": "b2efd7e5-1dfb-44e5-8938-b5247f18f5e6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "da36acd3-0225-4f8b-9244-8c81e12ba376"
        },
        "item": {
          "id": "77b71dc6-7828-419b-ae33-3a3cf641fd4b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1fda5a43-36b1-4e8a-804e-3bf38f2bfa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4432725e-47d0-4ce5-a2fa-756b8a88d1a8",
        "cursor": {
          "ref": "322dbbcb-c121-4dda-87c2-f8cd11b3d71c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5a7e9640-1c77-4b34-b7bb-9924ff373055"
        },
        "item": {
          "id": "4432725e-47d0-4ce5-a2fa-756b8a88d1a8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f0d113d4-ad25-4d64-970d-8d5e73b2413a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c427770-3f0d-4e37-9e3c-fdd3383a8dc8",
        "cursor": {
          "ref": "0571e7b3-bbc8-4e83-89f7-80cfa931605e",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "47c7bfa8-8fc4-4be4-9307-43970bee4b6a"
        },
        "item": {
          "id": "4c427770-3f0d-4e37-9e3c-fdd3383a8dc8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b7cb84fa-b94c-4012-b859-cfa39a5efe1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc21f67e-006d-41ac-aa36-46d75980c990",
        "cursor": {
          "ref": "8e37bc0f-61b9-45ba-a25d-73aac36b5223",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "17a37613-abc2-4c79-8060-82f9b179c52a"
        },
        "item": {
          "id": "fc21f67e-006d-41ac-aa36-46d75980c990",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3bfca5cd-d1dd-46cc-bd3e-6a7484893cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56db4f57-9214-4178-bd95-7bbd250c113a",
        "cursor": {
          "ref": "4b89fd9e-e9ff-4506-9146-941ea4aecf96",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6890b4b6-54fc-4576-8c4a-a2eed0235508"
        },
        "item": {
          "id": "56db4f57-9214-4178-bd95-7bbd250c113a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cfc821e3-06b4-43ef-b41a-589957215638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5260ffb4-0f35-42bd-8061-92f768a48891",
        "cursor": {
          "ref": "46985727-7dd2-4ce9-b20f-8c8f3509ce68",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "bf00310e-87a7-4627-924a-4496e8bddb51"
        },
        "item": {
          "id": "5260ffb4-0f35-42bd-8061-92f768a48891",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cbaf6f2c-7a38-4a89-b2f6-f7924bb7d283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72ee0cb-188c-4632-aba9-66d402e48e08",
        "cursor": {
          "ref": "187958e3-e0aa-496e-b906-03e169265e8a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d894309a-612f-4a0c-816b-52de657ba90a"
        },
        "item": {
          "id": "d72ee0cb-188c-4632-aba9-66d402e48e08",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0144b39f-15d7-4a6a-9a99-feb8883570ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1653eb19-5b7e-4d35-b4aa-a83dbcf1a125",
        "cursor": {
          "ref": "1bebe726-9299-4891-ae2b-c32dfb18569e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7849b42c-9c8e-4342-9b9a-6b4133354cf4"
        },
        "item": {
          "id": "1653eb19-5b7e-4d35-b4aa-a83dbcf1a125",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c714d297-874d-49f4-9eb6-4046125ead5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e483c3a-ed21-499a-a636-fb62eb56cfe6",
        "cursor": {
          "ref": "46eb5bf6-56a0-42d6-a0d7-29b9a195207b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c4ca86bf-7890-45d3-bc66-0e3e262ad484"
        },
        "item": {
          "id": "5e483c3a-ed21-499a-a636-fb62eb56cfe6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "37f3fa9c-a29f-4ad8-bea5-f686ce8aeded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337da0c9-9e5c-44e2-81ed-6f58caf99c03",
        "cursor": {
          "ref": "aadbc653-136d-428d-8f87-c59a1bbd1b27",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ed978529-d107-4fe0-9553-0dc7f8292c48"
        },
        "item": {
          "id": "337da0c9-9e5c-44e2-81ed-6f58caf99c03",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d381cff5-0cad-4e00-bd56-bce5a36b3a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edea152-9605-4cbc-8b68-52e7287475f7",
        "cursor": {
          "ref": "e7b07015-ce0a-4939-8711-029661e5cf0a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "882fa0d0-ef6c-4d3e-8c64-32af0f409d39"
        },
        "item": {
          "id": "3edea152-9605-4cbc-8b68-52e7287475f7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca9eb23e-9177-422c-912a-e91d6bceeb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20412156-cdf6-4e7c-b7bd-6e1bb87e420e",
        "cursor": {
          "ref": "867e3fa8-fab3-4d15-bdef-25b40d668e01",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cf65c0fe-2f9e-435d-b6ca-59c38198f4e9"
        },
        "item": {
          "id": "20412156-cdf6-4e7c-b7bd-6e1bb87e420e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5b4d3d5b-24db-4321-9e31-5ff649a6c84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ea71ed-21bf-4ebb-8cb4-97a583318f1e",
        "cursor": {
          "ref": "0aba3918-6086-4f3b-97ae-922a6cc01ba4",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3ec4e85d-68b6-4aa4-996a-35c89fe3c2c7"
        },
        "item": {
          "id": "70ea71ed-21bf-4ebb-8cb4-97a583318f1e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4a297a26-6f39-480e-9ac8-fe386c33acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fad489-d8da-47c8-9eae-59f65b570f8e",
        "cursor": {
          "ref": "d86f6b6a-86aa-479b-8469-35f6d61350a7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "aa125771-b7df-44d0-87c3-05c6d49e9b66"
        },
        "item": {
          "id": "93fad489-d8da-47c8-9eae-59f65b570f8e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c7b72be8-cc2c-4e54-b98e-b3310b14149e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b78e02-d489-44b4-8a8a-0a12c5200488",
        "cursor": {
          "ref": "5502af97-859f-4ac9-a812-ae90b475a56b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f315f651-6722-4e5b-877e-427aacccc12b"
        },
        "item": {
          "id": "05b78e02-d489-44b4-8a8a-0a12c5200488",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "aedd2b0d-a21f-4682-8016-8477f2833197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bbdfb1-e63c-4928-ad4a-14268ced6d38",
        "cursor": {
          "ref": "427f573e-ee93-4114-baf4-6d0c948cb57f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3172e8ef-3382-4673-93d7-90e83a7a5ccd"
        },
        "item": {
          "id": "06bbdfb1-e63c-4928-ad4a-14268ced6d38",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b359ec77-e44f-49e5-88f4-3675d84990ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6a1489-789a-4f28-ac14-6d9705f5b8bf",
        "cursor": {
          "ref": "2e4bc2d5-434b-4168-ac66-6eda5baaf344",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8dcb496e-90a2-48d5-866f-191ea24c086f"
        },
        "item": {
          "id": "bd6a1489-789a-4f28-ac14-6d9705f5b8bf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5c55786c-64a8-46a4-9b9c-46ff7890efff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73352ae-f70f-4838-988d-c3d2b79fe8cc",
        "cursor": {
          "ref": "f21e4223-4faf-4ab4-82f2-ba990574fdc3",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e65f1d91-3656-4f29-818e-b61897557cf2"
        },
        "item": {
          "id": "b73352ae-f70f-4838-988d-c3d2b79fe8cc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dcd56c07-7e5d-4c09-a2bc-10922b00f870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7550f9bb-fda9-46e9-ab59-0aaeea7fb761",
        "cursor": {
          "ref": "e889cc08-e4c0-44de-837e-e74f0435b4f7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d21fcfd8-f648-4f11-8647-a82ea526ccfb"
        },
        "item": {
          "id": "7550f9bb-fda9-46e9-ab59-0aaeea7fb761",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "141b8035-971c-43c8-86ec-1a34251b2691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522e4895-da74-4e8f-a21d-43376571da55",
        "cursor": {
          "ref": "c362ddef-02a1-4d88-b0a8-a36206665887",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35880357-e707-493c-9754-fdf6181383b9"
        },
        "item": {
          "id": "522e4895-da74-4e8f-a21d-43376571da55",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "30c64ec9-0aa8-4943-ba58-6b16be59b1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88455d0e-2955-413a-865d-eb5fa3be370f",
        "cursor": {
          "ref": "cdce40d9-dd2e-4f58-87e8-19d6632bde96",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "701a45f4-e82d-406f-a171-f8a965c2b6c4"
        },
        "item": {
          "id": "88455d0e-2955-413a-865d-eb5fa3be370f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c0e7570-11e9-47c0-8c37-5fa87b347844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c212463-5fe8-4fb2-b6e3-d6b5786000ba",
        "cursor": {
          "ref": "e697595d-20b6-4859-8ff4-6737972bfb8b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d11b1317-38a6-4ea5-907d-149e9a0a6235"
        },
        "item": {
          "id": "8c212463-5fe8-4fb2-b6e3-d6b5786000ba",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0dafdbc5-bf54-4dd5-8e1c-694b2b0190f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219283ba-cb53-43a8-829c-516d75fa1494",
        "cursor": {
          "ref": "934a858f-c954-448a-88f6-261ead19a6af",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "075e8f50-366b-49b5-b473-dddf7977b3dd"
        },
        "item": {
          "id": "219283ba-cb53-43a8-829c-516d75fa1494",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3340f341-0c64-4cb3-845b-0402b03f0458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e5b649-a5d4-4f42-bf6f-c270af0824d4",
        "cursor": {
          "ref": "066bda9a-7d30-4619-ab61-2d0ab24a9972",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0d45f302-a2e1-4b65-af6f-b4cbdaf4076f"
        },
        "item": {
          "id": "73e5b649-a5d4-4f42-bf6f-c270af0824d4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ad95b692-a3d7-43d8-8064-26de9823cbcf",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "40335191-3a15-425b-97e5-e4ad6135257a",
        "cursor": {
          "ref": "1fb15594-da21-418b-aa63-2b03a9613255",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b98c6fef-e2b2-46fc-a9a7-9c5e3412d0d8"
        },
        "item": {
          "id": "40335191-3a15-425b-97e5-e4ad6135257a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f7114f39-1f96-478e-b021-a52613a22072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a374626-9d32-460a-b7c0-19c405517063",
        "cursor": {
          "ref": "4cbd1213-1dfc-4982-b456-fb792a3034a7",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0d1ecec5-8357-49fd-8236-da837f435c63"
        },
        "item": {
          "id": "5a374626-9d32-460a-b7c0-19c405517063",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0c2babcd-ef00-4dac-b734-63dec92c1237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef232af-e2e7-490e-ba2a-d8e6e64cb4b7",
        "cursor": {
          "ref": "8a672500-4a93-422d-b420-82bf0a205c01",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "96ed2e1d-518b-42c5-89da-dde509c9e266"
        },
        "item": {
          "id": "fef232af-e2e7-490e-ba2a-d8e6e64cb4b7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c777812a-f6aa-40a5-bb35-33e97689d01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d179044-3d5a-4da0-8f54-4929c8639664",
        "cursor": {
          "ref": "571373ef-503b-427b-b956-08bdeac0a080",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9b8d5996-de76-4f3b-9b4e-a605d5f4e7e9"
        },
        "item": {
          "id": "0d179044-3d5a-4da0-8f54-4929c8639664",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "56826880-172f-4b08-9e72-aa5e309a03dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d1e367-fd40-4b4e-ab3f-7be538cc5691",
        "cursor": {
          "ref": "0d1e6818-0156-41e2-ab8b-5ba01aa91c12",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "85241534-3d47-4617-b179-c4ae5d5db268"
        },
        "item": {
          "id": "a1d1e367-fd40-4b4e-ab3f-7be538cc5691",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "aea92d2e-6905-4ed4-a401-558f3c1d9716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3d9dc6-4f6c-4d3d-bfe3-4beb4e60a29d",
        "cursor": {
          "ref": "ed1e42c4-fa9b-4250-abc0-2736797650bf",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a3d81c18-735f-479f-b2d1-5c0372cad83a"
        },
        "item": {
          "id": "7a3d9dc6-4f6c-4d3d-bfe3-4beb4e60a29d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd0f1de1-6f25-4592-a246-2034ce82a899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca84c77-e271-461b-b593-0a4319bcff31",
        "cursor": {
          "ref": "8f0dea5c-a3f1-4bf6-a74a-cf8525d4ad9e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d9f101a5-4615-4317-9e87-af65c8e1cd58"
        },
        "item": {
          "id": "3ca84c77-e271-461b-b593-0a4319bcff31",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d0e0d44b-5158-43bc-bbd6-8ccb839eb391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be21f994-c239-4275-9000-92d5636ad583",
        "cursor": {
          "ref": "0d4e0a05-73f4-4729-98f7-4a0c65e05b5a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7fd9725a-5065-47c4-802d-114f1990e63b"
        },
        "item": {
          "id": "be21f994-c239-4275-9000-92d5636ad583",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ec956c1e-570f-44f0-9a28-885ff7e9840e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df09dc6a-b6fa-4886-8a82-b2381b1ccc82",
        "cursor": {
          "ref": "f492ef27-ce36-4e86-98eb-4fe48d3dfe77",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "94bb7de7-323c-49f1-8333-373a91299a9b"
        },
        "item": {
          "id": "df09dc6a-b6fa-4886-8a82-b2381b1ccc82",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "38b7c599-b5b3-4981-9b87-3e3d14fe7044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371aebee-7f9c-4220-a143-9e30fc00f56e",
        "cursor": {
          "ref": "6fbbad05-64da-4094-b906-eef26a20f29a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "9897f4d4-bb12-4bbf-b450-e8c369fb4c8b"
        },
        "item": {
          "id": "371aebee-7f9c-4220-a143-9e30fc00f56e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "eae994f0-26db-4f9f-bcfe-37895fcd419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b130d7-4bd4-4e84-8d96-ae822a83fc16",
        "cursor": {
          "ref": "b3968e64-9d98-41b8-80eb-82c72a4a254f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "281d31ab-fcaf-41db-ad0e-8e4fb6345648"
        },
        "item": {
          "id": "60b130d7-4bd4-4e84-8d96-ae822a83fc16",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9d53aca5-d6c8-48d6-a206-47730acb3a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6465a11c-7f80-4747-9917-a4668372d598",
        "cursor": {
          "ref": "c1b6c323-a882-4359-8c73-59ce5be7c869",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "12082671-cad2-48e9-8597-2bb44db2e019"
        },
        "item": {
          "id": "6465a11c-7f80-4747-9917-a4668372d598",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bccb2b87-fd2e-4d42-91a1-4ec8d4d17ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bad441-8596-4b04-9b67-1bc1354c84aa",
        "cursor": {
          "ref": "eb3e023d-c4e4-483d-9e20-53cdbb48902a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4b8ae3bb-1ded-405d-874e-fc51ed574e7c"
        },
        "item": {
          "id": "25bad441-8596-4b04-9b67-1bc1354c84aa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "df252516-9ce5-44eb-b281-5731d45b9c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb704414-187a-415d-9fea-6ee4ad88d056",
        "cursor": {
          "ref": "6c81f891-6c85-454a-8c74-6fa30cc7da89",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6a86f6dd-189a-483d-be6d-b911dc9be361"
        },
        "item": {
          "id": "eb704414-187a-415d-9fea-6ee4ad88d056",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d24fb6f0-b2d3-449a-9e44-3800f8f65b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35133bd8-54bd-430f-b56a-5a38f272ba8e",
        "cursor": {
          "ref": "516bfc0e-8490-4142-926f-f4d0779b4df3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c7332d1b-b25b-4391-a9ea-1c5df59e2dd3"
        },
        "item": {
          "id": "35133bd8-54bd-430f-b56a-5a38f272ba8e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f0b03d6e-6c76-4465-a6c8-52496d497126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889ad8db-2c17-4aff-be5a-aad77a612c29",
        "cursor": {
          "ref": "fc45eb4c-a327-4129-9cad-47e0d886ad23",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0ae2ad51-d5a9-4b3f-bccc-04df192d73ec"
        },
        "item": {
          "id": "889ad8db-2c17-4aff-be5a-aad77a612c29",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1ff0a2e1-9b15-4b8c-8c2d-d4fbd3ebdd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550cb28f-471e-44ca-a73b-7c6aeb16ae83",
        "cursor": {
          "ref": "17c960ab-3c4a-4b54-a81c-6b25d960698e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f348992c-05e3-4fcd-a6c4-1566376ba922"
        },
        "item": {
          "id": "550cb28f-471e-44ca-a73b-7c6aeb16ae83",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "91344ca6-2edc-44ee-8c08-f23bb923d5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9134a0fe-ef03-4835-bb4e-e33efd751ef7",
        "cursor": {
          "ref": "f1640b4b-a913-48e0-80f1-866f1a1370cd",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f26353dd-cba0-4afb-ad7b-a76f68ed31c4"
        },
        "item": {
          "id": "9134a0fe-ef03-4835-bb4e-e33efd751ef7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1ce41d87-687b-4f08-b3ea-6ff6ec99b5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d143fc3-b9ca-4828-94f4-4e62ead7bae7",
        "cursor": {
          "ref": "6f65f392-9925-4d06-bb28-6b3211609b40",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "183c0b14-52e5-43a8-9ef5-2fd00fc49760"
        },
        "item": {
          "id": "4d143fc3-b9ca-4828-94f4-4e62ead7bae7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "93a64453-bc0b-4a62-b190-28af3098458d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e300f8-71c1-4b23-b3fd-6bd59b098811",
        "cursor": {
          "ref": "269cbcfb-f557-42e7-896f-a0b9771a9dae",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e9e6d508-bdf9-4591-87bf-5743c67efbf0"
        },
        "item": {
          "id": "36e300f8-71c1-4b23-b3fd-6bd59b098811",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8e8fe684-2942-4aa6-bf15-638e820c87a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3215ad0b-316c-48ac-aad9-8f0164f8ffbf",
        "cursor": {
          "ref": "b0952dd0-5dcf-4ec0-863a-00c0b57f669d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2804b5cb-a4a2-4404-99ed-069b9b622615"
        },
        "item": {
          "id": "3215ad0b-316c-48ac-aad9-8f0164f8ffbf",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d5bfb6b3-12f7-413d-b8d3-ea0277d11175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358e95a2-83d0-48ca-b8cb-ebcd23fed7f2",
        "cursor": {
          "ref": "e60a05c9-1a57-4d48-8803-e59dcc89ff05",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9b824231-ca66-4203-a85b-c7faeb2e66b8"
        },
        "item": {
          "id": "358e95a2-83d0-48ca-b8cb-ebcd23fed7f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3aeb4c78-d38f-4f24-bfa6-7a74310d6714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bb526b-9329-4957-a2ac-0361b15a0b8d",
        "cursor": {
          "ref": "2f7d808d-0a57-4775-9942-83017101e120",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8a5590f7-79ff-40a1-a7bd-f2e6740f8392"
        },
        "item": {
          "id": "58bb526b-9329-4957-a2ac-0361b15a0b8d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "634c2c0d-b66b-4d22-89d8-7af47ccd14d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a903113d-1b71-4102-9c8b-17246d3b828c",
        "cursor": {
          "ref": "9f7e8790-94ac-4bc1-89f0-e8d8dcd27c9b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b668c6c7-b4e3-4aaf-ac00-b58b2a664872"
        },
        "item": {
          "id": "a903113d-1b71-4102-9c8b-17246d3b828c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "648d81ff-a9a7-4a0f-817e-ac3bb618895d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46362957-71f4-4cae-bc96-2724537ee74e",
        "cursor": {
          "ref": "823caec3-553b-473c-9ceb-a78a4bba1b5f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1eef52e7-137e-47dd-960f-bbc89f728e10"
        },
        "item": {
          "id": "46362957-71f4-4cae-bc96-2724537ee74e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8cec3ecb-0eaf-41c0-80be-3e6f2af436d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b8a9d4-be5a-48b8-8ad3-a9eb460533df",
        "cursor": {
          "ref": "1b72a4cf-8405-457d-bca0-2cf240216bb8",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7ca2f73e-b6b1-48a5-8a0b-354533a2c7eb"
        },
        "item": {
          "id": "c3b8a9d4-be5a-48b8-8ad3-a9eb460533df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1c997cd5-11ff-4b6e-bd1c-8131acb96162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933cc1b7-1db2-4980-b84c-50367b023dac",
        "cursor": {
          "ref": "f4c4c684-5e6d-4809-a284-6039803b1d29",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "1e037519-d8fd-4d43-b5e8-efb765fdba98"
        },
        "item": {
          "id": "933cc1b7-1db2-4980-b84c-50367b023dac",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6fd185a5-ba12-4da5-a6c7-37ddfe92643b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b142748-aeea-4de0-9c07-f7dec981e62b",
        "cursor": {
          "ref": "d7dabc6e-8062-43d4-a159-9be9bb60e9da",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7d99e2ee-dcaf-4f1f-8e91-8634e80061e3"
        },
        "item": {
          "id": "3b142748-aeea-4de0-9c07-f7dec981e62b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c13d417f-c23d-472a-8f0a-1a42b3a8cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e456aeee-b75a-4e5c-9588-8a552271077a",
        "cursor": {
          "ref": "0044bfa5-b070-4358-a786-17dc0c67b888",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "98d3c206-9158-4e5f-9063-a1d4d113c1c8"
        },
        "item": {
          "id": "e456aeee-b75a-4e5c-9588-8a552271077a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0e950416-8187-4308-b7ff-3ba1ffaa2748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4be4bc-3ffd-4014-be4b-74e3d5f50583",
        "cursor": {
          "ref": "cc830213-48c1-424a-aedf-ecf1b43505b4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a556c08b-b091-442d-bc1d-789f6d5c77f8"
        },
        "item": {
          "id": "ee4be4bc-3ffd-4014-be4b-74e3d5f50583",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "71df5e0f-4f47-4b51-a5c4-f9a243107622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edfca9e-2e66-4720-a62d-a0fadbcff4ad",
        "cursor": {
          "ref": "1c726b8c-8ae5-49a8-8a14-6fbde4f87274",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5146606b-f3ed-4628-afd5-e162c084364b"
        },
        "item": {
          "id": "7edfca9e-2e66-4720-a62d-a0fadbcff4ad",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "30c45456-21e8-4b39-8af7-55777dbad326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c4be87-5f03-4bb8-9110-363331765673",
        "cursor": {
          "ref": "dad6cda8-b668-4904-a794-ed0d09760864",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d62d77d9-6b16-46ad-9f8a-baeb28b7bf4a"
        },
        "item": {
          "id": "e7c4be87-5f03-4bb8-9110-363331765673",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2da750ef-5546-42ab-aa59-026a3b721806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7aae84-faac-4ae2-873f-f2b512dd9153",
        "cursor": {
          "ref": "53d7a477-1e4f-4eac-b6d5-b21e12ffae4c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3bab7903-999a-4dd3-b7ff-6a04fb7ee2b3"
        },
        "item": {
          "id": "dd7aae84-faac-4ae2-873f-f2b512dd9153",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "28cabe6a-de7f-4f44-b8f7-5f94c47bedf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e464631-2c00-4ab8-93c1-80b201a63cbf",
        "cursor": {
          "ref": "e67debcd-1232-4763-9226-2685c74ea1ba",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "27061c8c-454e-4aa5-907c-4ec0169d069b"
        },
        "item": {
          "id": "5e464631-2c00-4ab8-93c1-80b201a63cbf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "43dc3592-1706-41df-bc8c-ba2556dfcc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e61e5-7212-4f19-9aed-81415b28c6f0",
        "cursor": {
          "ref": "45581a27-64e4-4b4d-b4ca-eb643ef97517",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "bcda15a2-f96c-4940-9a8e-cd60cc2a24d6"
        },
        "item": {
          "id": "6e2e61e5-7212-4f19-9aed-81415b28c6f0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "77ff7762-52bb-4455-9978-1f8987d1b4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd061275-cf3b-4776-8428-89162685670e",
        "cursor": {
          "ref": "ca597752-687d-4314-a9b7-66a488f11a84",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "69557c89-43a6-46f0-9cc8-f6b1a0008521"
        },
        "item": {
          "id": "cd061275-cf3b-4776-8428-89162685670e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1fe0edf2-f961-4848-97c4-2e3c34b04882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cd482d-dd79-48a4-889a-1478d477c563",
        "cursor": {
          "ref": "b9613bc4-5a6c-4657-a83a-081e6b396e36",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c2141436-0191-45e2-8515-c08fea08e12d"
        },
        "item": {
          "id": "d9cd482d-dd79-48a4-889a-1478d477c563",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4ccb05ff-4c69-4759-bd54-cb87b23d83a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da918f-dc7c-4ce3-9109-bb2d7c132f2f",
        "cursor": {
          "ref": "4332eb57-7a0f-4a51-819a-b77ff369170c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a606ed88-4d63-4d64-a9f6-89008542f473"
        },
        "item": {
          "id": "d8da918f-dc7c-4ce3-9109-bb2d7c132f2f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2253af2b-dc57-4192-97a9-365980f784e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeee442-46ef-4fad-9042-de0aca359cfe",
        "cursor": {
          "ref": "941e61c7-f8d5-4798-9c27-083be44306e4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "215f4c86-a31b-4732-9cf3-f2ad2e26958b"
        },
        "item": {
          "id": "5aeee442-46ef-4fad-9042-de0aca359cfe",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f38f4dd6-1a0c-4dea-99ca-859dafbe915f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a1917a-0299-4b3e-abd0-2ad1e5935823",
        "cursor": {
          "ref": "47c93112-3ef4-4fff-bba7-230b8b4a10ac",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8d12a62d-0df9-49d0-9fd0-d2c77bf47dab"
        },
        "item": {
          "id": "d9a1917a-0299-4b3e-abd0-2ad1e5935823",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "56d326af-7b6f-4617-a0cd-f1bfaf5f5ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad09bedb-0311-4b1e-ba71-304666230b7d",
        "cursor": {
          "ref": "8297c265-8f8a-4777-b6c2-f3302822f582",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "582933e8-44e8-4aea-8f15-eabda4aeccd8"
        },
        "item": {
          "id": "ad09bedb-0311-4b1e-ba71-304666230b7d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "46bb27a8-d814-444a-a2ff-78819ac0da9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d42a22-b65b-42dc-a6ae-96390feeaee1",
        "cursor": {
          "ref": "6faa7b66-e1ac-47d5-8a04-18e85f384ce4",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a4169d9b-2ce9-46b5-bc6d-684ce2e30358"
        },
        "item": {
          "id": "25d42a22-b65b-42dc-a6ae-96390feeaee1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "370abb85-5185-4938-aefb-e18fdfb9823b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97531a45-8a9e-431e-bce9-41b1ab68b8a8",
        "cursor": {
          "ref": "f9621b03-5c3d-4d7e-a59b-1db45685039a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee8e37bb-d950-45d4-8163-b42b1ded9f72"
        },
        "item": {
          "id": "97531a45-8a9e-431e-bce9-41b1ab68b8a8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "487a88a9-a128-4d30-acaa-5e86b1f29972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2894d2ad-bef6-4635-a0fe-3ca67ac7bc51",
        "cursor": {
          "ref": "96426cf5-44de-45bf-9f25-b24f31223311",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "766f9b84-bdad-4d3a-845c-1c64648d7479"
        },
        "item": {
          "id": "2894d2ad-bef6-4635-a0fe-3ca67ac7bc51",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ecde60c6-de46-4196-856d-f8c31750175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968cabcb-a178-4331-9ea0-ca343254043e",
        "cursor": {
          "ref": "c4937647-4949-4eae-ae6b-10513394e2d1",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4e18777e-c4c5-4f54-b07e-be1b77486da8"
        },
        "item": {
          "id": "968cabcb-a178-4331-9ea0-ca343254043e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dac17fbc-5529-4182-aa60-d203249a435c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1f2e77-1705-4a02-b793-1c347261e9f8",
        "cursor": {
          "ref": "a0b1dc43-e30e-4dbd-bcee-6a74605c0ab1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "20307d34-f163-441e-b936-f4fc70b3c8d9"
        },
        "item": {
          "id": "5b1f2e77-1705-4a02-b793-1c347261e9f8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "505611a5-a615-474f-9c3e-160c4f94e9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb756bf-3e70-4891-a6b7-446db3d3315e",
        "cursor": {
          "ref": "2f421f2c-4656-4474-9607-a759485ef6b0",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7ce5c06e-db13-4f0d-8564-9554548788c2"
        },
        "item": {
          "id": "efb756bf-3e70-4891-a6b7-446db3d3315e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "08ff2b16-8775-4715-8294-7632b9d3c5c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62262002-7041-453e-a71f-6d89b8687867",
        "cursor": {
          "ref": "df448e1e-6ab3-4500-b56e-4e7f9d7095a0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c43312bc-a2fa-4422-b378-344db327e7aa"
        },
        "item": {
          "id": "62262002-7041-453e-a71f-6d89b8687867",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "565c1b46-e126-4617-b9e8-e1fc6a63e2b9",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "710c8dcd-4af7-4cd4-9f39-3ace502cdc42",
        "cursor": {
          "ref": "c559eb6c-40ca-45b5-88fd-507f2517aa0e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "35f0c2ef-5e10-4396-832f-4a76214811c2"
        },
        "item": {
          "id": "710c8dcd-4af7-4cd4-9f39-3ace502cdc42",
          "name": "credentials_verify"
        },
        "response": {
          "id": "51b9c030-9503-42f0-93a1-557c4d9fa4ec",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc5a106-eb56-4ed4-a319-b26644a24867",
        "cursor": {
          "ref": "995f1569-7df8-4368-a186-ae74d00053fd",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3e01426a-d3d0-4f6d-9cb6-b1885576c3f9"
        },
        "item": {
          "id": "afc5a106-eb56-4ed4-a319-b26644a24867",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "245f4d57-65e6-4434-8f9c-ca2c61bbd952",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c074a-c170-44bc-b5fb-ee507c893b0b",
        "cursor": {
          "ref": "3ee92fc1-b14e-4b4a-9d51-79bc035809e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d7ceec02-738e-4e2e-96d3-2a9be95efa03"
        },
        "item": {
          "id": "906c074a-c170-44bc-b5fb-ee507c893b0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1fea490e-ed4c-4139-9765-64b7b667bdcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906c074a-c170-44bc-b5fb-ee507c893b0b",
        "cursor": {
          "ref": "3ee92fc1-b14e-4b4a-9d51-79bc035809e4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d7ceec02-738e-4e2e-96d3-2a9be95efa03"
        },
        "item": {
          "id": "906c074a-c170-44bc-b5fb-ee507c893b0b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1fea490e-ed4c-4139-9765-64b7b667bdcb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2112d17e-b351-4ad0-a9fd-cb8e98e6a7fa",
        "cursor": {
          "ref": "5f51de83-2461-4f61-b235-b4ef4aa7ca33",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "545713dd-d737-4f03-9e22-e0ebece17c8c"
        },
        "item": {
          "id": "2112d17e-b351-4ad0-a9fd-cb8e98e6a7fa",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8655d109-532a-414e-aa7f-42654dca7858",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c57b6e-5374-4c80-88fe-8099b45f9c4e",
        "cursor": {
          "ref": "e957691f-ec09-413b-8773-caa8f8ac1d47",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "035b6e3e-d153-41bf-a8b7-3be7eb67c9ea"
        },
        "item": {
          "id": "75c57b6e-5374-4c80-88fe-8099b45f9c4e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a5c659c1-6b84-4e19-953f-4143c1f7a661",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}