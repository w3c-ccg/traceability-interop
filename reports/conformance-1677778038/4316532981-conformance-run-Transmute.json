{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9d348aca-9be1-48f2-a712-f48ec8b762e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "57f6574c-27cf-4847-aa37-d7bec6d8690f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c8a5889-490b-4d12-98c6-8dfd42b1338f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "588b15b6-ba17-4721-9a40-e93bca33b5dc"
                }
              }
            ]
          },
          {
            "id": "29251756-654c-448a-9060-24669cd2a7f6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4790bb1-953f-4f7c-afdc-c7852926e83f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5014b902-2c73-4dab-a126-46182d18f19d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b6dfe57d-2de8-40bb-b236-fc0c53b2ca3c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dcef86e8-242a-4149-9449-ca5c0c48c2da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01d1fd56-f047-4ec0-8b0b-00532bf76fed",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59ee6e36-3f61-4cbb-97fa-c265b1c51ea5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5ac3bb9-90f0-4a33-8769-46cb6984a675"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "054b4179-dd2b-4ee9-a094-792a12453712",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4436d99-4965-4b33-bf18-164c19c8a18f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7bed9b53-f54d-422f-9834-136eb224b46d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6864a56-7eff-4a27-95e9-f0a53dd447a4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3fdf608-ad78-43f7-bc5f-502a8c796732",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a6a26387-042b-4946-9358-d4034eb70c6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "608ab134-0874-4453-b68e-7648819ab842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "772d8866-7b25-4dc5-831b-df9ee4b8bfba"
            }
          }
        ]
      },
      {
        "id": "d557300d-9133-4caa-9c27-5438ab229b60",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "39eb85d3-90a6-4b92-9db8-ecd408c3eba2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e59495e-102b-48ee-94d1-5ff39a08017d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "025100b2-c3c0-4b49-b0a8-76dc26dd5652",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a73286f-dd9b-4702-b02c-90521c15d2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f08272a-86e6-4cad-9d5f-67449f9ea3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005e0bca-16e1-447f-98bf-f98c91534adb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a48ecf7-9f6d-4149-8f2f-b8fce7da3e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2974c2f-4a07-4825-95bf-6baec677ee9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45574db-577a-42d4-918c-b9d269324140",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c975eb-3aa0-4d30-af24-79c3313318f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9059a1a-ff5f-430a-a61a-2697dc73dd70"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e18508d-fa16-4a77-98a8-429e689882d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7136e90-9956-4d41-ad4c-1ceeb67416c3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb8479a-54fa-48be-9a7c-4f5fe6fc539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b5dce9f-bf82-4373-99a3-1f59b4522c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9266a974-1187-41c7-8ea1-1ae06165e0a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5b9c0a-1943-4d6e-856e-f8c85a68227f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3153833-02b3-4b0b-a11c-53eafa1c7216",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18da182c-5805-4ef2-91f2-b4785b183c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d09b023-7515-45a0-b8c4-469688842ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad655038-dec4-4aa5-8c10-614c18d715dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "74dc7d4a-8794-4950-8d8d-6eadcea5e0f5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0eb8576-3f24-4ea8-9a00-2ff02b0962b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eeea28c8-d738-4cc6-ab23-618d775db1fa",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "653fbe8a-ef76-4727-b3b6-94ed6ab468ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "edc4bde2-23ab-4899-a413-06c42491043c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7f876fe-63d6-442c-ba55-8e0faf400c9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d8b575db-86fd-41c2-83de-418ab3b7bce5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbded1c8-2682-44ba-9fe6-4d5c7619aff0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d446396-d5d1-4cce-9e63-3d1da8b66688"
            }
          }
        ]
      },
      {
        "id": "668dda66-7e6f-4c59-ae4d-092aec442ae9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "19516c35-b5cb-4543-a933-d9a23cec7270",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8e03921f-9c87-4320-b443-fe1910af56da",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6d346c07-aeb4-45e2-9595-d59c295cc248",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b228ed-0358-420b-b7db-3932e6cf182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6160c76-7d76-4ab3-8859-620e183c96d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b358e2-848d-40ee-998d-2ac8ab46575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9e7d10-cd67-488e-a350-4c0ab6774fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d401a372-f664-4b40-a8b8-c0b568689720",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf45789c-e236-479a-8b13-846e1d3f1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bf303a-4c8e-4a73-ae43-c862a3e6a3ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87742ead-6c4d-421f-95f0-be0aa965c791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad44a0c4-3fe1-4803-b385-b991db7eb873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a59b7db-049e-4b86-8177-df10cbb07148",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2af687-dd96-4336-bac6-fe52c9952816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1289c308-6252-4fe0-a048-b450f0410bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a5a035-be22-46ca-85f3-9d9fd585ae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e4acd4-5594-4111-81eb-a28b78b87750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1363028b-3340-4803-af53-15bbb51a425b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc5130f-d934-4e1c-9be0-54b267ee1501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107db2cf-9847-4dc4-963f-5f1d65937466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4d7c4b-4a6d-46b9-9379-fc4c960e2421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f3a948-427b-4ae0-b072-a2112e453d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcd79d7-0b0d-44cd-acf5-2986aea711cb",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa29472-9727-43f6-8409-63d067bbc68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdef5ccd-a137-46b4-b994-50f662998d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5348f814-6083-4c7f-bdde-64dd58299ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb0c0e9f-6803-4d24-8033-3a843d7fd09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080f8e6e-8faa-4d36-8344-2da30d1cbcaa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce7700f-6144-468e-81ea-a3aa43cc4a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb54e2f1-9fdd-4e05-be93-4e1bbc251702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308a5f6-88d5-42ac-add8-e7f597671e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f01c905f-5fd8-45f2-90a1-a75655cd8516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6caf5c-fb45-4605-b813-1b1c1897c38e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d3ba48-1e04-47e0-a373-78fb7cbcfefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b3e4f0-beb5-483b-948e-414729f6c0c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73026b2-1124-42a7-9882-4b93aa9a41bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "151235b6-f14c-44ba-8777-d6b47001e978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68dc3e2f-b5b3-405d-88f0-b1ce3492f70b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce0e04-1bc3-4869-a2db-243fdb6bec75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3410637e-cf80-492a-ace5-de723c7d15be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fccea8-8713-472a-856b-4f89238dd8f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cdc5845-0261-4a9b-8adc-90edc884eb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a5285b-a9b8-4615-b7d9-405dda5a68c4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb34219b-c7de-4bd4-9fae-0ed3b56b8117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44bbdbac-7f62-4d85-976a-2e55558ba00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3b11d5-142a-42ca-82b1-bd929d437907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bb8222d-4df3-417f-84f9-dca109d25794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac46522e-0944-4e58-97d3-620194813d0c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce241c73-30c8-45ad-a16a-41f47ac0df8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e16175-a9d4-43fb-8512-dc137479edec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5499e5-8755-4577-82c4-dce9a9ba5134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b44627c7-75af-4007-a412-aa75ea18e14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "babddbcf-28b0-4abb-88d9-4283abfe60f1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0a3216-e3fe-4752-8fad-ccecf43566fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000aa677-6fcb-4860-9a0a-0bf286ae2115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f39cb6-82f5-456d-aa74-a4df4f0767dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "949c14ee-6c31-4ff0-94ae-dd8f72870dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f3e031-7242-449e-b94f-7fae2d865827",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353e8a8d-6222-4178-87d3-004d99cbcc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f6cc46-338a-4410-b5f1-176cfa71cc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbc9ac6-1ab3-4aa5-be32-307f1a13f2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5927668b-2980-4baf-95aa-399e2be4848a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f054b9e3-678c-4fb5-ab62-374305000469",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5da96f5-2176-493e-be10-07aad1e430cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "912e1abb-64c0-475f-a734-b5c58e6849ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56de9fb-dedb-43c0-92ee-bdacc96c1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17403f4c-1559-44f3-ae39-813a020c6ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ebf6c3-e768-4c08-9a64-bb14cbec63ea",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40149766-625f-4817-bc80-3285e127606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96435ded-fc58-4cad-bf72-9ec013ea84d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fb8cc4-6f76-4f7d-9c1e-59ae9107e297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce37bda3-c91c-416b-8244-6fdcc79b17ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08026ad-fcf7-497e-a663-670971588481",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26721c48-b58c-4d9f-a6bd-6bc3a0b34a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7d8026-9504-46da-bb75-6fd304024fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4688be9-eb27-4ab0-b838-fb148611eee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eff24652-febf-41e4-a868-74a1b1bd36ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6954122f-44f5-415e-9136-2ed17b0a74ba",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa881d77-fdb7-45fb-b77f-c2625d0d5dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fdc7a1-5c87-4c80-808c-a1c9ae5d5bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38706ed-7aae-4da9-8dfb-812464079678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9775738-478d-4875-9e7a-81a98f06500e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad6c49a-969f-4a79-823d-73aedb5c30d1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f1a8ef-74b4-482a-a32b-54407c898f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95d7004-8b5c-40ed-aa3a-23eb822e239b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f420d11-8898-4d88-8d13-fbfd3e4170b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2267296-c82f-4bb4-9d0e-61164f868cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f68a9d9-5104-48c1-a5c4-2563b129a623",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc48ffc1-4a17-40db-8564-06b101204251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ae7155-5448-41ce-8b62-e54d478eee04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bd082a-daf5-43ae-afe3-0b5f78f5703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e32d75e1-3232-4794-a9d1-5e6759f63e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b506c56c-7a15-419f-9d18-f787978a8d56",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce078e-3f4d-4bfb-91ae-104142939c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a1f7ed-ef50-4c08-861d-12fe685c8863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25187e46-5551-49cf-bda0-6110f2d72cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f6fd8a-e5cb-476a-b6fc-bb516cbb4cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866cf28d-8091-49fd-982c-ada5173cf835",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677f2724-6e67-4b4b-9179-1485852b8cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c257cf-c4e6-43de-9112-d1d61a0784ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6983d090-a765-4e15-83c1-010483fd11d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8bcdca-5324-4742-964a-b4168ef8fef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0f9dc0-3326-4213-83ce-7f961bc5dcd1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbc52cd-45ca-4c36-ab9f-2fbce8464033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7390c0-a007-4cc7-b39e-86406bbf819f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1898eb-94bf-4d55-9505-347cfdaa5a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc254a3-2bdb-4e6f-a1f6-708f0b555e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219b86a3-4f04-4f1c-92db-bc9451721662",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc3e957-11cd-4d34-8176-8b290438ec01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86d7c77-834c-4212-ae81-5c0657a4c8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e460dcb-c88e-4b3c-bb4c-cc28ddab2597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c859b5-34d1-4d05-bb82-7b8b4a523c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbf3830-1cf9-4a0e-b387-756135c64e56",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fc7d2c-b618-405f-9360-856b042e9246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00f980a-a521-4214-9663-ed25e758960e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0972ce5c-56fa-42af-94ea-84714860a117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30a95260-9751-4644-b3ec-1193ab2da479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb66616-17d7-4eb8-a9c3-a6fb2884ac56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "631060d9-6e80-471c-9919-09db1162ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c07d451-72b8-422b-aede-8df45a027190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162f2a5d-7b5f-4b43-a20f-26cc57ed5ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5495c891-3282-401f-b550-86fbc9c9b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6329cf38-1165-481b-a355-90872ec9b97c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6db3f54-6849-48bb-b181-e4bd6d5ff22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee81b224-a02c-4557-ac4a-ccb9baaf22d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6d4c8a-fdaf-4154-8811-cc9e2e0e50be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf94e334-90e4-4e5c-ac25-1b9560c65719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f40aa4-cca9-4f9b-89ca-1132ce925389",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4969087a-95a3-4c69-bc63-51f51c386eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e724ca4-19fd-46e6-8e09-28f713fe1a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c575108-d0a5-41e4-a93a-fec5f6df7820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5411bb-4743-4a76-be08-7df2a69612fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e286086-3a3b-4a2c-9ac0-c6ee33c91e96",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426b6a59-8952-4ae1-a672-72acce11cb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b8083b-8286-468c-a773-ff62b4d0f568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263c3127-a2bb-4b27-906e-49c902fb61fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9f293c-4079-4803-a60f-99c1113616fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e281363a-aa96-4059-afdf-31e75418d508",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2e7abc-25c5-433c-b32b-7ba5a289d4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8898656-023a-49b5-89f2-7bf6ee6aabdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2820e9-24f7-495d-b56e-c7c3e069bcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1719d088-9383-4543-a813-19b400f14fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8797c0-7e1d-4b8d-9ce8-ec8bee713ccb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fa8c78-a420-4706-837a-b7b1c1ee0b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac0af83-1130-44fd-87d8-17c8b3b213c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e70e26-a42f-4ce7-ae30-642c3936aed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa7e272-474e-4d9f-9e9a-477c8499ec61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1ed99-e499-4e80-ade9-af1025fabd13",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4040924b-3db7-45cb-8d59-aa1a45572c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e55a054-3257-440b-ba2a-9c887dada993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a3ff31-124d-4f77-82ff-87bc352e8915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "09005841-ddb2-4e89-947d-548d83d956e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e504cee-71e5-4821-bc4c-d6627ea24b67",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6bee6e-481b-4b33-af5e-4ae123ad2bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6ff1a4d-44b4-4224-8b9a-6c59ff0c5fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb5c718-6872-43d0-9ecf-2afa701aac79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d33f4f5-d150-4e75-8667-d35b893b8215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4746b0-e4e9-4b83-bd46-6e18d7b796fb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a713fa15-7ae6-4fae-a8b0-67476c369526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865467ec-e0c0-43e2-afe9-200266ac36eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b501383d-ec2f-4699-88bd-3647f42244d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "297e74d5-ef8f-4d78-b96d-d9c2ddd82cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5280c3a-fc27-4056-955f-e3847c5f17db",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38daac80-0317-4ed0-9f62-d11b904ef1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99241188-f27b-422d-a92a-0050dc72d0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a25504a-6319-4724-8aa5-d77d3caa239a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a98db6d9-e1d8-4029-856d-195a7d5101f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279b61a2-db55-48c4-b10e-ac521671f414",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b703fb68-2bd5-42c2-87e4-659ce0cabcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a35c4c-464a-4a07-8f0e-2e4753502190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e1944c-4b1a-4897-82ca-2bc2a7406281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d86946-6cc0-4f0c-8a2f-37c6be8cc402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1f87de-69cd-4de3-9262-6a7aad172077",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed2934b-9b29-45a7-8eaa-45f5364835b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d25c66c0-484e-4dfd-ab81-d8d2ecd298a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a1f0d9-54e9-4466-9f13-f7e945ea05ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5668b1b8-c41a-439c-8b59-36a3a1162462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d7b261-4f4a-40cd-b3c2-974878c1ce43",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec1c253-67aa-4996-874d-555963f9ac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0376377-3bf6-4da7-b5c7-51c2f9baf571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dce717f-2098-4ca2-9c31-d335966fdd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f572eee-fd9f-403d-bd02-3e0e30b4df81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dac021b-2614-4f28-b847-ca00d7d69ff8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e152168-5855-4506-bbc2-b36d3d98440f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448f94c9-f4ec-4a47-991c-73ebc2ab0e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3583e8b-39e7-44ab-9d0e-cbf347700055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec21f6d-e2d8-4c53-9c0d-fe2745cb1d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559cbcb8-1e32-4df9-b6c0-6dae2fca38c2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff749fc6-30f8-4f52-aaad-f73418d23339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e7cabc-96cd-4762-ae83-75a2383cc689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d617d5-c3db-47c4-8c9b-f5dc20f72728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f7f931-68d5-4858-b155-d613a869c69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69202e64-3956-4531-901a-bf7976facba8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d76c9a-e9ca-4ac2-805b-609dac8cc64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd10fed-456c-41d2-b0d3-9bdb5e0af6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaca0a62-d7cb-4556-b85e-1f11c4e88bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "560316d7-35bf-4e00-9ecb-342075568c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbba123-70e6-4ab1-aa50-5121238b18b8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e0deb4-7d82-4fb1-b10f-0e42bf1de6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5299055-5b53-4159-8a86-b1c464da934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600fe369-049f-44fd-90a5-591872460530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c007fcd4-6220-4332-8fb1-fec6d62659a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e2eee-298d-4f62-a744-134d66d86d87",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee739939-bfef-4c2c-bf5d-9de24deef835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f638852-f813-43fd-abb1-890af07c3ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6318b1-93b3-44b9-987f-742bf10930f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb98915-b507-4c42-8c9b-9f691700657b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b48e245-f290-4d06-ae33-181d29956d68",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7daa29ba-c1a0-4774-91b9-1fd4171fade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978df1e0-04a9-44d5-bc18-b61a33562371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5b7bf1-8976-4cd5-9389-c25add819c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "58552665-c5d8-404c-a7f1-14985cd1dc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63558be8-900b-45dc-8f6e-75732a853d3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8a1f66-4ac1-43ad-9c7d-79bf0eab4a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a259459-7d65-41e3-91eb-45dff7558310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6ffd3d-f1ef-416a-b9d3-3b90c8e99862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d40957-3b68-42d8-b6b6-9be156385ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41481f00-7bc1-49fc-b835-895f8d75f037",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23df8532-e628-4793-82c1-e983eadb0336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5ed62f-01e8-46e8-88a8-ba78a3430d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37def1f-5dad-41d4-ac40-11923a0dbb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6140dceb-7024-45f5-bbdb-0ecc6e3a2fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556cc321-3064-4979-a1ff-e4c34f96a859",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0985a7b3-3986-4e3a-8f45-aeb6421af526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5d8bf4-58d4-4a7a-bcf3-0ade6039ae57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d833f071-2e99-4ce6-a22b-f91b5f61d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "684e1938-2239-48a9-8ded-4fdc753954f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1359bc-51e2-4699-94df-d0147866da29",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65559819-7db8-4e10-ab60-8912d15c503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5cfbf8-9368-4317-8efd-66de7444cee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48344057-3c50-4e95-a910-7a101aae0aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e065a0e9-d2d8-40f3-804e-46cab9f9fbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e9e84f-d0dd-46e4-bff3-8ae943c17a80",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631db67-6e1c-4f1c-89d5-6e851b77abc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "091da9d7-68f0-4f52-bc17-4147afcd9177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b029b4-9288-4570-af54-2443d0c38c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9169fc9-be3d-4cb6-8185-cc98a99a33d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac55ddc3-77b5-455d-955d-e15aa6d59616",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c80373-c543-4422-af23-d0cc8c10647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67fa6b9-8840-4e18-987b-8338e70d7059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af668e9-af91-473b-8a41-188df4571970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75765520-fbfa-4323-b3e1-b2cf83bfbb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dcfc1d-6c08-4059-8948-3b8ed899171c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4211a840-82d3-49a7-a07d-96c601c23397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf44f22-c936-4695-8449-fdd269e2a16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f698b-cdbe-4c27-96d6-936f6f275bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d969f615-aeeb-480f-aacf-523f99d18682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a6f346-1118-43af-99e8-f9d69ee6268a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ede2b6f-e496-445f-9406-cff0bc4982c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56433efa-db38-4fe3-b100-07a8499b5bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085909e7-727f-4e21-97f1-4fd3ab859530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df7ea7ef-fbfa-4d36-b0ed-01fc7f0a8299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0075f91a-e58b-48ad-9cc7-bbd774177d88",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b87ebce-280f-4978-94ff-1173ab416657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa94e80-6441-49be-a5f9-a4290e7f9f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cebdeb8-6dd5-4de5-a65f-5d725af38d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf460af8-8e35-447e-9021-15897ea12f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd36056b-88f0-4af8-a378-3a448510a0f4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51a19d5-6f09-4f61-956c-9e1ef2c1d171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a905eff8-e32d-4d41-a6a4-99ed5831beef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf24db29-cd1f-4360-8cbf-ac1537345f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e7fbca-557f-4d2c-bcbb-8aba4971d546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c20cea6-09a8-456a-ba7e-e7d5dc06195b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9ef49e-4e86-438a-93af-9fb5cf44f01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd15a26-0cb4-4dec-9ad5-7b9d78fdd8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbf60dd-ff87-4bdd-ad8f-e68274388fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9588d25-ac83-4b21-8edf-e783aaccc3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f8ba8f-7bce-4d1b-a72a-a9c814947d64",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465ca27a-5fec-43ba-972f-566a4aee60a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6336a60-029d-45d7-8c46-dc250609b744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98904dc8-2e5e-4e1f-9018-e68949e82b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "15954f74-6262-4b98-bcad-b381b9e55bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c514d0f-6e1e-4454-b570-f06e207e8b2d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b02160-5989-44b9-ac0d-24303813b709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2709621d-bb8c-437c-98d2-e79c18194293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf932ceb-8fdc-4f5c-b38e-4e35a3485ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6c41f3-3040-4ec9-a16d-897cf75c2c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad5cfbb-259a-407d-bfa8-5cfa53c75a3e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd6a1d0-132d-4050-acbb-528922731e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be315e5-bc75-413a-901c-56753d50d225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213dcad6-9afb-493b-a1da-4a6f4478f8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa59e85-705b-4adb-965a-2f2da28670ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949eb251-630a-42ae-8592-963bd2d1bd9d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a950dba-9f4a-43bf-a277-cba77bf358cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac144cb-58f7-45d5-bd83-0c411f7d0150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b5fe6b-0353-4815-b9f8-718db557a76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "97cdeca0-5adb-48d0-a61e-1a37c1e469bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779d3b02-903a-46df-bae8-d5bb0838148a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78df304f-069f-428c-b862-d8ac5db4f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac032ad6-4e90-446d-8eee-0e30417312cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723ae2a2-eb35-4f20-8d0a-dd679409a9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "de968547-971b-4add-9815-c98414b3da83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23849fd6-c0bb-4fd1-b01f-d7bd20e44124",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cdb8de-02cf-4b63-be6c-09ba48d0fb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18073e7e-8c9c-4c34-bdfe-c1035ea1da6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6479932-e752-4817-9cb9-eac7b3f2de5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "34b0002d-f077-424a-a02b-e25fd7d99840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16da9050-2ed9-4cf2-a812-a590bddc7853",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031db091-39ca-42c3-b799-f2931c22e2ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0b1fed-56ff-4ae8-92b0-8441ef0ff605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c246cb9-4bed-4d63-842f-711327ce5364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "841cd18e-5f84-4f84-922d-fda0117e9dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d720c5bb-a74b-4fa7-a63f-5dcdfd14e0e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510d5aa5-29a7-4c08-88d1-2c69a459c25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1732ed23-5293-4fc9-95a0-dd87cc66515c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225e1434-6ed3-443d-a70f-fdb11cd33fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "119fa151-429f-4d7e-9c55-643245bfee48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fce32c0-38a8-4831-886d-925cc16f0e3d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383e7bb3-c2cb-495b-9909-dbdb1e1fb1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488e547d-538b-40c1-9473-25be5a273868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425e19a8-46df-44c5-b62e-da052d0d300f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4840ba18-e44d-4c0d-b028-5024c0c2fe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acddb377-dba6-4b2b-aa70-ee12054ca33d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706c6d9a-2e71-4e38-80b9-50264d755d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4d462f-3e8a-496a-8be1-072b8054354e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8335c67-ade2-46cc-8dfd-cdf2e85e7d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "53172b1f-94fe-43e8-82d0-eb2c1c2ffac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0e7d2d-0c44-4705-8368-757796c674ca",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3915360-77ad-42b4-b86c-bf5ec21be4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f77a2a-c342-4eaa-8418-efb487132413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304ad6ab-d04d-4dcf-98f3-6931df3b8c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca946bd6-5014-44b9-8975-b31e01875d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818286b5-481e-485c-a83a-738fe7574fdd",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c799dac-c337-4a2b-8304-920a16f015bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb7eb0e-2d82-4f45-9589-887523485565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cdc4bb-239e-4f27-b145-f8c48c92509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "abe9d943-e9f9-41ce-b824-048da5bb1ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a794163-0500-4a60-b501-b69d4112cfe3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3576484d-cbc4-4f62-a6b8-8da022ff3f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8931590e-bfa5-4dec-a0ee-0635a849e679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3c795a-422b-497e-a85d-f729dfe23b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b184ad6b-b602-4d31-bb2e-be6df562eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e45dfd-3529-4648-8bf5-c577919852ee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80621e0d-a66a-4a51-a7df-6b969c8b585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024a309f-0ad2-4780-94e3-241b3e077225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f84504-775a-4745-aa69-d4261b6c2ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfa3596-79e1-4341-ae36-5f94d63a7e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57eb5ba-e61f-4301-b69e-dc6eb307f497",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba087a5-ebe6-4664-855e-e62810e7f5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2682a13d-b3de-49f3-bdf8-17dad05c58a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687c6470-6913-4f16-b724-59bff9dc3864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d35f98f-d9ae-423d-a1cd-7d5d36f7d398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6428c54-bd43-4063-a771-b6fd580bbdbd",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8302741-dc62-4f79-8403-c2e4caf6c1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0b3d90-1ffc-4e48-afbf-09438427a42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dcf4c8-15f1-4a14-89e6-be8a2391eb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d42b9d-75fd-498e-b0bc-9c5e79ce948f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4225ff84-f127-4ff3-840d-7005f103e7f3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602c9495-c6da-4a3b-ae03-d9811ed2c706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561d85ba-a2dc-4805-86c8-3192fb957278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1111a70b-c88f-4460-a9cb-dbfa6c809011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a582146-f5b3-4545-96c7-db7da17c6504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd390b9-f258-41cf-951f-12a98ef8efbc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284a4cb7-5c9a-4465-9849-9ec74431460e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1961a345-6e14-4396-87a6-b06a68c18692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9a4492-482d-427c-823e-c66630de154f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "944a7194-e8b2-4e72-a1c5-74a09777696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15153c43-278f-4bee-987d-2f6308bb9185",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a01cfa-1aaf-4d45-9f66-8ed6fdcc4f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9080a884-fdc9-4251-83df-bfe0993bba68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297d7c62-257b-419c-a5d7-113e0f013ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "076520b0-7d10-4473-9e5e-6b46effb519f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446337bc-89b7-4c70-aa15-43b91837734c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a2d7b8-97c7-48b1-8bbe-bccb068745f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce94d215-1a82-4611-8457-edeed1feb7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf4199d-4c88-4127-a58e-df168c70263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa24ecfe-b7c4-443c-b96b-0e8a164ded8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a911a4b6-eaed-4f71-832d-c863f07716f8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df18fa-bdbf-4fbc-a1c3-cd9f5ea6b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265406e2-c12d-4148-8f2e-5aaf76ee0156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0d1d54-2be2-4458-b95b-b26769f67e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5799fe99-8547-4dbc-bc9a-9811b83f556f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2501a5d7-ebe1-4ed9-b6fd-7d63d61101e2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e6bd5-41bf-4eec-89a1-590e278fb429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbf1ee2-e3ad-41f8-86fd-c6f202a8913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598a2c58-16fe-4433-bd3b-89200cfcabee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f09773ca-1ee9-4eb7-8724-350917bc8e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5f1f55-0af8-4688-9da1-30da748f18e5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1fc9b8-8261-4d5c-9f73-bed194abfcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c399a2-dc40-433c-843d-fe0ddc93a82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86dd560-bfae-4649-8fa3-ba39723bb960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c25e75-64c6-4f67-814f-4c12f31fc833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edb6e70-9762-4d5f-b893-adf3b7b787dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b4286-aef2-4719-b181-b935a77e906c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2715584-ecb2-432d-b594-35b980857dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28af068-5543-48f5-9867-a3f16ce8d7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c47be4a-f8b2-457b-8d11-047471e483b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a38ae07-e5a5-40f4-87dd-455568b0c9d5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c6cb19-3151-4c92-a3a9-983341bae516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c124f5-9970-4f10-9d5d-b9bf2d475ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2749ec6a-a55a-4ac7-a9c7-d3db8190de7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40426ef9-a817-4c55-b2c9-75718e836494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b1faa3-d1b3-42be-a0d1-008d31f59df1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abdff8c-824e-418b-a337-c326ed184275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfed014-f714-48c4-97c3-b3e58aaad504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef93e8a-ad80-41aa-b45b-26f805c884a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16351a35-3776-4b35-aac4-e8659f99261d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3209e21d-d418-411b-93d2-7a53c571a1d8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3753c3c6-295e-4848-8c72-5295efd3e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beeff6c6-aa92-4de7-b015-3adae86e6904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6d02cc-fd23-4cca-8c2c-a4614f4a064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6fffffd5-c245-4db0-a86a-f4bbd80406c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd55aaf5-58d7-4318-810c-fd4a389cc5eb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c276fe1-338c-4db6-baca-4f97f2efc7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66af6d7e-da3d-43f1-a8ed-dfb3875b951f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda124e6-6ed1-4166-a963-47cd3eefee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8755e301-d3dd-4ee4-a5b8-f76f70471498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbe09b0-c88e-443e-a85b-6c0067c50663",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e93c4-071f-4e6e-ac75-a1ec0e40de9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6057da96-8c4b-4de3-9390-497db414f3eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f1e255-0894-4b5e-a998-f8f0602723ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3044193-3e61-4a9f-8474-b737d6d4b3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bca7ed-821d-4e26-8a55-a203381b87ec",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b10501-9ea6-4258-af1d-ff215f11ebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ed851e-9aa3-4c75-ada9-4b3b3c403f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3986f7-6dbf-434d-b7a3-e1c547a3805b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a93b7604-7461-4f40-9c85-5445cecb3065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d6f72b-058d-4725-ad7b-615e58f40ab1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "291ecb1b-895e-404a-8a41-bf77b93e41d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1414f00-f133-487b-92c1-bc3fe985855c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf0032d-be53-4192-911c-4d9a342380ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35a01382-6b3a-4caa-bcd8-f2a445a42df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd51588-2347-4927-8ba1-0f53dafc874b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02558496-4406-489d-bf3f-72f3c4b98dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11825c9c-e918-4cad-8239-ed7b18768c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622edfeb-ce9e-490f-ac8d-39616ebed0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15047436-d840-484f-8e5d-06ce3d1c8b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c299d77-6dc5-40c6-9bf6-82dcf7aaebaa",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbcc681-12ad-4470-a8d5-b2762d7901af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb4abb2-5062-44e5-9ce2-4ff9df6f4228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79d6c60-2329-49df-810a-1cbcd3b958c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8f565f-2c53-4271-8745-8ab52c484f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0d9158-5e56-4d9c-8187-a6e7ef5a5968",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b75061-aeb3-4e70-a6fd-a1900b49540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e473b40b-c81e-4a62-845f-76257fedb008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebebdf8e-ac5a-4fb6-9c6a-f16b33cb0484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c47dc038-9af5-48ec-8d9f-4629327582b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c3b08f-7404-4e4d-b82a-821832620df7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8029202a-92e4-4505-bb59-9526f9f8ea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6e3dbf-3e64-4fdd-be2f-46cb39a2fea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be56ab5-8f4c-43f3-a5a6-8dec2b0d31df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb651a3d-aff4-423f-9a38-bbead7e38613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8fb207-f3e9-433b-929c-3e1c8912d241",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be79ca7-d9ad-4504-9cff-1c214754ac2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d53e9ee-2125-41e9-b3a0-e5c7a42c3397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3629202c-893e-460e-9890-2192f302868e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ad0e39-458d-4975-942c-be374dd09bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15556809-9e8c-4909-b528-520616dd91f3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381fb124-35e0-46ca-8963-c2b137721f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdfd338-ab01-46aa-add1-c2953d634ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4673816-97d0-4ffe-b20a-758a0a33f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84b85598-6656-456a-95a3-c38b6c68fd67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765d4742-194d-4449-a3f7-7ce99b9a2775",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7900b94-4ecf-4ac0-9e25-1f5692ecee11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b9128e-4c68-41ea-bf91-e35ce394c7a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758f690b-69e5-4689-9c69-cfda3135622a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf99a0b5-80f6-43f6-b370-b5cde27ecc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053cb59f-99ec-4245-8df0-eb3030e584fb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcfb5f2-525d-49af-9189-5aff6c8a2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ebff9299-5eb6-4b2f-ab21-dff2c52f50b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e08024e-91ac-4199-9808-1b6541fc3db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b541dfc8-08aa-40e0-b780-a764a4909beb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8478c17d-91c3-4c00-9f3f-1709f2065fcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8a78de8e-0cef-4e09-8b23-d25900981ee0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe14ebc2-69b5-4c84-975c-85d05beb3be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b47855d-6d23-446f-a227-7996679f0f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868ef432-9712-4e57-8c28-387c68b8224e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2a10b5e-a286-485d-b7f4-ba6b594ff97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3901d3f2-e1a6-472d-876d-f6206cb4aa15",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32199e-d8e7-46bc-8925-699a2a2ac5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcbf1711-859a-4127-9bc3-24793f9e0c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9399bd06-a56e-4c36-98d1-1ad9f36b8e9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f440773-f935-4ea1-af2f-28f3795b092a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a96555c-7c0f-4684-9440-8e0d14a10edb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c52da7aa-889f-487c-8ffc-8498bdd53feb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "407e16b4-b508-4ff3-85a3-735891223a58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f28626f8-ae1d-4424-a353-7c6f9cfcf43b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa50d028-8f07-4cc6-bd36-1d2f6f771cd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee56e4b7-4bc5-4def-9c5f-7f0a3b54efc4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f52fece-e3f8-4264-9df9-d17e4e65bad8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a400dffb-8e91-477b-a227-c39f223a5176"
                }
              }
            ]
          },
          {
            "id": "ec7e0eb7-9ba8-48cb-b9bd-413bcacbef96",
            "name": "Positive Testing",
            "item": [
              {
                "id": "10522d72-f611-42cb-ac3c-c1b5a58e0de1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "564af48d-ddc1-4ae2-b38a-0c64fd34bceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33245c18-a261-4631-8459-79221862e293"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95e722fc-975f-4f99-b9b3-d3ef4e2faccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "203e28a3-5499-47fe-b41d-2df79b5b653b"
                    }
                  }
                ]
              },
              {
                "id": "ca8a3374-bc37-4005-a6f2-70a1be8245a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee2849ec-379c-4d4d-9255-9823d4c4e1ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d0d7d60-a25e-48bd-a699-437bf2ca5165"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1718d6af-0c0a-4a44-8808-ce6131a8fd91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e013ec6d-2364-4415-af9c-f4ae1b1bd2ef"
                    }
                  }
                ]
              },
              {
                "id": "ba77c1f6-da4b-43bc-abbb-f99c88fa0d6a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c376165-4dc3-4cc6-9273-675b5f02f8fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "274bfc79-9f5c-4d9a-8470-afc508ec7a91"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a11c3ff-8f9b-44ed-922a-4115accf2063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6a5b5530-2cf8-45b9-a221-45fad2f6436b"
                    }
                  }
                ]
              },
              {
                "id": "c18e33f8-8375-4fc7-8e89-498f91859da0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5bad8d7-62bf-43ad-b1a9-38e5475e184d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8196c41e-b951-45ef-8e5c-1c8e31e8a333"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce11afbb-a0c3-44f9-9b4a-9848ffac55e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4e44deac-12f9-48dc-89fb-3e1171cc5f69"
                    }
                  }
                ]
              },
              {
                "id": "53dbcbac-0c83-41f4-97cb-7e5bc93f05cd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6cc3c8f-791b-4399-bcdc-b1764ed3bde3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d892d472-65da-49dc-8230-51d3f13d4184"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad204e8c-775e-4834-ab5e-87bafb12c551",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1efe104f-f50a-4baf-b714-e56d95490a58"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1ee298b-e839-464b-8fa2-c6322864c3cd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3a94af3-cafa-4ae3-a6c1-0a34ced5aea0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "217e893f-e734-44b7-89f8-05983fe51a8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "787da850-c8ec-4a0e-af69-18959f502b6f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "def1ce03-ca55-4218-913a-fbee224e6371",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3ba5a301-2be2-4663-bab6-fa2073c9b67e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99def631-7cf8-4d20-b8bf-f370dfd6e404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca05f8dd-c6b0-4510-8912-9b89847e1ce8"
            }
          }
        ]
      },
      {
        "id": "b67444f3-46e8-4463-bfb6-88c97979b2e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "443f8cf8-8e8c-4564-a851-9b7f33d874fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5eaf2e8-e99b-4e1a-87a4-a1218f47216f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4cec1910-a8c0-4321-b0c3-771cb728671f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba72ac1-d5f6-4df1-8523-e2ba637eeec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68f888b-d62c-4ab5-a6f0-d4dacef0b0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa882a67-ac69-4ed6-bba2-e9aa9da433f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb603f5c-2a3b-4bf0-ac72-5f3e33541a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde8349b-471b-4f8f-ad66-9d4dd6612ac0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2534860-cdb4-4ec0-94f0-29b12c8aca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0d749f-083f-4926-bcdd-c86ab4ab509b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b260eaa-346f-413a-8406-d105f617969c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e87671d2-ceeb-4df7-9c7f-57b53f510b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3d7905-e4a8-495a-b7eb-a643114b47d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5714ca-7a67-4a86-b727-a302a962402b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6579e1a-cf97-41fc-8ccb-07da73cb8502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e7f7c9-c423-421e-b0c4-9d1a7d089779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53c2154d-6891-4680-b356-fc2085e535d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6d2a9b-ddbb-47ca-848c-02a610303bfd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093e9611-b9bf-4c3e-a436-b0918ee59289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5736c41d-1986-4fd0-9aea-382aceece224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655fb7a2-99d9-43b4-9cba-26086a7faac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf9ad53-2243-41a9-9873-609a002abe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df05f22e-8352-4487-b788-1f3a96713294",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad284627-8fd4-4833-8287-85a996bd80ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1643d926-521b-46a9-b937-ec1c4bd0c60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5029f31-8d1a-4445-823e-2423802fdd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d7f17f-64f7-412a-b876-4f228fa3408a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cf31c5-0533-41ef-bc85-9968c4abcff5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f437521-4807-4b78-89d6-b01abe82fa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b98769-2bf0-4a27-9ca0-855042df6c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fe3daa-1889-48dd-b6de-b69ac1f2d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c06e787-bda8-4bdd-ab1e-01fc85767072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f7ebe9-0e5f-47ab-ad79-e58e052bb315",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99826588-c9c4-4c0c-ac28-7ef8255169a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d918da4e-a44d-490b-91a7-d80fd4ad1333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301b2969-4995-4bc1-a626-0cf26ed5d77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "469c9cae-11d6-4d9f-a05f-608acc66d857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891246c0-fd7e-4747-9164-24d8c3027261",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9849fdc3-8b42-4286-bd84-0db78fb83531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f65ff90-ef34-48bf-a4a9-df37550ff48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3995a5-c0aa-4a1d-b5a6-6e2b1247305a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bff61221-06e4-4bb2-9c5f-127105887222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e456e8-c422-410f-a627-e76ba12aae2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3e2abf-d190-4639-940b-d5d2b6b2390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6596a4e0-d162-4fb1-a7ef-08366acfe053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03d4e96-48a4-42c2-a637-d45f08e17da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2b1143-f0d5-458c-b01b-29ea3496d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32a7d7b-ca19-4675-971b-53269b639fcf",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9c1eab-cc41-4cc8-a380-bd04eb313d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd100ab8-6179-41c1-b44f-8c246aadbae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f411ed0-3955-49b8-b998-6ed6f4775bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9edb3f-9471-4801-9f3e-8776bc40c0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc6f341-ed49-498d-a68a-db20b8edc94f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e082c91-557b-4e3c-8044-d37165523b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebced4-3628-4f0b-bcb4-3b9e239e5265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a794bb9-58d5-4a35-8d68-cada9fdcdb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42bc1d4f-9634-40e9-8220-a372a572aa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8042aab-a5ed-4997-8e9b-26e7d64a24d4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dc7afa-b4d6-4730-b1e4-e12fce3025c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d70bcc-84f1-4046-8476-3a2b7eb536f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c9e4f4-5669-4568-80bc-1cbf2dddf6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ec14da-6baf-4698-a2a4-9bbecc65920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafa1af4-abfb-43c6-96b3-7fc4b3c2539c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2ffcb1-7713-4fa4-a688-ea4ec71083fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8148ec4-85ef-494b-921c-eefea400cea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2218644e-9296-4fe0-953b-43885b5fc973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29328f59-f6b9-4adc-aaa1-5b6ce77e149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d6d0bc-62e1-4d39-8c59-6a503dc94255",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc506e9-2b61-4326-9df5-12fc36aab53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816f2e9a-2043-4f78-b622-6aa6bd61f3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd9e3f5-9225-45d9-b7a9-75f282366e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3671af30-afa4-40b5-a83f-16da34c5db61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21b5648-e801-43f4-8802-4d7071624495",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8154a6f-079e-420b-8a53-867e5283a870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2e07b3-e85e-466f-a11a-20953db1922b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f4fb92-605b-432b-b7f5-05dccaf5febb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a85127-fd52-4691-aec1-a17467a00ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c798ee0-3da5-46ec-8de5-d1f0b4f37df5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af87595-3450-4b08-9806-0f6c04a2964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a2735f-ca66-4f6f-9dca-040b4d6f879d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7562a6-d16e-4901-83a4-9bc494885147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "70cd2246-bc6a-4844-8cfd-100c8efaebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba2c3c8-0a09-4712-83cc-44973deda2a7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2181e2-c0fc-42c7-a13c-78782ea3b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d478b8b9-ab9c-444c-a48d-1f59f5243a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dfc22a-8167-4316-9594-a004e8891b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1031569e-ad29-4958-892b-0317dc8884cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f405ea8a-4d90-4cf8-88ff-efb2f874dc6c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b952426c-3eb3-4303-90f2-af0b871b0e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365d6f02-e228-4c92-8641-89a3831db2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e76073-8e78-47d2-ae3e-710a6c2ecc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "71fcb9f8-cbae-4dc7-926a-b03e4e8613ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5698beb7-e930-4597-8b00-959db89b0881",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37189ab-463f-4da6-9bbe-913174d203dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b2422e-8be4-44b9-8497-12d90d0763e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb11573c-8da8-4ddf-8a71-905a25c1ca3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0bf432-349e-4892-9c9c-8ddee1498c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb4d739-860c-4a70-bdbc-3eb7a6e7b9bf",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a342056a-a180-45eb-a6d5-38267bda2d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41edf56b-e5e4-411f-ada2-5194b8146067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db2b439-d0af-4206-9d81-7fc36984a803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90e225b2-1f53-4762-b076-5820b035bd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43704ba9-6d32-4689-bb64-c1bce350182f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a095d8cf-91a6-4cba-bda3-7a42acb3a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe751b4-04d5-4816-a10c-4bec3ffa48f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30109cf4-c904-4caf-a75f-9458efecac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d44c4167-00c0-4fc4-854e-b9be53d66856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3436a552-d471-465d-9b35-497bc0cd134c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454a41d1-f4bf-4ee2-ae28-eed673659a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab73f505-dda9-4c5b-a7ce-7a26ec252bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba44cdca-9e91-4e31-89c7-5bc80e23458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0d4cbd-abc8-41ee-9a75-07c8fd431d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b377361-f44f-4262-87d7-4757fae6b6c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9bc8d1-d9cf-4e1d-bf92-7f2f587fe950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5287e0d4-7cf9-49a6-bbbd-b2e721b8ad26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f208b0-3400-4dac-9cfc-cd3c9a5997ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fed9439-cf24-4d98-8785-91d353f04a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b603bc-ab3b-45cb-b475-a4b962862fd2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d8631e-37cc-4c66-9133-2408738e6206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15209d8-e7e9-4c95-8feb-a9a18d1a3724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3456cfa-4080-4ae2-9de0-de5e00bbe519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae50de70-34e8-43ac-be6d-1489579d88f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea594add-f0ed-470e-9077-4e658aefdb6e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1bfa01f-f894-430b-81ec-4c5b020db023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d766b4-aa4c-4a7f-8171-df1aba2d3b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699b9736-8ac2-42ea-86c7-b761238bec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "121ecf14-1328-492e-9e59-4bbfbadb0384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51793f84-ce63-48d2-a557-a51d9beaa9d0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e7fd98-31d8-427b-b061-24fee4dd0bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c6afce4-f4d3-42f4-a9a3-b0a7fade0e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eca8b13-a61a-4088-b04b-e50322a6ea29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2553a23b-fac7-4faa-836f-f30729bcb2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d944064-398e-4188-83b9-f2afafc3b347",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3118b4e5-67eb-4d53-bd69-d8718a488147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298915f0-3d17-48ea-ae8e-5e42da21ca72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9fe765-28a0-4333-a5c3-0b93cce8068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a5d732-19fc-4b0c-b7b5-1b5293c8532f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f62d295-4dbd-4893-a0d4-5104e95017a2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dd9246-6a05-45b3-9e62-f73bdc45aba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49596abd-86dd-44f0-be2c-4714e6301242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01b37b4-bd7f-43bd-8896-186f7a81d657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f94c1a-4c56-45cd-9c50-85219f6abaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89a088e-8d06-4a7d-b636-0ad4e74d3ba3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0af1d75-cf05-405a-82b6-952ab76cc240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcb98b3-9703-454b-a5e1-f665fea6407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2dcd2d1-aed2-49e4-aba5-9d4eab75946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a16dcefd-7dad-4df0-b097-0b86479dd075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2f28ce-aa83-4a40-bf51-054bf6269ebc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1294170-1dee-4470-b32f-f14537a55607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e409d0-fca1-434d-8b85-27976bec0c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24bb1fd-98b5-40f1-b0fc-420ff4adf540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "122a30cd-7403-459b-a530-e92e053ceadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516f881b-fb8b-4243-85b3-b4af2f399042",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51cacaf-8e7b-49f1-b4b7-81d6d2512772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f1fd2b-04aa-48a1-8dc2-970d4b86348f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19d84f6-9354-4ba4-a90c-f8bd321bad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f914e570-befe-46a0-ada7-2b5cf3c4b4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450429ba-ac16-42e5-a848-be0dd40fc51a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed614d83-56d1-4c21-997d-8d78f2d4cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5af6de-d280-4677-9da9-3fd5ac02bb0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ead3a7-7a1f-4827-b736-ac1e701ac1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a993a6e-dc86-4f01-962d-6244392b7716"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eedc8bf1-6741-4b40-b798-5c725cbcc14c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9383d41-dd37-4109-acf9-e9303e6f01b2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fbb683-e5f3-4554-ba4c-ae1011db17af",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "265c4ef1-19d1-4b0e-9d13-e0a241b628c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e1b749-0dcb-47da-babf-3365ce35580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "386d96c9-2483-46b5-b220-2c8572818437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6fd689a-b304-4e8e-8155-6162126d3203",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c60c255-f33a-4a66-a988-74fc67eb2016",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1887c8-1b19-4221-b222-76cefb1b4c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8e24e8-63b3-4428-8b2e-de756509b445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae8eaed9-5ad2-4d75-9c8d-ac4d6ceb9dd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3bd7cb2-1a70-4b79-868d-bf4ec37d189f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1df7b2c2-2837-4a01-b804-197c61e9226f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "251bb6bf-d8d2-4825-bf23-dc7a4e2d3e68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e74f8c5-8ac0-42a8-a443-3b58e9b1dc25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fcc3b7c-5a47-4745-8cec-44abb58183ed",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2115278-b4f3-4753-9448-ba65d242bc60"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b294722c-07c7-439e-b6f5-b9818e1d1f03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c438bce5-72b6-4f72-859a-ff367b08579b"
            }
          }
        ]
      },
      {
        "id": "819c9a0a-bdf8-41e2-a643-28a544c55c56",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "87c5ee65-2167-4042-9131-4b58f04831da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9337177f-d7e8-4bd4-a99c-04e2a9d2c524",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1a61ac2-0217-4c2a-837a-1dcab603c944",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef60deb8-9ff7-4fd3-85e6-768495568916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6946bfd-9e4f-4a64-b2ee-cf56e43adf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c0b795-1606-4ffb-bb07-4414e4081047",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8745118f-21ce-4eb7-9717-01403a431a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82b66ff-4cc4-4a72-ae46-7b4c424edaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ab913b-4d48-4a00-8b03-a434420174a8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95fa17b-b03b-4f45-92ec-ff5e00b2623f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfed3fc1-4b61-458b-acf3-df27675143aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdb2c68-e409-4900-b71e-4835e72f26e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc075e53-f7e7-48b9-affa-4cd78a0adaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07530ee1-3208-4db9-9d84-e5637a874cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfef9ef-347b-4513-9763-96b11e91d9b4",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d47451b-34c5-4108-920c-aa4cfd7e7339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b65ad31-01c0-4126-ab01-89289fcaa640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de62391-6b40-4f3b-86bf-2981b347d354",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260a0523-519c-4cd9-9afc-1bad6c4aea3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc9ee66-6a74-4a5f-8fe3-5005af9ebe1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b291e894-10a5-472c-a6f7-514a89a54630",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56153edc-c01a-46be-923a-5f1c6010626a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7675ca5-b3e7-43f7-8ed0-4ffb0b7dc8be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ded7cb-c245-4ee3-80bc-9fb10a05857b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc6a404-6f10-42f3-ad19-1dfa30e96ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d13db48-08a0-4d67-8059-24d5a51e49bd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a6ad8ae-affc-458f-8ca3-d6e2221eba1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280aa229-8e88-4fb7-885b-f65c6510b27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a4d3e0-b801-4d8c-9635-28ee122bf9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc79b639-3773-4755-8e63-153cbf03afe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27441eca-3088-43c2-8d8e-3c137d803bb5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96079153-abb7-4429-bc6e-b9879b5121e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9383b74-29dd-4753-aeba-074a6eca3349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15883f0f-1dc5-400e-aaf1-88400619c671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5c6633-c24c-4536-8ed4-d62e1cb05aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e921490a-ce96-446e-82ae-789669ed3d62",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835c9c02-d785-4525-bb4f-6c074a8cb8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d335949-1089-442f-9571-6e29040f1f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505b005-06cb-4442-903e-7f674b807143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fbcb4a-bf76-4740-befb-c71eead7c941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3765cfbb-efb6-4ab3-abbd-1ef7f88244e1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b0a7a0-b8af-4cb1-aeaf-19f96dd14f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48570990-1b7c-4518-8a54-3ad6fa004a76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6ababb-fed5-4ba7-872f-8022701b6128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4216119-d9a4-4c6e-8dcb-06e620bcb146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aebb00f-47ee-4df9-af2a-4a20aa2c62a1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ae8ae6-4ed0-4001-a0dd-e7b360914182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2ed03c6-2ff7-4adc-8de8-03c73185a5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af4a415-da8c-4460-b5df-c1e525cb7f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef37ae95-3fca-4c05-8ae9-67e975756d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e77e4021-8b6b-4a5d-93e0-55c3af094bd4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86af5f3-f461-45b4-9a31-f57da37389ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78efa84a-c89e-4c96-aa8f-4db46670ca16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe04bf3-00fb-4b39-a554-f0f5b7f87c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5891157-4610-46c9-9ae1-ca3b3d130e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f17c25-0c45-4603-8954-156297a8430e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8d9cc6-d8cd-4c63-92a4-e86a61f29357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee36bf91-a1c1-468a-ae2d-460c3d694ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407effbc-27b0-48ad-a70b-c4a5529c5abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90d1987-2063-4ac9-bc08-378997e31d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3611d141-1d51-4a6d-9abc-431e4ca3a4d4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cb4ff3-f4f9-40a9-b11b-3d5332fe63f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878f414b-70c8-4204-8ced-a6366f0bd860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004c2d5b-feb8-461c-9464-9a3655ba17e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3941ea-f41c-4256-8a98-7982ac17928e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35224b7e-8bbe-42a8-8e8e-a6571bcdca44",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a92140-ccb0-4be5-a977-1c7aa77d50bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d21206d-ef2e-432e-9b50-a149526ffc6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fd1bdb-960e-4607-b911-663fcb783a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae6eb60-cf3f-4838-a1f7-3e804bee5bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b158360d-d326-48f1-99f5-4fefd2a45fdc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0cfb95-a1ef-42b3-9e3f-0bc4b21aa778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9679db-5123-4ea3-91de-1be4c19a3fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7179f93b-b0e6-4b8b-a678-c137bdf64cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0d2942-7ee8-4555-85a8-e6dfa77c18e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8b3133-71a2-464c-9070-8762bf220e87",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5625d851-ead5-4526-96cf-cde754122b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "132f41e8-d681-4e32-9d0a-b98f44ee7cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bcb565-6525-49f9-bec6-64c6ccfc097b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc15201-a175-4caa-9016-baeec4dfe98d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cba791-6113-499c-96b6-a0fffe1eb4c6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33279be-ace2-45fd-80d9-430c671846c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b241a1a-10f7-42a3-bebe-6c5a27c5c190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d84b2ae-6627-4e0a-aa59-5170ad102f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd6e7db-9688-4589-ad05-fa624de37f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469d9602-d622-427d-ab88-c5886d93f184",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c2e963-1414-4002-a591-9427272131b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32d32a2-2a17-489c-b26f-f7c26a74c8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5dd49ce-6ba9-44a7-8776-73311acc60d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a7b2404-3f30-4150-a068-76dfd45e1b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0241efd4-f8aa-4cf6-9617-91e4e0fdd267",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fae688a-e6e6-4fe3-85e8-32eff1105536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179be967-80c8-4e6b-a212-3db8b9c961d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f750fe1-25a7-4dce-8733-53f51c05020f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af274475-7a3b-4cfe-8970-ca27e9b70719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84c0ac9-ae26-4896-8e1d-db0784ede4e1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c19562-dc75-46c3-bb3c-dc20443897bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c43276a-5f3f-4c83-b7de-523fca616ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33631a08-4f2e-4797-a1e6-826cc40c09c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7999dc4-fd1c-4aaf-a3d7-1091cda1e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0a0e37-6bdd-40c9-b022-58ec04f9bf8f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09773e36-b9ae-4a0d-9381-0e3e07e966ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f651e37-5858-42f6-9546-e60dffb0ca77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca2e717-a8c9-4293-a3b2-2e59734db1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342d06f6-3d1c-4e5d-8e9d-7bef0a08326e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec4f98c-1d3d-4048-a269-0f4ac29e81f7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3531395-be45-46a6-ba23-f6f58376671a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65b4f30-6808-4cca-b34d-21d904211aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b63bd82-5b1e-4235-87af-dc7d87251888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac94d055-2916-4d44-96ab-338538b675fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6912160-c31d-4fbf-9c94-1482f2629f95",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248962c2-92cd-4c61-810d-9da89cf72d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c662377e-c43b-4f22-871f-4b02c859f5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edc1934-6177-4456-8321-4ae7b5079236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0a49be-8b82-4ae0-94f7-c087d9db8b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72f93f0-c1a7-4f29-b0ac-eb781c700404",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a5f2a6-39df-49ff-aa5d-6eb8c40dcec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded92666-5438-4b2f-87a8-b35117e5a747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b8374-6aae-4b1e-a482-d9ff9a2e954a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d30b89-0dca-4d1e-bf66-4f9fbd315b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e4cf3-b5df-4773-8d06-a189e47b9a47",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f367d968-a197-494c-8d61-9e38bad0ae27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3143537-2d3f-4e2c-8b6b-dd53380996c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38bab92-fa90-4ade-a321-67c5c963f39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e315abd-d70e-4884-aeee-af938355b482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07e56f6-fc78-458a-a419-f1fbd511af5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696abf82-c432-4fca-8c6e-9c904b855d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d21e2d-b394-4be8-b6b3-bb0922cf0b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3320cf22-b196-44ef-9dfa-5e088e886514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7b5649-74a4-45eb-a144-9cf20288d81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd02c6f-ba59-47b7-bd6f-b86880ad4eb0",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a32de75-2e08-4f47-b433-d8fb82dca4b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3744e809-977a-42a9-9765-32fa6567ddc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8fa57dd-0978-41ed-92a0-21e9c2538bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811ed749-4cc0-406e-925f-7be78e7cdc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6053532c-8ad8-46e6-9e16-009504b57da1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4cb642e-28db-4014-96e4-be18821cebc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925fa9b4-2d92-4304-9d3c-f0e2901f3961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90c60e6-5442-4c21-8f40-d6cbb0ea3bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16351983-56ce-461e-ad6c-117e34c3f132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51088deb-b4a3-4b89-ad3d-c9276316b946",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781479b7-f2a4-463e-b57c-7ad0aa36b9f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c521c2-4d6d-48ce-89f3-db2342577e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfd87a-6446-4f50-8498-1fefa0fd2aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603e17a8-b884-4681-bf81-b63dfc2cd1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e80224b-b0bf-44d2-afa1-cfe83a6aeecc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0662dc-18cd-436d-8419-650bb6c0c420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92703f4d-eeb4-4853-9cf9-3697a038ef54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6e3aea-677e-4c4c-9bf1-33af1af0c4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64b17d4-3250-4327-a59f-87e0312fce15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a72ab5-d158-4cb6-bb8e-17c70c5fd1d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a728f8ef-6b9b-4905-8b20-f90ccb398373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3be8e5f-e7d6-4d67-bddc-7c76879255dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6780cce-1f08-4a3e-8db9-02966a65f036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32416047-b431-4034-bbf5-058b60dd3e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f22f33-af64-4421-9217-f882bfbb341b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3cf960-5d4d-47ab-a2fb-eeffeb79d8d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8ca04e-1299-4b58-86e3-2eb315d1a16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4e52ab-3bf7-4233-8609-2412062a326e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4ac296-913b-41cf-840b-389bb14d8d3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eced689-312d-4b90-bea0-49c22f066b51",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bb2d15-9db3-4dc9-be76-a3b6c22487dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466854a9-956f-41f4-b2e1-91e99cd9bcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78dff86-1a9f-49f0-90e1-69bda5f34af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97f2d8d7-6c31-4d67-bc07-0d346d3de25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9fb6da-380f-471b-911d-b9381367b913",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1efff7-b5bd-46b8-a00f-ae2d01cb9bd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd88f1b-b191-4acf-92f1-bed7628ee891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437a3e61-cac9-4a76-ad9e-b5c31c7fa3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31af614-8706-499b-8ba2-bf2bd3dd32bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36de0e7a-8f5e-453e-bb25-33ea2c137661",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f95240-59d7-43cc-b314-a5ac0a5cbe93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f4094ad-1570-4fa4-ac0d-7b1fa2e36292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c33eb8-d367-4402-a19a-16e91b54b0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d481a461-474f-4d4d-b03e-ddf04cd13766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9624b0bb-27cc-447b-b7df-a06b8dce06bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca81d2e-72ff-47a2-a136-fbe323a3b3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260484a8-3d2c-4e21-abad-0985e1dbf95d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c30f6d4-ca68-4464-9ed1-d9fa719cc42a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c2dc48-aa32-40af-a6cd-4234013065b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aae13c9-a2cd-4700-8863-90aa7bf85ce1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39538867-3263-49ea-91f7-c8db5b3c346c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92b2fea-f656-4bc5-96b2-244e2b6f6984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb188e-2695-42f0-82a9-5af0c69ae51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0718038-5e36-4f0e-8286-c4431691ac98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607563ca-8af8-47ac-ae9e-7d9d09623e60",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c1c6e9-4c6d-48c2-86f9-15e1699cdf91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3c7660-5c8e-4ad1-8b44-29ca1ce13a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f532ba31-7908-40c7-b558-fd82dbd186bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dff8c1-7ca3-4101-bc50-e532c3dcc5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aedde1d-23e5-4cc4-8fb6-10df52207367",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c56c4ce-9fd2-4716-9c79-693c2d4f0475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecb1f4c-69d2-4319-853a-c6faec0c40a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591324fb-a220-4c48-87d3-a7f29a4c68f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7337a91-e86a-4407-8f33-27bce9df2477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c254934-f2ff-4dfc-8fa1-36357311565f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92bd63-660f-4860-ac02-8a0b99a39783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c6bb84-a86c-4216-9a52-b7f1860befd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b0321-ffc5-4450-b96d-d6e3895d2fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c15bc9-72be-4567-bc5e-fc0635d537f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5cc6ee-47ec-4f31-a41c-240e7df7bbac",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8890089c-6308-4f67-ae80-0b2cb379cc52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9aa14e-7027-429d-a155-6b80f2a8276a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b0c393-5dbb-45eb-8fd8-d3a06f5007fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98b67a60-ff79-4a06-b337-0ccff4abc9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4314bd5-ddea-4c45-93a6-d4796fb44bfd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1faf3e-9e44-4291-9137-959aaaea2a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa65cfc5-f4c5-4e8b-a16d-5db310d63dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacf5f0f-4001-40a8-933d-237646ef816f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a24f65-85a0-4e5e-89c2-6e81d4ea180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "295e5dee-06c3-4067-91d0-73e46abd9b90",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3f3b88-7b49-4654-b4fb-b6e296d6fdc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0333df-93fa-4ffe-b471-0c01c5d34d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c9676d-1dbb-4ef5-bd87-0c8821a45eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3feafd5e-bd3c-43fd-b527-4852a37d060f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf6bce2-0dd2-4d0e-8658-2190f7999d69",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5521344-130f-4529-9362-76fadc0df415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3c180e-327e-4be4-a5cb-f59594a6a789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06776c4a-153b-4fa1-8895-53def03a9909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6674a6-d938-46dc-b482-bfeb2b272d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7682b5b1-44d8-48ea-a29b-d8af1c73b385",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390f03da-7ecb-4729-a96f-e75bdcb5fb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457241d8-583b-45cb-8073-86ce9b7cc89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a57600-04da-4a34-86fa-4a28d54d2418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d5108e-6f18-4f36-8824-e09fc281b00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51953b7-8782-43ad-b60b-2c3b2fa03f31",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136cf5e9-18ba-40e3-b45a-2b0621bd64ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b087dc49-9ff3-466d-b854-6a641b3ad77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6761b8a4-fe15-4e18-9a14-8c69e3521bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d8e259c-2e70-4e3c-926f-dee927cdc1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f45697-6ac7-4c00-a362-8caa648985d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7028581e-5bb0-48cd-9e8f-a9943a48cc8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f322cd2e-a22f-41a2-ad58-49130c43d3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d89fbcb-c3b5-4c31-a277-e4ca0f4e2e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0850d1a-9f48-40bd-905b-bcc9a998ccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78148fd-ea96-4b45-bf2a-ea5bf20afaba",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b971dbe1-ec49-43e9-9dd4-727295bc06e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc801bbe-d093-453a-810c-6686f64b81ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27a7757-83a4-4b97-a04b-3ded263e585a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4989c9-2421-411e-b195-9ade0686244f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13a2972-21d8-4bc6-aa84-ec5b96df7630",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e17ba3-d66d-4347-936c-89d47d3f1e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56ce134-c7b7-4d29-868d-4c7b55c524af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f8665e-8def-425f-8c24-aa699a018fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cecfdb-2855-40a2-a5e2-b60a76c162f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edbc887-9029-4a41-bc12-9bedae01653c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16133ffe-6bbc-429a-b879-faa3b3f1043c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c61aa76-0ec9-4665-aef9-17fc1dc78c02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1e838f-2bcc-4482-8d6e-7b5da0ae6208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe9cc49-b66a-4a8d-974e-b80cb0fee0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861ac767-caf6-4c14-88a8-ce6ddbe96982",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655fd1c2-1d8b-4cb9-b8e3-93f483cd00c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4cea73e-bdbb-4a09-955c-f7e279182b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d86bb2-48c5-4420-bb60-9c1e943d32da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ab0f70-9a9a-42e2-bc52-5c8b4461f111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85eaf56e-12e3-4775-9056-93903461c3e5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9e5b5c-b921-49b7-b597-7634f56a147f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e717d5-a1f0-4ea5-8689-a6f8e71c99a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ac020b-d83d-4a75-b462-efec3f0bcd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8baf3c51-5dc4-432d-b501-97f484cc16b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bf4df9-f8d5-48e3-9bd9-e1482a7cf3c2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752ddde9-b6b4-49dd-b42e-faaaca284013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a52f46-3dd5-42dc-a118-e30e288f55f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1302b1fc-fac1-4347-81c3-e92a65826c62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4685c482-a14d-4140-a89b-b3be0d0f557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4022484a-07c0-48dc-9ad7-b33fee245aa4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0984de3d-b254-431d-a1d8-00c5c2a9565e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3ca00a-01bc-493e-a91d-b712572cc254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01d1d27-71fd-471d-9fbf-57859082c09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2325bf98-72b8-440a-9bf0-61ae020eb981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a345d627-1b31-4f1f-86fc-92e74559ad65",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "865bd924-53ee-4df3-aca6-b1aaeef36449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c9668c-060f-46cf-94c3-062f1861aec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bd54b7-49ee-4d33-b446-9566a8bf747c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326e089f-a0de-4d5a-8029-ed02f133c537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb5fe1-b5b4-40ec-bf82-74f8bd80bc45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cae5077-e3e1-4cd6-999c-c91b64216b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89cc7e70-b71e-40df-b97c-531bfb4b951e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3258f2-58ab-4a02-8309-cd879815c1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43bb58c-236c-4343-ae02-4259aa7f2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437c234c-b5a7-49d7-ae17-daa5d069fba6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96669c7f-fe91-4e5e-b252-fb4ae54cdde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ffbe68-7501-4d9f-9372-c927054847dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b3272a-2dba-4965-99f8-b0a904a9aee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4a6236-f811-48c1-a74f-a15336158547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b6d140-761f-48f2-92c6-87595768d359",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99412da-c387-4e5c-b92b-8e9224878a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa424bb7-4c15-4aec-affe-63557f344d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7811ad91-1e70-41f3-8d49-f01cbbc313d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cffa3c5-879c-451b-9d41-4cc33e2d062a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26ebff1-01b9-49d7-a1d9-76dec2391b0f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21804f1-84d5-4ebc-b685-b9baa41b3b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353e9801-7a3d-4068-b0e3-1565e3b0371d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc196a1-c512-4fa4-8c50-be6b542f7fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306f4e6a-f43a-45b8-987c-962cafbf5bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263ad4dc-fdd1-4ef8-ac29-32cbe2b5b47b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b4e25f3-424b-437d-b922-be6d4a584206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9165126e-1f70-401f-9d9b-dbdcc09a2a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5640166a-43f8-40ae-8722-ba482ddd59ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95dd386c-3dde-44da-90d8-492a78b50bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acf6982-73dd-4e40-ac76-2451777c5e54",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f78a622-6318-41cd-94d5-0ea052c07881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9375f7-837b-481b-be22-e51b09d53f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b74e0a8-85b4-4697-b471-2b69932aba28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee666be-7a84-43d7-943e-050039d06c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c590703-8f13-45d0-b284-ce2d65f203da",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d511fbcc-5914-4958-b4a9-4905db86e9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01559146-f8e4-4c12-83e8-c4a541ff4aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a604dc3-9b70-4107-8a22-dfbac5fe3a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de1cbd6-b3c2-4e54-82ad-dde8ee39b66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f523ead6-f1cf-452d-b0a2-fd237bb32b0f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcb5b23-706d-4274-bd73-2491887efe82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ab89a68-82f6-4111-929d-6bc8cf19e121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122c5214-095f-48b4-9a6c-83723808ed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e9195d-b73b-4efd-8ba2-518ea0c0feeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20482f91-67de-4b5c-8ae9-f44b81544e9c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a36e90c-23d4-40da-a86c-b70a0e03dd89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc348740-e471-415c-8313-c3b717f1afbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bfc718-7179-4021-85b2-16e1388d79f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2e4d94-2a2a-469f-8d4b-c866586aa6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07f332c-da4e-425f-b3f1-bc871a488d1f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0b8d4a-4c5f-4d78-a64e-3ee3b8ab26c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "099f7fd0-4ded-4242-a89d-8d5c1574bccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4929711b-c543-473d-a841-801fcdbef3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2dea40-e68e-460c-92f6-4eb4a355f963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c77e19-3540-41a9-b25d-55ca3d338871",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92861246-9cbe-4be4-a9bd-a7fb62ee302f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81abe91-964f-4d0c-bb7a-a6b674c920d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6169f75e-f5fa-435c-b954-4a7d77ad547f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb057c4-e6f3-4e19-a7a6-25aa603642fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e771c9fd-a6a2-48d8-a2e2-6905566b8602",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0887428-511e-4ef6-a302-76e451b2132f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e3be8d-2cf1-4f21-aee4-071233812fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3baec5b8-130b-426b-87a7-a92c70375ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1e1e40-da42-4b43-bd4f-7ddd515878f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8ad9f0-7ee3-4254-89ef-db9a58af8158",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf348047-696c-4806-8d5a-eb416695c1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc9df0a3-11ff-42a7-a8cb-d2ecb19efaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3448795-7fbf-4b46-b288-64690dcf0df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1d1570-76e9-49e4-bfbc-b287bc35321a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a61786d-5d33-4756-980b-3aa69a441bb7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edd0d26-f5a6-4a60-a0cf-605ad921910e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82189a78-41da-45ce-b5f6-c4064c51b382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49211e2e-5460-4d6e-a434-892cc4c6ea96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7e632c-695b-46c7-8ae0-a16dfcebd600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca157a7-70df-48fb-b45d-200a33780460",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b2579c-b1a0-4066-9ac0-fad72eaeef11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7adad328-7393-400d-b6af-4e3b8992ac1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80314e-7376-4962-a331-0b1693ebac6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb34d75c-4d44-4a95-9afe-e852defff357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e6351d-899a-420c-af6a-43f07f3eb1e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de17b101-88fc-4963-b54f-bd46463e57e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a8c4a4d-f418-4ba5-914b-1c5f7120f496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e4c0e2-e0d6-4cf5-b2af-88377559e7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b24a933-ee3b-4fe1-bc80-1f6d17141def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2c5dee-2551-4beb-b3d8-54e367f4d9ad",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b05296d-e337-4f27-a67b-5d6d0eb9877c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8005ef5-03d9-4bf5-bb04-75ec5a88ee6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2a091f-bbca-40fd-972c-5dbc2c6cbc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b65c8fa-a1ab-4357-8b9c-2f95035a887e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e52215d-24b1-4ea2-a129-087b05767d91",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c6001b-7be1-4074-8fcb-8a579fbb8ed1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5eb68b5-8906-41c1-a34f-3d3d1071536b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3732e97-8dcd-4aaa-9464-82433bd83d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b3ff18-d1f1-47b3-8595-87320ba4dada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48cb9670-30eb-4f8e-933e-9ee1c1211187",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a0dfaf-261d-49f4-a0db-c19c4cf01b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a33bb8-e84a-4918-b575-731ef6b0bfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a9d1da-d923-438a-a94b-95fc4f41c09e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38260151-7ed3-4d9e-9407-06041418d2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f480e0c1-6360-4961-b7c9-9be52480fcce",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c55c5-3300-46c8-b920-1282aeec041a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a245910-47a8-4f8c-aa4d-358f318cf4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4365b9-d8ce-4ea9-8e78-5140236af672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e26033-c06d-4141-b538-e985f4f38c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a6cbdb-1fff-4641-8072-d69ba533dc03",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef284104-839b-4b20-9c4c-0234b0893776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ec2c79-16aa-4f23-a895-7f672846a16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c7f829-6d5a-4559-8941-9ff1b79f897e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa25fe8-af33-482e-88a0-fd011244e35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9c1698-96c8-4d00-bb74-35edbf952e42",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab185c52-8995-4a0e-81ac-94109ec4d05f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb3cbd1-7476-4143-be0d-0387a4b1983c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ade06b3-f2b5-4065-bdbc-17bd03c0aca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec358f56-a770-4655-9a95-f3a09a9da264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a554dc05-7f05-4251-8d09-e05bd39055bd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc0d4fe-503b-4177-9bc5-19ddbab6a134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b144ae-7d72-49b9-b739-e6e767ae1022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74297edb-7e3d-48a4-8507-805881fe8ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c99826-c689-42ac-9cac-15d1ad40f066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3477d463-c2b8-4fd2-80a9-6ffe166d73f6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68615db-7f76-44a9-9638-1fd683a4e579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4173b0e-93d1-4467-b738-a125d2cc29d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487784bf-487c-4758-a41a-64c889bcf976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e99c66-9fdd-4dff-bb52-a519cca40416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d252e3f-312c-45bc-a753-e0add66c4715",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b02e4b-cc52-430e-81f2-66476b1a3843",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6ce5179-e15a-4718-b248-8d0c0c5a2eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fea13f-6b37-4f85-8ba8-ab75967469d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a0c19a-4585-4bbf-af7a-3fbe07e96db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad33cfd2-ecaa-4ac3-beb3-bf9540fe8da3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36ef6b0-2ab2-410c-a0f0-16f605458d60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354df9f0-4cd5-4889-95dd-a2de3d233e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc939df1-71b6-4346-9fd3-f83518a7f19c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9015430f-cc14-4234-a8cc-139bb030015a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a76d58e-3d4c-4ab2-834f-7554524665ca",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db19c18-5215-4df2-899d-53566c849823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f566a0-4427-4b21-9abb-8b926dcd37c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11814a03-b111-44ad-bcc6-a23e5aa89037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d8a6df-11b2-419c-b54f-bb6456a85191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc52905-5352-45da-83af-93593633bfa3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e9f59a-6f66-448b-8b11-64ccb11b05cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b229861-aeb5-41b4-92f8-49c525198bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f21ab-dfc9-4a47-a865-ffaa8a347106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7767d260-f381-4142-a5f4-f49e321cf76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97080ba-10af-474c-8da1-417f7d6e3e5a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa2d760-8209-4672-9db7-aba9473f3a4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235c69e0-5415-47af-bf73-fee32269e5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dfce83-e362-4bf3-a968-c7bca13dbf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcf240e-6af1-4444-a361-4a95b4b3501b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72687dd6-6264-4bf5-a6c1-54d81b0dfebe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b106d375-f49a-42a0-a26c-8b69f5622151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cf5f996-9a14-47a7-9511-880e14a663e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a77f68-45c6-43fd-a17a-9853b8ee9a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fff1b7-67cf-4e61-aa1c-fe09e7c78863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb2c701-1935-47f7-979f-aacd7216dc5b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0b5c20-bf8a-4563-908c-f1b91d3762bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4c63ec-ccd8-4e30-a82d-04401b5a5fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237bf913-ab31-4f00-a331-09250db24173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d80de2-e7db-4672-8e5e-527a9a0808da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5e729c-7177-4f7b-b9c1-c466be781e00",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45c181c-00ba-47f9-9116-d12ca07580ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73dacbb6-dd88-4eeb-ae6d-4fe6a466bbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9700af-f77a-4fb0-a979-2a88ddd8e88d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6269c80d-1b29-4507-8b60-daa588c272e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad0f7a8-a9ea-4c44-bf97-2313a63a823f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecef1e9-f7b6-4664-b757-ff309bdfdb8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95209e35-94d5-4a04-aff2-3b223c1aaa53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc5a40-e07b-4802-9fbb-65bf89940ab7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f5b447-6256-48b3-8284-cd71dc9fd5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0700fb6-8b77-41c8-9a0b-a1114d161291",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cbb8c1-f0a8-4908-8fa3-3caf5819bf4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d917a57-53f9-4ef0-991c-8d98d102b789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a84322-ef25-4e24-8249-96159a65bf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff40089-1036-4d2d-9247-fda74191a76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5d20c2-3136-436c-9a30-f69084bbcc2b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba2356-69b2-4b12-bf70-a0885cce8e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c9c750e-6af2-41b8-bb9e-94633770907c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7864c2-18fa-4c33-ac47-ae43bcb1b7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e26e23-16fd-43fe-855f-e210d26de64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db999a2-9eed-45a6-b35d-579ada3ac1fa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf33f230-a921-4d11-a303-ecc17a773230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a014035f-51e4-41ba-b2cc-adc0e2b0ec03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3f6331-e72f-499a-a3ae-e9c052d9b493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7663c658-1412-432b-beb5-3b20b84ac41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14906c1f-bb99-4a76-b4ac-f3800b20036c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f388d8-c0d2-465b-947d-c71387c78bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb28e84a-2cde-43bc-b754-b6812372e841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d6f7226-b389-4e40-922f-393d2de88e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9695f8ac-cf75-4a76-b143-06c5792903af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d948fdb-3917-47e4-87e6-c2ce9ad69691",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d75f06-97dd-44c3-9d5a-cb2ef2691254",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413d8bee-9798-49c7-90b6-6e58ea74f920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a32481b-4a7b-4ecf-84a2-6170a1a8ece7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38eff5e6-7aaf-4f80-83a1-6091fe013e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6651c02e-70c6-4992-a277-b40c3b378201",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b99fad7-6a6b-47e9-86e9-fcd29242b252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfd876d1-2796-4f66-b6f6-9da06eaa4e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "104e4294-2690-4d8d-8bf1-9c6f065e584c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fb7ec4-dff7-4540-9a74-a831b2d868b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de0ac43-b197-44af-866d-2b0c9eccfc90",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b4088-cf47-4cb7-bc0e-6765c189193a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16da56be-8ac8-4488-9748-98ac0d87dc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a77cfb1-aefa-45cc-909b-128a3fb56259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d636208-595c-4836-a325-7d3a5df7bd07"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f38bed8-b077-4edc-b107-cc05835239ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe108995-7cc8-4ac6-aeab-77e6b0b2f39b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0e32f47-77a3-4c78-8283-061e468185dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aadee6a-e94c-40db-a9ee-aa2971a17776"
                    }
                  }
                ]
              },
              {
                "id": "ca9dc073-b08f-4f28-8c0c-4ca8851b0043",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6fb0c983-b22d-4768-b8fe-af9438ed7735",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffce9bd-0bce-4534-a2d9-c4bb57180e93",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "18e88457-9689-4478-8b50-ddc8775033cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbc19e2-5bb7-46ad-8192-38c94eb172f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e0f5d2-2358-407e-85a9-424ea4e1b36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6447a7-a494-4979-a237-52fe78b519f6",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c973a6-5b38-4bdd-ab63-db369f7e2a69",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8e5b34e3-250f-4491-a809-37a07082bbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7948ca69-8119-46df-8361-59e950cd3a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d5d4a15-463b-4746-98c9-b0b2cde7a05a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5ed82a7-5ae3-4a02-9824-b653214f2d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce43e7e0-d388-455f-88e5-d1bde39aa215"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eb63b80-01e5-48c8-9b18-e3bd335f5dc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "040757af-83ca-419f-8a50-33b69766635b"
                    }
                  }
                ]
              },
              {
                "id": "e9bb1c3f-8a2e-4585-923e-0d83dd764450",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e9937f51-6bf8-4193-945d-8abc9772d6ce",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "505ebe46-67f1-40a8-9bbe-698bc989d22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b8db47a7-62bb-4575-928a-57d874a9c619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaf396c-a02d-4692-8b0b-4e6cb74d4619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d422fe1d-c66f-4cd8-8de9-ed0d64ac832a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4a4fccf1-8957-42ae-b67c-e096c06e0887",
            "name": "Positive Testing",
            "item": [
              {
                "id": "137113fb-cbcf-4365-9bb7-e706fabea992",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f3dc59f-7b5a-42dd-b4c5-eddd086a4b75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "775a32ca-7fde-409b-9613-c99eff4a8b56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1382c32e-8c18-4b83-b422-7e196ba0264a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7ec874c-3062-4da5-8a70-b5ed4d0c308e"
                    }
                  }
                ]
              },
              {
                "id": "faa0ebd1-3362-4cf2-9209-ebec660036c8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "888e8621-dc54-4e4e-a5ba-c21f6f20a7da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b6e5236-2cb3-47ae-b3b6-c97b955c61d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5bd411f-e3b6-4698-b816-b83a618620d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeaadbbd-4e46-40b2-8fbe-6937797655c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7f7d51c-512a-4f7e-b7c7-9bee3fcf49f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2b7e90db-6500-44b8-b09c-b22732f91ea2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0dabdb7d-6927-4244-99a0-5535ce003bf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef28f56a-b47b-41bf-82cd-ebeca137d3ce"
            }
          }
        ]
      },
      {
        "id": "60143e28-41f8-47e9-8acc-01c3073280c5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "60331634-6ffb-4ae0-a735-7c6b9ff7549e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15cc3216-4e1c-4584-9a50-aa10d746f270",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda4f04-61a0-4c31-a097-cdde6da5ba5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3115f526-c1a7-4e1c-a5f7-bb5b7323f08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5bebba-190c-4c5a-ba14-098bc40e182a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d2c48383-1efb-456b-92f7-974713ce5167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7bbf6-85e2-4e5d-8fa3-6b80a25e12e7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7076f00-2410-44bb-bb99-9749cb9c91cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c8368da-4244-40eb-a624-7ef22c54cebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b56b97-9097-45ea-8da3-52e7dfcb79e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e131a81-9cde-44c9-a723-f9ebb0af3e01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14d200cf-3f37-4d53-a3ad-9d531042ba55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "968fd963-a2c5-4fd2-b3de-8fa21f1dcb99"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23ffab1f-38c9-40db-bbd8-e4f4dabfc1fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c486e01-46d2-46af-a365-9e7abc312dda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dadc30c3-c8d5-4976-8e5a-6848c2e051e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d5c50a6e-c550-407c-be54-7be90b37dfea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a0c803c-328b-49d2-bf05-937f97a36bb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7aea37a8-600d-4430-8852-349f7a53e310"
            }
          }
        ]
      },
      {
        "id": "01d7ad31-f24d-41b2-b5bc-061ba7b859f6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a4b369ac-8165-4dfa-a942-2c8b07797304",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f883256-7ade-4b4f-9873-c191f4249cc5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70a951d1-6664-4dec-a1df-85727a997236",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b6e2a9-ec39-450b-b6fe-095876b2bdb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7ad3fcb-d631-4467-8e6e-47742dab5876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9f6f9c-453d-4567-8454-62693e110269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7f58381-c417-4f16-918f-34a412c9163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0594d8c-6c01-454c-86a3-a8e386c4ac6d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb754d41-52fc-45b9-8b66-8f5fe9189542",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04a3ae4a-55a8-4496-a062-7f77e57b242b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aea0937-ea8e-4f15-8a99-b6fbdae5cbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e4c9c8c-bf67-4884-8c8b-941f14c9ce7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12327a58-f31a-4dfd-9882-3dbb05be48db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7458510-bec5-42bd-9b44-b33d76348e78"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79c723bd-7942-4a1f-9f3d-d9ee6baa42ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b443ea5-2da4-43de-9ae7-205735be65da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4492bc91-45e2-4815-8bbd-a4f363ba1218",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7d5e1169-4e1f-44fe-9d3c-8ffd488cc3c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ae7e75d-3e7b-4e7a-b58d-344c935d3b72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24abdf15-119f-4a0b-84fe-ed258e110cc6"
            }
          }
        ]
      },
      {
        "id": "5fefe300-566e-432f-b376-124bd92cc500",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "405d15a7-b6ab-4222-9faa-53610d5d76f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cfb0c22-17af-4bba-a01d-ccbe7a421d1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53f03553-4870-4d75-948e-029d353832d7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0adf81-e93d-4c95-b8ef-533382fa40ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0f4f6f0-391b-4764-8139-ea1d3049c909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f32403-049c-483e-951d-e94e5758f57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "877afb59-88e6-451c-9e6c-c4951bd4ec6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b728e-e8f8-491d-a73b-20c2c545cdc4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e36932-ee1c-47f4-a8b2-6b76644d6473",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e9fec3-0995-40ab-9b93-5e17fc7221c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7371bd81-1881-49f9-8d86-77fa4d20108a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b8b3147-8141-4b09-89bb-7ce042409d38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32c1dac9-c85a-40fc-8d5f-8b12b1865c71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a36210ac-70c4-417f-85fc-867dffe2a6ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f1651f8-8e74-4b74-bcd0-565aeec0046c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6c75e14-5d9d-46d4-a87d-1f39d22af2de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d057973-05dc-4683-8f52-cd29646369c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "74b0420e-aa54-4fc7-a9a7-a65c2435a855"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c279e948-be65-42e7-b122-abe84382aee0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2650effb-8220-4d01-9258-43525235fa5c"
            }
          }
        ]
      },
      {
        "id": "e55402aa-3d1a-409d-a2bf-95d20c81f94d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "964cfe89-e828-4169-b593-448bbdd2d500",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa28780d-e14c-4c95-bad4-e0f4053c6906",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "201e7670-8bfc-4949-b5d8-cd59246678fc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d931994-afe9-4efc-abb0-aec24972dd75",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ecdd2e5-45d7-4bb0-b05e-74360f1bc71c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 712.4749034749035,
      "responseMin": 10,
      "responseMax": 9982,
      "responseSd": 926.4264105463579,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677777461203,
      "completed": 1677777656557
    },
    "executions": [
      {
        "id": "57f6574c-27cf-4847-aa37-d7bec6d8690f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "beb2cae2-9e22-418c-8b38-b7430d3020c5",
          "httpRequestId": "26132734-e5e2-4384-b932-f490a56e2b0e"
        },
        "item": {
          "id": "57f6574c-27cf-4847-aa37-d7bec6d8690f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6625ffbd-06fa-4237-8bf7-ab528a70ca17",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "29251756-654c-448a-9060-24669cd2a7f6",
        "cursor": {
          "ref": "a149369e-261d-40cf-b7c9-1ca3e54eae9f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f373af2c-06fc-46c9-874a-6c73392d4ac8"
        },
        "item": {
          "id": "29251756-654c-448a-9060-24669cd2a7f6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1f809e23-ec51-44c5-a537-dd1ea58c5744",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "01d1fd56-f047-4ec0-8b0b-00532bf76fed",
        "cursor": {
          "ref": "bc90255f-7482-448a-9e2a-339fa805f4fc",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8b76e5f7-4407-49c5-89c0-09966eacacaf"
        },
        "item": {
          "id": "01d1fd56-f047-4ec0-8b0b-00532bf76fed",
          "name": "did_json"
        },
        "response": {
          "id": "e76e1e4a-91a5-4f64-b4af-4289ec0d3eff",
          "status": "OK",
          "code": 200,
          "responseTime": 1227,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025100b2-c3c0-4b49-b0a8-76dc26dd5652",
        "cursor": {
          "ref": "c70a1e1a-1439-4e4c-8597-5d25d8e28f5d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9e37233-c8bb-4c4a-84f8-13e4eb19a378"
        },
        "item": {
          "id": "025100b2-c3c0-4b49-b0a8-76dc26dd5652",
          "name": "did:invalid"
        },
        "response": {
          "id": "f97cb4a5-c9a9-4d5b-a1ed-c8d81603210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025100b2-c3c0-4b49-b0a8-76dc26dd5652",
        "cursor": {
          "ref": "c70a1e1a-1439-4e4c-8597-5d25d8e28f5d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9e37233-c8bb-4c4a-84f8-13e4eb19a378"
        },
        "item": {
          "id": "025100b2-c3c0-4b49-b0a8-76dc26dd5652",
          "name": "did:invalid"
        },
        "response": {
          "id": "f97cb4a5-c9a9-4d5b-a1ed-c8d81603210f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005e0bca-16e1-447f-98bf-f98c91534adb",
        "cursor": {
          "ref": "a5d00949-ef52-4951-ad45-217003cbffd8",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "72f97efc-4aba-4214-8bea-563f04d470a2"
        },
        "item": {
          "id": "005e0bca-16e1-447f-98bf-f98c91534adb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cc661fed-bd0e-4b2c-8714-07c2509e7a13",
          "status": "Not Found",
          "code": 404,
          "responseTime": 953,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45574db-577a-42d4-918c-b9d269324140",
        "cursor": {
          "ref": "cbe4281e-8198-4d38-8a4d-8ff4c6be59da",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "66211a64-01ae-4986-bfb3-6ac21776b026"
        },
        "item": {
          "id": "e45574db-577a-42d4-918c-b9d269324140",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38ac8421-a918-422c-9234-93d2d10b9f92",
          "status": "Not Found",
          "code": 404,
          "responseTime": 786,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7136e90-9956-4d41-ad4c-1ceeb67416c3",
        "cursor": {
          "ref": "5b4ec7a7-6c43-4461-b4eb-8f8abbfcc536",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "59160876-6bfd-4d99-8a0e-498c449c6cb9"
        },
        "item": {
          "id": "a7136e90-9956-4d41-ad4c-1ceeb67416c3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d7f456ea-a721-44c9-bcb6-5a679d65b31a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3153833-02b3-4b0b-a11c-53eafa1c7216",
        "cursor": {
          "ref": "e28ac63b-f1b4-481d-968e-65aaedabcf5a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1dbc6a92-f554-4788-8549-068e4abe2f9f"
        },
        "item": {
          "id": "e3153833-02b3-4b0b-a11c-53eafa1c7216",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "78e47739-6e02-432e-bdf3-010aef8f4e8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 651,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3153833-02b3-4b0b-a11c-53eafa1c7216",
        "cursor": {
          "ref": "e28ac63b-f1b4-481d-968e-65aaedabcf5a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1dbc6a92-f554-4788-8549-068e4abe2f9f"
        },
        "item": {
          "id": "e3153833-02b3-4b0b-a11c-53eafa1c7216",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "78e47739-6e02-432e-bdf3-010aef8f4e8c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 651,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea28c8-d738-4cc6-ab23-618d775db1fa",
        "cursor": {
          "ref": "6ae651e2-a7e3-4775-8c47-e145a10a6c2d",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c1ee227b-f877-4992-ba57-b9869d9e634e"
        },
        "item": {
          "id": "eeea28c8-d738-4cc6-ab23-618d775db1fa",
          "name": "identifiers"
        },
        "response": {
          "id": "00f6d532-be2f-43da-858a-2754e0a72110",
          "status": "OK",
          "code": 200,
          "responseTime": 1194,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d346c07-aeb4-45e2-9595-d59c295cc248",
        "cursor": {
          "ref": "a5eb110b-7ade-484d-bf54-ffd81eb177fd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "da562f62-bfc7-40c9-b875-54eb4046d8b4"
        },
        "item": {
          "id": "6d346c07-aeb4-45e2-9595-d59c295cc248",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "77cda8c0-eeba-4e9a-84ce-4cde08637ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d346c07-aeb4-45e2-9595-d59c295cc248",
        "cursor": {
          "ref": "a5eb110b-7ade-484d-bf54-ffd81eb177fd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "da562f62-bfc7-40c9-b875-54eb4046d8b4"
        },
        "item": {
          "id": "6d346c07-aeb4-45e2-9595-d59c295cc248",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "77cda8c0-eeba-4e9a-84ce-4cde08637ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d401a372-f664-4b40-a8b8-c0b568689720",
        "cursor": {
          "ref": "caa17d1a-6e62-4d70-b85d-d2c1ac6d2e73",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "18aaa2b0-df87-4054-a36f-b2edc9426ce1"
        },
        "item": {
          "id": "d401a372-f664-4b40-a8b8-c0b568689720",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7ebf0bcd-e690-434d-9738-ab5eb552f5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a59b7db-049e-4b86-8177-df10cbb07148",
        "cursor": {
          "ref": "b121aa6e-9283-4259-952c-3de10b663e8a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2c6308a8-523c-4e1f-91e8-a435fea33a3e"
        },
        "item": {
          "id": "9a59b7db-049e-4b86-8177-df10cbb07148",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "77b09478-0e2c-46b7-9ffa-d07967355a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1363028b-3340-4803-af53-15bbb51a425b",
        "cursor": {
          "ref": "6229bfd1-7907-4395-9809-ea4252020b6a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c13e8818-9c5b-403a-adae-668d4525bdc9"
        },
        "item": {
          "id": "1363028b-3340-4803-af53-15bbb51a425b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "be10b0b2-30b9-48c8-ba42-78a76f6ecb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcd79d7-0b0d-44cd-acf5-2986aea711cb",
        "cursor": {
          "ref": "03aa7db3-7726-47d3-9bbd-55b81e3333a7",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0449e280-40d9-42d9-baa8-a85282d25d5c"
        },
        "item": {
          "id": "ddcd79d7-0b0d-44cd-acf5-2986aea711cb",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a497933b-af7a-4b07-902a-ae9d9f7652c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080f8e6e-8faa-4d36-8344-2da30d1cbcaa",
        "cursor": {
          "ref": "4c657051-1b7e-4cda-aa3f-5617e563b845",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5d36cfc9-e88b-4edc-aa7f-a82b9eab63f1"
        },
        "item": {
          "id": "080f8e6e-8faa-4d36-8344-2da30d1cbcaa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5a52022d-c606-4910-aa07-c1fcb037dbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6caf5c-fb45-4605-b813-1b1c1897c38e",
        "cursor": {
          "ref": "68ed32c9-768b-4859-a9de-9ba08a5daaf1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "222a7a56-a98e-42b6-8c2d-ab118d77b7ca"
        },
        "item": {
          "id": "4c6caf5c-fb45-4605-b813-1b1c1897c38e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "656fd37f-f5ae-496a-b95b-e3cc7534a395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dc3e2f-b5b3-405d-88f0-b1ce3492f70b",
        "cursor": {
          "ref": "812f7e44-f20e-4133-8a83-f9e654d15467",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9373cb44-ffd5-437b-b563-ba75fd87f60e"
        },
        "item": {
          "id": "68dc3e2f-b5b3-405d-88f0-b1ce3492f70b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11fac101-8e55-4c4f-82f8-a53b702f03b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a5285b-a9b8-4615-b7d9-405dda5a68c4",
        "cursor": {
          "ref": "c7999be5-f398-48c9-9686-a464d6239279",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f9f49252-dec2-46c8-86e6-e149fa9743ea"
        },
        "item": {
          "id": "b4a5285b-a9b8-4615-b7d9-405dda5a68c4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2afdd3db-01ad-4582-9b06-21cd683ae2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac46522e-0944-4e58-97d3-620194813d0c",
        "cursor": {
          "ref": "a2d7c634-60ac-4016-bccc-20c22fa05ead",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9a3cf1c-40aa-4470-927e-13dc0b86dd4f"
        },
        "item": {
          "id": "ac46522e-0944-4e58-97d3-620194813d0c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "931775a9-f88f-46c4-9a9b-ad4e0ce2e8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "babddbcf-28b0-4abb-88d9-4283abfe60f1",
        "cursor": {
          "ref": "9b999841-409b-47cd-8d38-6d39b934f941",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "56b8ab5e-7b4b-4f85-a6ef-c4d6d1077d8a"
        },
        "item": {
          "id": "babddbcf-28b0-4abb-88d9-4283abfe60f1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2d5de185-f97a-4b5a-80ac-3fe4e694ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f3e031-7242-449e-b94f-7fae2d865827",
        "cursor": {
          "ref": "5f9e2639-7f6f-46b0-a0c8-46318ff496f3",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "79f6cd73-e533-4652-b820-177808df96e8"
        },
        "item": {
          "id": "b3f3e031-7242-449e-b94f-7fae2d865827",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "33f9d183-7c9a-4388-b489-e705395b82cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f054b9e3-678c-4fb5-ab62-374305000469",
        "cursor": {
          "ref": "3afe64a6-3b19-4fc4-b06b-72306c636cb4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "70a58f23-7347-4a1f-9fe8-d6db0bfc8d99"
        },
        "item": {
          "id": "f054b9e3-678c-4fb5-ab62-374305000469",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8e45ba5b-4c42-4ffc-bd84-4d4df0f1addf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 657,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ebf6c3-e768-4c08-9a64-bb14cbec63ea",
        "cursor": {
          "ref": "0567d67b-4889-4a0a-9bb2-c92b4e86fd0e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f5f6ecdb-7c48-48f4-85ac-2d10b2cf3e7b"
        },
        "item": {
          "id": "18ebf6c3-e768-4c08-9a64-bb14cbec63ea",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "392e6888-5261-4638-bf06-d978cb3c25bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08026ad-fcf7-497e-a663-670971588481",
        "cursor": {
          "ref": "ea4c3feb-d80b-4b7b-b250-a4cf8ccca07c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "abfe0439-8a2d-4933-be49-6de0e59fbb18"
        },
        "item": {
          "id": "c08026ad-fcf7-497e-a663-670971588481",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d58b0447-f49e-46c6-9179-4a58779f5476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6954122f-44f5-415e-9136-2ed17b0a74ba",
        "cursor": {
          "ref": "37af9d72-d301-48b9-9346-43ee1711c0cd",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "26227d06-6e8c-45e7-91f7-281af5615435"
        },
        "item": {
          "id": "6954122f-44f5-415e-9136-2ed17b0a74ba",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f1b9fd7d-5709-4abd-bed3-feed45e1f333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1027,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad6c49a-969f-4a79-823d-73aedb5c30d1",
        "cursor": {
          "ref": "928e69bb-12fe-4df5-9310-4be58e6d571a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0a73f5af-3512-4e97-bc08-5c0c9a1839ab"
        },
        "item": {
          "id": "3ad6c49a-969f-4a79-823d-73aedb5c30d1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d9479eb7-14d7-4a27-aaf1-e390f8020c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1268,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f68a9d9-5104-48c1-a5c4-2563b129a623",
        "cursor": {
          "ref": "3f11c70e-40bc-45eb-8628-9afb7743e30f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "085700f7-d347-4840-a495-4dc9176da970"
        },
        "item": {
          "id": "1f68a9d9-5104-48c1-a5c4-2563b129a623",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "383de5ed-82e4-4b45-b76b-306205543741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b506c56c-7a15-419f-9d18-f787978a8d56",
        "cursor": {
          "ref": "401c5692-cd21-4593-bc43-e0d866b8fb40",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "dc28ed5b-1dcf-4680-8f5a-e8f44a2bb813"
        },
        "item": {
          "id": "b506c56c-7a15-419f-9d18-f787978a8d56",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3c408ca7-d651-4675-b311-901d38122914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 971,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866cf28d-8091-49fd-982c-ada5173cf835",
        "cursor": {
          "ref": "7e91c5eb-d710-4981-8fe8-072a879b0d9e",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cf1741e7-6aef-4f45-82c7-a27d3c105865"
        },
        "item": {
          "id": "866cf28d-8091-49fd-982c-ada5173cf835",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d0624c11-777c-4a00-8c00-346a6af70731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 825,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0f9dc0-3326-4213-83ce-7f961bc5dcd1",
        "cursor": {
          "ref": "954d280b-01fd-4202-9822-74a428b55931",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "87f90343-5d51-4018-b791-6d144f6c89ec"
        },
        "item": {
          "id": "5f0f9dc0-3326-4213-83ce-7f961bc5dcd1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "86d4220f-313b-4454-a05d-6801cd322665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219b86a3-4f04-4f1c-92db-bc9451721662",
        "cursor": {
          "ref": "9d1572d5-a0ea-40be-a962-d392d6779db4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7d5cc503-ef41-407b-8a4c-da8ca33fd159"
        },
        "item": {
          "id": "219b86a3-4f04-4f1c-92db-bc9451721662",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2dd8f7af-7b95-49f0-9e76-fc2fd2d33132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1236,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbf3830-1cf9-4a0e-b387-756135c64e56",
        "cursor": {
          "ref": "64956344-63b3-4bbd-91b2-3653d17d5731",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ca2ce7da-8062-40a1-98b0-28f8eaa14962"
        },
        "item": {
          "id": "6cbf3830-1cf9-4a0e-b387-756135c64e56",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dcd62528-8f8f-49f3-a31e-e46174c93c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1125,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb66616-17d7-4eb8-a9c3-a6fb2884ac56",
        "cursor": {
          "ref": "3c9e25d5-ec0c-4291-bfdb-4408ff0e8df5",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cfbf3644-4e1f-4c30-8872-cfc03b7ddc54"
        },
        "item": {
          "id": "6bb66616-17d7-4eb8-a9c3-a6fb2884ac56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "62727fa6-8544-4c9b-956d-455312859b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1101,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6329cf38-1165-481b-a355-90872ec9b97c",
        "cursor": {
          "ref": "66513b83-203f-4860-b500-bdc684d4f864",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6ca49fd8-a1a5-4121-92f8-9fa9727fe2de"
        },
        "item": {
          "id": "6329cf38-1165-481b-a355-90872ec9b97c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7d28b798-26a4-473b-8825-d7cb146b47e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f40aa4-cca9-4f9b-89ca-1132ce925389",
        "cursor": {
          "ref": "2d755237-c61e-4468-a707-299ca30f3b20",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a7a472f5-14a0-4424-bdfd-b1f4c69fc937"
        },
        "item": {
          "id": "21f40aa4-cca9-4f9b-89ca-1132ce925389",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2b23fec2-0c3e-4bc2-9662-275320d41462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e286086-3a3b-4a2c-9ac0-c6ee33c91e96",
        "cursor": {
          "ref": "580e0647-46d8-4763-8845-07bac81e4568",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27e281af-c765-40d1-8158-0fbb1feeab6d"
        },
        "item": {
          "id": "8e286086-3a3b-4a2c-9ac0-c6ee33c91e96",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e32679e6-7fce-4120-bd6e-543f6134d20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e281363a-aa96-4059-afdf-31e75418d508",
        "cursor": {
          "ref": "e164b3c9-ce02-4cf9-9a4b-f7cb4c30f297",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "10450b20-903c-453d-869e-0af1869212e4"
        },
        "item": {
          "id": "e281363a-aa96-4059-afdf-31e75418d508",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "52c28936-cd8b-4810-91ce-940bf74bcb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8797c0-7e1d-4b8d-9ce8-ec8bee713ccb",
        "cursor": {
          "ref": "83357c95-4d15-40f0-bf0e-6798f791fb39",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7069d06a-6ba5-4820-a721-685d8347f08d"
        },
        "item": {
          "id": "0b8797c0-7e1d-4b8d-9ce8-ec8bee713ccb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f925d513-f6c4-4795-abd8-655842c2821a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1ed99-e499-4e80-ade9-af1025fabd13",
        "cursor": {
          "ref": "032b7e19-f9f0-47e4-a495-a372f265231f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "af0b45fd-e718-48e0-a251-2184897a114c"
        },
        "item": {
          "id": "16e1ed99-e499-4e80-ade9-af1025fabd13",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7221e7ba-1439-4140-bb6f-9f3209716051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e504cee-71e5-4821-bc4c-d6627ea24b67",
        "cursor": {
          "ref": "51cabee3-2367-49bb-b2a7-06c074c12b0e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a71bc3a2-a9f3-45ae-9db0-7cc984e9d0fb"
        },
        "item": {
          "id": "7e504cee-71e5-4821-bc4c-d6627ea24b67",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0d252f62-260e-4a57-8cc8-c0f452e6db3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4746b0-e4e9-4b83-bd46-6e18d7b796fb",
        "cursor": {
          "ref": "65885777-f3ee-4973-a875-91e262881c95",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a529f6f-d53a-4de8-8e10-6fe7a265e2ee"
        },
        "item": {
          "id": "4a4746b0-e4e9-4b83-bd46-6e18d7b796fb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8cb7792-186d-4754-9be7-089e5048fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5280c3a-fc27-4056-955f-e3847c5f17db",
        "cursor": {
          "ref": "b111fc88-4889-4836-a15c-320614ef12e7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "df09f650-1c76-495e-b7cd-ab480a546e07"
        },
        "item": {
          "id": "a5280c3a-fc27-4056-955f-e3847c5f17db",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "571c1ef5-5efc-464a-bb85-aeeff0770504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279b61a2-db55-48c4-b10e-ac521671f414",
        "cursor": {
          "ref": "fafb906d-a656-443c-af48-160d8c2af024",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9fe0a3e4-1d8c-40e2-8fc0-e6a4555d86a9"
        },
        "item": {
          "id": "279b61a2-db55-48c4-b10e-ac521671f414",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d02b17f8-0f8a-4641-806a-b882d8bb036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1f87de-69cd-4de3-9262-6a7aad172077",
        "cursor": {
          "ref": "b28593a0-b82a-435c-8e04-43e283ddd7e9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8e973da9-7f26-412c-b1b8-71ff879eeb01"
        },
        "item": {
          "id": "fd1f87de-69cd-4de3-9262-6a7aad172077",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "86f83d7f-b485-489c-9980-28156db5e1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7b261-4f4a-40cd-b3c2-974878c1ce43",
        "cursor": {
          "ref": "3fb77b74-1932-4c4b-a24d-a644f5ace8e0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "50ca807a-ebf3-4720-9172-128fcb066ad3"
        },
        "item": {
          "id": "30d7b261-4f4a-40cd-b3c2-974878c1ce43",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d6815656-dacd-4b4c-9651-950ba326b37b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 734,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dac021b-2614-4f28-b847-ca00d7d69ff8",
        "cursor": {
          "ref": "d40067ab-0362-4418-92ac-4ed5f85b4003",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "36624b8a-592c-4290-9438-b0171486a51b"
        },
        "item": {
          "id": "9dac021b-2614-4f28-b847-ca00d7d69ff8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6f04e267-d2e8-444f-b631-26d610ce0b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559cbcb8-1e32-4df9-b6c0-6dae2fca38c2",
        "cursor": {
          "ref": "0a571eba-5d96-4b47-a4a4-e20c3e2de190",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a39111f7-31f7-4a64-8824-9e51eaa324d4"
        },
        "item": {
          "id": "559cbcb8-1e32-4df9-b6c0-6dae2fca38c2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8e73b9fe-bc31-43cf-afd7-86c14c0447fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69202e64-3956-4531-901a-bf7976facba8",
        "cursor": {
          "ref": "b0a503f2-96bc-445a-8fb1-cbfe99c6f03f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "426ac6d7-6c30-437d-9ed5-4e46113e098f"
        },
        "item": {
          "id": "69202e64-3956-4531-901a-bf7976facba8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "58aa92cb-2ef4-4442-917a-472c936893a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbba123-70e6-4ab1-aa50-5121238b18b8",
        "cursor": {
          "ref": "88eb836e-ffe4-4ada-b177-b4945a7aa213",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "74272556-878c-4048-94a4-4dac0e361131"
        },
        "item": {
          "id": "9fbba123-70e6-4ab1-aa50-5121238b18b8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0425c32-f7d6-4b2c-a2d7-aca08356258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e2eee-298d-4f62-a744-134d66d86d87",
        "cursor": {
          "ref": "5d91847e-22f1-46d7-9e97-a710c2c35ab0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8f20f7ff-e25d-4ff6-9d3a-9ce8fc5f0720"
        },
        "item": {
          "id": "446e2eee-298d-4f62-a744-134d66d86d87",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6d366f38-75d6-4fdb-acb8-7c291c2bc478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b48e245-f290-4d06-ae33-181d29956d68",
        "cursor": {
          "ref": "6792d7b0-4bab-40ad-93b5-9171bc261646",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7d6641f0-b737-44a9-90e2-6d5865a21389"
        },
        "item": {
          "id": "0b48e245-f290-4d06-ae33-181d29956d68",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7c879e22-d6b6-4574-b346-c35005c4ce76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63558be8-900b-45dc-8f6e-75732a853d3b",
        "cursor": {
          "ref": "79698fd7-cfbd-4655-8ecf-e216cb3bf3de",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad15ef5a-55bf-4e05-8aba-0f00681aadb5"
        },
        "item": {
          "id": "63558be8-900b-45dc-8f6e-75732a853d3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "447fb43a-0080-406d-bd8d-411f193ae550",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 740,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41481f00-7bc1-49fc-b835-895f8d75f037",
        "cursor": {
          "ref": "98500b73-9027-4b5e-9355-86cd1507abd5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5f30c140-c6f7-4ac5-be0e-16ad02b1d000"
        },
        "item": {
          "id": "41481f00-7bc1-49fc-b835-895f8d75f037",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "19b61bf9-1401-45eb-88ae-093b0d2c1795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556cc321-3064-4979-a1ff-e4c34f96a859",
        "cursor": {
          "ref": "18e194e5-f96f-4091-8e6d-b9f0e1d3c390",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "01af76b4-b3ec-4bc7-9aed-4d597834c3ff"
        },
        "item": {
          "id": "556cc321-3064-4979-a1ff-e4c34f96a859",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "021fa519-018a-4ccb-b199-68abd5b87613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1359bc-51e2-4699-94df-d0147866da29",
        "cursor": {
          "ref": "824f5427-e178-4c5c-b98f-dcc4f1b2b369",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f03734d2-00c3-4825-86c9-41bfe8450385"
        },
        "item": {
          "id": "cd1359bc-51e2-4699-94df-d0147866da29",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3884832a-e7a5-47e0-b159-f4e5e1c71caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e9e84f-d0dd-46e4-bff3-8ae943c17a80",
        "cursor": {
          "ref": "49840513-d835-468d-8a2b-c5b4b52d2273",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1273a6e7-7515-4f99-a690-424e392dd0fd"
        },
        "item": {
          "id": "a8e9e84f-d0dd-46e4-bff3-8ae943c17a80",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9420d107-cb2d-4226-8093-20a3697f81bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac55ddc3-77b5-455d-955d-e15aa6d59616",
        "cursor": {
          "ref": "31fe64b4-dec7-4253-984a-592e5b193585",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a36f842e-fd96-4a57-8b19-624c8f97450e"
        },
        "item": {
          "id": "ac55ddc3-77b5-455d-955d-e15aa6d59616",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e8ce448a-f13d-4f4f-b2c2-de8567e47314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dcfc1d-6c08-4059-8948-3b8ed899171c",
        "cursor": {
          "ref": "edcec740-33e9-4c6a-a76e-d9c980fc10ef",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "04192ace-1f02-43d8-bc53-de4ae9b31a54"
        },
        "item": {
          "id": "75dcfc1d-6c08-4059-8948-3b8ed899171c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a80f8e26-e546-4d94-a975-744abd4b8b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a6f346-1118-43af-99e8-f9d69ee6268a",
        "cursor": {
          "ref": "2f0eefc4-6e20-4179-b496-a108bf34f594",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3814d3d9-2b8a-4e14-a9fc-283b40402c6d"
        },
        "item": {
          "id": "b1a6f346-1118-43af-99e8-f9d69ee6268a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f20f74d0-8fa1-4553-89a8-f7af49141f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0075f91a-e58b-48ad-9cc7-bbd774177d88",
        "cursor": {
          "ref": "28e64fcd-f551-4a49-88fa-3185e4383cf8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "752c17e0-a04c-4973-ba69-a2bd68d0afc9"
        },
        "item": {
          "id": "0075f91a-e58b-48ad-9cc7-bbd774177d88",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9bf0670b-7a33-4fb0-bc76-fcd7c3bfa544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd36056b-88f0-4af8-a378-3a448510a0f4",
        "cursor": {
          "ref": "b29c23d2-44d0-4aa3-aa97-eed5ef041148",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a44d0f41-1a10-4cc8-b6e1-d8c99eaed9a1"
        },
        "item": {
          "id": "cd36056b-88f0-4af8-a378-3a448510a0f4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "85ea6898-859d-4483-a5d0-3be6e2a914cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c20cea6-09a8-456a-ba7e-e7d5dc06195b",
        "cursor": {
          "ref": "695c9881-ffb9-45d4-b812-20e1e940494e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "42cd5d68-dd7e-4ac8-96bf-92ba4e1ba486"
        },
        "item": {
          "id": "4c20cea6-09a8-456a-ba7e-e7d5dc06195b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c6041c8a-ffcc-4d25-98c7-c694bb3bd0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f8ba8f-7bce-4d1b-a72a-a9c814947d64",
        "cursor": {
          "ref": "e9f11db4-3aff-4512-ac9e-ab4036d23b6b",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3b6a80fb-51af-4a68-b861-b200d7901711"
        },
        "item": {
          "id": "01f8ba8f-7bce-4d1b-a72a-a9c814947d64",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "612c6cd9-52f6-408a-9b94-d8bcec5e2114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c514d0f-6e1e-4454-b570-f06e207e8b2d",
        "cursor": {
          "ref": "2599185f-d15c-478b-a1c6-5c9f4021fe40",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c6fdbf62-3631-4fb9-80bf-49253efec449"
        },
        "item": {
          "id": "2c514d0f-6e1e-4454-b570-f06e207e8b2d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d4f64f33-4b9a-4daf-8253-84de6a4728cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad5cfbb-259a-407d-bfa8-5cfa53c75a3e",
        "cursor": {
          "ref": "3c11dfca-4723-4708-8a6b-e8075a5f5099",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "abd65874-95d9-4e8d-829a-64acdad62e11"
        },
        "item": {
          "id": "1ad5cfbb-259a-407d-bfa8-5cfa53c75a3e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a8debcd-7b9d-4950-850c-7fb075960284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949eb251-630a-42ae-8592-963bd2d1bd9d",
        "cursor": {
          "ref": "9e76efd1-e144-410a-9aac-e0286c6c20f5",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3368ab54-ee2a-4a5c-bd4d-a8c44883013d"
        },
        "item": {
          "id": "949eb251-630a-42ae-8592-963bd2d1bd9d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7c5abffd-67b8-412c-b695-122618d36e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d3b02-903a-46df-bae8-d5bb0838148a",
        "cursor": {
          "ref": "96e571dd-5f4d-4b72-90c5-8cfd8b00f18b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8dca6dff-803e-46f3-94ba-b5fc8fd0e125"
        },
        "item": {
          "id": "779d3b02-903a-46df-bae8-d5bb0838148a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1c2e96b3-743d-4d19-938d-2aabd394446e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23849fd6-c0bb-4fd1-b01f-d7bd20e44124",
        "cursor": {
          "ref": "6a1bda8d-15eb-4f73-9b1c-d3be9c28949b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7df7520f-472a-4c80-b61b-d2bb9ca158c4"
        },
        "item": {
          "id": "23849fd6-c0bb-4fd1-b01f-d7bd20e44124",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4d53f3b8-f398-4e60-b89c-dc4184070a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16da9050-2ed9-4cf2-a812-a590bddc7853",
        "cursor": {
          "ref": "b6333b79-ed49-4aca-adb2-8ecf7600cbb9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "31e4c037-1782-4c32-9ed8-f0519fff5280"
        },
        "item": {
          "id": "16da9050-2ed9-4cf2-a812-a590bddc7853",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f5ef7422-bdc6-4b90-803c-4f4ee67bd86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d720c5bb-a74b-4fa7-a63f-5dcdfd14e0e1",
        "cursor": {
          "ref": "81c4f7e3-c819-46ef-a8ff-a19c006b1f13",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3f15a978-2818-44f7-a9ad-6b52e8d4323e"
        },
        "item": {
          "id": "d720c5bb-a74b-4fa7-a63f-5dcdfd14e0e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bf978ad2-46eb-4757-86f9-3bbe2a081b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fce32c0-38a8-4831-886d-925cc16f0e3d",
        "cursor": {
          "ref": "4f997db8-0841-466a-af3c-1fd783352715",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9280af84-9ac2-46a5-80f9-962d6851b602"
        },
        "item": {
          "id": "8fce32c0-38a8-4831-886d-925cc16f0e3d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "492781b3-db3a-4d79-b02f-e181a0584c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acddb377-dba6-4b2b-aa70-ee12054ca33d",
        "cursor": {
          "ref": "76b94fdb-7a6c-485a-8fcc-f0546e3d852b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "357aad50-e01a-4fbb-b32d-604ccdf18124"
        },
        "item": {
          "id": "acddb377-dba6-4b2b-aa70-ee12054ca33d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fdfd8f3e-e731-47d1-bc8a-a75dc9ffb37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0e7d2d-0c44-4705-8368-757796c674ca",
        "cursor": {
          "ref": "ff5b2dfd-3632-480a-b617-c6cb2cffbd96",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d3093c6-e826-45d5-8928-ba6f339a4736"
        },
        "item": {
          "id": "2f0e7d2d-0c44-4705-8368-757796c674ca",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a622dab8-7397-4710-ab87-00c5c8294181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818286b5-481e-485c-a83a-738fe7574fdd",
        "cursor": {
          "ref": "2e42af7c-d17c-489e-a0ea-fb51cdefd7e6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d8f329ba-5e1a-43f4-94c3-2822ff8c213a"
        },
        "item": {
          "id": "818286b5-481e-485c-a83a-738fe7574fdd",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "96befb21-a239-4d05-9218-c1b8d613b5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a794163-0500-4a60-b501-b69d4112cfe3",
        "cursor": {
          "ref": "1e067fae-0c74-45d0-9d7d-f2ee44ca412f",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3124b2c9-2d5a-45a9-84e4-1172a0d3abcb"
        },
        "item": {
          "id": "9a794163-0500-4a60-b501-b69d4112cfe3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "23292e8c-8e54-4a57-a24b-edf86a293d51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e45dfd-3529-4648-8bf5-c577919852ee",
        "cursor": {
          "ref": "a77dcf27-28de-4d00-85b9-bca1755b3425",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "35f9eccf-f367-4fa7-8c55-69c7ff1bb333"
        },
        "item": {
          "id": "01e45dfd-3529-4648-8bf5-c577919852ee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a6f1a5e4-5751-40b1-af1f-537f5d4b5c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57eb5ba-e61f-4301-b69e-dc6eb307f497",
        "cursor": {
          "ref": "4ad71599-7c07-4b58-96ee-85d244edaf63",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5348560e-635f-4d77-ae7e-ab66f2df1e33"
        },
        "item": {
          "id": "f57eb5ba-e61f-4301-b69e-dc6eb307f497",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8afa340f-9030-4bd2-a672-56e685b39d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6428c54-bd43-4063-a771-b6fd580bbdbd",
        "cursor": {
          "ref": "b52cb07d-58a8-4772-89b0-2b917d0a050e",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "13c8e921-a76b-4c09-8736-bd92137382b2"
        },
        "item": {
          "id": "b6428c54-bd43-4063-a771-b6fd580bbdbd",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "dec68e34-7066-41aa-9d47-73824ed76a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4225ff84-f127-4ff3-840d-7005f103e7f3",
        "cursor": {
          "ref": "f8169890-6373-4d44-b252-38fd4ad6e2f9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d6218561-8260-4029-a6bf-de3f28b1663c"
        },
        "item": {
          "id": "4225ff84-f127-4ff3-840d-7005f103e7f3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b90768a4-b7ab-4536-925c-5de90de78f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd390b9-f258-41cf-951f-12a98ef8efbc",
        "cursor": {
          "ref": "2b14a8c2-4b3c-4da4-94ca-aa63a5ac418d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a8132103-593f-4164-a962-9230d1c6b14f"
        },
        "item": {
          "id": "edd390b9-f258-41cf-951f-12a98ef8efbc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4d6b75d1-d097-4d9a-8d43-5be06c8322d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15153c43-278f-4bee-987d-2f6308bb9185",
        "cursor": {
          "ref": "bdedc7aa-3419-4083-9068-69ada8f08093",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ee2d866a-7ab1-478f-a2a8-bb9e57cacb62"
        },
        "item": {
          "id": "15153c43-278f-4bee-987d-2f6308bb9185",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6701f329-32f9-4493-8262-eeafc85752dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446337bc-89b7-4c70-aa15-43b91837734c",
        "cursor": {
          "ref": "1364f728-c307-413b-9b5e-ff5459620ebe",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "72ff29af-9464-45b2-aad7-9c5828d3a8f3"
        },
        "item": {
          "id": "446337bc-89b7-4c70-aa15-43b91837734c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6cbda78-1c5f-49af-b456-dcfbdd422dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a911a4b6-eaed-4f71-832d-c863f07716f8",
        "cursor": {
          "ref": "480019bc-89c2-43ca-81ad-50f460c5f664",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "73cd76d6-53f7-4584-944f-d8e56c566515"
        },
        "item": {
          "id": "a911a4b6-eaed-4f71-832d-c863f07716f8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2509ba56-1ebc-43f3-8345-d97d7d4c946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2501a5d7-ebe1-4ed9-b6fd-7d63d61101e2",
        "cursor": {
          "ref": "0fed83b1-3190-4fe6-b0aa-35ae3f4af0c6",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b910b58f-d101-4ae0-a88c-df7365cc3299"
        },
        "item": {
          "id": "2501a5d7-ebe1-4ed9-b6fd-7d63d61101e2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "74cf0965-024d-47dd-97f5-c29c3d353d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5f1f55-0af8-4688-9da1-30da748f18e5",
        "cursor": {
          "ref": "ec6e1b1e-619f-4074-a96f-ffafbb70bfe9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "87c154a3-71c3-4be5-b14f-b0249b4b1350"
        },
        "item": {
          "id": "8b5f1f55-0af8-4688-9da1-30da748f18e5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "efabfcb7-152f-483d-a0ba-60c651ccd5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edb6e70-9762-4d5f-b893-adf3b7b787dd",
        "cursor": {
          "ref": "21891585-ffb1-48af-9c48-4e21229335e8",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c20f68ce-7ac4-46a0-88c6-7155c62346cc"
        },
        "item": {
          "id": "5edb6e70-9762-4d5f-b893-adf3b7b787dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4ad5ef07-9d77-45a1-baba-67b305158396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a38ae07-e5a5-40f4-87dd-455568b0c9d5",
        "cursor": {
          "ref": "bc0d194b-2399-4685-8cfd-aadcc5c09727",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ad18134a-3c7d-42b2-a387-e97fde49d8d0"
        },
        "item": {
          "id": "8a38ae07-e5a5-40f4-87dd-455568b0c9d5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "65986bc5-3d1f-45aa-bf09-c189e72a621b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b1faa3-d1b3-42be-a0d1-008d31f59df1",
        "cursor": {
          "ref": "e2ed808d-000c-4e21-afdc-6130df4605fe",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "84e401a1-0d0f-4759-b897-bdd8baeb2daf"
        },
        "item": {
          "id": "29b1faa3-d1b3-42be-a0d1-008d31f59df1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "68d40363-3563-4767-9396-eed56ffc7922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3209e21d-d418-411b-93d2-7a53c571a1d8",
        "cursor": {
          "ref": "3a4e1c3c-ff0b-431b-9459-043739a0c944",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e73af712-c6f5-4b6b-963d-be9f0efa4132"
        },
        "item": {
          "id": "3209e21d-d418-411b-93d2-7a53c571a1d8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ba9d3f95-3929-491a-86d3-8eacb2a04aac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd55aaf5-58d7-4318-810c-fd4a389cc5eb",
        "cursor": {
          "ref": "27acde84-612e-454b-b429-db8cedee7a0d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "38b0402b-ef00-4696-b9d7-ce3e90497633"
        },
        "item": {
          "id": "fd55aaf5-58d7-4318-810c-fd4a389cc5eb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4d5a1662-befd-4c88-abc5-072988fee4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbe09b0-c88e-443e-a85b-6c0067c50663",
        "cursor": {
          "ref": "2db6a99a-e16a-412e-a604-5c2b0ff3b0d1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9a34236d-aa2d-4b73-a000-fe34ab49f72e"
        },
        "item": {
          "id": "bfbe09b0-c88e-443e-a85b-6c0067c50663",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "eeaf665b-52b6-42b7-a693-976a2ef551e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bca7ed-821d-4e26-8a55-a203381b87ec",
        "cursor": {
          "ref": "575edfca-54f0-4ce8-8213-4f63f28800cc",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "690cf122-7904-4e8e-a08f-45ca7a2f4108"
        },
        "item": {
          "id": "77bca7ed-821d-4e26-8a55-a203381b87ec",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "91fca2ad-1b39-4525-8bcf-1d804356944f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1199,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d6f72b-058d-4725-ad7b-615e58f40ab1",
        "cursor": {
          "ref": "9c326a1f-c82a-48b1-9576-4a6d1955abef",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a37acafc-d7aa-463c-bd28-e73164fda1bb"
        },
        "item": {
          "id": "96d6f72b-058d-4725-ad7b-615e58f40ab1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "985e2797-eaa4-45af-8e96-6ce8c6f7d413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1173,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd51588-2347-4927-8ba1-0f53dafc874b",
        "cursor": {
          "ref": "c165b87b-9eec-4f72-be8a-868667f6a56e",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "445ffa52-161a-468b-a1c8-f669e8678d35"
        },
        "item": {
          "id": "6fd51588-2347-4927-8ba1-0f53dafc874b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "aa27a322-9f72-438f-b26c-ed3b28e31868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2090,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c299d77-6dc5-40c6-9bf6-82dcf7aaebaa",
        "cursor": {
          "ref": "15028e11-7950-4277-9a6e-5cb47aee51ba",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e3048c1d-434a-4878-b496-ab617517419a"
        },
        "item": {
          "id": "3c299d77-6dc5-40c6-9bf6-82dcf7aaebaa",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "89b8be92-ef13-455c-956c-642b38a70d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2252,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0d9158-5e56-4d9c-8187-a6e7ef5a5968",
        "cursor": {
          "ref": "44aaa65f-ed9b-466c-ab15-f2d98a466dc1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b5b03486-2292-4dcd-ab46-e508e95cc2ef"
        },
        "item": {
          "id": "fc0d9158-5e56-4d9c-8187-a6e7ef5a5968",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c12b20a5-457f-40d8-9e54-2362038f77f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1168,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c3b08f-7404-4e4d-b82a-821832620df7",
        "cursor": {
          "ref": "76b01d99-7aaa-4e91-8d7c-1d09d98675b2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3f47af2-f0e3-4647-b07e-cc9416a7b0bf"
        },
        "item": {
          "id": "36c3b08f-7404-4e4d-b82a-821832620df7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4e0044ef-25f4-4167-9dc5-62d7d382669a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8fb207-f3e9-433b-929c-3e1c8912d241",
        "cursor": {
          "ref": "909a0786-cc11-4222-954c-7ae72ecf10e8",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8ff77a2a-5c43-483e-a5b0-5edbed1aaea7"
        },
        "item": {
          "id": "0f8fb207-f3e9-433b-929c-3e1c8912d241",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2bacfbd2-668d-4934-b4f0-36ac0fdf9c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15556809-9e8c-4909-b528-520616dd91f3",
        "cursor": {
          "ref": "089c610d-18cc-4341-91c5-c8fad308f900",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cd0dc6ea-f4fc-4dba-b646-e239407e4b62"
        },
        "item": {
          "id": "15556809-9e8c-4909-b528-520616dd91f3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "45bf13e6-f104-4fa3-95ea-026c701969c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765d4742-194d-4449-a3f7-7ce99b9a2775",
        "cursor": {
          "ref": "d8dd221d-4fe7-4ccc-9c8f-a75bd07bc65d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6fe8a11-87db-4cfc-864e-af642ec60155"
        },
        "item": {
          "id": "765d4742-194d-4449-a3f7-7ce99b9a2775",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "44adc981-9ab8-4c15-be90-074201cbecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053cb59f-99ec-4245-8df0-eb3030e584fb",
        "cursor": {
          "ref": "93c45fa2-e3f3-4e20-b5d6-42d481918b34",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd657af9-cce8-4579-9ff4-f1f0c5a5756e"
        },
        "item": {
          "id": "053cb59f-99ec-4245-8df0-eb3030e584fb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a36292d8-4920-407c-93fe-e0ddb8490bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a78de8e-0cef-4e09-8b23-d25900981ee0",
        "cursor": {
          "ref": "19b361ba-505b-4c27-9318-b8a42eeed4f5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b71ed106-f93b-4081-9093-0bc55ad12bf1"
        },
        "item": {
          "id": "8a78de8e-0cef-4e09-8b23-d25900981ee0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f70573b1-284f-496a-b658-8b2f35d5dc64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3901d3f2-e1a6-472d-876d-f6206cb4aa15",
        "cursor": {
          "ref": "410b2b54-7855-4897-9a19-dc2f25d4cecc",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "80db79c6-2af3-4711-8184-0862184f1092"
        },
        "item": {
          "id": "3901d3f2-e1a6-472d-876d-f6206cb4aa15",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3284ede3-0608-44e7-bbc4-d124f924a513",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 741,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10522d72-f611-42cb-ac3c-c1b5a58e0de1",
        "cursor": {
          "ref": "1804dcb9-03ad-4a70-9d3b-9d2abe5bc6f7",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a892bafa-1a66-4cca-9877-f98867fa29b0"
        },
        "item": {
          "id": "10522d72-f611-42cb-ac3c-c1b5a58e0de1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "82ecd41a-0792-4228-a13d-039051fd1838",
          "status": "Created",
          "code": 201,
          "responseTime": 9982,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8a3374-bc37-4005-a6f2-70a1be8245a6",
        "cursor": {
          "ref": "0fef8928-b46b-4a57-a26e-46e51cdbb0b3",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c013e27a-16b6-42d2-b0d4-24f3c18b6480"
        },
        "item": {
          "id": "ca8a3374-bc37-4005-a6f2-70a1be8245a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "06b6cabc-9cd6-4f1b-821d-4193788b892a",
          "status": "Created",
          "code": 201,
          "responseTime": 7549,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba77c1f6-da4b-43bc-abbb-f99c88fa0d6a",
        "cursor": {
          "ref": "6b260880-a5d4-41e8-84e6-2373f13ab439",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "91374c73-0cd2-43d5-8c4a-a0c8a7546749"
        },
        "item": {
          "id": "ba77c1f6-da4b-43bc-abbb-f99c88fa0d6a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b57519ed-e992-4292-bebc-104869ecca32",
          "status": "Created",
          "code": 201,
          "responseTime": 4647,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18e33f8-8375-4fc7-8e89-498f91859da0",
        "cursor": {
          "ref": "b582c968-ab22-4e55-a394-116f4d02794d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cd38bda2-5559-4ed8-9e03-aae5625acd62"
        },
        "item": {
          "id": "c18e33f8-8375-4fc7-8e89-498f91859da0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0aaa17ac-0d6d-4936-bbc7-d481ad37e989",
          "status": "Created",
          "code": 201,
          "responseTime": 5518,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dbcbac-0c83-41f4-97cb-7e5bc93f05cd",
        "cursor": {
          "ref": "207a6eef-3914-4efc-9025-60d40d61f4d1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d5936dfb-0006-47c4-bc09-6b4e435a193e"
        },
        "item": {
          "id": "53dbcbac-0c83-41f4-97cb-7e5bc93f05cd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b9df9ae4-e42e-40e7-85a0-52bb02946ca4",
          "status": "Created",
          "code": 201,
          "responseTime": 5602,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec1910-a8c0-4321-b0c3-771cb728671f",
        "cursor": {
          "ref": "eaeda16d-d656-4ee6-9d88-00aac0679e80",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e1f8f350-8014-441f-a32b-a223d4358731"
        },
        "item": {
          "id": "4cec1910-a8c0-4321-b0c3-771cb728671f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "769b03e0-b3e5-42fe-b8c2-6e4d5b2d979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cec1910-a8c0-4321-b0c3-771cb728671f",
        "cursor": {
          "ref": "eaeda16d-d656-4ee6-9d88-00aac0679e80",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e1f8f350-8014-441f-a32b-a223d4358731"
        },
        "item": {
          "id": "4cec1910-a8c0-4321-b0c3-771cb728671f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "769b03e0-b3e5-42fe-b8c2-6e4d5b2d979a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 638,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde8349b-471b-4f8f-ad66-9d4dd6612ac0",
        "cursor": {
          "ref": "9aa74bff-58fd-4d86-99b3-0a04b4d6e7bc",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b211320c-7a7d-4d70-b5ec-389ce2dd7b22"
        },
        "item": {
          "id": "cde8349b-471b-4f8f-ad66-9d4dd6612ac0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6bff2934-f406-46bb-b4ce-368cbbd83ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3d7905-e4a8-495a-b7eb-a643114b47d6",
        "cursor": {
          "ref": "741daab8-a45c-4f9b-b09a-deb5e5d81626",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2c34561a-fe3b-4261-965c-4537668e07d5"
        },
        "item": {
          "id": "ab3d7905-e4a8-495a-b7eb-a643114b47d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aec8a3dd-0d29-42e4-abb4-a17a7f5103f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6d2a9b-ddbb-47ca-848c-02a610303bfd",
        "cursor": {
          "ref": "ccb90f2e-1115-451f-a832-95b2da54286c",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "adfad8d5-d7e3-4064-bf18-2e4f11ff5450"
        },
        "item": {
          "id": "af6d2a9b-ddbb-47ca-848c-02a610303bfd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "60a2dc7a-6694-400b-9ac6-a0bd4188a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df05f22e-8352-4487-b788-1f3a96713294",
        "cursor": {
          "ref": "83408c37-6e90-4545-a0d5-a71a75a224be",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9c167919-9308-480f-9a9a-d8b4965ead13"
        },
        "item": {
          "id": "df05f22e-8352-4487-b788-1f3a96713294",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "83e3d9ab-4ef9-41c1-8d82-43f6e23a9370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cf31c5-0533-41ef-bc85-9968c4abcff5",
        "cursor": {
          "ref": "2d92a3d1-4d34-4c6f-9cd8-2c4c4e44899d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "47131b06-5572-4180-af8f-3d0458b12b07"
        },
        "item": {
          "id": "35cf31c5-0533-41ef-bc85-9968c4abcff5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b27cd57-eab1-40a0-961f-8b908f0df89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f7ebe9-0e5f-47ab-ad79-e58e052bb315",
        "cursor": {
          "ref": "f6e2e68d-59ff-4e0e-81b0-a01f5bdec1d5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ddf4395b-c1e8-4500-b72c-dc4d5eb85852"
        },
        "item": {
          "id": "e2f7ebe9-0e5f-47ab-ad79-e58e052bb315",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a533781e-e576-405e-b689-5342d41afe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891246c0-fd7e-4747-9164-24d8c3027261",
        "cursor": {
          "ref": "5e6befaf-0736-4dcf-8e4f-74055e0d9b96",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a7871a28-ce65-4b65-a063-a00783ee69a4"
        },
        "item": {
          "id": "891246c0-fd7e-4747-9164-24d8c3027261",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7443d56c-fc9d-4fe0-81f8-60de449cfeb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e456e8-c422-410f-a627-e76ba12aae2a",
        "cursor": {
          "ref": "11dca48d-55c6-4a4b-914f-3328cc8ba6d9",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5376ece8-fb8a-4cbd-b226-3ec9e6e0fd94"
        },
        "item": {
          "id": "d9e456e8-c422-410f-a627-e76ba12aae2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ec3a53ad-89ff-486f-9443-abcdfcac757a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32a7d7b-ca19-4675-971b-53269b639fcf",
        "cursor": {
          "ref": "952c59b8-b788-4830-8049-94684818778f",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "560caccf-dc60-4ab6-a86e-f301b4358b73"
        },
        "item": {
          "id": "e32a7d7b-ca19-4675-971b-53269b639fcf",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4469392f-7bcf-4785-af75-e7dff1f0723e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc6f341-ed49-498d-a68a-db20b8edc94f",
        "cursor": {
          "ref": "be7f6f5f-7834-4432-9fb0-0bf7ae1dff87",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e7634e41-d6e5-4af5-a449-a92a5487526e"
        },
        "item": {
          "id": "2cc6f341-ed49-498d-a68a-db20b8edc94f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8c1c624b-b0a3-41a3-80c4-646b415932c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8042aab-a5ed-4997-8e9b-26e7d64a24d4",
        "cursor": {
          "ref": "3ab67e03-79b4-4b03-aafa-b0f40b51e3ca",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dc6903fc-8c5e-4a88-a139-0f95fe5e7da9"
        },
        "item": {
          "id": "b8042aab-a5ed-4997-8e9b-26e7d64a24d4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5c42a76a-114b-455f-897c-c586cc5b0c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafa1af4-abfb-43c6-96b3-7fc4b3c2539c",
        "cursor": {
          "ref": "07a1ec72-7bea-45f0-98b0-d37b6e899d43",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "95f5ff05-b91b-42b8-8c84-36da02b678e1"
        },
        "item": {
          "id": "fafa1af4-abfb-43c6-96b3-7fc4b3c2539c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f06df9fc-4b85-4be1-b84a-abfa5d5e17d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d6d0bc-62e1-4d39-8c59-6a503dc94255",
        "cursor": {
          "ref": "ae26b24b-4249-44ab-98de-0ea41779f446",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fe17b1cd-356c-4ab6-83ef-322d4cefad1a"
        },
        "item": {
          "id": "b0d6d0bc-62e1-4d39-8c59-6a503dc94255",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "60efb0a7-1deb-480f-bf29-bd417574eb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21b5648-e801-43f4-8802-4d7071624495",
        "cursor": {
          "ref": "11f331b3-8b79-48c3-8316-3b25afe9ed21",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b968496c-866a-4aaa-b881-082ffa565d12"
        },
        "item": {
          "id": "e21b5648-e801-43f4-8802-4d7071624495",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5bd8ba5e-9389-4eb6-9198-c433f9232477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c798ee0-3da5-46ec-8de5-d1f0b4f37df5",
        "cursor": {
          "ref": "70e302d4-6a38-485b-af13-e9ea047dff36",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4070fa22-613e-46f8-a6a3-cc23eb0eae87"
        },
        "item": {
          "id": "8c798ee0-3da5-46ec-8de5-d1f0b4f37df5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "24c1813b-b5fa-4452-af44-23004bf70f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba2c3c8-0a09-4712-83cc-44973deda2a7",
        "cursor": {
          "ref": "d721a317-7798-48ef-b291-88dede83ad61",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "664b45ec-4268-4a70-9b72-17b74212e253"
        },
        "item": {
          "id": "0ba2c3c8-0a09-4712-83cc-44973deda2a7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b7539f0-6b28-4dd5-a354-15aedb2aabae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f405ea8a-4d90-4cf8-88ff-efb2f874dc6c",
        "cursor": {
          "ref": "281f4df8-621a-4f50-8925-6f10a28b73c5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9dce7720-e6c0-41c8-a1d0-789222f3639a"
        },
        "item": {
          "id": "f405ea8a-4d90-4cf8-88ff-efb2f874dc6c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "986444a6-d0c1-4457-a625-88a8b3e5c14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5698beb7-e930-4597-8b00-959db89b0881",
        "cursor": {
          "ref": "554cdcfe-c658-488c-801d-b5e6e4617e8c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "433d2b1e-b539-49d9-8de8-60c3c6f6219d"
        },
        "item": {
          "id": "5698beb7-e930-4597-8b00-959db89b0881",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1d83f6e9-aecf-46a7-b0d2-f38313b25891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb4d739-860c-4a70-bdbc-3eb7a6e7b9bf",
        "cursor": {
          "ref": "ac297c68-4c1b-4a58-a4cd-b4d405a25f98",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7ded9109-cd2e-4837-bc33-82774331df54"
        },
        "item": {
          "id": "4eb4d739-860c-4a70-bdbc-3eb7a6e7b9bf",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59ade615-d1b5-4b17-b907-ec18b35286e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43704ba9-6d32-4689-bb64-c1bce350182f",
        "cursor": {
          "ref": "acd12c57-5b10-4915-add1-cd57ae709bd6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "75131f10-8429-4d39-91cf-8c4cea63601f"
        },
        "item": {
          "id": "43704ba9-6d32-4689-bb64-c1bce350182f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3275e25a-42f8-4f52-9635-94961570908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3436a552-d471-465d-9b35-497bc0cd134c",
        "cursor": {
          "ref": "c5eec166-b627-41d9-9639-b9dbe8656f32",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c7b36c84-975a-4747-9080-ecd98e634954"
        },
        "item": {
          "id": "3436a552-d471-465d-9b35-497bc0cd134c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2d425669-317a-4bb7-b478-ad0cf366c047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b377361-f44f-4262-87d7-4757fae6b6c6",
        "cursor": {
          "ref": "6610ffc0-4344-402e-a621-0635e17c696f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fc378ea3-a05d-4061-84f1-4729797eddad"
        },
        "item": {
          "id": "4b377361-f44f-4262-87d7-4757fae6b6c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "529988b1-48ca-4c94-bb2a-c6193ff4f224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b603bc-ab3b-45cb-b475-a4b962862fd2",
        "cursor": {
          "ref": "a244c5d9-a571-47e0-bd63-825702ec1fee",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ad75068-ea5a-408f-8169-9654bb2142db"
        },
        "item": {
          "id": "b0b603bc-ab3b-45cb-b475-a4b962862fd2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8533faa3-f7f1-45e4-8dd4-f30957acfa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea594add-f0ed-470e-9077-4e658aefdb6e",
        "cursor": {
          "ref": "af176988-cac0-44b1-95e4-d602a5d55a0d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0410e8b2-d1bf-4720-81d0-bfc5b45f98eb"
        },
        "item": {
          "id": "ea594add-f0ed-470e-9077-4e658aefdb6e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4a634537-4393-4b6b-a09a-df432aa011c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51793f84-ce63-48d2-a557-a51d9beaa9d0",
        "cursor": {
          "ref": "e6b35f08-2eb8-4ccb-a6fc-be99c1b0f150",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e8b149fb-2f26-496b-a084-1473b6226939"
        },
        "item": {
          "id": "51793f84-ce63-48d2-a557-a51d9beaa9d0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "238a1b51-b100-4094-b72b-137bfee6c745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d944064-398e-4188-83b9-f2afafc3b347",
        "cursor": {
          "ref": "d58080db-5b91-4406-9a00-06577884ca0e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f0f5b8d0-f341-4b94-809e-b95848b8d9df"
        },
        "item": {
          "id": "1d944064-398e-4188-83b9-f2afafc3b347",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "87063be3-b487-4354-b5b5-4347c80687e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f62d295-4dbd-4893-a0d4-5104e95017a2",
        "cursor": {
          "ref": "b279aa0d-13ba-4d0f-a72c-4f22ae6491dd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c0995780-d4a0-4386-a01c-593c28fdbc20"
        },
        "item": {
          "id": "8f62d295-4dbd-4893-a0d4-5104e95017a2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "38908ac3-abc9-444f-8f2b-9b23181be48c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89a088e-8d06-4a7d-b636-0ad4e74d3ba3",
        "cursor": {
          "ref": "3882fcff-e143-4ec5-9a02-e344bbd46463",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "df9f4e22-2a26-4182-8f7b-0b06970f6301"
        },
        "item": {
          "id": "e89a088e-8d06-4a7d-b636-0ad4e74d3ba3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4ad4f739-8675-4257-9b51-437c24a0b70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2f28ce-aa83-4a40-bf51-054bf6269ebc",
        "cursor": {
          "ref": "5fa78e5a-c105-4f8a-906e-0ed0be51f326",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f4ad0080-ac18-486b-b9a5-3c2d1de3cef4"
        },
        "item": {
          "id": "3c2f28ce-aa83-4a40-bf51-054bf6269ebc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2322fe1e-58b2-4994-8848-934eca487032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516f881b-fb8b-4243-85b3-b4af2f399042",
        "cursor": {
          "ref": "1b3445fc-391e-4777-9902-b82b4d84af6a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0539dfdc-88dd-4e92-b032-f7def2ef2c73"
        },
        "item": {
          "id": "516f881b-fb8b-4243-85b3-b4af2f399042",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "304fb4f6-b108-4d85-a447-45ba9442172a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450429ba-ac16-42e5-a848-be0dd40fc51a",
        "cursor": {
          "ref": "6ac59b14-d9e4-406f-b1b3-e592a6f8a78d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5828f3d3-254e-4587-a67e-c27d2b922a03"
        },
        "item": {
          "id": "450429ba-ac16-42e5-a848-be0dd40fc51a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "633740aa-918c-4476-9bc1-635abd689e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9383d41-dd37-4109-acf9-e9303e6f01b2",
        "cursor": {
          "ref": "499533dd-2517-4971-930e-d02898b7fec4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3e1aa093-5ae9-465e-8626-8f050eedf3ea"
        },
        "item": {
          "id": "c9383d41-dd37-4109-acf9-e9303e6f01b2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "511c7c07-7b19-407b-8cd1-ebb2ceb63a30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6fd689a-b304-4e8e-8155-6162126d3203",
        "cursor": {
          "ref": "94d91df0-2ca5-45d7-9a34-9cc89e89ee2c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "391d7e66-22f1-47a6-b669-47b3defb1ced"
        },
        "item": {
          "id": "f6fd689a-b304-4e8e-8155-6162126d3203",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "2c34d3c3-53d3-4754-ae99-8851fc4eee70",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 609,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a61ac2-0217-4c2a-837a-1dcab603c944",
        "cursor": {
          "ref": "c2cb84cb-1089-4eed-aa0b-df16c2fc3022",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c59110a-2e64-4251-8884-7e44b495d712"
        },
        "item": {
          "id": "d1a61ac2-0217-4c2a-837a-1dcab603c944",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0c63e93d-d78a-43ff-824b-66e0d6164614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a61ac2-0217-4c2a-837a-1dcab603c944",
        "cursor": {
          "ref": "c2cb84cb-1089-4eed-aa0b-df16c2fc3022",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7c59110a-2e64-4251-8884-7e44b495d712"
        },
        "item": {
          "id": "d1a61ac2-0217-4c2a-837a-1dcab603c944",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0c63e93d-d78a-43ff-824b-66e0d6164614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c0b795-1606-4ffb-bb07-4414e4081047",
        "cursor": {
          "ref": "4de1b9c3-0761-4616-b81f-2476494feaf9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fa2ce13c-b59f-41d4-9152-89aed6b62214"
        },
        "item": {
          "id": "68c0b795-1606-4ffb-bb07-4414e4081047",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "863be4b5-3576-4099-b011-98ee63143792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ab913b-4d48-4a00-8b03-a434420174a8",
        "cursor": {
          "ref": "ded6e71e-e65b-4b9b-b370-c6df724cb018",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d940dfbd-6e67-4e34-892c-dbe517434758"
        },
        "item": {
          "id": "f4ab913b-4d48-4a00-8b03-a434420174a8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cff2690a-0a8b-4960-961e-40fc327200a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdb2c68-e409-4900-b71e-4835e72f26e2",
        "cursor": {
          "ref": "b4e15043-82a6-4cb5-bbea-e3caf48e093e",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c994cc7f-5b24-45a7-868d-57e3106912fa"
        },
        "item": {
          "id": "3bdb2c68-e409-4900-b71e-4835e72f26e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "667d662c-85c2-4320-b74a-4b19e37c3459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfef9ef-347b-4513-9763-96b11e91d9b4",
        "cursor": {
          "ref": "d3f09f34-d07e-4137-b0ae-17c2d6c88800",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5ef3b8f2-9369-4d52-8cbc-9b0d115dc1e9"
        },
        "item": {
          "id": "8cfef9ef-347b-4513-9763-96b11e91d9b4",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5f6e3081-af23-41ea-b481-3d23faa86da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de62391-6b40-4f3b-86bf-2981b347d354",
        "cursor": {
          "ref": "8b810ea8-92f9-4dfc-a315-7ad791b30f17",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2881f0fd-d8e0-423a-aae4-85a8b74338bb"
        },
        "item": {
          "id": "2de62391-6b40-4f3b-86bf-2981b347d354",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c32ea694-7346-48ef-8ddd-0f7ad90b4e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b291e894-10a5-472c-a6f7-514a89a54630",
        "cursor": {
          "ref": "1ed40913-a332-464d-94e2-2f02b6b47640",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "21af0c97-7f65-4926-a887-0c4597cdad25"
        },
        "item": {
          "id": "b291e894-10a5-472c-a6f7-514a89a54630",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42850f00-20e8-4b6e-9391-43d82b4c8f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d13db48-08a0-4d67-8059-24d5a51e49bd",
        "cursor": {
          "ref": "501b39f5-3575-415a-94a2-06438e1be626",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "90f6761f-8eef-40fa-96b7-c171503618df"
        },
        "item": {
          "id": "1d13db48-08a0-4d67-8059-24d5a51e49bd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "65ff416f-4358-4dc6-a0ac-19fdc89918d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27441eca-3088-43c2-8d8e-3c137d803bb5",
        "cursor": {
          "ref": "332c57d8-0314-4338-88e2-3e00c421ed48",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "78b6586f-88f8-46b6-89ec-9abdcd54ce4e"
        },
        "item": {
          "id": "27441eca-3088-43c2-8d8e-3c137d803bb5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5f7496d1-67cc-4be4-a0fd-20b3e24b6304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e921490a-ce96-446e-82ae-789669ed3d62",
        "cursor": {
          "ref": "47399dbe-dc9b-4d7e-8c9e-749ffe516f0c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ac269a0-29bc-41b8-af3d-e8306cd7dc22"
        },
        "item": {
          "id": "e921490a-ce96-446e-82ae-789669ed3d62",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26168d11-3192-4b36-8c17-9e7637e044af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3765cfbb-efb6-4ab3-abbd-1ef7f88244e1",
        "cursor": {
          "ref": "a0091840-4880-423d-98e3-8bbda46082a2",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7c8030c8-746a-47e2-8754-86a8d70b2fed"
        },
        "item": {
          "id": "3765cfbb-efb6-4ab3-abbd-1ef7f88244e1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d94e5eff-952e-4b6a-a2b1-84f600f82a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aebb00f-47ee-4df9-af2a-4a20aa2c62a1",
        "cursor": {
          "ref": "5e731a1b-f9ff-4f33-9cf8-e1a46cb060c2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "687ad39d-9ed0-4435-85cd-2c36c6ba06ac"
        },
        "item": {
          "id": "7aebb00f-47ee-4df9-af2a-4a20aa2c62a1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c8e888f5-9d6d-40d0-becf-771cfe25eca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e77e4021-8b6b-4a5d-93e0-55c3af094bd4",
        "cursor": {
          "ref": "55510a8d-5015-4106-8803-2cdaadd833b3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "65e0b949-a1e4-4a08-9692-9338ee0b2feb"
        },
        "item": {
          "id": "e77e4021-8b6b-4a5d-93e0-55c3af094bd4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2b231f31-ea54-4c21-aec3-7032a2f09acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f17c25-0c45-4603-8954-156297a8430e",
        "cursor": {
          "ref": "4b4252b7-a151-4439-8edb-852a1acb236d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7fd73473-146b-4984-bfb0-7822024a55cc"
        },
        "item": {
          "id": "c6f17c25-0c45-4603-8954-156297a8430e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0cb0d15c-f1db-4980-b069-ec445c30c79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3611d141-1d51-4a6d-9abc-431e4ca3a4d4",
        "cursor": {
          "ref": "8790134e-d2f8-489b-b4bd-0337afd5b247",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6db9c254-cf4a-472b-98ad-0b875dee1713"
        },
        "item": {
          "id": "3611d141-1d51-4a6d-9abc-431e4ca3a4d4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58991178-4281-40d6-a386-69f78efc1657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1493,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35224b7e-8bbe-42a8-8e8e-a6571bcdca44",
        "cursor": {
          "ref": "574f07cd-0c0a-4b73-a9cf-b77edcb39687",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f66a5c5d-e43e-4d21-bc86-72a38c570791"
        },
        "item": {
          "id": "35224b7e-8bbe-42a8-8e8e-a6571bcdca44",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "26e019c0-fc57-4e84-b190-0d6830c1685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1930,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b158360d-d326-48f1-99f5-4fefd2a45fdc",
        "cursor": {
          "ref": "c1fe4c0d-a7b6-4a9a-9997-1b1685baf9a0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2fb9e3f8-4a30-431e-ad97-9dba5056550a"
        },
        "item": {
          "id": "b158360d-d326-48f1-99f5-4fefd2a45fdc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f0bad157-18c7-4730-9e72-390cb8774cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1235,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8b3133-71a2-464c-9070-8762bf220e87",
        "cursor": {
          "ref": "3ed6b0fe-b05d-4ebe-a92c-33e4f7b374bc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "21eafd87-fe34-436b-86f7-7ab6c00c8b45"
        },
        "item": {
          "id": "0e8b3133-71a2-464c-9070-8762bf220e87",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "dc4eeb73-c7f7-41cd-ba56-59a352912105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1155,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cba791-6113-499c-96b6-a0fffe1eb4c6",
        "cursor": {
          "ref": "f88aefbf-abb9-4e35-a878-db1955849987",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6002ccf3-f89c-4d98-b038-36ce3c679a2b"
        },
        "item": {
          "id": "d6cba791-6113-499c-96b6-a0fffe1eb4c6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7bcfc2f4-738c-4a2f-8df8-2e0b62a8f0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469d9602-d622-427d-ab88-c5886d93f184",
        "cursor": {
          "ref": "fc7eee1e-915d-4cca-9668-f37bd7392fb6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a0ed1eb4-c18f-4d94-adcc-9e1a6b3e881a"
        },
        "item": {
          "id": "469d9602-d622-427d-ab88-c5886d93f184",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "061bae7e-dc89-4681-9b1b-5b9e41973fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0241efd4-f8aa-4cf6-9617-91e4e0fdd267",
        "cursor": {
          "ref": "ca4a4c8e-6936-4af9-bb16-793f2dc0350a",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f54d40de-ce6e-450a-b5c1-e5e7e56f8795"
        },
        "item": {
          "id": "0241efd4-f8aa-4cf6-9617-91e4e0fdd267",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d9d3437b-83d3-4103-b7e0-4149cbed8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84c0ac9-ae26-4896-8e1d-db0784ede4e1",
        "cursor": {
          "ref": "4f5014fb-ef59-463f-aa2d-63232794c71f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "995e0778-497b-4d60-8397-5e39c5e4d6f1"
        },
        "item": {
          "id": "a84c0ac9-ae26-4896-8e1d-db0784ede4e1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4fc4e3c8-e48b-4c0a-a6aa-c45c5d7b076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0a0e37-6bdd-40c9-b022-58ec04f9bf8f",
        "cursor": {
          "ref": "454572ed-9cac-431e-8e7e-9cf622e1df01",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c767cb32-8ad4-4425-aa87-1c8941f448ae"
        },
        "item": {
          "id": "ae0a0e37-6bdd-40c9-b022-58ec04f9bf8f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f7960e9a-cb1c-4229-93fd-b8b963967a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec4f98c-1d3d-4048-a269-0f4ac29e81f7",
        "cursor": {
          "ref": "5960be33-6851-4260-a61d-72b7905edc7b",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "51722dbd-7ec7-41c5-bdc8-514872c2d9cc"
        },
        "item": {
          "id": "1ec4f98c-1d3d-4048-a269-0f4ac29e81f7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3f633f58-ddfa-4686-9a1f-3223fd0c6b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6912160-c31d-4fbf-9c94-1482f2629f95",
        "cursor": {
          "ref": "209f049e-a41d-4d71-80f6-51b1a323ea7f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0ffb847f-98a8-44f1-8f10-2c2c33c38211"
        },
        "item": {
          "id": "b6912160-c31d-4fbf-9c94-1482f2629f95",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5ce58b13-d4d7-4212-8db5-b5caae1f05b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72f93f0-c1a7-4f29-b0ac-eb781c700404",
        "cursor": {
          "ref": "0385dea8-031e-4ccc-a49e-7ee1ec458042",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6d730e43-51da-4ce3-8016-7a9736441738"
        },
        "item": {
          "id": "f72f93f0-c1a7-4f29-b0ac-eb781c700404",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e74a9da1-b21d-47f9-a344-2e4e67ed9efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e4cf3-b5df-4773-8d06-a189e47b9a47",
        "cursor": {
          "ref": "5762b66e-8b29-4f4c-9b12-1cacdefe9770",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b8d8938f-6a56-4a5b-9e8b-3c79befbbe04"
        },
        "item": {
          "id": "196e4cf3-b5df-4773-8d06-a189e47b9a47",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "13963531-88e5-4b48-860e-748fab35f01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07e56f6-fc78-458a-a419-f1fbd511af5b",
        "cursor": {
          "ref": "41c0fa87-5a48-4c69-b947-ce5003583e29",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e8d0ab65-6346-4ae1-bbf5-317dfc108bb7"
        },
        "item": {
          "id": "a07e56f6-fc78-458a-a419-f1fbd511af5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b3067e19-a21b-4e69-ad9e-0990cef24ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd02c6f-ba59-47b7-bd6f-b86880ad4eb0",
        "cursor": {
          "ref": "efde6c35-1090-4ce8-819f-8d63e3a15138",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e90359a2-57cd-43cc-a5e5-4226751381a2"
        },
        "item": {
          "id": "9dd02c6f-ba59-47b7-bd6f-b86880ad4eb0",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2fd16fd6-4d64-4c6a-926e-122eb5ecc44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6053532c-8ad8-46e6-9e16-009504b57da1",
        "cursor": {
          "ref": "d2857304-2371-4980-be31-87d8ec98cb09",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "69091141-5b44-4310-b020-ab1cbafc4d45"
        },
        "item": {
          "id": "6053532c-8ad8-46e6-9e16-009504b57da1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "46997efe-8085-4eca-8f2e-9a1ed8d76985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51088deb-b4a3-4b89-ad3d-c9276316b946",
        "cursor": {
          "ref": "0e9827d4-db6f-43dd-bb6d-2b38d63ca1c7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3a18f2d4-5527-435e-a471-543d33b7eab0"
        },
        "item": {
          "id": "51088deb-b4a3-4b89-ad3d-c9276316b946",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c31cd353-d2d4-43bc-877f-9c00c2e8a6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e80224b-b0bf-44d2-afa1-cfe83a6aeecc",
        "cursor": {
          "ref": "fa26a5d4-3ab2-4be6-9b77-a6ccc504be41",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3483b643-43c5-4c6c-81ac-8980065fd0d5"
        },
        "item": {
          "id": "2e80224b-b0bf-44d2-afa1-cfe83a6aeecc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8777e24b-ef0a-4244-a8df-da83e0e68afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a72ab5-d158-4cb6-bb8e-17c70c5fd1d7",
        "cursor": {
          "ref": "9fdc25b9-9c93-40dd-a8eb-bac920b9e222",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d4d746df-8656-4f2c-8f7d-6a0509c1c76e"
        },
        "item": {
          "id": "06a72ab5-d158-4cb6-bb8e-17c70c5fd1d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fb62a2e5-d54d-4af3-8ca7-29d403d07567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f22f33-af64-4421-9217-f882bfbb341b",
        "cursor": {
          "ref": "8cbc8139-b67d-4d34-b338-99565d28a9f3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "773cf134-6d7e-4710-a1c6-485201128c9f"
        },
        "item": {
          "id": "e1f22f33-af64-4421-9217-f882bfbb341b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "213824dd-f447-40b1-bc48-9b4c6f5006b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eced689-312d-4b90-bea0-49c22f066b51",
        "cursor": {
          "ref": "d55479aa-ce95-409e-85d1-44e15d2f8126",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "359a72b5-c30c-4c10-afa4-5773824732e0"
        },
        "item": {
          "id": "0eced689-312d-4b90-bea0-49c22f066b51",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e16a3e47-4359-40c2-b09a-d8168a76eb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9fb6da-380f-471b-911d-b9381367b913",
        "cursor": {
          "ref": "1bea24d8-9c71-4055-af78-7e7602d8bd84",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ae04f893-2bba-481f-9db0-e72a00d561db"
        },
        "item": {
          "id": "7d9fb6da-380f-471b-911d-b9381367b913",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "16224d31-246b-4b0d-80f5-563f54937e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36de0e7a-8f5e-453e-bb25-33ea2c137661",
        "cursor": {
          "ref": "690ae13b-9441-431a-9f9b-ba70224a9645",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b383844e-7dcf-454b-b658-9d3c969087b7"
        },
        "item": {
          "id": "36de0e7a-8f5e-453e-bb25-33ea2c137661",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "53e0b5a9-9794-48dc-8c4e-909438a3edeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9624b0bb-27cc-447b-b7df-a06b8dce06bf",
        "cursor": {
          "ref": "c4623598-cf89-4965-aefa-8eaa6cb6314a",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "07015a7a-fe0e-4fab-a9e1-033eed819971"
        },
        "item": {
          "id": "9624b0bb-27cc-447b-b7df-a06b8dce06bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "41c557f4-7fb0-42d8-8822-7c572fe62be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aae13c9-a2cd-4700-8863-90aa7bf85ce1",
        "cursor": {
          "ref": "55381204-48f7-4581-8b73-40bc845bbbb7",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f5605731-39ee-4c1e-94d0-cfb5f134809e"
        },
        "item": {
          "id": "6aae13c9-a2cd-4700-8863-90aa7bf85ce1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "731e0032-461f-4c80-bc01-76c55a692cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607563ca-8af8-47ac-ae9e-7d9d09623e60",
        "cursor": {
          "ref": "411164eb-3464-4c2f-a384-0439d087dd46",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7fac099-b4ff-42bc-8acf-9ac93384223a"
        },
        "item": {
          "id": "607563ca-8af8-47ac-ae9e-7d9d09623e60",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "644d7508-95a4-4de1-a2dc-ea50e398160b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aedde1d-23e5-4cc4-8fb6-10df52207367",
        "cursor": {
          "ref": "640b0c90-cd90-41a6-bb7d-c18557cd00bb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cc3836e0-db5e-4e0d-a4f4-f3e0b3973488"
        },
        "item": {
          "id": "3aedde1d-23e5-4cc4-8fb6-10df52207367",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c547558a-4562-4200-acd8-eefd9b1948b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c254934-f2ff-4dfc-8fa1-36357311565f",
        "cursor": {
          "ref": "fc1c9bdd-e9e1-41ac-bd41-cb25823a9097",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "065b6136-c0e1-4c40-8111-5b1f55a7ecf0"
        },
        "item": {
          "id": "9c254934-f2ff-4dfc-8fa1-36357311565f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a9e3ff37-3e1b-4ef4-b6eb-e8b7104727a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5cc6ee-47ec-4f31-a41c-240e7df7bbac",
        "cursor": {
          "ref": "0fb45094-41b8-453b-bbff-80c344721e01",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a96d38c0-f17e-4d42-a247-480bf0c55f78"
        },
        "item": {
          "id": "6b5cc6ee-47ec-4f31-a41c-240e7df7bbac",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4a46154b-bbd2-4e2f-8c70-d02f348bc5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4314bd5-ddea-4c45-93a6-d4796fb44bfd",
        "cursor": {
          "ref": "296e6a5a-e715-4f26-bb03-01f8b65ef0c1",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "840441c3-a484-4a64-9c40-640742047020"
        },
        "item": {
          "id": "d4314bd5-ddea-4c45-93a6-d4796fb44bfd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a5cf3d4-88cf-43a7-8370-52c9c3827a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "295e5dee-06c3-4067-91d0-73e46abd9b90",
        "cursor": {
          "ref": "f651c141-a13a-41cb-95d6-2b686e8a6614",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "349a5c66-1fd1-4d16-a413-bdf9290d8e4a"
        },
        "item": {
          "id": "295e5dee-06c3-4067-91d0-73e46abd9b90",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cacd0dca-f310-4252-b5b5-8e7fe3046636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 869,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf6bce2-0dd2-4d0e-8658-2190f7999d69",
        "cursor": {
          "ref": "988224c3-85e5-49ea-8db4-7b6e609e8a92",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "521e8021-3adf-4989-8a42-94f1c82a30aa"
        },
        "item": {
          "id": "dbf6bce2-0dd2-4d0e-8658-2190f7999d69",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3bc31953-60f6-41fb-b407-1e14f0b6a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7682b5b1-44d8-48ea-a29b-d8af1c73b385",
        "cursor": {
          "ref": "1877e899-3d02-4f73-8a61-43e9f4e2f1f1",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a02b7864-f87d-4ae9-b7cf-8905bb1f5837"
        },
        "item": {
          "id": "7682b5b1-44d8-48ea-a29b-d8af1c73b385",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "36ed6e15-50f3-44ef-a8f8-0564bb8befd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51953b7-8782-43ad-b60b-2c3b2fa03f31",
        "cursor": {
          "ref": "ebc7eb2b-eadd-4c99-a294-a04fa44cd679",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6de9743d-d0f9-49fd-be78-3901507d424b"
        },
        "item": {
          "id": "c51953b7-8782-43ad-b60b-2c3b2fa03f31",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4745667f-8386-42c5-8cd0-53d1ee4d1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f45697-6ac7-4c00-a362-8caa648985d9",
        "cursor": {
          "ref": "1afd2009-705d-4a65-ae3c-4b9471d2f605",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "11edc038-6d8f-4b54-9e33-e97a3644d2ee"
        },
        "item": {
          "id": "61f45697-6ac7-4c00-a362-8caa648985d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "687fa13d-6169-415a-9755-6550a4d861c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 853,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78148fd-ea96-4b45-bf2a-ea5bf20afaba",
        "cursor": {
          "ref": "ee2caaba-9619-4fd7-ba29-651c78092964",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "92e2ac63-cfd0-4e58-ad1c-3d9568d12c39"
        },
        "item": {
          "id": "d78148fd-ea96-4b45-bf2a-ea5bf20afaba",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "faa0c164-638e-4c2d-bc25-96f9a88dd8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13a2972-21d8-4bc6-aa84-ec5b96df7630",
        "cursor": {
          "ref": "9a236291-f91b-4484-9263-ea2540142555",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fc50840c-b03d-4308-92e7-b84cb58a9f88"
        },
        "item": {
          "id": "d13a2972-21d8-4bc6-aa84-ec5b96df7630",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d566c09-f938-4859-b952-d24f45313bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edbc887-9029-4a41-bc12-9bedae01653c",
        "cursor": {
          "ref": "3a06cedf-d7dd-4d8e-8498-98358bf5d137",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a1b7f409-9adf-4c74-96bb-4124bb9a8201"
        },
        "item": {
          "id": "1edbc887-9029-4a41-bc12-9bedae01653c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "40a8224c-5843-4c81-a768-af957623587a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861ac767-caf6-4c14-88a8-ce6ddbe96982",
        "cursor": {
          "ref": "b1357ae7-e44a-4240-bcc7-15f32d923f7a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "35e18d04-ece9-4cec-a658-cd8d4ab1b312"
        },
        "item": {
          "id": "861ac767-caf6-4c14-88a8-ce6ddbe96982",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "71bd970a-c011-4a2f-924d-1646f82437cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85eaf56e-12e3-4775-9056-93903461c3e5",
        "cursor": {
          "ref": "b2aa163c-d237-494d-9f8b-ae22962b095a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4f7f39d4-3062-4e59-80ee-50e58c81dcbc"
        },
        "item": {
          "id": "85eaf56e-12e3-4775-9056-93903461c3e5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "27b17596-f331-482d-aa6e-8812526fff9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bf4df9-f8d5-48e3-9bd9-e1482a7cf3c2",
        "cursor": {
          "ref": "e42468ce-2699-451e-b3e8-2ad1ecd5a27c",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1a4bdb46-9546-4010-8cb7-e1eb50e49d6d"
        },
        "item": {
          "id": "07bf4df9-f8d5-48e3-9bd9-e1482a7cf3c2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "17dfdb71-b902-4ef3-a5d4-c1522e09882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4022484a-07c0-48dc-9ad7-b33fee245aa4",
        "cursor": {
          "ref": "9f994712-fa06-4fe6-97eb-35dfb1b73afd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "aa5c6bce-f431-4cbd-a7c2-0d4fb83e0ff5"
        },
        "item": {
          "id": "4022484a-07c0-48dc-9ad7-b33fee245aa4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5bdc5588-ef33-426a-bbae-f7b67fa2a3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a345d627-1b31-4f1f-86fc-92e74559ad65",
        "cursor": {
          "ref": "4bfd0e97-8a9b-48b6-9e7e-e8b2acf70517",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "34cb7f64-89bf-471d-9fe8-7a06a70c80e3"
        },
        "item": {
          "id": "a345d627-1b31-4f1f-86fc-92e74559ad65",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "34483372-ba42-4c79-b9f5-40edc1bb60e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb5fe1-b5b4-40ec-bf82-74f8bd80bc45",
        "cursor": {
          "ref": "c9746c48-7f1a-43e5-b780-ed9c908a3c74",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4e964bda-741a-489a-a5a0-9f7d218b228d"
        },
        "item": {
          "id": "dfcb5fe1-b5b4-40ec-bf82-74f8bd80bc45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "619c4e47-6c43-4bbf-b159-5338fee1c737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437c234c-b5a7-49d7-ae17-daa5d069fba6",
        "cursor": {
          "ref": "2151fcb7-089e-4c6f-9617-b736a6b34a04",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a3da6ae9-e784-4847-bc88-47f1d55aabb8"
        },
        "item": {
          "id": "437c234c-b5a7-49d7-ae17-daa5d069fba6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "be5af5e2-d510-45b2-a15c-8d168543acd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b6d140-761f-48f2-92c6-87595768d359",
        "cursor": {
          "ref": "4603b71f-0dae-4df3-958a-e6bfd52bc163",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7466643d-9f32-496e-979a-763bd4005bab"
        },
        "item": {
          "id": "d5b6d140-761f-48f2-92c6-87595768d359",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6326a3f7-556f-4f63-a629-ced2ad3aac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26ebff1-01b9-49d7-a1d9-76dec2391b0f",
        "cursor": {
          "ref": "7a78b1d2-d4a9-4ed9-836c-f278893e85b6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ac983e24-50e0-4021-a2ac-e660a02941e6"
        },
        "item": {
          "id": "e26ebff1-01b9-49d7-a1d9-76dec2391b0f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "01e71733-22da-458b-9985-c0a5c54873cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263ad4dc-fdd1-4ef8-ac29-32cbe2b5b47b",
        "cursor": {
          "ref": "de747ec2-5006-4331-8db3-7106f2c29454",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "32e57782-e358-408d-b1ba-f26c13eb4002"
        },
        "item": {
          "id": "263ad4dc-fdd1-4ef8-ac29-32cbe2b5b47b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ba84c8b-c7ce-4033-9bc3-bf275be64b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acf6982-73dd-4e40-ac76-2451777c5e54",
        "cursor": {
          "ref": "61e06934-e991-4d61-b319-b65251e0c692",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b6f40c8b-f895-4141-bb57-f7fb82c684bd"
        },
        "item": {
          "id": "9acf6982-73dd-4e40-ac76-2451777c5e54",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00f0958c-1368-418b-b1df-1387e7424a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c590703-8f13-45d0-b284-ce2d65f203da",
        "cursor": {
          "ref": "7dd2b918-6ea0-4dcd-9896-67b8ae9bfce7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "ba51b727-e587-48fe-b490-e59136344ade"
        },
        "item": {
          "id": "1c590703-8f13-45d0-b284-ce2d65f203da",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "34c27c75-9f3f-42c7-bd6b-caabf3ab1067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f523ead6-f1cf-452d-b0a2-fd237bb32b0f",
        "cursor": {
          "ref": "607f3d03-7d0d-468b-835f-689036a446e8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a0995e89-87cb-46da-b348-847c30291974"
        },
        "item": {
          "id": "f523ead6-f1cf-452d-b0a2-fd237bb32b0f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8b9cbdee-68c7-4fd7-927b-04d564b0f736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20482f91-67de-4b5c-8ae9-f44b81544e9c",
        "cursor": {
          "ref": "1f7ee4fa-69aa-4df0-803b-309b1b02917a",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "598ce5ef-184c-44f5-a220-b5566e4c8a48"
        },
        "item": {
          "id": "20482f91-67de-4b5c-8ae9-f44b81544e9c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d631d24e-fdfa-469c-ab9d-d7ec9d026938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07f332c-da4e-425f-b3f1-bc871a488d1f",
        "cursor": {
          "ref": "49f4326b-51a2-4667-a797-2065fb161ed7",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "44556c81-0ac4-4a53-97a4-ff1a09cc13ed"
        },
        "item": {
          "id": "f07f332c-da4e-425f-b3f1-bc871a488d1f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a0cd79de-9fb9-4869-bd89-74d24632e7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c77e19-3540-41a9-b25d-55ca3d338871",
        "cursor": {
          "ref": "28b7a37a-0d20-4eae-b4bb-48f92a45309f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c4bd2966-a7bd-4a21-8da4-184459d4c978"
        },
        "item": {
          "id": "14c77e19-3540-41a9-b25d-55ca3d338871",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0376e8e5-19a6-4bae-a2d3-8d28a6db035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e771c9fd-a6a2-48d8-a2e2-6905566b8602",
        "cursor": {
          "ref": "28a0a5e5-9a71-4625-ba7b-c73862f38c5e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eef2686e-b291-409e-9f84-5e8deef701dd"
        },
        "item": {
          "id": "e771c9fd-a6a2-48d8-a2e2-6905566b8602",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d8330cd-c1fc-4fde-9c96-6e0960d088ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8ad9f0-7ee3-4254-89ef-db9a58af8158",
        "cursor": {
          "ref": "d7819ff8-88ab-46df-9217-612007470e18",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6dd87cd4-c28b-4f02-8add-1fd8403da394"
        },
        "item": {
          "id": "6a8ad9f0-7ee3-4254-89ef-db9a58af8158",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4a1e7bd0-0e81-4dc0-a445-ac8847249880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a61786d-5d33-4756-980b-3aa69a441bb7",
        "cursor": {
          "ref": "b6c73417-b21b-4c8d-b91f-0e16ec8bb111",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "55e4fb92-0b0e-45ac-91f1-6058172711d0"
        },
        "item": {
          "id": "6a61786d-5d33-4756-980b-3aa69a441bb7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a8a39cd7-068f-4246-9e92-eb3f965dcd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca157a7-70df-48fb-b45d-200a33780460",
        "cursor": {
          "ref": "343126fb-73e8-47c5-b7fc-1e8a32094ccb",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4d965e54-893c-47c9-af5b-99009901b483"
        },
        "item": {
          "id": "cca157a7-70df-48fb-b45d-200a33780460",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7fbd0f7e-33f4-4ceb-8a4e-d22752db91ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e6351d-899a-420c-af6a-43f07f3eb1e2",
        "cursor": {
          "ref": "8078ff4e-c96e-40fe-90d1-bd5f979ebd98",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1960bfb6-69a1-47d1-8f1d-b508a1e8a853"
        },
        "item": {
          "id": "33e6351d-899a-420c-af6a-43f07f3eb1e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2892317a-02fa-4898-942b-32b01ea5f29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2c5dee-2551-4beb-b3d8-54e367f4d9ad",
        "cursor": {
          "ref": "c01f9737-4e0b-4d19-bbb6-d6cb6eb99e6e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "61cf9a7b-3ba5-4ee0-9666-f4231bd18a8b"
        },
        "item": {
          "id": "4f2c5dee-2551-4beb-b3d8-54e367f4d9ad",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a1358ce2-34d7-41b0-bebe-37761fb8f32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e52215d-24b1-4ea2-a129-087b05767d91",
        "cursor": {
          "ref": "4e7b277e-c3e0-40ce-bd3d-4428420c7383",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c0beb4b-4e22-4970-a761-6cfe8ec72e55"
        },
        "item": {
          "id": "2e52215d-24b1-4ea2-a129-087b05767d91",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3d75b136-cd49-45de-ba7f-70a73be2cb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cb9670-30eb-4f8e-933e-9ee1c1211187",
        "cursor": {
          "ref": "d7c8f167-d73a-452e-b6c6-53ec63bebf5e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5da14c40-3464-44c3-a4bb-0c4050ceec84"
        },
        "item": {
          "id": "48cb9670-30eb-4f8e-933e-9ee1c1211187",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a87848ae-b344-4ce2-80a2-3a434758b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f480e0c1-6360-4961-b7c9-9be52480fcce",
        "cursor": {
          "ref": "278483ef-dae4-4f3d-ada8-d98eb940e7e9",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "37f6b666-412e-40b9-985b-86848bb072a7"
        },
        "item": {
          "id": "f480e0c1-6360-4961-b7c9-9be52480fcce",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "596602f5-c660-4552-afdd-e75994cfab75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a6cbdb-1fff-4641-8072-d69ba533dc03",
        "cursor": {
          "ref": "ce3dce1d-a4cb-45d2-b26c-86bce619b0e3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5a87a4f9-a50a-4359-954c-7311510e10fc"
        },
        "item": {
          "id": "d2a6cbdb-1fff-4641-8072-d69ba533dc03",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e0a88a9e-a401-4bce-853f-058ae8f0c071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9c1698-96c8-4d00-bb74-35edbf952e42",
        "cursor": {
          "ref": "e498d50e-7f10-4c43-95ff-8df2a26f1673",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b10dde54-065f-48ab-8bc9-017d4ef632d3"
        },
        "item": {
          "id": "1b9c1698-96c8-4d00-bb74-35edbf952e42",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3009c0a2-1f6b-4e5a-8799-644db30fcf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a554dc05-7f05-4251-8d09-e05bd39055bd",
        "cursor": {
          "ref": "bebd3c85-6f36-401c-9c2b-fdb0297855d1",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cdc1f80d-a236-4f52-896d-f862bbfd79dc"
        },
        "item": {
          "id": "a554dc05-7f05-4251-8d09-e05bd39055bd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "adc2d606-9950-4455-ab78-e2c3103d5e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3477d463-c2b8-4fd2-80a9-6ffe166d73f6",
        "cursor": {
          "ref": "2de37699-1536-4d43-864b-70a6a190249d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "be609525-49ce-4b1a-9aed-74d7121e8bd4"
        },
        "item": {
          "id": "3477d463-c2b8-4fd2-80a9-6ffe166d73f6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "36b957b7-2fc0-4d65-9e18-d74ae63a7450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d252e3f-312c-45bc-a753-e0add66c4715",
        "cursor": {
          "ref": "ee98137a-8921-417e-a2bf-2932b971193b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2194e9ab-c047-4189-a11c-f7b990d7177c"
        },
        "item": {
          "id": "8d252e3f-312c-45bc-a753-e0add66c4715",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ac12fd35-f1a8-434b-a509-9bbb030c8caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad33cfd2-ecaa-4ac3-beb3-bf9540fe8da3",
        "cursor": {
          "ref": "a21cb9df-f292-4153-a6b3-9ee2297ec117",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ef461de9-6f06-4f28-91f4-c3a208f7053f"
        },
        "item": {
          "id": "ad33cfd2-ecaa-4ac3-beb3-bf9540fe8da3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "58b0c2c0-7194-41b9-8d2e-6278a2408f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a76d58e-3d4c-4ab2-834f-7554524665ca",
        "cursor": {
          "ref": "a10e61bd-31ed-4b34-965e-519f3fd0bafa",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3324ffa7-ddfe-4930-8ce7-26db66bfe403"
        },
        "item": {
          "id": "5a76d58e-3d4c-4ab2-834f-7554524665ca",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4332ecbf-c7cb-4f7a-b8c1-9aed91acd370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc52905-5352-45da-83af-93593633bfa3",
        "cursor": {
          "ref": "87dae8d3-7077-482f-8c17-b181c7da7e26",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8bfc6477-86c2-4ea2-a1d4-8cb4d07c23fb"
        },
        "item": {
          "id": "fdc52905-5352-45da-83af-93593633bfa3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7820a63b-f0fb-48a9-8ad7-fee1ab3f0f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97080ba-10af-474c-8da1-417f7d6e3e5a",
        "cursor": {
          "ref": "9c1c8351-0535-4221-a165-a19f73a86911",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1d7aadd5-a4f7-419f-9308-83b9dfc88347"
        },
        "item": {
          "id": "d97080ba-10af-474c-8da1-417f7d6e3e5a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "68c1667f-5f24-49cb-8aaf-7be5eca9db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72687dd6-6264-4bf5-a6c1-54d81b0dfebe",
        "cursor": {
          "ref": "5068cbe7-0e0c-4646-92be-7be61ea0564a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb7e4693-dbd7-417a-85c0-8eea60f4c466"
        },
        "item": {
          "id": "72687dd6-6264-4bf5-a6c1-54d81b0dfebe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9dfa4295-d856-4227-9a11-10f02d4bec70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb2c701-1935-47f7-979f-aacd7216dc5b",
        "cursor": {
          "ref": "71708ee5-4e44-413f-94b3-6f25353bdd84",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5c3ffd51-aaa6-439c-aa6d-37bf14c6deb1"
        },
        "item": {
          "id": "5fb2c701-1935-47f7-979f-aacd7216dc5b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "87b8588a-ac59-49fa-a894-bd09c0e071a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5e729c-7177-4f7b-b9c1-c466be781e00",
        "cursor": {
          "ref": "6372e075-2650-406a-b735-6d0c246d41e1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a1c0adf3-f682-4a2d-b469-d21caec1ae50"
        },
        "item": {
          "id": "4c5e729c-7177-4f7b-b9c1-c466be781e00",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e10ed1cd-8def-457c-a33f-04c1fa81d1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad0f7a8-a9ea-4c44-bf97-2313a63a823f",
        "cursor": {
          "ref": "047b670c-fccb-4384-a04b-96c2354406c4",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "02143ff6-0bd2-488a-b11d-452593622aa9"
        },
        "item": {
          "id": "5ad0f7a8-a9ea-4c44-bf97-2313a63a823f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d1d3a7c5-71ee-4908-8f8b-281a83b26ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0700fb6-8b77-41c8-9a0b-a1114d161291",
        "cursor": {
          "ref": "16216c1c-1bb4-4db2-a936-d9cad43a7c71",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "83338b57-b83b-43d1-a4bd-160fcc387745"
        },
        "item": {
          "id": "c0700fb6-8b77-41c8-9a0b-a1114d161291",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "11586168-1e4a-4be3-9888-1b76b3d0737b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5d20c2-3136-436c-9a30-f69084bbcc2b",
        "cursor": {
          "ref": "923cf15d-49e0-4ba1-98b4-64b86994333e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c299b7f2-0e27-48f9-95a9-f80c66b076ae"
        },
        "item": {
          "id": "dd5d20c2-3136-436c-9a30-f69084bbcc2b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b4aa95f4-7bc5-48a8-a5b5-83410b0c6b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db999a2-9eed-45a6-b35d-579ada3ac1fa",
        "cursor": {
          "ref": "e8532ced-ef83-4d49-ad46-97e1c270f760",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "14685e11-ac0b-4b69-b338-d5331c48ad47"
        },
        "item": {
          "id": "9db999a2-9eed-45a6-b35d-579ada3ac1fa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "bffb4151-7d2f-4df7-a558-915e7d556c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14906c1f-bb99-4a76-b4ac-f3800b20036c",
        "cursor": {
          "ref": "966d1414-1c7d-482e-aa9e-f734fc6db8bb",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a1d1f100-9ffe-42d8-9687-a1b62b2190e5"
        },
        "item": {
          "id": "14906c1f-bb99-4a76-b4ac-f3800b20036c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3b9acfd4-a66e-4439-9cb5-999171f19061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 374,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d948fdb-3917-47e4-87e6-c2ce9ad69691",
        "cursor": {
          "ref": "e9ce53bf-405f-4937-aaed-efbfde5069e6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6eb666fb-2283-4823-8061-75237871aad7"
        },
        "item": {
          "id": "3d948fdb-3917-47e4-87e6-c2ce9ad69691",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d6910174-6ff9-4eb1-a7f6-91ccfe7d2f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6651c02e-70c6-4992-a277-b40c3b378201",
        "cursor": {
          "ref": "da192893-ee88-4caf-9eeb-8cc0c413c4a8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3493c3a3-24d8-4c2d-b1e8-f0130cd94770"
        },
        "item": {
          "id": "6651c02e-70c6-4992-a277-b40c3b378201",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b2fc2d7a-b1c7-46ce-8fb0-370caeb12e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de0ac43-b197-44af-866d-2b0c9eccfc90",
        "cursor": {
          "ref": "23626f5b-0823-42bb-9ab3-38104559fa48",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "61a4dfa8-cdb7-4950-a753-8852a0a37a34"
        },
        "item": {
          "id": "4de0ac43-b197-44af-866d-2b0c9eccfc90",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "81d6cbef-1357-414d-927c-7a3e34214abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb0c983-b22d-4768-b8fe-af9438ed7735",
        "cursor": {
          "ref": "d2a7d45c-c62e-4397-867c-5e51a009f360",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "488c230c-1b3e-4c41-9e6e-4bc55b0efda1"
        },
        "item": {
          "id": "6fb0c983-b22d-4768-b8fe-af9438ed7735",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e4797a57-a3b9-4faf-aae1-87d612fce8ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6447a7-a494-4979-a237-52fe78b519f6",
        "cursor": {
          "ref": "e7aa3889-e48b-46e2-9283-b51f25a708a3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "644eed38-648b-4f62-b7ad-7232c9e3a827"
        },
        "item": {
          "id": "2d6447a7-a494-4979-a237-52fe78b519f6",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "45ddd16a-0148-4afb-85ce-444920b29c9f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 342,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9937f51-6bf8-4193-945d-8abc9772d6ce",
        "cursor": {
          "ref": "9e3c9a8d-978d-486c-b2bd-d00ae985a68f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7bf1360-ed90-413f-ae7e-babe4f45f78b"
        },
        "item": {
          "id": "e9937f51-6bf8-4193-945d-8abc9772d6ce",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "45b75a83-6308-49d4-a4c3-375a6266df27",
          "status": "OK",
          "code": 200,
          "responseTime": 426,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "137113fb-cbcf-4365-9bb7-e706fabea992",
        "cursor": {
          "ref": "54ee3484-3747-4441-8dd8-0a1f7a53908f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9ee95be0-49fe-4973-849f-0c3c2ea26242"
        },
        "item": {
          "id": "137113fb-cbcf-4365-9bb7-e706fabea992",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e9d2d711-acec-4fb9-8e48-3fca86c11d0e",
          "status": "OK",
          "code": 200,
          "responseTime": 1851,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0ebd1-3362-4cf2-9209-ebec660036c8",
        "cursor": {
          "ref": "4f00b1e9-71e5-4d57-ad66-d8b5ef64f686",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "47e00a55-5716-4a32-8db2-1c10f3477b0b"
        },
        "item": {
          "id": "faa0ebd1-3362-4cf2-9209-ebec660036c8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8aa8903d-81a3-418a-b5bb-0ca72249436d",
          "status": "OK",
          "code": 200,
          "responseTime": 1783,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
        "cursor": {
          "ref": "ba7fbd5b-17d9-49c1-87a4-fe58f2e2da23",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b281ad47-f214-4de0-a311-13203dd4edc4"
        },
        "item": {
          "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5bc9a58-544d-4bef-b9ea-fc3c5ee418f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
        "cursor": {
          "ref": "ba7fbd5b-17d9-49c1-87a4-fe58f2e2da23",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b281ad47-f214-4de0-a311-13203dd4edc4"
        },
        "item": {
          "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5bc9a58-544d-4bef-b9ea-fc3c5ee418f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
        "cursor": {
          "ref": "ba7fbd5b-17d9-49c1-87a4-fe58f2e2da23",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b281ad47-f214-4de0-a311-13203dd4edc4"
        },
        "item": {
          "id": "27153fec-f3cb-4315-9d3b-0a257f9f3a42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a5bc9a58-544d-4bef-b9ea-fc3c5ee418f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7bbf6-85e2-4e5d-8fa3-6b80a25e12e7",
        "cursor": {
          "ref": "32146eb8-d693-4d66-aac9-7743b891a7a3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ab3aabf-53da-4ea0-a832-b1c3c6611e1a"
        },
        "item": {
          "id": "44c7bbf6-85e2-4e5d-8fa3-6b80a25e12e7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d1be963c-591a-4221-803e-2026dd5888dc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 325,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a951d1-6664-4dec-a1df-85727a997236",
        "cursor": {
          "ref": "e1d10471-198b-457a-bfad-4bde6268cc50",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce3126fb-4967-4da8-8453-ce5b9e7b22a6"
        },
        "item": {
          "id": "70a951d1-6664-4dec-a1df-85727a997236",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "16bc14af-d509-4e40-b1ff-e84301e53383",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a951d1-6664-4dec-a1df-85727a997236",
        "cursor": {
          "ref": "e1d10471-198b-457a-bfad-4bde6268cc50",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce3126fb-4967-4da8-8453-ce5b9e7b22a6"
        },
        "item": {
          "id": "70a951d1-6664-4dec-a1df-85727a997236",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "16bc14af-d509-4e40-b1ff-e84301e53383",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0594d8c-6c01-454c-86a3-a8e386c4ac6d",
        "cursor": {
          "ref": "7fe0b788-028b-4a56-9a5b-54d15e4300c9",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e6677108-520b-41ae-a060-f0ad196b6027"
        },
        "item": {
          "id": "c0594d8c-6c01-454c-86a3-a8e386c4ac6d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d1da1c52-dec7-4604-85ec-72e85cfc6d39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 607,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f03553-4870-4d75-948e-029d353832d7",
        "cursor": {
          "ref": "48823853-ccdc-493e-8910-8ab15f651a6d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06c2a1e1-0229-49bf-8b89-cb253b4108e9"
        },
        "item": {
          "id": "53f03553-4870-4d75-948e-029d353832d7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1cc176ba-5e8d-4b4f-ab28-790714fd3ab1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f03553-4870-4d75-948e-029d353832d7",
        "cursor": {
          "ref": "48823853-ccdc-493e-8910-8ab15f651a6d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "06c2a1e1-0229-49bf-8b89-cb253b4108e9"
        },
        "item": {
          "id": "53f03553-4870-4d75-948e-029d353832d7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1cc176ba-5e8d-4b4f-ab28-790714fd3ab1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b728e-e8f8-491d-a73b-20c2c545cdc4",
        "cursor": {
          "ref": "c3e1d392-35c5-45f6-a43e-9ed72706d993",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3993456b-feb3-4e41-997e-4bccf6816b75"
        },
        "item": {
          "id": "ac4b728e-e8f8-491d-a73b-20c2c545cdc4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "bed626cf-9ed7-4031-9c6b-09b8ef872769",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 656,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}